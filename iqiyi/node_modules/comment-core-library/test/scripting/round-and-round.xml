<?xml version="1.0" encoding="UTF-8"?><i><chatserver>chat.bilibili.com</chatserver><chatid>604001</chatid><mission>0</mission><source>e-r</source><ds>156322753</ds><de>156322951</de><max_count>0</max_count><d p="0,8,25,16777215,1354860934,2,a0d50318,156322753">/* Comment Art Helper for submission Round and Round - v20121204.1
 * Copyright (C) 2012 EPM
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * For a copy of the GNU General Public License,
 * see &lt;http://www.gnu.org/licenses/&gt;.
 *
 * Documenting convention:
 *
 * For those functions that accept only one Object "params", only the content of the Object is documented.
 */
 
/* Category: Master Control
 * This category contains only a static class Helper for controlling the script.
 */
 
/* Static Class: Helper
 * Provides functions for commanding the helper.
 */
Helper =
{
  
  /* Function: execute
   * Sets off the helper script running.
   *
   * mainComp
   *   The MainComposition of the Comment Art to present.
   */
  execute : function( mainComp )
  {
    // Create a global reference so that the main composition could be accessed in ExpressionBinds
    Global._set( "__mainComp_helperRnr", mainComp );
    
    // Present the main composition
    mainComp.present();
    
    // Set global value to indicate usage
    Global._set( "__isExecuted_helperRnr", true );
  },

  /* Function: stop
   * Stops the helper for debug use
   */
  stop : function()
  {
    ( Global._get("__mainComp_helperRnr") ).detach();
    Global._set( "__mainComp_helperRnr", null );
    Global._set( "__isExecuted_helperRnr", null );
  },

  /* Function: isExecuted
   * See if the helper is already running
   */
  isExecuted : function()
  {
    return ( Global._get("__isExecuted_helperRnr") === true );
  },

  /* Property: root
   * A safe replacement for Helper.root in case it get banned
   */
  root : function()
  {
    if( $.hasOwnProperty("root") &amp;&amp; $.root )
    {
      return $.root;
    }
    else
    {
      var sprite = $.createCanvas(
      {
        lifeTime : 810114514,
        motionGroup : [
          {
            fontSize :
            {
              fromValue : "要多无聊",
              toValue : "有多无聊",
              lifeTime : 810114514,
              startDelay : 810114514
            }
          }
        ]
      });
      
      // remove 3D to make it clear by default
      sprite.transform.matrix3D = null;
      
      return sprite;
    }
  }()
};
 
Global._set( "__class_helper_helperRnr", Helper );
 
/* Category: Utilities
 * This sort of classes provide utilities not directly related to presenting content.
 */
 
/* Static Class: Factory
 * Provides functions for creating and manipulating objects.
 *
 * As of 11/27, all functions with connection to loaderInfo removed. Factory now serve only as an object cloning utility.
 */
Factory = {
  
  /* Function: collapse
   * Concats all arrays given into one.
   *
   * arrays
   *   An Array of Arrays.
   */
  collapse : function( arrays )
  {
    var result = [];
    
    for ( var i = 0; i &lt; arrays.length; i ++ )
    {
      result = result.concat( arrays[ i ] );
    }
    
    return result;
  },
  
  /* Function: cloneFunction
   * Clones a function.
   *
   * object
   *   The Object to clone.
   * scope
   *   The scope under which Functions are cloned. Used when cloning JS Objects.
   */
  cloneFunction : function( object, scope )
  {
    // Object is a Function, return a wrapped Function with changed scope of it, due to Function.bind not avaliable.
    return function() { return object.apply( scope, arguments ); };
  },
  
  /* Function: cloneObject
   * Clones a JS Object.
   *
   * object
   *   The Object to clone.
   * scope
   *   The scope under which Functions are cloned. Used when cloning JS Objects.
   */
  cloneObject : function( object, scope )
  {
    // Check if the object contains a custom clone function for cloning private variables.
    if ( object.hasOwnProperty( "clone" ) )
    {
      return object.clone();
    }
    else
    {
      // Iterate through the Object running this clone function
      var newObject = {};
      var countProperties = 0;
      
      foreach ( object, function( key, object )
      {
        countProperties ++;
        
        if ( typeof object === "function" )
        {
          newObject[ key ] = Factory.cloneFunction( object, newObject );
        }
        else
        {
          var adg = Factory.cloneObject( object, newObject );
          newObject[ key ] = adg;
        }
      });
      
      // Check if newObject is empty
      if ( countProperties === 0 )
      {
        // Probably AS3 or an empty shit
        return clone( object );
      }
      
      return newObject;
    }
  }
};
 
Global._set( "__class_factory_helperRnr", Factory );

/* Static Class: Timer
 * Improves timing precision over Player.time by sampling time usage for each frame. For retaining both smoothness and seekability.
 */
Timer = function()
{
  var lastTime = 0;
  var deltaTime = 0;
  var sampleCount = 1;
  
  return {
    time : 0,
    
    /* Function: update
     * Counts a frame and updates time.
     */
    update : function()
    {
      if ( Player.time != lastTime )
      {
        // Make drastic change proof
        if ( Math.abs( Player.time - lastTime ) &lt; 1000 )
        {
          deltaTime = ( Player.time - lastTime ) / sampleCount;
          lastTime = Player.time;
          sampleCount = 1;
          
          this.time = Player.time;
        }
        else
        {
          // Reset Timer because of a possible seek (or just so laggy that Timer is not effective)
          deltaTime = 0;
          lastTime = Player.time;
          sampleCount = 1;
          
          this.time = Player.time;
        }
      }
      else
      {
        this.time = lastTime + deltaTime * sampleCount;
        sampleCount ++;
      }
    }
  };
}();
 
Global._set( "__class_timer_helperRnr", Timer );

/* Class: Binder
 * Provides functions for binding properties. Mainly used in layers.
 *
 * object
 *   An Object to bind.
 * properties
 *   An Object, containing values or Bindings for each property.
 */
function Binder( params )
{
  var needBinding = {};
  
  var pathCheck = function( object, name )
  {
    var dotIndex = name.indexOf(".");
    if ( dotIndex &lt; 0 )
    {
      return object.hasOwnProperty( name );
    }
    else
    {
      return object.hasOwnProperty( name.substring( 0, dotIndex ) ) &amp;&amp; pathCheck( object[ name.substring( 0, dotIndex ) ], name.substring( dotIndex + 1 ));
    }
  };
  
  var setParam = function( object, name, value )
  {
    var dotIndex = name.indexOf(".");
    if ( dotIndex &lt; 0 )
    {
      object[ name ] = value;
    }
    else
    {
      setParam( object[ name.substring( 0, dotIndex ) ], name.substring( dotIndex + 1 ), value );
    }
  };
  
  var setBinding = function( name, value )
  {
    // Check if path exists
    if ( !pathCheck( params.object, name ) )
    {
      return;
    }
    
    // Check if binding every frame is needed
    if ( typeof( value ) === "function" )
    {
      needBinding[ name ] = value;
    }
    else
    {
      setParam( params.object, name, value );
    }
  };
  
  var setBindings = function( key, obj )
  {
    // Check if objs are Links or Sequences
    if ( obj.hasOwnProperty( "linkFunc" ) )
    {
      // Check if a function is present
      if ( obj.linkFunc )
      {
        if ( typeof( params.properties[ obj.name.toString() ] ) === "function" )
        {
          setBinding( key, function( time )
          {
            var value = params.properties[ obj.name.toString() ].apply( this, [ time ] );
            return obj.linkFunc.apply( this, [ value, time ] );
          });
        }
        else
        {
          setBinding( key, function( time )
          {
            return obj.linkFunc.apply( this, [ params.properties[ obj.name.toString() ], time ] );
          });
        }
      }
      else
      {
        setBinding( key, params.properties[ obj.name.toString() ] );
      }
    }
    else if ( obj.hasOwnProperty( "sequence" ) )
    {
      // Set sequence first
      for ( var i = 0; i &lt; obj.sequence.length; i ++ )
      {
        setBindings( obj.sequence[ i ][ 0 ], obj.sequence[ i ][ 1 ] );
      }
      
      // Set value
      setBindings( key, obj.value );
    }
    else
    {
      setBinding( key, obj );
    }
  };
  
  foreach( params.properties, setBindings );
  
  return {
    
    /* Function: update
     * Updates the object to fit the timeline.
     *
     * time
     *   A Number, the current time (in milliseconds) on the Composition's timeline.
     * scope
     *   [default] object
     *   An Object, scope under which the binded functions are called.
     */
    update : function( time, scope )
    {
      foreach( needBinding, function( key, obj )
      {
        // Pass the scope to function
        setParam( params.object, key, obj.apply( scope || params.object, [ time ] ) );
      });
    }
  };
}

/* Class: Binder.Link
 * Represents a link between different properties.
 *
 * name
 *   The name of the property to link.
 * linkFunc
 *   [default] null
 *   A Function accepting input &amp; time from binder or null indicating copy.
 */
Binder.Link = function( params )
{
  return {
    name : params.name,
    linkFunc : params.linkFunc || null
  };
};

/* Class: Binder.Sequence
 * Represents a sequential bind, for properties that depend on other properties that need to be set earlier.
 *
 * sequence
 *   An Array containing name value pairs.
 * value
 *   The value of the property to set after executing sequence.
 */
Binder.Sequence = function( params )
{
  return {
    sequence : params.sequence,
    value : params.value
  };
};
 
Global._set( "__class_binder_helperRnr", Binder );

/* Category: Abstractions
 * This sort of classes are abstractions of display objects for use in production.
 */
 
/* Class: Layer
 * Provides functions for animating contents.
 *
 * source
 *   A DisplayObject serving as the layer source.
 * inPoint
 *   A Number, the time (in milliseconds) at which the layers enters.
 * outPoint
 *   A Number, the time (in milliseconds) at which the layers exits.
 * properties
 *   [default] {}
 *   An Object, containing values or Bindings for each AS3 property.
 */
function Layer( params )
{
  // Create a private binder for properties
  var binder = Binder({ object : params.source, properties : params.properties || {} });
  
  // Create the object
  var layer =
  {
    source : params.source,
    inPoint : params.inPoint,
    outPoint : params.outPoint,
    
    /* Function: update
     * Updates the layer to fit the timeline.
     *
     * time
     *   A Number, the current time (in milliseconds) on the Composition's timeline.
     */
    update : function( time )
    {
      if ( time &lt; params.inPoint || time &gt;= params.outPoint )
      {
        // Set source invisible
        this.source.visible = false;
      }
      else
      {
        // Set source visible first, so that it can be overridden by binder.
        this.source.visible = true;
        
        // Update the binder, make sure binder always take effect on layer level
        binder.update( time, this.getBinderScope() );
      }
    },
    
    /* Function: getBinderScope
     * Dynamically return self for use as scope in Binders.
     */
    getBinderScope : function()
    {
      return this;
    },
    
    /* Function: clone
     * Custom clone function for binder to work.
     */
    clone : function()
    {
      return Layer( Factory.cloneObject( params ) );
    }
  };
  
  // Update Layer for a first time to prevent flashing
  layer.update( params.inPoint );
  
  return layer;
}
 
Global._set( "__class_layer_helperRnr", Layer );

/* Class: DynamicVectorTextLayer
 * Alias: DVTLayer
 * A type of layer specialized to display basic dynamic vector text (huge sizes over 200px or exotic fonts).
 *
 * dictionary
 *   An Object containing functions to create possible glyphs (due to Flash unable to clone vector content). 
 *   Glyphs should be provided by user, be anchored at top-left and be of 200px in size.
 * textProperties
 *   [default] { horizontalAlign : "left", verticalAlign : "top", letterSpacing : 20, fontSize : 200, lineHeight : 240, text : "" }
 *   An Object, containing values or Bindings for vector text properties: horizontalAlign, verticalAlign, fontSize, letterSpacing, lineHeight, text.
 * inPoint
 *   A Number, the time (in milliseconds) at which the layers enters.
 * outPoint
 *   A Number, the time (in milliseconds) at which the layers exits.
 * properties
 *   [default] {}
 *   An Object, containing values or Bindings for each AS3 property.
 */
function DynamicVectorTextLayer( params )
{
  // Create Sprites for alignment
  var linesContainer = Sprite();
  var alignmentContainer = Sprite();
  alignmentContainer.addChild( linesContainer );
  
  // Create objects for binding and change detection, due to lack of property getter / setters.
  var lastTextProperties = { horizontalAlign : "left", verticalAlign : "top", letterSpacing : 20, fontSize : 200, lineHeight : 240, text : "" };
  
  var textProperties = { horizontalAlign : "left", verticalAlign : "top", letterSpacing : 20, fontSize : 200, lineHeight : 240, text : "" };
  var textPropertiesBinder = Binder({ object : textProperties, properties : params.textProperties || {} });
  
  // Create a Layer to contain text.
  var layer = Layer({
    source : alignmentContainer,
    inPoint : params.inPoint,
    outPoint : params.outPoint,
    properties : params.properties
  });
  
  // Simulate inheritance by making a backup of update function.
  var baseUpdate = Factory.cloneFunction( layer.update, layer );
  
  // Declare new update
  layer.update = function( time )
  {
    baseUpdate( time );
      
    // Update binder and check if anything changes
    textPropertiesBinder.update( time, layer.getBinderScope() );
    
    var needGlyphReset = ( textProperties.text != lastTextProperties.text );
    var needGlyphAdjust = needGlyphReset || ( textProperties.letterSpacing != lastTextProperties.letterSpacing ) || ( textProperties.fontSize != lastTextProperties.fontSize );
    var needAlignmentAdjust = needGlyphAdjust || ( textProperties.horizontalAlign != lastTextProperties.horizontalAlign ) || ( textProperties.verticalAlign != lastTextProperties.verticalAlign ) || ( textProperties.lineHeight != lastTextProperties.lineHeight );
    
    if ( needAlignmentAdjust ) lastTextProperties = Factory.cloneObject( textProperties );
    
    // Reset Glyphs if needed (most expensive)
    if ( needGlyphReset )
    {
      // Remove all children from linesContainer
      while ( linesContainer.numChildren &gt; 0 ) linesContainer.removeChildAt( 0 );
      
      // Split text into lines to process
      var lines = textProperties.text.split( "\n" );
      
      for ( var numLine = 0; numLine &lt; lines.length; numLine ++ )
      {
        // For each line create a new Sprite to contain glyphs
        var lineSprite = Sprite();
        
        for ( var numChar = 0; numChar &lt; lines[ numLine ].length; numChar ++ )
        {
          // Create glyphs and put them in current line. Position does not matter since it will be corrected afterwards.
          lineSprite.addChild( params.dictionary[ lines[ numLine ].charAt( numChar ) ]() );
        }
        
        // Add new Sprite to linesContainer
        linesContainer.addChild( lineSprite );
      }
    }
    
    // Adjust glyphs if needed
    if ( needGlyphAdjust )
    {
      for ( var numLine = 0; numLine &lt; linesContainer.numChildren; numLine ++ )
      {
        var lineSprite = linesContainer.getChildAt( numLine );
        var accumulativeX = 0;
        
        for ( var numChar = 0; numChar &lt; lineSprite.numChildren; numChar ++ )
        {
          var glyph = lineSprite.getChildAt( numChar );
          
          // Set letter spacing and size
          glyph.x = accumulativeX;
          glyph.scaleX = glyph.scaleY = textProperties.fontSize / 200.0;
          
          accumulativeX += glyph.width + textProperties.letterSpacing;
        }
      }
    }
    
    // Adjust alignment if needed
    if ( needAlignmentAdjust )
    {
      for ( var numLine = 0; numLine &lt; linesContainer.numChildren; numLine ++ )
      {
        var lineSprite = linesContainer.getChildAt( numLine );
        
        // Set line height and alignment
        switch ( textProperties.horizontalAlign )
        {
          case "left":
            lineSprite.x = 0;
            break;
          case "right":
            lineSprite.x = - lineSprite.width;
            break;
          case "center":
            lineSprite.x = - lineSprite.width / 2;
            break;
        }
        lineSprite.y = numLine * textProperties.lineHeight;
      }
      
      // Set vertical alignment
      switch ( textProperties.verticalAlign )
      {
        case "top":
          linesContainer.y = 0;
          break;
        case "bottom":
          linesContainer.y = - linesContainer.height;
          break;
        case "center":
          linesContainer.y = - linesContainer.height / 2;
          break;
      }
    }
  };
    
  /* Function: clone
   * Custom clone function for binder to work.
   */
  layer.clone = function()
  {
    return DynamicVectorTextLayer( Factory.cloneObject( params ) );
  };
  
  // Update Layer for a first time to prevent flashing
  layer.update( params.inPoint );
  
  return layer;
}

var DVTLayer = DynamicVectorTextLayer;
 
Global._set( "__class_dvtlayer_helperRnr", DynamicVectorTextLayer );

/* Class: CompositionLayer
 * Alias: CompLayer
 * A type of layer specialized to nest compositions.
 *
 * composition
 *   A Composition.
 * inPoint
 *   A Number, the time (in milliseconds) at which the layers enters.
 * outPoint
 *   A Number, the time (in milliseconds) at which the layers exits.
 * inPointTime
 *   [default] composition.startTime
 *   A Number, the time (in milliseconds) the Composition is at when the layers enters.
 * outPointTime
 *   [default] composition.startTime + composition.duration
 *   A Number, the time (in milliseconds) the Composition is at when the layers exits.
 * timeRemap
 *   [default] null
 *   A Function or null, depending on whether you need time remapping. Setting this function overrides inPointTime and outPointTime settings.
 *   The function should accept a parameter time (in milliseconds) the current time.
 * properties
 *   [default] {}
 *   An Object, containing values or Bindings for each AS3 property.
 */
function CompositionLayer( params )
{
  var nestedComposition = params.composition;
  var inPointTime = params.inPointTime || nestedComposition.startTime;
  var outPointTime = params.outPointTime || nestedComposition.startTime + nestedComposition.duration;
  
  // Create a Layer.
  var layer = Layer({
    source : nestedComposition.canvas,
    inPoint : params.inPoint,
    outPoint : params.outPoint,
    properties : params.properties
  });
  
  // Simulate inheritance by making a backup of update function.
  var baseUpdate = Factory.cloneFunction( layer.update, layer );
  
  // Declare new update regarding nested Composition timeline.
  // Declare different functions according to having timeRemap or not to improve performance.
  if ( params.timeRemap )
  {
    layer.update = function( time )
    {
      baseUpdate( time );
      
      // Update nested Composition to fit timeline.
      if ( this.source.visible )
        nestedComposition.update( params.timeRemap( time ) );
    };
  }
  else
  {
    layer.update = function( time )
    {
      baseUpdate( time );
      
      // Update nested Composition to fit timeline.
      if ( this.source.visible )
        nestedComposition.update( inPointTime + ( time - params.inPoint ) * (outPointTime - inPointTime) / ( params.outPoint - params.inPoint) );
    };
  }
    
  /* Function: clone
   * Custom clone function for binder to work.
   */
  layer.clone = function()
  {
    return CompositionLayer( Factory.cloneObject( params ) );
  };
  
  // Update Layer for a first time to prevent flashing
  layer.update( params.inPoint );
  
  return layer;
}

var CompLayer = CompositionLayer;
 
Global._set( "__class_complayer_helperRnr", CompositionLayer );

/* Class: Composition
 * Alias: Comp
 * Provides functions as the framework of a scene.
 *
 * width
 *   [default] $.width
 *   A Number specifying stage width.
 * height
 *   [default] $.height
 *   A Number specifying stage height.
 * startTime
 *   [default] 0
 *   A Number, the time (in milliseconds) when the timeline starts.
 * duration
 *   [default] 60000
 *   A Number, the length (in milliseconds) of the timeline.
 * layers
 *   [default] []
 *   An Array of Layers, from top to bottom.
 * hasBoundaries
 *   [default] false
 *   Whether a mask will be put on the canvas so that elements outside become invisible.
 */
function Composition( params )
{
  // Create a Sprite as container.
  var canvas = Sprite();
  if ( params.hasBoundaries )
  {
    var solidMask = Solid({ width : params.width || $.width, height : params.height || $.height, color : 0x0 });
    canvas.addChild( solidMask );
    canvas.mask = solidMask;
  }
  
  // Add all Layers to the Sprite in order.
  var layers = params.layers || [];
  var i = 0;
  
  for ( i = 0; i &lt; layers.length; i ++ )
  {
    canvas.addChild( layers[ i ].source );
  }
  /** FIX : Make startTime, duration etc. available **/
  var startTime = params.startTime || 0;
  var duration = params.duration || 60000;
  return {
    width : params.width || $.width,
    height : params.height || $.height,
    startTime : params.startTime || 0,
    duration : params.duration || 60000,
    layers : layers,
    canvas : canvas,
    
    /* Function: update
     * Updates the canvas to fit the timeline.
     *
     * time
     *   A Number, the current time (in milliseconds) on the Composition's own timeline.
     */
    update : function( time )
    {
      // Check if Composition is active, otherwise update for borderline situations.
      if ( time &lt; startTime )
        return this.update( startTime );
      if ( time &gt;= startTime + duration )
        return this.update( startTime + duration - 1 );
      
      // Update all layers, set parent property dynamically on the first call as well
      foreach( this.layers, function( key, object )
      {
        if ( !object.parent ) object.parent = this;
        object.update( time );
      });
    },
    
    /* Function: clone
     * Custom clone function to ensure masking work.
     */
    clone : function()
    {
      return Composition( Factory.cloneObject( params ) );
    }
  };
}

var Comp = Composition;
 
Global._set( "__class_comp_helperRnr", Composition );

/* Class: MainComposition
 * Alias: MainComp
 * Provides functions as the framework of the comment art. Only MainCompositions have ability to be presented.
 *
 * width
 *   [default] $.width
 *   A Number specifying stage width.
 * height
 *   [default] $.height
 *   A Number specifying stage height.
 * startTime
 *   [default] 0
 *   A Number, the time (in milliseconds) when the timeline starts.
 * duration
 *   [default] 60000
 *   A Number, the length (in milliseconds) of the timeline.
 * layers
 *   [default] []
 *   An Array of Layers, from top to bottom.
 * hasBoundaries
 *   [default] true
 *   Whether a mask will be put on the canvas so that elements outside become invisible.
 */
function MainComposition( params )
{
  // Change default value for hasBoundaries
  if (!( params.hasBoundaries === false ))
  {
    params.hasBoundaries = true;
  }
  
  // Create base Composition
  var composition = Composition( params );
  
  // Remember when did the comp last update to maintain seekability.
  var lastUpdate = -1;
  
  // Remember the player size to maintain scalability
  var lastWidth, lastHeight;
  
  // Add new functions for presenting
  
  // Prepare the frame function, need a private handle for removing.
  var frameFunction = function()
  {
    // Check if player is running
    if ( Player.state === "playing" )
    {        
      // Update Timer
      Timer.update();
      
      // Update Composition
      composition.update( Timer.time );
    }
    else
    {
      // When player is not running, check last update time to ensure seekability.
      if ( lastUpdate != Player.time )
        composition.update( Player.time );
    }
    
    // Check if player size changed
    // I dislike polling but can't find a event to listen for this. Need suggestion
    if ( $.width != lastWidth || $.height != lastHeight )
    {
      // Maximize self in container
      maximizeInContainer();
      
      // Set variables
      lastWidth = $.width;
      lastHeight = $.height;
    }
  };
  
  var maximizeInContainer = function()
  {
    // Maximize
    ratio = Math.min( $.width / Helper.root.scaleX / composition.width, $.height / Helper.root.scaleY / composition.height );
    composition.canvas.scaleX = ratio;
    composition.canvas.scaleY = ratio;
    
    // Center
    composition.canvas.x = ( $.width / Helper.root.scaleX - composition.width * ratio ) / 2;
    composition.canvas.y = ( $.height / Helper.root.scaleY - composition.height * ratio ) / 2;
  };
  
  // Declare new update for update time stuff
  var baseUpdate = Factory.cloneFunction( composition.update, composition );
  
  composition.update = function( time )
  {
    lastUpdate = time;
    baseUpdate( time );
  };

  /* Function: present
   * Presents the composition immediately. Only one Composition can be presented at a time.
   */
  composition.present = function()
  {
    // Listen canvas enterFrame
    this.canvas.addEventListener( "enterFrame", frameFunction );
    
    // Add self to display tree
    Helper.root.addChild( this.canvas );
    
    // Call the frame function for a first time
    frameFunction();
  };
    
  /* Function: detach
   * Detaches the composition from player.
   */
  composition.detach = function()
  {
    // Remove canvas enterFrame
    this.canvas.removeEventListener( "enterFrame", frameFunction );
    
    // Remove self from display tree
    Helper.root.removeChild( this.canvas );
  };
    
  /* Function: clone
   * Custom clone function for binder to work.
   */
  composition.clone = function()
  {
    return MainComposition( Factory.cloneObject( params ) );
  };
  
  // return Composition
  return composition;
}


/* Static Function: getInstance
 * Read the global variable. Only avaiable after one has been presented.
 */
MainComposition.getInstance = function()
{
  return Global._get("__mainComp_helperRnr");
};

var MainComp = MainComposition;
 
Global._set( "__class_maincomp_helperRnr", MainComposition );

/* Category: Sources
 * This sort of classes are DisplayObjects that can serve as layer sources.
 */

/* Class: Sprite
 * Shortcut for AS3 Sprite.
 */
function Sprite()
{
  // 2012/11/21 : Factory deprecated for a player update
  // return Factory.create("flash.display.Sprite");
  
  // 2012/11/22 New update caused objects to be disappearing seemingly out of reason
  // Adding random shit motion to fuck it
  
  var sprite = $.createCanvas(
  {
    lifeTime : 810114514,
    motionGroup : [
      {
        fontSize :
        {
          fromValue : "十万九万",
          toValue : "庸俗情趣",
          lifeTime : 810114514,
          startDelay : 810114514
        }
      }
    ]
  });
  
  Helper.root.addChild( sprite );
  Helper.root.removeChild( sprite );
  
  // remove 3D to make it clear by default
  sprite.transform.matrix3D = null;
  
  return sprite;
}
 
Global._set( "__class_sprite_helperRnr", Sprite );

/* Class: Shape
 * Shortcut for AS3 Shape.
 */
function Shape()
{
  // 2012/11/21 : Factory deprecated for a player update
  // return Factory.create("flash.display.Shape");
  
  var shape = $.createShape(
  {
    lifeTime : 810114514,
    motionGroup : [
      {
        fontSize :
        {
          fromValue : "古拜海文",
          toValue : "明年再见",
          lifeTime : 810114514,
          startDelay : 810114514
        }
      }
    ]
  });
  
  Helper.root.addChild( shape );
  Helper.root.removeChild( shape );
  
  // remove 3D to make it clear by default
  shape.transform.matrix3D = null;
  
  return shape;
}
 
Global._set( "__class_shape_helperRnr", Shape );

/* Class: Text
 * Shortcut for AS3 TextField.
 *
 * preserveGlow
 *   [default] false
 *   Whether to preserve the original glow filter
 */
function Text( preserveGlow )
{
  // 2012/11/21 : Factory deprecated for a player update
  
  var text = $.createComment( " ",
  {
    lifeTime : 810114514,
    motionGroup : [
      {
        fontSize :
        {
          fromValue : "旁边杂音",
          toValue : "一直都在",
          lifeTime : 810114514,
          startDelay : 810114514
        }
      }
    ]
  });
  
  Helper.root.addChild( text );
  Helper.root.removeChild( text );
  
  if ( !preserveGlow ) text.filters = null;
  
  // remove 3D to make it clear by default
  text.transform.matrix3D = null;
  
  return text;
}
 
Global._set( "__class_text_helperRnr", Text );

/* Class: Solid
 * A solid color layer source.
 *
 * width
 *   A Number specifying solid width.
 * height
 *   A Number specifying solid height.
 * color
 *   A Number specifying solid color.
 */
function Solid( params )
{
  var shape = Shape();
  
  shape.graphics.beginFill( params.color );
  shape.graphics.drawRect( 0, 0, params.width, params.height );
  shape.graphics.endFill();
  
  return shape;
}
 
Global._set( "__class_solid_helperRnr", Solid );

/* Class: Anchor
 * Anchors the layer source at a specific point
 *
 * source
 *   The DisplayObject to wrap around
 * x
 *   [default] source.width / 2
 *   Anchor X.
 * y
 *   [default] source.height / 2
 *   Anchor Y.
 */
function Anchor( params )
{
  var sprite = Sprite();
  
  sprite.addChild( params.source );
  params.source.x = - ( params.x || params.source.width / 2 );
  params.source.y = - ( params.y || params.source.height / 2 );
  
  return sprite;
}
 
Global._set( "__class_anchor_helperRnr", Anchor );

/* Class: Anchor3D
 * Anchors the layer source at a specific point in 3D space
 *
 * source
 *   The DisplayObject to wrap around
 * x
 *   [default] source.width / 2
 *   Anchor X.
 * y
 *   [default] source.height / 2
 *   Anchor Y.
 * z
 *   [default] 0
 *   Anchor Z.
 */
function Anchor3D( params )
{
  var sprite = Sprite();
  
  sprite.addChild( params.source );
  params.source.x = - ( params.x || params.source.width / 2 );
  params.source.y = - ( params.y || params.source.height / 2 );
  params.source.z = - ( params.z || 0 );
  
  return sprite;
}
 
Global._set( "__class_anchor3d_helperRnr", Anchor3D );

/* Class: Checkerboard
 * A checkboard layer source.
 *
 * width
 *   A Number specifying checkboard width.
 * height
 *   A Number specifying checkboard height.
 * frequencyX
 *   Number of blocks on X axis.
 * frequencyY
 *   Number of blocks on Y axis.
 * color1
 *   A Number specifying checkboard background color.
 * color2
 *   A Number specifying checkboard foreground color.
 */
function Checkerboard( params )
{
  var shape = Shape();
  
  // Draw the background
  shape.graphics.beginFill( params.color1 );
  shape.graphics.drawRect( 0, 0, params.width, params.height );
  shape.graphics.endFill();
  
  // Draw the foreground
  shape.graphics.beginFill( params.color2 );
  
  // Draw the horizontal snake
  var i = 0;
  for ( i = 0; i &lt;= params.frequencyY; i ++ )
  {
    if ( i % 2 === 0 )
    {
      shape.graphics.lineTo( 0, params.height * i / params.frequencyY );
      shape.graphics.lineTo( params.width, params.height * i / params.frequencyY );
    }
    else
    {
      shape.graphics.lineTo( params.width, params.height * i / params.frequencyY );
      shape.graphics.lineTo( 0, params.height * i / params.frequencyY );
    }
  }
  if ( params.frequencyY % 2 === 0 )
  {
    shape.graphics.lineTo( params.width, 0 );
  }
  shape.graphics.lineTo( 0, 0 );
  
  // Draw the vertical snake
  shape.graphics.moveTo( 0, 0 );
  for ( i = 0; i &lt;= params.frequencyX; i ++ )
  {
    if ( i % 2 === 0 )
    {
      shape.graphics.lineTo( params.width * i / params.frequencyX, 0 );
      shape.graphics.lineTo( params.width * i / params.frequencyX, params.height );
    }
    else
    {
      shape.graphics.lineTo( params.width * i / params.frequencyX, params.height );
      shape.graphics.lineTo( params.width * i / params.frequencyX, 0 );
    }
  }
  if ( params.frequencyX % 2 === 0 )
  {
    shape.graphics.lineTo( 0, params.height );
  }
  shape.graphics.lineTo( 0, 0 );
  
  shape.graphics.endFill();
  
  return shape;
}
 
Global._set( "__class_checkerboard_helperRnr", Checkerboard );

/* Category: Effects
 * This sort of classes are effect to put on layers. Not to be confused with filters.
 */

/* Class: TrackMatte
 * Alias: TrkMat
 * Use another layer as a mask.
 *
 * layer
 *   The Layer to be masked.
 * mask
 *   The mask Layer.
 */
function TrackMatte( params )
{
  // Add mask layer to display list and apply mask
  params.layer.source.addChild( params.mask.source );
  params.layer.source.mask = params.mask.source;
  
  // Simulate inheritance by making a backup of update function.
  var baseUpdate = Factory.cloneFunction( params.layer.update, params.layer );
  
  // Declare new update
  params.layer.update = function( time )
  {
    // Update original layer and mask layer
    baseUpdate( time );
    params.mask.update( time );
  };
  
  return params.layer;
}

var TrkMat = TrackMatte;
 
Global._set( "__class_trkmat_helperRnr", TrackMatte );

/* Class: ForceMotionBlur
 * Alias: ForceMB
 * An effect dedicated to create motion blur effects which Flash lacks. Use the effect with Replicator.
 *
 * layers
 *   The Layers to use.
 * exposureTime
 *   [default] 20.8333
 *   Exposure time (in milliseconds). Defaults to 1000/48 (double the Player frame rate).
 * shutterPhase
 *   [default] -90
 *   Shutter phase in degrees.
 */
function ForceMotionBlur( params )
{
  // Default values
  if ( !params.exposureTime ) params.exposureTime = 1000.0 / 48.0;
  var shutterOffset = params.exposureTime * ( params.shutterPhase || -90.0 ) / 180.0;
  
  // Create a Sprite as container for objects
  var canvas = Sprite();
  
  // Clone an invisible original layer for preserving alpha and blend
  var original = params.layers.shift();
  
  // Add sub-layers to display tree, calculate alpha values to avoid problem
  var subLayers = params.layers;
  var subAlphas = [];
  var totalAlphaYet = 0;
  var i = 0;
  for ( i = 0; i &lt; subLayers.length; i++ )
  {
    canvas.addChild( subLayers[ i ].source );
    
    // As for the internal 256 thing
    var idealTotalAlpha = Math.ceil( 256 * ( i + 1 ) / subLayers.length );
    var subAlpha = idealTotalAlpha - totalAlphaYet;
    subAlphas.push( ( subAlpha + 1 ) / 256 );
    totalAlphaYet += subAlpha;
  }
  
  // Create a new layer, binding alpha and blendMode with original layer
  var layer = Layer({
    source : canvas,
    inPoint : original.inPoint,
    outPoint : original.outPoint,
    properties :
    {
      alpha : function( time ) { return original.source.alpha; },
      blendMode : function( time ) { return original.source.blendMode; }
    }
  });
  
  // Simulate inheritance by making a backup of update function.
  var baseUpdate = Factory.cloneFunction( layer.update, layer );
  
  // Declare new update
  layer.update = function( time )
  {
    // Update original layer to get binding work
    original.update( time );
    baseUpdate( time );
    
    // Update each layer included
    var offset = 0;
    foreach ( subLayers, function( key, object )
    {
      object.update( time + params.exposureTime * offset / subLayers.length + shutterOffset );
      
      // Manually set alpha and blendMode in case of bindings
      object.source.alpha = subAlphas[ offset ];
      object.source.blendMode = "add";
      
      offset ++;
    });
  };
  
  return layer;
}

var ForceMB = ForceMotionBlur;
 
Global._set( "__class_forcemb_helperRnr", ForceMotionBlur );

/* Category: Animation Helpers
 * This sort of classes are helpers for creating animation.
 */
 
/* Class: Replicator
 * Alias: _
 * Returns an Array of Objects created according to given params. 
 *
 * constructor
 *   Constructor of the Class to replicate.
 * count
 *   Count of result Objects.
 * paramsFunction
 *   A Function accepting index as parameter, returning an Array of parameters.
 */
function Replicator( constructor, count, paramsFunction )
{
  // Create an Array
  var objects = [];
  
  // Loop creating Objects
  var i = 0;
  for ( i = 0; i &lt; count; i ++ )
  {
    var newParams;
    
    // Get parameters
    newParams = paramsFunction ? paramsFunction( i ) : [];
    
    // Call constructor
    objects.push( constructor.apply( this, newParams ) );
  }
  
  // return result
  return objects;
}

var _ = Replicator;
 
Global._set( "__class_replicator_helperRnr", Replicator );
 
/* Static Class: NumberInterpolation
 * Alias: NI
 * Provides functions for interpolating between numbers.
 *
 * Common parameters for functions in this class:
 *
 * t
 *   A Number, time factor indicating position between the values.
 * value1
 *   A Number, the first value ( t = 0 ).
 * value2
 *   A Number, the second value ( t = 1 ).
 */
var NumberInterpolation = {
  
  /* Function: dimension
   * Creates a multidimensional interpolation based on given function.
   *
   * interpolation
   *   The interpolation function to wrap.
   */
  dimension : function( interpolation )
  {
    return function( t, value1, value2 )
    {
      var result = [];
      
      for ( var i = 0; i &lt; value1.length; i ++ )
      {
        result[ i ] = interpolation( t, value1[ i ], value2[ i ] );
      }
      
      return result;
    };
  },
  
  /* Function: hold
   * Holds value1
   */
  hold : function( t, value1, value2 )
  {
    return value1;
  },
  
  /* Function: linear
   * Interpolates in linear manner.
   */
  linear : function( t, value1, value2 )
  {
    return value1 + ( value2 - value1 ) * t;
  },
  
  /* Function Group: cubic
   * Interpolates in cubic manner.
   */
  cubic :
  {
    easeIn : function( t, value1, value2 )
    {
      return value1 + ( value2 - value1 ) * t * t * t;
    },
    easeOut : function( t, value1, value2 )
    {
      return NumberInterpolation.cubic.easeIn( 1 - t, value2, value1 );
    },
    easeInOut : function( t, value1, value2 )
    {
      var midPoint = ( value1 + value2 ) / 2;
      if ( t &lt; 0.5 ) return NumberInterpolation.cubic.easeIn( t * 2, value1, midPoint );
      return NumberInterpolation.cubic.easeOut( t * 2 - 1, midPoint, value2 );
    },
    easeOutIn : function( t, value1, value2 )
    {
      var midPoint = ( value1 + value2 ) / 2;
      if ( t &lt; 0.5 ) return NumberInterpolation.cubic.easeOut( t * 2, value1, midPoint );
      return NumberInterpolation.cubic.easeIn( t * 2 - 1, midPoint, value2 );
    }
  },
  
  /* Function Group: quartic
   * Interpolates in quartic manner.
   */
  quartic :
  {
    easeIn : function( t, value1, value2 )
    {
      return value1 + ( value2 - value1 ) * t * t * t * t;
    },
    easeOut : function( t, value1, value2 )
    {
      return NumberInterpolation.quartic.easeIn( 1 - t, value2, value1 );
    },
    easeInOut : function( t, value1, value2 )
    {
      var midPoint = ( value1 + value2 ) / 2;
      if ( t &lt; 0.5 ) return NumberInterpolation.quartic.easeIn( t * 2, value1, midPoint );
      return NumberInterpolation.quartic.easeOut( t * 2 - 1, midPoint, value2 );
    },
    easeOutIn : function( t, value1, value2 )
    {
      var midPoint = ( value1 + value2 ) / 2;
      if ( t &lt; 0.5 ) return NumberInterpolation.quartic.easeOut( t * 2, value1, midPoint );
      return NumberInterpolation.quartic.easeIn( t * 2 - 1, midPoint, value2 );
    }
  },
  
  /* Function Group: quintic
   * Interpolates in quintic manner.
   */
  quintic :
  {
    easeIn : function( t, value1, value2 )
    {
      return value1 + ( value2 - value1 ) * t * t * t * t * t;
    },
    easeOut : function( t, value1, value2 )
    {
      return NumberInterpolation.quintic.easeIn( 1 - t, value2, value1 );
    },
    easeInOut : function( t, value1, value2 )
    {
      var midPoint = ( value1 + value2 ) / 2;
      if ( t &lt; 0.5 ) return NumberInterpolation.quintic.easeIn( t * 2, value1, midPoint );
      return NumberInterpolation.quintic.easeOut( t * 2 - 1, midPoint, value2 );
    },
    easeOutIn : function( t, value1, value2 )
    {
      var midPoint = ( value1 + value2 ) / 2;
      if ( t &lt; 0.5 ) return NumberInterpolation.quintic.easeOut( t * 2, value1, midPoint );
      return NumberInterpolation.quintic.easeIn( t * 2 - 1, midPoint, value2 );
    }
  },
  
  /* Function Group: exponential
   * Interpolates in exponential manner.
   */
  exponential :
  {
    easeIn : function( t, value1, value2 )
    {
      return ( t === 0 ) ? value1 : value1 + ( value2 - value1 ) * Math.pow( 2, 10 * ( t - 1 ) );
    },
    easeOut : function( t, value1, value2 )
    {
      return NumberInterpolation.exponential.easeIn( 1 - t, value2, value1 );
    },
    easeInOut : function( t, value1, value2 )
    {
      var midPoint = ( value1 + value2 ) / 2;
      if ( t &lt; 0.5 ) return NumberInterpolation.exponential.easeIn( t * 2, value1, midPoint );
      return NumberInterpolation.exponential.easeOut( t * 2 - 1, midPoint, value2 );
    },
    easeOutIn : function( t, value1, value2 )
    {
      var midPoint = ( value1 + value2 ) / 2;
      if ( t &lt; 0.5 ) return NumberInterpolation.exponential.easeOut( t * 2, value1, midPoint );
      return NumberInterpolation.exponential.easeIn( t * 2 - 1, midPoint, value2 );
    }
  },
  
  /* Function Group: back
   * Interpolates in a overflowing manner.
   *
   * s
   *   [default] 1.70158
   *   Back factor.
   */
  back :
  {
    s : 1.70158,
    easeIn : function( t, value1, value2 )
    {
      return ( value2 - value1 ) * t * t * (( NumberInterpolation.back.s + 1 ) * t - NumberInterpolation.back.s ) + value1;
    },
    easeOut : function( t, value1, value2 )
    {
      return NumberInterpolation.back.easeIn( 1 - t, value2, value1 );
    },
    easeInOut : function( t, value1, value2 )
    {
      var midPoint = ( value1 + value2 ) / 2;
      if ( t &lt; 0.5 ) return NumberInterpolation.back.easeIn( t * 2, value1, midPoint );
      return NumberInterpolation.back.easeOut( t * 2 - 1, midPoint, value2 );
    },
    easeOutIn : function( t, value1, value2 )
    {
      var midPoint = ( value1 + value2 ) / 2;
      if ( t &lt; 0.5 ) return NumberInterpolation.back.easeOut( t * 2, value1, midPoint );
      return NumberInterpolation.back.easeIn( t * 2 - 1, midPoint, value2 );
    }
  }
};

var NI = NumberInterpolation;
 
Global._set( "__class_ni_helperRnr", NumberInterpolation );

/* Enum: KeyframeMode
 * Alias: KeyMode
 * Modes of keyframe behaviors.
 */
var KeyframeMode = {
  
  // affectNext: The keyframe's function will be used when time is between this keyframe and the next.
  affectNext : 0,
  
  // weightBlend: The keyframe's function and the next's will be used when time is between this keyframe and the next, according to weight settings and time factor.
  weightBlend : 1,
  
  // useNext: The next keyframe's function will be used when time is between this keyframe and the next.
  useNext : 2
};

var KeyMode = KeyframeMode;
 
Global._set( "__class_keymode_helperRnr", KeyframeMode );
 
/* Class: Keyframe
 * Alias: Key
 * A class describing a keyframe.
 *
 * time
 *   Time (in milliseconds) the keyframe is at.
 * value
 *   Value of the keyframe.
 * interpolation
 *   [default] NumberInterpolation.linear
 *   Function used to interpolate between this value and the next.
 * mode
 *   [default] KeyframeMode.affectNext
 *   Interpolation behavior of this keyframe.
 * weight
 *   [default] 1
 *   Weight when KeyframeMode.weightBlend is used.
 */
function Keyframe( params )
{
  return {
    time : params.time,
    value : params.value,
    interpolation : params.interpolation || NumberInterpolation.linear,
    mode : params.mode || KeyframeMode.affectNext,
    weight : params.weight || 1,
    
    /* Function: clone
     * Custom clone function.
     */
    clone : function()
    {
      return Keyframe( Factory.cloneObject( params ) );
    }
  };
}

var Key = Keyframe;
 
Global._set( "__class_key_helperRnr", Keyframe );
 
/* Enum: KeyframesBindMode
 * Alias: KeysBindMode
 * Modes of keyframe bind behaviors.
 */
var KeyframesBindMode = {
  
  // hold: Hold the value of the nearest keyframe when out of range.
  hold : 0,
  
  // repeat: Repeat keyframes when out of range (last =&gt; second)
  repeat : 1,
  
  // pingPong: Ping Pong keyframes when out of range.
  pingPong : 2
};

var KeysBindMode = KeyframesBindMode;
 
Global._set( "__class_keysbindmode_helperRnr", KeyframesBindMode );
 
/* Class: KeyframesBind
 * Alias: KeysBind
 * An animation Binding using keyframes.
 *
 * keyframes
 *   An Array containing keyframes to use, in time order.
 * mode
 *   [default] KeyframesBindMode.hold
 *   Behavior when out of range.
 */
function KeyframesBind( params )
{
  // Store information about range
  var firstKeyframeTime = params.keyframes[ 0 ].time;
  var lastKeyframeTime = params.keyframes[ params.keyframes.length - 1 ].time;
  var duration = lastKeyframeTime - firstKeyframeTime;
  
  // Create function for out of range behavior
  var applyRangeBehavior = null;
  if ( params.mode === KeyframesBindMode.repeat )
  {
    applyRangeBehavior = function( time )
    {
      return firstKeyframeTime + ( time - firstKeyframeTime ) % ( duration );
    };
  }
  else if ( params.mode === KeyframesBindMode.pingPong )
  {
    applyRangeBehavior = function( time )
    {
      // Modulate by double the duration
      var ppTime = ( time - firstKeyframeTime ) % ( duration * 2 );
      
      // Check phase
      if ( ppTime &gt; duration )
      {
        return lastKeyframeTime - ppTime + duration;
      }
      else
      {
        return firstKeyframeTime + ppTime;
      }
    };
  }
  
  // Function for finding the current keyframe index
  var findCurrentIndex = function( time )
  {
    // Iterate through keyframes to find
    var currentIndex = 0;
    while( params.keyframes[ currentIndex + 1 ] &amp;&amp; params.keyframes[ currentIndex + 1 ].time &lt; time )
      currentIndex ++;
    
    return currentIndex;
  };
  
  // return the binding function
  return function( time )
  {
    // Apply behavior if exists
    var newTime = applyRangeBehavior ? applyRangeBehavior( time ) : time;
    
    // Find the current keyframe
    var currentIndex = findCurrentIndex( newTime );
    var currentKey = params.keyframes[ currentIndex ];
    var nextKey = params.keyframes[ currentIndex + 1 ];
    
    // Whether there is a next keyframe to interpolate
    if ( nextKey )
    {
      // Calculate time factor
      var tFactor = ( newTime - currentKey.time ) / ( nextKey.time - currentKey.time );
      
      // Check current keyframe's mode
      if ( currentKey.mode === KeyframeMode.affectNext )
      {
        return currentKey.interpolation( tFactor, currentKey.value, nextKey.value );
      }
      else if ( currentKey.mode === KeyframeMode.useNext )
      {
        return nextKey.interpolation( tFactor, currentKey.value, nextKey.value );
      }
      else if ( currentKey.mode === KeyframeMode.weightBlend )
      {
        // First calculate using two functions
        var value1 = currentKey.interpolation( tFactor, currentKey.value, nextKey.value );
        var value2 = nextKey.interpolation( tFactor, currentKey.value, nextKey.value );
        
        // Calculate weights
        var weight1 = currentKey.weight * ( 1 - tFactor );
        var weight2 = nextKey.weight * tFactor;
        
        // return a weighted average
        return ( value1 * weight1 + value2 * weight2 ) / ( weight1 + weight2 );
      }
    }
    else
    {
      // When there is not a next frame for some reason, just return the current value
      return currentKey.value;
    }
  };
}

var KeysBind = KeyframesBind;
 
Global._set( "__class_keysbind_helperRnr", KeyframesBind );

/* Class: WiggleKeyframes
 * Alias: WiggleKeys
 * A set of keyframes that make a wiggle effect.
 *
 * origin
 *   Number or Array of Numbers to wiggle upon.
 * numSteps
 *   Number of keyframes to generate.
 * startTime
 *   Time (in milliseconds) at which the wiggle starts.
 * stepTime
 *   Time (in milliseconds) each step will last for.
 * amount
 *   Strength of the effect.
 * interpolation
 *   [default] NumberInterpolation.cubic.easeInOut
 *   Function used to interpolate between values.
 * returnCenter
 *   [default] false
 *   Indicated whether to return to center before every move
 */
function WiggleKeyframes( params )
{
  // Private function for a random vector
  var vectorRandom = function( n )
  {
    var result = [];
    
    for( var i = 0; i &lt; n; i ++ )
    {
      result[ i ] = Math.random() - 0.5;
    }
    return result;
  };
  
  // Private function for vector length
  var vectorLength = function( vector )
  {
    var sum = 0;
    
    for( var i = 0; i &lt; vector.length; i ++ )
    {
      sum += vector[ i ] * vector[ i ];
    }
    return Math.sqrt( sum );
  };
  
  // Private function for scaling vector
  var vectorScale = function( vector, scalar )
  {
    var result = [];
    
    for( var i = 0; i &lt; vector.length; i ++ )
    {
      result[ i ] = vector[ i ] * scalar;
    }
    return result;
  };
  
  // Private function for adding vector
  var vectorAdd = function( vector1, vector2 )
  {
    var result = [];
    
    for( var i = 0; i &lt; vector1.length; i ++ )
    {
      result[ i ] = vector1[ i ] + vector2[ i ];
    }
    return result;
  };
  
  // Private function for randomizing with base
  var randomize = function( origin )
  {
    if ( origin.hasOwnProperty("length") )
    {
      // Origin is an Array, use vector stuff
      var randVector = vectorRandom( origin.length );
      
      // Scale vector to fit amount constraint
      var scaledVector = vectorScale( randVector, params.amount / vectorLength( randVector ) );
      
      // return result
      return vectorAdd( origin, scaledVector );
    }
    else
    {
      // Origin is not Array, return a simple randomization
      return origin + params.amount * ( Math.random() - 0.5 );
    }
  };
  
  // Loop randomizing
  if ( params.returnCenter )
  {
    var keyframes = [];
    for( var c = 0; c &lt; params.numSteps; c ++ )
    {
      // Create keyframe
      keyframes.push( Key({ time : params.startTime + params.stepTime * c - 1, value : params.origin, interpolation : NumberInterpolation.hold }) );
      keyframes.push( Key({ time : params.startTime + params.stepTime * c, value : randomize( params.origin ), interpolation : params.interpolation || NumberInterpolation.cubic.easeInOut }) );
    }
    
    // Repeat first for consistency
    keyframes.push( Key({ time : params.startTime + params.stepTime * ( ++ c ) - 1, value : params.origin, interpolation : NumberInterpolation.hold }) );
    
    // return keyframes
    return keyframes;
  }
  else
  {
    var keyframes = [];
    for( var c = 0; c &lt; params.numSteps; c ++ )
    {
      // Create keyframe
      keyframes.push( Key({ time : params.startTime + params.stepTime * c, value : randomize( params.origin ), interpolation : params.interpolation || NumberInterpolation.cubic.easeInOut }) );
    }
    
    // Repeat first for consistency
    keyframes.push( Key({ time : params.startTime + params.stepTime * ( ++ c ), value : keyframes[ 0 ].value, interpolation : params.interpolation || NumberInterpolation.cubic.easeInOut }) );
    
    // return keyframes
    return keyframes;
  }
}

var WiggleKeys = WiggleKeyframes;
 
Global._set( "__class_wigglekeys_helperRnr", WiggleKeyframes );</d>
<d p="0.05,8,25,16777215,1354860948,2,a0d50318,156322794">/* Comment Art Helper for submission Round and Round - v20121204.1
 * Copyright (C) 2012 EPM
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * For a copy of the GNU General Public License,
 * see &lt;http://www.gnu.org/licenses/&gt;.
 *
 * Documenting convention:
 *
 * For those functions that accept only one Object "params", only the content of the Object is documented.
 */
 
/* Category: Master Control
 * This category contains only a static class Helper for controlling the script.
 */
 
/* Static Class: Helper
 * Provides functions for commanding the helper.
 */
var Helper = Global._get( "__class_helper_helperRnr" );
 
/* Category: Utilities
 * This sort of classes provide utilities not directly related to presenting content.
 */
 
/* Static Class: Factory
 * Provides functions for creating and manipulating objects.
 *
 * As of 11/27, all functions with connection to loaderInfo removed. Factory now serve only as an object cloning utility.
 */
var Factory = Global._get( "__class_factory_helperRnr" );
 
/* Static Class: Timer
 * Improves timing precision over Player.time by sampling time usage for each frame. For retaining both smoothness and seekability.
 */
var Timer = Global._get( "__class_timer_helperRnr" );

/* Class: Binder
 * Provides functions for binding properties. Mainly used in layers.
 *
 * object
 *   An Object to bind.
 * properties
 *   An Object, containing values or Bindings for each property.
 */
var Binder = Global._get( "__class_binder_helperRnr" );

/* Category: Abstractions
 * This sort of classes are abstractions of display objects for use in production.
 */
 
/* Class: Layer
 * Provides functions for animating contents.
 *
 * source
 *   A DisplayObject serving as the layer source.
 * inPoint
 *   A Number, the time (in milliseconds) at which the layers enters.
 * outPoint
 *   A Number, the time (in milliseconds) at which the layers exits.
 * properties
 *   [default] {}
 *   An Object, containing values or Bindings for each AS3 property.
 */
var Layer = Global._get( "__class_layer_helperRnr" );

/* Class: DynamicVectorTextLayer
 * Alias: DVTLayer
 * A type of layer specialized to display basic dynamic vector text (huge sizes over 200px or exotic fonts).
 *
 * dictionary
 *   An Object containing functions to create possible glyphs (due to Flash unable to clone vector content). 
 *   Glyphs should be provided by user, be anchored at top-left and be of 200px in size.
 * textProperties
 *   [default] { horizontalAlign : "left", verticalAlign : "top", letterSpacing : 20, fontSize : 200, lineHeight : 240, text : "" }
 *   An Object, containing values or Bindings for vector text properties: horizontalAlign, verticalAlign, fontSize, letterSpacing, lineHeight, text.
 * inPoint
 *   A Number, the time (in milliseconds) at which the layers enters.
 * outPoint
 *   A Number, the time (in milliseconds) at which the layers exits.
 * properties
 *   [default] {}
 *   An Object, containing values or Bindings for each AS3 property.
 */
var DynamicVectorTextLayer = Global._get( "__class_dvtlayer_helperRnr" );
var DVTLayer = DynamicVectorTextLayer;

/* Class: CompositionLayer
 * Alias: CompLayer
 * A type of layer specialized to nest compositions.
 *
 * composition
 *   A Composition.
 * inPoint
 *   A Number, the time (in milliseconds) at which the layers enters.
 * outPoint
 *   A Number, the time (in milliseconds) at which the layers exits.
 * inPointTime
 *   [default] composition.startTime
 *   A Number, the time (in milliseconds) the Composition is at when the layers enters.
 * outPointTime
 *   [default] composition.startTime + composition.duration
 *   A Number, the time (in milliseconds) the Composition is at when the layers exits.
 * timeRemap
 *   [default] null
 *   A Function or null, depending on whether you need time remapping. Setting this function overrides inPointTime and outPointTime settings.
 *   The function should accept a parameter time (in milliseconds) the current time.
 * properties
 *   [default] {}
 *   An Object, containing values or Bindings for each AS3 property.
 */
var CompositionLayer = Global._get( "__class_complayer_helperRnr" );
var CompLayer = CompositionLayer;

/* Class: Composition
 * Alias: Comp
 * Provides functions as the framework of a scene.
 *
 * width
 *   [default] $.width
 *   A Number specifying stage width.
 * height
 *   [default] $.height
 *   A Number specifying stage height.
 * startTime
 *   [default] 0
 *   A Number, the time (in milliseconds) when the timeline starts.
 * duration
 *   [default] 60000
 *   A Number, the length (in milliseconds) of the timeline.
 * layers
 *   [default] []
 *   An Array of Layers, from top to bottom.
 * hasBoundaries
 *   [default] false
 *   Whether a mask will be put on the canvas so that elements outside become invisible.
 */
var Composition = Global._get( "__class_comp_helperRnr" );
var Comp = Composition;

/* Class: MainComposition
 * Alias: MainComp
 * Provides functions as the framework of the comment art. Only MainCompositions have ability to be presented.
 *
 * width
 *   [default] $.width
 *   A Number specifying stage width.
 * height
 *   [default] $.height
 *   A Number specifying stage height.
 * startTime
 *   [default] 0
 *   A Number, the time (in milliseconds) when the timeline starts.
 * duration
 *   [default] 60000
 *   A Number, the length (in milliseconds) of the timeline.
 * layers
 *   [default] []
 *   An Array of Layers, from top to bottom.
 * hasBoundaries
 *   [default] true
 *   Whether a mask will be put on the canvas so that elements outside become invisible.
 */
var MainComposition = Global._get( "__class_maincomp_helperRnr" );
var MainComp = MainComposition;

/* Category: Sources
 * This sort of classes are DisplayObjects that can serve as layer sources.
 */

/* Class: Sprite
 * Shortcut for AS3 Sprite.
 */
var Sprite = Global._get( "__class_sprite_helperRnr" );

/* Class: Shape
 * Shortcut for AS3 Shape.
 */
var Shape = Global._get( "__class_shape_helperRnr" );

/* Class: Text
 * Shortcut for AS3 TextField.
 *
 * preserveGlow
 *   [default] false
 *   Whether to preserve the original glow filter
 */
var Text = Global._get( "__class_text_helperRnr" );

/* Class: Solid
 * A solid color layer source.
 *
 * width
 *   A Number specifying solid width.
 * height
 *   A Number specifying solid height.
 * color
 *   A Number specifying solid color.
 */
var Solid = Global._get( "__class_solid_helperRnr" );

/* Class: Anchor
 * Anchors the layer source at a specific point
 *
 * source
 *   The DisplayObject to wrap around
 * x
 *   [default] source.width / 2
 *   Anchor X.
 * y
 *   [default] source.height / 2
 *   Anchor Y.
 */
var Anchor = Global._get( "__class_anchor_helperRnr" );

/* Class: Anchor3D
 * Anchors the layer source at a specific point in 3D space
 *
 * source
 *   The DisplayObject to wrap around
 * x
 *   [default] source.width / 2
 *   Anchor X.
 * y
 *   [default] source.height / 2
 *   Anchor Y.
 * z
 *   [default] 0
 *   Anchor Z.
 */
var Anchor3D = Global._get( "__class_anchor3d_helperRnr" );

/* Class: Checkerboard
 * A checkboard layer source.
 *
 * width
 *   A Number specifying checkboard width.
 * height
 *   A Number specifying checkboard height.
 * frequencyX
 *   Number of blocks on X axis.
 * frequencyY
 *   Number of blocks on Y axis.
 * color1
 *   A Number specifying checkboard background color.
 * color2
 *   A Number specifying checkboard foreground color.
 */
var Checkerboard = Global._get( "__class_checkerboard_helperRnr" );

/* Category: Effects
 * This sort of classes are effect to put on layers. Not to be confused with filters.
 */

/* Class: TrackMatte
 * Alias: TrkMat
 * Use another layer as a mask.
 *
 * layer
 *   The Layer to be masked.
 * mask
 *   The mask Layer.
 */
var TrackMatte = Global._get( "__class_trkmat_helperRnr" );
var TrkMat = TrackMatte;

/* Class: ForceMotionBlur
 * Alias: ForceMB
 * An effect dedicated to create motion blur effects which Flash lacks. Use the effect with Replicator.
 *
 * layers
 *   The Layers to use.
 * exposureTime
 *   [default] 20.8333
 *   Exposure time (in milliseconds). Defaults to 1000/48 (double the Player frame rate).
 * shutterPhase
 *   [default] -90
 *   Shutter phase in degrees.
 */
var ForceMotionBlur = Global._get( "__class_forcemb_helperRnr" );
var ForceMB = ForceMotionBlur;
 
/* Category: Animation Helpers
 * This sort of classes are helpers for creating animation.
 */
 
/* Class: Replicator
 * Alias: _
 * Returns an Array of Objects created according to given params. 
 *
 * constructor
 *   Constructor of the Class to replicate.
 * count
 *   Count of result Objects.
 * paramsFunction
 *   A Function accepting index as parameter, returning an Array of parameters.
 */
var Replicator = Global._get( "__class_replicator_helperRnr" );
var _ = Replicator;

/* Static Class: NumberInterpolation
 * Alias: NI
 * Provides functions for interpolating between numbers.
 *
 * Common parameters for functions in this class:
 *
 * t
 *   A Number, time factor indicating position between the values.
 * value1
 *   A Number, the first value ( t = 0 ).
 * value2
 *   A Number, the second value ( t = 1 ).
 */
var NumberInterpolation = Global._get( "__class_ni_helperRnr" );
var NI = NumberInterpolation;

/* Enum: KeyframeMode
 * Alias: KeyMode
 * Modes of keyframe behaviors.
 */
var KeyframeMode = Global._get( "__class_keymode_helperRnr" );
var KeyMode = KeyframeMode;

/* Class: Keyframe
 * Alias: Key
 * A class describing a keyframe.
 *
 * time
 *   Time (in milliseconds) the keyframe is at.
 * value
 *   Value of the keyframe.
 * interpolation
 *   [default] NumberInterpolation.linear
 *   Function used to interpolate between this value and the next.
 * mode
 *   [default] KeyframeMode.affectNext
 *   Interpolation behavior of this keyframe.
 * weight
 *   [default] 1
 *   Weight when KeyframeMode.weightBlend is used.
 */
var Keyframe = Global._get( "__class_key_helperRnr" );
var Key = Keyframe;

/* Enum: KeyframesBindMode
 * Alias: KeysBindMode
 * Modes of keyframe bind behaviors.
 */
var KeyframesBindMode = Global._get( "__class_keysbindmode_helperRnr" );
var KeysBindMode = KeyframesBindMode;

/* Class: KeyframesBind
 * Alias: KeysBind
 * An animation Binding using keyframes.
 *
 * keyframes
 *   An Array containing keyframes to use, in time order.
 * mode
 *   [default] KeyframesBindMode.hold
 *   Behavior when out of range.
 */
var KeyframesBind = Global._get( "__class_keysbind_helperRnr" );
var KeysBind = KeyframesBind;
 
/* Class: WiggleKeyframes
 * Alias: WiggleKeys
 * A set of keyframes that make a wiggle effect.
 *
 * origin
 *   Number or Array of Numbers to wiggle upon.
 * numSteps
 *   Number of keyframes to generate.
 * startTime
 *   Time (in milliseconds) at which the wiggle starts.
 * stepTime
 *   Time (in milliseconds) each step will last for.
 * amount
 *   Strength of the effect.
 * interpolation
 *   [default] NumberInterpolation.cubic.easeInOut
 *   Function used to interpolate between values.
 * returnCenter
 *   [default] false
 *   Indicated whether to return to center before every move
 */
var WiggleKeyframes = Global._get( "__class_wigglekeys_helperRnr" );
var WiggleKeys = WiggleKeyframes;

/* Contest submission Round and Round
 *
 * The following script is a programmatic representation of a Comment Art created by EPM.
 *
 * The work is licensed under Creative Commons Attribution-NoDerivs 3.0 Unported License.
 */

// Check if Glyphs are already defined to prevent issues
if ( Global._get( "___static1_Rnr" ) )
{
  // Glyphs are already defined, call a nonexistent function to trigger an Exception and stop execution.
  trace("Execution aborted for glyphs already defined.");
  Helper.stopExecution();
}
 
Global._set( "___static1_Rnr", 
{
  "今も" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,1,2,3,3,3,3,2,2,2,2,2] ), $.toNumberVector( [48.68,234.78,97.33,205.53,147.54,164.5,197.74,123.47,241.61,77,285.49,30.52,319.1,-18.24,352.71,-67,368.18,-111.72,455.18,-95.97,454.33,-92.6,452.19,-90.16,450.04,-87.72,446.46,-86.04,442.87,-84.35,437.77,-83.32,432.68,-82.29,425.93,-81.72,454.61,-41.79,492.55,-3.34,530.48,35.11,574.71,70.06,618.93,105,667.98,135.44,717.02,165.87,767.93,189.78,766.43,201.03,758.27,202.43,751.07,205.81,743.88,209.18,738.11,213.96,732.35,218.75,728.25,224.65,724.14,230.56,722.18,237.03,672.39,208.62,626.29,173.11,580.19,137.61,540.11,97.53,500.04,57.45,467.15,14.07,434.27,-29.32,410.93,-73.47,386.46,-29.32,347.89,15.89,309.32,61.11,262.14,103.15,214.97,145.2,161.91,181.97,108.86,218.75,55.43,246.03,48.68,234.78,48.676,234.777,564.68,286.53,593.18,255.78,652.43,307.53,650.18,309.78,646.58,311.61,642.98,313.43,638.27,314.84,633.56,316.25,627.85,317.23,622.14,318.21,615.68,318.78,604.71,343.25,589.06,376.8,573.42,410.35,555.77,447.12,538.12,483.89,519.8,520.96,501.49,558.03,485.18,589.53,483.49,589.81,481.79,590.08,480.09,590.35,478.33,590.56,476.57,590.77,474.73,590.9,472.89,591.03,470.93,591.03,466.99,591.03,462.76,590.57,458.53,590.11,453.96,589.06,449.39,588,444.45,586.28,439.52,584.56,434.18,582.03,451.33,549.4,469.33,512.62,487.33,475.83,504.49,439.06,521.64,402.28,537.11,367.61,552.58,332.93,564.68,304.53,146.18,304.53,140.18,286.53,564.68,286.53,564.676,286.527,502.43,111.78,567.68,159.03,565.43,163.25,562.59,166.23,559.75,169.22,555.68,171.12,551.6,173.02,545.95,173.9,540.3,174.78,532.43,174.78,230.93,174.78,226.43,156.78,468.68,156.78,502.43,111.78,502.426,111.777] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [1132.21,494.66,1155.27,521.94,1173.98,544.7,1192.68,567.45,1205.9,587.84,1219.12,608.24,1226.29,627.34,1233.46,646.44,1233.46,666.41,1233.46,689.75,1222.9,711.77,1212.34,733.79,1186.68,750.88,1161.02,767.96,1117.97,778.31,1074.93,788.66,1009.96,788.66,958.77,788.66,924.02,778.06,889.26,767.47,868.02,746.66,846.79,725.84,837.63,695,828.46,664.16,828.46,623.66,828.46,614.66,829.32,604.05,830.17,593.45,831.37,582.69,832.56,571.93,833.84,561.75,835.12,551.56,835.96,543.41,809.24,542.56,787.98,537.17,766.73,531.78,751.96,522.22,737.2,512.66,729.44,499.11,721.68,485.56,721.96,468.41,721.96,449.28,733.67,429.01,745.38,408.74,764.43,390.03,783.48,371.33,807.71,355.56,831.93,339.78,856.96,329.66,846.27,329.66,826.07,328.38,805.87,327.1,785.9,319.44,765.93,311.77,751.07,295.17,736.21,278.56,736.21,247.91,748.96,243.41,750.65,257.47,758.92,267.43,767.2,277.39,780.84,283.72,794.48,290.05,812.88,292.98,831.27,295.91,853.21,295.91,854.9,295.91,859.64,296.01,864.39,296.12,869.8,296.19,875.22,296.26,880.11,296.22,884.99,296.19,886.96,295.91,888.65,284.94,890.38,273.69,892.12,262.44,893.52,251.47,894.93,240.5,895.82,230.09,896.71,219.69,896.71,210.41,896.71,200.56,893.3,193.82,889.89,187.09,884.05,182.94,878.22,178.79,870.45,176.97,862.68,175.16,853.96,175.16,852.27,175.16,850.47,175.17,848.66,175.18,846.84,175.25,845.01,175.32,843.2,175.47,841.4,175.63,839.71,175.91,838.21,173.66,840.74,166.91,844.16,161.96,847.59,157.02,852.65,153.78,857.71,150.55,864.79,148.98,871.87,147.41,881.71,147.41,896.9,147.41,911.1,151.57,925.3,155.73,936.27,162.13,947.24,168.52,953.85,176.2,960.46,183.88,960.46,190.91,960.46,195.41,958.64,199.77,956.83,204.13,954.37,208.91,951.91,213.69,949.39,219.17,946.87,224.66,945.46,231.41,944.34,238.16,942.95,245.4,941.57,252.64,940.02,260.09,938.48,267.55,936.81,275.07,935.15,282.59,933.46,289.91,946.12,288.5,957.11,286.38,968.1,284.26,976.96,281.38,985.82,278.49,992.31,274.82,998.8,271.16,1002.46,266.66,1019.62,265.81,1031.61,268.38,1043.59,270.95,1051.12,275.38,1058.64,279.81,1062.05,285.32,1065.46,290.84,1065.46,295.91,1065.46,298.16,1064.02,300.63,1062.58,303.1,1059.55,305.56,1056.53,308.02,1051.86,310.36,1047.18,312.69,1040.71,314.66,1035.37,316.06,1023.07,318.04,1010.78,320.02,994.68,322.06,978.58,324.1,960.24,325.94,941.9,327.78,924.46,328.91,918.55,349.72,912.38,371.75,906.2,393.78,900.37,416.28,894.53,438.78,889.34,461.38,884.15,483.97,880.21,505.91,897.37,505.91,916.67,505.32,935.97,504.74,953.05,503.47,970.14,502.2,982.83,500.21,995.52,498.22,999.46,495.41,1012.68,497.94,1024.53,501.78,1036.38,505.63,1045.3,510.41,1054.23,515.19,1059.47,520.72,1064.71,526.25,1064.71,532.16,1064.71,536.94,1062.17,540.23,1059.63,543.52,1055.62,545.56,1051.61,547.6,1046.68,548.5,1041.74,549.41,1036.96,549.41,1035.55,549.41,1034.15,549.4,1032.74,549.38,1031.34,549.31,1029.93,549.24,1028.52,549.09,1027.12,548.94,1025.71,548.66,1010.52,546.13,995.62,544.88,980.71,543.64,963.27,543.22,945.84,542.8,924.46,542.96,903.09,543.13,874.96,543.41,873.55,551,872.21,560.49,870.86,569.99,869.8,579.97,868.75,589.95,868.11,599.73,867.46,609.5,867.46,617.66,867.46,650,873.52,673.74,879.58,697.49,895.12,713.09,910.66,728.7,937.39,736.41,964.12,744.13,1005.46,744.41,1054.12,744.41,1088.09,737.4,1122.06,730.39,1143.37,718.16,1164.67,705.92,1174.32,689.35,1183.96,672.78,1183.96,653.66,1183.96,634.53,1179.52,616.32,1175.08,598.11,1166.43,579.97,1157.78,561.83,1145.04,543.34,1132.3,524.84,1115.71,505.16,1132.21,494.66,1132.211,494.657,881.71,333.41,856.4,344.66,833.44,359.06,810.48,373.46,793.12,389.56,775.75,405.66,765.59,422.74,755.43,439.81,755.71,456.41,755.71,471.59,762.14,481.11,768.58,490.63,780.18,495.97,791.78,501.31,807.92,503.24,824.05,505.16,843.46,505.16,847.4,485.75,852.29,463.34,857.17,440.94,862.3,418.16,867.44,395.38,872.46,373.53,877.49,351.69,881.71,333.41,881.711,333.407] ) );
    shape.graphics.endFill();

    return shape;
  },
  "流れ" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,2,2,3,3,3,3,2,2,1,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-44.32,317.78,-10.29,321.71,12.59,330.12,35.48,338.52,49.33,349,63.18,359.47,69.05,370.83,74.93,382.18,74.93,392.03,74.93,398.21,73.06,403.56,71.2,408.9,67.89,412.84,64.59,416.78,60.05,419.03,55.52,421.28,50.18,421.28,47.93,421.28,45.55,420.84,43.17,420.41,40.71,419.5,38.25,418.58,35.73,417.16,33.21,415.75,30.68,413.78,26.46,401.96,18.16,389.41,9.86,376.86,-0.82,365.12,-11.51,353.38,-23.75,343.22,-35.98,333.06,-48.07,326.03,-44.32,317.78,-44.324,317.777,-3.82,599.78,-0.45,599.78,1.85,599.53,4.14,599.28,6.11,597.81,8.08,596.33,10.1,593.13,12.11,589.93,14.93,584.03,16.33,582.06,20.82,573.03,25.31,564.01,40.14,531.53,54.98,499.04,83.8,434.89,112.61,370.75,162.68,258.53,176.93,261.53,164.55,296.68,147.59,343.48,130.64,390.27,114.39,435.06,98.15,479.85,85.27,515.81,72.39,551.78,68.18,565.28,65.64,574,63.45,582.64,61.26,591.29,59.64,599.59,58.03,607.89,57.1,615.69,56.18,623.5,56.18,630.53,56.74,642.34,59.86,654.76,62.97,667.18,66.49,681.53,70,695.87,72.84,712.79,75.68,729.71,75.68,750.53,75.68,755.59,75.02,765.83,74.36,776.07,70.43,786.34,66.49,796.61,57.96,804.32,49.43,812.03,33.68,812.03,28.89,812.03,24.88,809.54,20.86,807.06,17.83,802.28,14.81,797.5,12.9,790.51,10.99,783.53,10.43,774.53,11.83,763.84,12.95,753.73,14.06,743.61,14.83,734.12,15.61,724.63,16.02,715.78,16.43,706.93,16.43,698.78,16.43,671.78,13.47,656.04,10.52,640.3,4.05,631.93,-2.42,623.57,-12.68,620.62,-22.95,617.68,-37.57,616.28,-37.57,599.78,-28.01,599.78,-21.54,599.66,-15.07,599.54,-11.14,599.4,-7.2,599.26,-5.51,599.14,-3.82,599.03,-3.82,599.03,-3.82,599.78,-3.824,599.777,-12.82,123.53,22.33,128.31,46.06,137.55,69.79,146.8,84.21,158.12,98.62,169.44,104.77,181.64,110.93,193.84,110.93,204.53,110.93,211,108.93,216.49,106.94,221.99,103.43,226,99.91,230,95.11,232.27,90.3,234.53,84.68,234.53,82.43,234.53,80.05,234.21,77.67,233.89,75.21,233.12,72.75,232.35,70.23,231.05,67.71,229.75,65.18,227.78,60.68,214.84,51.97,201.16,43.26,187.49,32.08,174.62,20.9,161.75,8.12,150.47,-4.67,139.18,-17.32,131.03,-12.82,123.53,-12.824,123.527,104.93,801.53,143.18,778.75,166.82,751.09,190.47,723.43,203.55,693.34,216.63,663.25,221.15,631.93,225.68,600.62,225.68,570.53,225.68,471.53,299.18,478.28,298.89,481.93,297.58,484.65,296.27,487.37,293.18,489.34,290.08,491.31,284.83,492.62,279.58,493.93,271.43,494.78,271.43,571.28,271.14,602.5,265.27,635.89,259.4,669.29,242.46,701.21,225.51,733.14,194.75,761.75,163.99,790.37,113.93,812.03,104.93,801.53,104.926,801.527,167.18,383.03,177.58,383.31,189.22,383.45,200.86,383.59,213.02,383.59,225.18,383.59,237.52,383.45,249.86,383.31,261.68,383.03,269.83,367.28,278.52,349.43,287.2,331.58,295.71,313.37,304.22,295.16,312.2,277.45,320.18,259.75,326.93,244.28,154.43,244.28,149.18,226.28,359.93,226.28,359.93,114.53,443.18,122.03,442.89,126.25,441.04,129.41,439.19,132.57,435.11,134.96,431.04,137.36,424.4,139.11,417.77,140.87,407.93,142.28,407.93,226.28,552.68,226.28,586.43,181.28,651.68,228.53,649.43,232.75,646.48,235.73,643.54,238.72,639.39,240.62,635.25,242.52,629.63,243.4,624.02,244.28,616.43,244.28,394.43,244.28,382.89,260.87,370.16,278.82,357.42,296.78,344.27,314.78,331.12,332.78,317.96,350.17,304.8,367.56,292.43,383.03,318.58,382.75,347.53,382.32,376.47,381.9,407.55,381.34,438.63,380.78,471.51,380.07,504.39,379.37,538.43,378.53,529.71,367.84,520.12,357.66,510.54,347.47,500.55,338.12,490.57,328.77,480.42,320.41,470.27,312.06,460.43,305.03,466.43,297.53,511.71,312.15,542.09,329.88,572.48,347.61,590.83,365.68,609.18,383.75,616.93,400.78,624.68,417.81,624.68,431.03,624.68,437.78,622.94,443.31,621.21,448.84,618.11,452.78,615.02,456.71,610.75,458.87,606.49,461.03,601.43,461.03,598.89,461.03,596.36,460.59,593.83,460.16,591.3,459.25,588.77,458.33,586.24,456.91,583.71,455.5,581.18,453.53,579.21,446.5,576.16,439.32,573.11,432.15,569.18,424.84,565.24,417.53,560.5,410.07,555.77,402.62,550.43,395.03,519.49,398.96,483.34,403.32,447.18,407.68,405.21,412.46,363.23,417.25,315.13,422.45,267.02,427.65,212.18,433.28,210.21,436.65,207.84,439.32,205.47,442,202.8,443.96,200.13,445.93,197.2,447.2,194.27,448.46,191.18,449.03,167.18,383.03,167.176,383.027,407.18,757.28,407.18,757.84,405.41,760.37,403.64,762.9,398.64,765.71,393.65,768.53,384.71,770.78,375.77,773.03,361.43,773.03,361.43,472.28,437.18,478.28,436.61,482.21,435.02,485.2,433.43,488.19,430.05,490.37,426.68,492.55,421.14,493.99,415.61,495.43,407.18,496.28,407.18,757.28,407.176,757.277,640.43,679.28,640.43,746.03,646.89,748.84,650.75,750.84,654.61,752.85,656.64,754.75,658.68,756.64,659.3,758.79,659.93,760.93,659.93,764.03,659.93,771.06,656.95,776.98,653.97,782.89,647.36,787.18,640.75,791.47,630.18,793.87,619.61,796.28,604.43,796.28,554.93,796.28,538.33,796.28,528.05,793.56,517.78,790.84,512.08,783.53,506.39,776.21,504.41,763.37,502.43,750.53,502.43,730.28,502.43,470.78,574.43,477.53,574.14,481.46,572.77,484.22,571.4,486.97,568.52,488.87,565.64,490.77,561.03,491.98,556.43,493.18,549.68,494.03,549.68,732.53,549.68,739.84,549.84,744.03,550,748.23,550.99,750.34,551.97,752.45,554.11,752.99,556.24,753.53,560.18,753.53,603.68,753.53,605.93,753.53,607.67,753.4,609.42,753.27,610.89,752.5,612.37,751.72,613.7,750.05,615.02,748.37,616.43,745.28,617.55,742.18,619.2,736.23,620.86,730.28,622.89,721.84,624.93,713.4,627.29,702.67,629.64,691.93,632.18,679.28,640.43,679.28,640.426,679.277] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [1198.7,180.16,1198.7,180.44,1198.07,188.13,1197.44,195.81,1196.45,208.47,1195.47,221.13,1194.28,237.53,1193.08,253.94,1191.95,271.66,1190.55,289.38,1189.2,307.32,1187.85,325.26,1186.8,340.94,1185.74,356.62,1185.1,368.79,1184.45,380.97,1184.45,387.16,1184.45,406.84,1186.85,421.14,1189.24,435.44,1194.02,444.72,1198.8,454,1205.97,458.45,1213.14,462.91,1222.7,462.91,1232.55,462.91,1243.47,460.48,1254.39,458.06,1266.2,452.5,1278.02,446.95,1290.63,437.91,1303.24,428.88,1316.45,415.66,1327.7,423.91,1316.17,445,1303.53,461.58,1290.88,478.16,1276.61,489.63,1262.34,501.09,1246.18,507.12,1230.02,513.16,1211.45,513.16,1189.8,513.16,1174.9,504.58,1160.01,496,1150.8,480.53,1141.59,465.06,1137.52,443.55,1133.45,422.03,1133.45,396.16,1133.45,367.47,1135.15,337.13,1136.85,306.79,1139.17,278.31,1141.49,249.84,1143.9,224.98,1146.3,200.13,1147.7,182.41,1147.99,177.06,1148.26,171.85,1148.53,166.63,1148.74,161.5,1148.95,156.37,1149.08,151.29,1149.2,146.22,1149.2,141.16,1149.2,124.84,1147.08,110.5,1144.96,96.16,1138.99,85.47,1133.01,74.78,1122.31,68.59,1111.61,62.41,1094.45,62.41,1068.02,62.41,1039.1,73.06,1010.17,83.71,979.52,103.19,948.86,122.66,916.85,150.05,884.83,177.44,852.2,210.91,851.64,218.5,851.1,228.16,850.56,237.81,850.14,247.66,849.72,257.5,849.46,266.59,849.2,275.69,849.2,282.16,849.2,300.72,849.25,321.92,849.3,343.12,849.58,365.69,849.86,388.26,850.47,411.57,851.08,434.88,852.2,457.66,852.77,464.13,853.66,471.4,854.55,478.68,855.39,486.06,856.24,493.45,856.85,500.58,857.45,507.72,857.45,513.91,857.45,520.38,854.15,527.86,850.85,535.35,845.64,541.75,840.44,548.15,834.04,552.4,827.64,556.66,821.45,556.66,815.83,556.66,811.72,551.98,807.6,547.31,804.86,539.5,802.12,531.7,800.68,521.54,799.24,511.38,798.95,500.41,798.95,488.59,797.13,477.37,795.3,466.14,789.95,452.78,784.61,439.42,774.91,422.57,765.2,405.72,749.45,382.66,757.7,376.66,763.89,384.25,771.4,392.23,778.92,400.21,785.74,406.75,792.56,413.29,797.68,417.47,802.8,421.66,804.2,421.66,805.61,421.66,806.84,420.58,808.07,419.5,808.99,416.41,809.9,413.31,810.43,407.74,810.95,402.16,810.95,393.16,810.95,374.59,811.21,355.42,811.47,336.25,811.89,317.97,812.31,299.69,812.85,283.05,813.39,266.41,813.95,252.91,799.89,267.81,786.12,283.54,772.35,299.27,759.49,315.16,746.62,331.05,734.96,346.77,723.3,362.5,713.45,377.41,708.67,384.44,704.74,391.41,700.8,398.38,696.58,403.94,692.36,409.49,687.3,412.95,682.24,416.41,675.2,416.41,668.74,416.41,664.06,413.9,659.38,411.39,656.36,406.47,653.34,401.55,651.9,394.26,650.45,386.97,650.45,377.41,650.45,373.47,650.94,370.62,651.42,367.77,653.17,364.75,654.93,361.73,658.37,357.9,661.8,354.06,667.7,348.16,690.77,325.38,714.32,301.16,737.88,276.95,758.27,253.47,778.66,229.99,794.06,208.31,809.45,186.63,816.2,168.91,817.05,159.06,817.65,148.81,818.24,138.56,818.74,128.5,819.23,118.45,819.69,108.9,820.14,99.34,820.7,90.91,818.17,91.19,814.94,91.83,811.7,92.48,808.33,93.25,804.95,94.02,801.72,94.81,798.49,95.59,795.95,96.16,771.49,102.91,755.54,109.55,739.59,116.2,730.24,123.44,720.88,130.68,717.17,138.87,713.45,147.06,713.45,156.91,713.45,159.44,713.72,162.1,713.99,164.76,714.49,167.5,714.98,170.24,715.67,173.04,716.36,175.84,717.2,178.66,703.7,184.66,700.61,175.09,697.06,168.3,693.51,161.5,690.49,155.59,687.46,149.69,685.46,143.74,683.45,137.78,683.45,129.91,683.45,120.06,686.19,111.44,688.92,102.81,694.61,95.78,700.31,88.75,709.08,83.5,717.86,78.25,729.95,75.16,741.49,72.34,753.06,69.57,764.64,66.79,775.33,64.19,786.02,61.59,795.35,59.23,804.67,56.88,811.7,54.91,813.39,54.34,815.06,53.78,816.72,53.22,818.27,52.66,819.81,52.09,821.2,51.53,822.58,50.97,823.7,50.41,823.99,43.38,824.37,34.59,824.76,25.8,825.11,16.66,825.46,7.52,825.71,-1.27,825.95,-10.06,825.95,-17.09,825.95,-32.84,823.38,-42.03,820.8,-51.22,815.45,-55.72,810.11,-60.22,801.91,-60.97,793.7,-61.72,782.45,-60.59,780.95,-67.34,784.61,-71.28,789.06,-74.59,793.52,-77.89,798.58,-80.28,803.64,-82.67,809.22,-84.01,814.8,-85.34,820.7,-85.34,830.83,-85.34,842.53,-81.26,854.22,-77.19,864.2,-70.16,874.19,-63.12,880.82,-53.7,887.45,-44.28,887.45,-33.59,887.45,-26.56,885.6,-21.73,883.75,-16.91,881.08,-11.84,878.41,-6.78,875.43,-0.26,872.45,6.25,870.2,16.66,869.64,20.03,869.21,23.96,868.78,27.88,868.42,31.75,868.07,35.62,867.78,39.12,867.49,42.63,867.2,45.16,872.27,48.81,877,52.4,881.74,55.99,885.39,59.78,889.05,63.58,891.25,67.73,893.45,71.88,893.45,76.66,893.45,81.72,890.37,85.88,887.29,90.04,882.86,94.75,878.43,99.46,873.52,105.45,868.61,111.44,864.95,120.16,862.14,127.47,860.34,134.01,858.53,140.55,857.27,147.16,856,153.77,855.04,160.87,854.08,167.97,852.95,176.41,884.74,143.78,919.15,116.97,953.57,90.16,986.55,71.03,1019.53,51.91,1049.02,41.41,1078.52,30.91,1100.45,30.91,1134.49,30.63,1154.09,40.93,1173.7,51.23,1183.61,68.31,1193.53,85.4,1196.12,107.37,1198.7,129.34,1198.7,152.41,1198.7,180.16,1198.705,180.157] ) );
    shape.graphics.endFill();

    return shape;
  },
  "続く" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,2,2,1,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,2,2,2,1,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [150.87,77.08,158.43,79.28,165.16,81.59,171.89,83.91,177.93,86.34,183.96,88.78,189.35,91.34,194.75,93.9,199.62,96.58,204.98,83.42,211.05,67.99,217.11,52.56,223.26,36.05,229.42,19.54,235.36,2.53,241.3,-14.49,246.42,-30.82,310.12,-6.77,309.14,-4.09,307.47,-2.14,305.79,-0.19,303.05,1.03,300.31,2.25,296.32,2.74,292.33,3.23,286.72,2.98,278.68,16.15,269.67,29.83,260.66,43.51,251.21,56.85,241.77,70.2,232.15,82.78,222.53,95.36,213.27,106.33,220.1,111.69,224.91,117.33,229.72,122.97,232.77,128.51,235.82,134.06,237.22,139.33,238.62,144.6,238.62,149.23,238.62,154.59,237.12,159.12,235.61,163.65,232.93,166.94,230.25,170.24,226.56,172.08,222.86,173.93,218.47,173.93,216.52,173.93,214.56,173.45,212.6,172.98,210.59,172.06,208.58,171.15,206.5,169.82,204.42,168.49,202.22,166.78,200.03,156.3,194.39,144.63,188.75,132.96,181.02,121.69,173.28,110.42,164.11,100.33,154.94,90.25,145.67,82.93,150.87,77.08,150.871,77.082,241.87,355.28,241.38,357.96,240.17,360.03,238.97,362.1,236.59,363.57,234.21,365.03,230.44,365.88,226.68,366.73,221.07,366.98,215.46,388.19,208.45,409.47,201.43,430.76,193.2,450.5,184.97,470.25,175.64,487.63,166.31,505.02,156.07,518.43,145.67,513.23,151.76,498.12,157.52,478.38,163.28,458.65,168.34,436.28,173.4,413.92,177.57,389.92,181.75,365.92,184.67,342.28,241.87,355.28,241.87,355.279,382.92,73.83,381.94,75.78,380.59,77.14,379.24,78.5,377.47,79.36,375.71,80.21,373.5,80.6,371.3,80.98,368.62,80.98,367.4,80.98,366.06,80.96,364.72,80.94,363.26,80.82,361.79,80.7,360.21,80.43,358.62,80.17,356.92,79.68,344.97,98.69,329.76,120.73,314.55,142.77,297.61,165.81,280.67,188.84,262.77,211.85,244.88,234.87,227.57,255.83,239.51,255.34,252.26,254.84,265,254.35,278.35,253.8,291.7,253.25,305.54,252.63,319.38,252.01,333.52,251.28,330.35,244.45,326.74,237.71,323.14,230.97,319.3,224.63,315.46,218.29,311.49,212.52,307.52,206.76,303.62,201.88,310.77,196.68,333.44,208.38,348.66,220.58,363.88,232.78,373.09,244.54,382.29,256.3,386.18,267.15,390.07,278.01,390.07,287.03,390.07,293.37,388.36,298.63,386.65,303.89,383.73,307.67,380.8,311.45,376.9,313.54,373,315.63,368.62,315.63,366.42,315.63,364.23,315.12,362.04,314.61,359.84,313.52,357.65,312.42,355.45,310.69,353.26,308.97,351.07,306.53,350.58,301.9,349.61,296.92,348.65,291.95,347.25,286.7,345.85,281.46,344.03,276,342.21,270.54,340.02,264.93,334.65,266.15,329.14,267.27,323.62,268.38,317.84,269.48,312.05,270.58,305.92,271.69,299.8,272.81,293.22,274.03,293.22,558.73,293.22,559.95,290.67,562.13,288.12,564.31,283.55,566.45,278.98,568.58,272.65,570.15,266.32,571.73,258.77,571.73,252.92,571.73,252.92,281.18,182.07,293.53,180.61,296.7,178.8,299.04,176.99,301.39,174.92,303.04,172.85,304.68,170.55,305.69,168.26,306.69,165.82,307.18,146.97,257.13,152.33,257.13,158.98,257.12,165.64,257.11,173.37,257.05,181.11,256.99,189.84,256.86,198.56,256.72,208.07,256.48,222.45,232.59,237.8,205.37,253.14,178.16,267.95,150.37,282.76,122.58,296.27,95.61,309.79,68.63,320.52,45.23,382.92,73.83,382.918,73.832,323.12,342.93,341.4,355.85,353.84,368.61,366.28,381.38,373.9,393.38,381.52,405.39,384.82,416.33,388.12,427.27,388.12,436.53,388.12,444.33,386.1,450.69,384.08,457.04,380.73,461.55,377.37,466.06,373.04,468.52,368.7,470.98,364.07,470.98,361.88,470.98,359.59,470.37,357.3,469.76,355.05,468.54,352.8,467.32,350.63,465.49,348.47,463.67,346.52,461.23,346.76,447.82,344.19,432.37,341.62,416.93,337.18,401.51,332.73,386.09,326.87,371.74,321.01,357.39,314.67,346.18,323.12,342.93,323.119,342.929,545.42,314.98,544.93,318.64,543.27,321.04,541.62,323.45,538.51,324.97,535.4,326.5,530.7,327.32,526,328.14,519.42,328.63,516.25,365.68,507.44,401.52,498.64,437.36,480.66,469.11,462.68,500.86,433.77,527.07,404.86,553.28,361.47,571.08,355.62,560.03,391.45,541.01,414.64,513.67,437.82,486.33,451.41,453.43,465,420.52,470.52,383.43,476.03,346.34,476.52,307.83,545.42,314.98,545.417,314.979,672.17,311.73,673.87,306.12,675.88,298.5,677.89,290.87,679.97,282.4,682.04,273.93,684.05,265.2,686.06,256.48,687.77,248.68,453.77,248.68,453.77,262.33,451.27,274.39,448.77,286.46,443.53,295.48,438.29,304.5,430.19,309.74,422.08,314.98,410.87,314.98,405.02,314.98,401.04,313.22,397.06,311.46,394.62,308.72,392.18,305.98,391.13,302.64,390.07,299.3,390.07,296.13,390.07,292.72,391.23,289.24,392.38,285.77,394.46,282.48,396.53,279.19,399.39,276.2,402.26,273.22,405.67,270.78,411.28,266.39,416.74,259.07,422.2,251.75,426.47,242.91,430.73,234.07,433.27,224.44,435.81,214.8,435.57,205.78,447.27,205.78,448.24,209.43,449.09,212.97,449.93,216.5,450.6,219.92,451.27,223.33,451.75,226.62,452.22,229.91,452.47,233.08,683.87,233.08,709.22,207.08,756.02,252.58,754.31,254.28,751.97,255.42,749.64,256.56,746.59,257.29,743.54,258.02,739.75,258.43,735.95,258.83,731.32,259.08,726.68,265.17,720.49,272.86,714.29,280.55,707.59,288.41,700.89,296.27,694.21,303.59,687.52,310.92,681.92,316.28,672.17,311.73,672.166,311.729,398.52,67.33,393.97,51.73,544.77,51.73,544.77,-29.52,613.67,-23.67,613.42,-20.26,611.97,-17.75,610.52,-15.24,607.41,-13.35,604.3,-11.46,599.32,-10.05,594.33,-8.64,587.02,-7.42,587.02,51.73,666.97,51.73,696.22,14.68,751.47,53.68,749.52,57.34,747.06,59.93,744.6,62.52,741.07,64.16,737.53,65.81,732.64,66.57,727.74,67.33,720.92,67.33,587.02,67.33,587.02,149.23,653.97,149.23,680.62,114.13,733.27,151.18,731.31,154.84,728.87,157.43,726.42,160.01,722.95,161.66,719.47,163.31,714.71,164.07,709.95,164.83,703.37,164.83,414.12,164.83,409.57,149.23,544.77,149.23,544.77,67.33,398.52,67.33,398.518,67.332,733.92,442.38,733.92,518.43,740.01,520.62,743.72,522.22,747.42,523.81,749.43,525.33,751.45,526.86,752.11,528.57,752.77,530.29,752.77,532.73,752.77,538.82,749.68,543.44,746.59,548.06,739.77,551.17,732.94,554.28,722.05,555.85,711.17,557.43,695.57,557.43,637.72,557.43,621.87,557.43,612.17,555.13,602.48,552.84,597.17,546.86,591.87,540.89,590.1,530.55,588.32,520.21,588.32,504.13,588.32,296.13,650.72,301.98,650.23,304.9,649.1,307.04,647.98,309.17,645.6,310.75,643.22,312.34,639.29,313.5,635.36,314.65,629.27,315.63,629.27,504.78,629.27,511.11,629.55,514.65,629.84,518.18,631.05,519.89,632.27,521.6,634.75,521.96,637.23,522.33,641.62,522.33,693.62,522.33,696.3,522.33,698.42,522.01,700.54,521.7,702.31,520.78,704.08,519.87,705.59,518.21,707.1,516.56,708.57,513.88,709.79,511.2,711.79,504.08,713.79,496.96,716.28,487.15,718.78,477.34,721.64,465.71,724.49,454.08,727.42,442.38,733.92,442.38,733.916,442.378] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [976.21,162.16,979.59,156.81,983.64,152.86,987.7,148.91,992.34,146.31,996.98,143.71,1002.16,142.43,1007.34,141.16,1012.96,141.16,1028.15,141.16,1045.4,146.44,1062.65,151.73,1077.27,160.38,1091.9,169.02,1101.55,180.07,1111.21,191.13,1111.21,202.66,1111.21,208,1107.45,211.7,1103.69,215.41,1097.43,218.78,1091.17,222.16,1083.05,225.86,1074.93,229.56,1066.21,234.91,1042.59,249.53,1009.12,273.8,975.65,298.07,941.9,324.44,908.15,350.81,878.9,375.5,849.65,400.19,834.46,415.66,829.68,420.44,825.8,426.2,821.92,431.97,819.18,438.16,816.44,444.34,814.95,450.67,813.46,457,813.46,462.91,813.46,469.66,817.15,476.15,820.84,482.64,828.37,489.53,835.89,496.42,847.32,504.04,858.74,511.66,874.21,520.66,936.09,556.09,984.95,593.06,1033.82,630.02,1067.71,663.34,1101.6,696.67,1119.53,723.79,1137.46,750.91,1137.46,766.66,1137.46,773.97,1135.43,780.51,1133.41,787.05,1129.68,791.97,1125.95,796.89,1120.69,799.77,1115.43,802.66,1108.96,802.66,1104.46,802.66,1099.25,799.74,1094.03,796.82,1088.62,791.69,1083.2,786.56,1077.85,779.56,1072.49,772.56,1067.71,764.41,1052.52,738.53,1028.91,708.51,1005.3,678.49,974.99,647.97,944.69,617.45,908.56,588.27,872.43,559.09,832.21,534.91,820.12,527.31,810.52,519.33,800.92,511.35,794.24,502.56,787.56,493.77,784.01,483.97,780.46,474.16,780.46,462.91,780.46,454.19,782.52,445.54,784.59,436.89,788.52,428.59,792.46,420.3,798.18,412.49,803.9,404.69,811.21,397.66,827.24,381.06,851.5,358.27,875.76,335.48,902.34,311.5,928.91,287.52,954.86,264.87,980.8,242.22,1000.21,225.91,1005.84,221.13,1010.41,215.92,1014.98,210.72,1018.21,205.66,1021.45,200.59,1023.2,195.95,1024.96,191.31,1024.96,187.66,1024.96,181.19,1019.92,176.65,1014.88,172.12,1007.71,169.38,1000.54,166.63,992.69,165.61,984.84,164.59,979.21,165.16,976.21,162.16,976.211,162.157] ) );
    shape.graphics.endFill();

    return shape;
  },
  "ニュース" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [41.32,421.29,42.52,421.29,43.8,421.28,45.07,421.28,46.42,421.24,47.77,421.2,49.2,421.12,50.62,421.04,52.12,420.89,74.92,419.39,102.08,417.74,129.23,416.09,156.27,414.59,183.31,413.09,207.99,411.89,232.67,410.69,250.52,410.09,256.82,409.64,261.77,408.9,266.72,408.17,270.92,406.89,275.12,405.62,278.87,403.68,282.62,401.74,286.52,398.89,294.47,400.54,302.96,403.61,311.46,406.68,318.47,410.54,325.48,414.4,330,418.75,334.52,423.09,334.52,427.29,334.52,429.69,333.48,431.74,332.44,433.79,330.72,435.29,328.99,436.79,326.76,437.64,324.52,438.49,322.12,438.49,317.62,438.49,311.44,437.35,305.26,436.21,297.57,434.79,289.88,433.36,280.78,432.08,271.67,430.79,261.32,430.49,259.07,430.49,256.68,430.43,254.28,430.36,251.77,430.29,249.26,430.21,246.64,430.15,244.02,430.09,241.32,430.09,222.87,430.09,200.17,430.8,177.47,431.5,153.62,433.04,129.77,434.58,106.32,437.01,82.87,439.44,62.92,442.89,56.02,444.09,51.33,445.61,46.65,447.14,43.12,448.49,39.6,449.84,36.71,450.76,33.82,451.69,30.52,451.69,25.87,451.69,19.23,447.7,12.59,443.72,6.47,437.79,0.36,431.87,-3.96,425.03,-8.28,418.19,-8.28,412.49,-8.28,410.09,-7.65,407.6,-7.03,405.12,-5.98,403.09,-4.93,401.07,-3.55,399.78,-2.18,398.49,-0.68,398.49,2.32,404.94,6.39,409.31,10.46,413.68,15.67,416.34,20.88,419,27.28,420.15,33.67,421.29,41.32,421.29,41.322,421.289,228.12,253.69,186.27,256.84,158.5,258.92,130.72,261,113.92,262.24,97.12,263.48,89.75,263.99,82.37,264.49,81.32,264.49,75.62,264.49,69.03,262.02,62.45,259.55,56.82,255.54,51.2,251.53,47.46,246.44,43.72,241.34,43.72,236.09,43.72,234.74,44.02,232.55,44.31,230.35,44.87,228.14,45.43,225.93,46.25,224.11,47.07,222.29,48.12,221.69,51.12,226.94,55.64,230.91,60.16,234.88,66.27,237.54,72.38,240.2,80.13,241.55,87.87,242.89,97.32,242.89,106.92,242.89,121.5,242.23,136.07,241.57,151.82,240.29,167.57,239.02,182.59,237.15,197.62,235.29,208.12,232.89,212.47,231.84,216.51,230.25,220.56,228.65,223.97,226.74,227.38,224.83,230,222.71,232.62,220.59,234.12,218.49,240.72,219.39,248.29,221.37,255.87,223.35,262.32,226.24,268.77,229.13,273.04,232.84,277.32,236.54,277.32,240.89,277.32,245.24,273.91,247.39,270.49,249.54,264.12,250.59,257.74,251.64,248.63,252.14,239.52,252.64,228.12,253.69,228.119,253.692] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [522.6,363.91,519.3,364.06,506.31,365.46,493.33,366.86,477.8,369.11,462.28,371.36,447.79,374.26,433.3,377.16,427,380.31,425.2,381.21,423.86,381.76,422.51,382.31,421.35,382.61,420.19,382.91,419.07,383.01,417.95,383.11,416.6,383.11,412.1,383.11,407.41,379.98,402.73,376.84,398.9,372.11,395.08,367.39,392.64,361.85,390.2,356.31,390.2,351.51,390.2,348.81,390.8,346.69,391.39,344.56,392.55,342.91,393.71,341.26,395.43,340.04,397.15,338.81,399.4,337.91,399.4,345.26,402.37,349.25,405.34,353.23,409.35,355.06,413.36,356.9,417.46,357.21,421.55,357.51,423.8,357.51,424.85,357.51,434.76,357.03,444.66,356.55,458.35,355.76,472.04,354.98,486.97,353.97,501.9,352.96,513,351.91,515.4,351.61,517.23,351.05,519.06,350.48,520.45,349.76,521.84,349.05,522.84,348.26,523.85,347.46,524.6,346.71,526.1,345.06,527.42,343.55,528.75,342.03,530.1,340.86,531.45,339.7,532.92,339.01,534.4,338.31,536.2,338.31,538.15,338.31,542.71,341,547.26,343.68,551.95,347.46,556.64,351.25,560.22,355.36,563.8,359.46,563.8,362.31,563.8,363.96,562.76,365.21,561.71,366.45,560.25,367.46,558.79,368.48,557.22,369.34,555.65,370.21,554.6,371.11,553.1,372.31,552.2,373.48,551.3,374.65,550.7,376.26,550.1,377.88,549.65,380.17,549.2,382.46,548.6,385.91,547.4,396.41,545.34,410.01,543.27,423.6,540.8,437.96,538.33,452.32,535.66,466.29,533,480.26,530.6,491.51,545,491.51,553.73,491.38,562.46,491.25,567.75,490.46,573.04,489.67,575.99,487.97,578.95,486.26,581.8,483.11,587.8,485.36,594.24,488.3,600.67,491.24,606,494.61,611.32,497.99,614.76,501.67,618.2,505.36,618.2,509.11,618.2,511.21,617.35,512.66,616.5,514.11,615,515.01,613.5,515.91,611.45,516.31,609.4,516.71,607,516.71,602.65,516.71,599.26,515.86,595.87,515,591.6,513.76,587.32,512.52,581.24,511.14,575.15,509.76,565.4,508.71,562.1,508.41,558.08,508.12,554.06,507.84,549.45,507.61,544.84,507.39,539.69,507.25,534.55,507.11,529,507.11,516.25,507.11,501.59,507.63,486.92,508.15,471.4,509.16,455.88,510.17,440.01,511.67,424.15,513.16,409,515.11,406.3,515.56,403.63,516.15,400.96,516.74,398.45,517.41,395.94,518.09,393.64,518.82,391.35,519.56,389.4,520.31,388.2,520.76,386.74,521.63,385.28,522.5,383.7,523.36,382.13,524.22,380.51,524.87,378.9,525.51,377.4,525.51,372,525.51,366.64,522.32,361.28,519.14,357,514.41,352.73,509.69,350.06,504.25,347.4,498.81,347.4,494.31,347.4,492.51,347.74,490.49,348.09,488.46,348.95,486.51,349.81,484.56,351.28,482.84,352.75,481.11,355,479.91,356.2,480.31,357.25,487.21,361.04,490.95,364.83,494.69,369.4,496.41,373.98,498.14,378.36,498.42,382.75,498.71,385,498.71,387.55,498.71,404.94,497.76,422.33,496.81,443.4,495.61,464.47,494.41,483.66,493.31,502.85,492.21,509,491.91,511.25,477.66,513.68,459.96,516.11,442.25,518.25,424.66,520.39,407.08,521.99,391.39,523.6,375.71,524.2,365.51,522.6,363.91,522.6,363.914] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [865.2,282.51,875.1,282.51,883,282.01,890.9,281.51,896.9,280.91,902.9,280.31,907.05,279.81,911.2,279.31,913.6,279.31,920.8,279.31,928.57,280.53,936.35,281.75,942.8,283.96,949.25,286.18,953.42,289.27,957.6,292.36,957.6,296.11,957.6,298.66,956.23,300.61,954.86,302.55,952.05,303.86,949.23,305.18,944.94,305.85,940.65,306.51,934.8,306.51,932.1,306.51,929.2,306.51,926.3,306.5,923.3,306.46,920.3,306.43,917.25,306.35,914.2,306.26,911.2,306.11,904.75,305.81,896,305.65,887.25,305.49,877.5,305.41,867.75,305.34,857.65,305.33,847.55,305.31,838.4,305.31,820.7,305.31,794.18,305.43,767.66,305.54,741.45,306.21,715.24,306.89,693.89,308.35,672.55,309.81,665.2,312.51,663.25,313.26,661.27,314.3,659.3,315.33,657.2,316.26,655.1,317.2,652.83,317.86,650.55,318.51,648,318.51,642.6,318.51,635.49,314.39,628.38,310.26,622,304.11,615.63,297.96,611.21,290.84,606.8,283.72,606.8,277.72,606.8,274.12,607.26,271.22,607.71,268.31,608.65,265.92,609.59,263.52,611.02,261.52,612.45,259.52,614.4,257.72,617.2,257.32,618.85,265.27,622.82,270.2,626.79,275.13,633.95,277.86,641.11,280.6,651.91,281.56,662.7,282.51,678,282.51,865.2,282.51,865.197,282.514] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [963,489.11,999.15,467.96,1034.54,437.01,1069.93,406.06,1100.3,370.81,1130.67,335.56,1153.91,298.76,1177.15,261.96,1189,229.12,1189.15,228.52,1189.29,228.05,1189.44,227.59,1189.55,227.22,1189.66,226.84,1189.73,226.53,1189.8,226.22,1189.8,225.92,1189.8,225.32,1189.57,224.87,1189.34,224.42,1188.85,224.12,1188.36,223.82,1187.61,223.67,1186.85,223.52,1185.8,223.52,1183.85,223.52,1170.74,224.81,1157.62,226.12,1140,228.22,1122.37,230.32,1103.56,232.97,1084.75,235.62,1071.4,238.32,1067.65,239.07,1065,239.82,1062.34,240.58,1060.35,241.37,1058.36,242.15,1056.83,242.98,1055.3,243.82,1053.8,244.72,1052.45,245.62,1051.31,246.54,1050.16,247.47,1048.85,248.22,1047.54,248.97,1045.87,249.44,1044.2,249.92,1041.8,249.92,1036.55,249.92,1030.27,246.3,1023.99,242.69,1018.55,237.22,1013.11,231.74,1009.46,225.28,1005.8,218.82,1005.8,213.12,1005.8,208.77,1007.13,205.78,1008.46,202.8,1010.15,200.97,1011.84,199.13,1013.4,198.32,1014.95,197.52,1015.4,197.52,1016.15,205.47,1020.31,209.77,1024.46,214.08,1030.35,216.07,1036.24,218.05,1043.02,218.38,1049.8,218.72,1055.8,218.72,1060.15,218.72,1076.21,217.73,1092.26,216.74,1111.95,215.32,1131.64,213.89,1150.92,212.3,1170.2,210.72,1181,209.52,1183.4,209.07,1185.12,208.53,1186.84,207.99,1188.15,207.32,1189.46,206.64,1190.51,205.8,1191.55,204.97,1192.6,203.92,1193.8,202.72,1195.25,201.44,1196.7,200.17,1198.2,199.12,1199.7,198.07,1201.15,197.39,1202.6,196.72,1203.8,196.72,1206.8,196.72,1212.55,200,1218.3,203.29,1224,207.72,1229.7,212.14,1233.95,216.63,1238.2,221.12,1238.2,223.52,1238.2,225.77,1237.29,227.27,1236.39,228.77,1234.85,229.82,1233.31,230.87,1231.28,231.62,1229.25,232.37,1227,233.12,1224.9,234.02,1223.17,235.32,1221.44,236.62,1220.05,238.12,1218.66,239.62,1217.61,241.22,1216.55,242.82,1215.8,244.32,1210.85,253.92,1202.97,267.65,1195.09,281.39,1185.75,296.32,1176.41,311.24,1166.36,325.88,1156.3,340.52,1147,351.92,1160.95,359.42,1176.06,368.58,1191.16,377.74,1205.45,387.41,1219.74,397.09,1232.22,406.7,1244.7,416.31,1253.4,424.71,1260,431.31,1266.01,438.15,1272.02,444.99,1276.6,451.51,1281.17,458.04,1283.88,463.98,1286.6,469.91,1286.6,474.71,1286.6,478.61,1285.44,482.22,1284.28,485.84,1282.15,488.61,1280.01,491.39,1276.98,493.05,1273.95,494.71,1270.2,494.71,1266.75,494.71,1263.47,492.24,1260.2,489.77,1256.6,485.16,1253,480.55,1248.82,473.96,1244.65,467.36,1239.4,459.11,1233.1,449.36,1221.56,436.11,1210.02,422.86,1196,409.21,1181.97,395.56,1166.84,383.06,1151.7,370.56,1138.2,362.31,1124.55,378.81,1106.13,397.39,1087.71,415.96,1065.85,434.11,1043.99,452.26,1019.35,468.74,994.7,485.21,968.6,497.51,963,489.11,963.002,489.111] ) );
    shape.graphics.endFill();

    return shape;
  },
  "回り" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,1,2,2,2,2,2,1,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [669.42,-85.36,734.67,-36.61,732.7,-34.36,729.41,-32.16,726.12,-29.95,721.83,-27.99,717.54,-26.02,712.42,-24.38,707.3,-22.74,701.67,-21.61,701.67,528.14,701.67,528.98,699.12,532.14,696.56,535.29,690.8,538.73,685.03,542.18,675.73,544.91,666.42,547.64,652.92,547.64,652.92,492.89,162.42,492.89,162.42,536.39,162.42,536.67,161.14,539.87,159.87,543.07,155.01,546.8,150.16,550.52,140.59,553.58,131.01,556.64,114.42,556.64,114.42,-78.61,167.67,-53.11,645.42,-53.11,669.42,-85.36,669.422,-85.361,162.42,474.89,652.92,474.89,652.92,-35.11,162.42,-35.11,162.42,474.89,162.421,474.889,512.67,69.89,576.42,115.64,574.45,117.61,571.39,119.66,568.34,121.71,564.33,123.61,560.32,125.51,555.43,127.14,550.55,128.76,544.92,129.89,544.92,351.89,544.92,352.45,542.09,355.1,539.25,357.75,533.48,360.7,527.72,363.65,518.98,366.02,510.23,368.39,498.42,368.39,498.42,322.64,308.67,322.64,308.67,358.64,308.67,358.64,307.22,361.1,305.76,363.56,300.98,366.51,296.2,369.47,287.16,371.93,278.11,374.39,262.92,374.39,262.92,76.64,313.17,99.14,490.92,99.14,512.67,69.89,512.671,69.889,308.67,304.64,498.42,304.64,498.42,117.14,308.67,117.14,308.67,304.64,308.671,304.639] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [778.26,239.86,779.95,236.49,783.38,233.6,786.82,230.72,791.1,228.61,795.39,226.5,800.09,225.31,804.79,224.11,809.01,224.11,819.7,224.11,831.11,229.75,842.53,235.38,851.95,245.02,861.37,254.65,867.44,267.46,873.51,280.27,873.51,294.61,873.51,300.52,871.38,306.4,869.25,312.28,866.01,318.05,862.78,323.81,858.96,329.42,855.14,335.02,851.76,340.36,841.35,358.36,833.14,380.69,824.93,403.01,819.23,426.14,813.53,449.28,810.52,471.46,807.51,493.64,807.51,511.36,807.51,516.42,807.79,521.04,808.07,525.66,808.64,529.74,809.2,533.81,810.04,537.31,810.89,540.8,812.01,543.61,813.51,543.61,824.48,512.95,843.43,471.97,862.38,430.99,888.6,394.08,914.83,357.17,947.98,331.51,981.14,305.86,1020.51,305.86,1029.79,305.86,1040.22,307.84,1050.65,309.82,1061.2,313.83,1071.75,317.84,1081.89,323.9,1092.04,329.95,1100.76,338.11,1115.1,351.89,1126.28,371.2,1137.46,390.52,1145.2,416.11,1152.93,441.7,1157.08,473.95,1161.23,506.2,1161.51,545.86,1161.51,605.2,1145.06,657.72,1128.6,710.23,1090.64,752.77,1052.67,795.31,990.65,826.3,928.64,857.3,837.51,873.61,829.26,857.86,899.85,840.99,952.16,811.19,1004.46,781.38,1038.98,741.52,1073.5,701.65,1090.51,653.15,1107.51,604.64,1107.51,550.36,1107.51,514.08,1105.46,483.85,1103.41,453.61,1098.42,429.42,1093.43,405.24,1085.05,387.1,1076.67,368.95,1064.01,356.86,1058.67,351.52,1052.5,347.22,1046.34,342.92,1039.45,339.89,1032.56,336.87,1024.99,335.24,1017.42,333.61,1009.26,333.61,976.64,333.61,948.56,357.19,920.48,380.77,898.26,417.61,876.04,454.45,860.34,499.41,844.64,544.36,836.76,587.11,837.6,592.17,838.41,597.46,839.22,602.74,839.85,608.02,840.49,613.29,840.87,618.44,841.26,623.58,841.26,628.36,841.26,634.55,840.5,639.78,839.74,645,837.98,648.8,836.22,652.6,833.35,654.73,830.48,656.86,826.26,656.86,811.92,656.86,800.87,645.1,789.82,633.33,782.29,616.17,774.77,599.02,770.89,579.66,767.01,560.3,767.01,545.11,767.01,496.45,774.04,456.83,781.07,417.21,789.51,385.64,797.95,354.07,804.98,330.06,812.01,306.05,812.01,288.61,812.01,274.83,808.66,265.72,805.31,256.62,800.39,251.2,795.46,245.79,789.86,243.58,784.26,241.36,779.76,241.36,778.26,239.86,778.261,239.861] ) );
    shape.graphics.endFill();

    return shape;
  },
  "続け" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,2,2,1,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,2,2,2,1,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-38.75,234.39,-30.03,236.92,-22.26,239.59,-14.49,242.26,-7.53,245.08,-0.57,247.89,5.65,250.84,11.88,253.8,17.5,256.89,23.69,241.7,30.68,223.9,37.68,206.1,44.78,187.05,51.88,167.99,58.74,148.36,65.59,128.73,71.5,109.89,145,137.64,143.88,140.73,141.94,142.98,140.01,145.23,136.84,146.64,133.68,148.05,129.07,148.61,124.47,149.17,118,148.89,108.72,164.08,98.32,179.86,87.93,195.65,77.03,211.05,66.13,226.44,55.04,240.96,43.94,255.48,33.25,268.14,41.13,274.33,46.68,280.83,52.23,287.33,55.75,293.73,59.27,300.13,60.88,306.21,62.5,312.3,62.5,317.64,62.5,323.83,60.77,329.05,59.03,334.28,55.94,338.08,52.84,341.87,48.58,344.01,44.31,346.14,39.25,346.14,37,346.14,34.74,345.59,32.48,345.04,30.16,343.98,27.84,342.93,25.43,341.39,23.03,339.86,20.5,337.89,17.97,325.8,11.46,312.33,4.96,298.87,-3.97,285.86,-12.9,272.85,-23.48,261.21,-34.06,249.58,-44.75,241.14,-38.75,234.39,-38.75,234.389,66.25,555.39,65.69,558.48,64.29,560.87,62.9,563.26,60.16,564.95,57.41,566.64,53.07,567.62,48.72,568.61,42.25,568.89,35.78,593.36,27.68,617.92,19.59,642.48,10.09,665.26,0.6,688.05,-10.17,708.11,-20.94,728.17,-32.75,743.64,-44.75,737.64,-37.72,720.2,-31.07,697.43,-24.43,674.66,-18.59,648.86,-12.76,623.05,-7.94,595.36,-3.13,567.67,0.25,540.39,66.25,555.39,66.25,555.389,229,230.64,227.88,232.89,226.32,234.46,224.76,236.03,222.72,237.01,220.68,238,218.14,238.44,215.59,238.89,212.5,238.89,211.09,238.89,209.55,238.87,208,238.84,206.31,238.7,204.63,238.56,202.8,238.26,200.97,237.95,199,237.39,185.22,259.33,167.66,284.76,150.11,310.19,130.56,336.76,111.02,363.34,90.37,389.9,69.72,416.45,49.75,440.64,63.53,440.08,78.24,439.5,92.95,438.93,108.34,438.3,123.74,437.66,139.71,436.95,155.69,436.23,172,435.39,168.34,427.51,164.18,419.73,160.02,411.95,155.59,404.64,151.16,397.33,146.58,390.67,142,384.01,137.5,378.39,145.75,372.39,171.91,385.89,189.47,399.96,207.04,414.04,217.66,427.61,228.27,441.18,232.76,453.71,237.25,466.23,237.25,476.64,237.25,483.95,235.28,490.02,233.31,496.09,229.94,500.45,226.56,504.81,222.06,507.22,217.56,509.64,212.5,509.64,209.97,509.64,207.44,509.05,204.91,508.47,202.38,507.2,199.84,505.94,197.31,503.94,194.78,501.95,192.25,499.14,191.69,493.8,190.57,488.05,189.46,482.31,187.84,476.26,186.23,470.22,184.13,463.91,182.03,457.61,179.5,451.14,173.31,452.55,166.95,453.83,160.59,455.12,153.91,456.39,147.23,457.65,140.16,458.94,133.09,460.23,125.5,461.64,125.5,790.14,125.5,791.55,122.56,794.06,119.62,796.58,114.34,799.05,109.07,801.51,101.77,803.32,94.47,805.14,85.75,805.14,79,805.14,79,469.89,-2.75,484.14,-4.44,487.8,-6.52,490.5,-8.61,493.21,-11,495.11,-13.39,497.01,-16.04,498.17,-18.69,499.33,-21.5,499.89,-43.25,442.14,-37.06,442.14,-29.39,442.13,-21.71,442.12,-12.78,442.05,-3.85,441.97,6.21,441.82,16.28,441.67,27.25,441.39,43.84,413.83,61.55,382.42,79.26,351.01,96.34,318.95,113.43,286.89,129.03,255.76,144.63,224.64,157,197.64,229,230.64,229,230.639,160,541.14,181.09,556.05,195.45,570.78,209.8,585.51,218.59,599.36,227.38,613.21,231.19,625.83,235,638.45,235,649.14,235,658.14,232.67,665.47,230.34,672.81,226.47,678.01,222.6,683.22,217.6,686.05,212.59,688.89,207.25,688.89,204.72,688.89,202.08,688.19,199.45,687.48,196.84,686.08,194.24,684.67,191.75,682.56,189.25,680.45,187,677.64,187.28,662.17,184.32,644.35,181.35,626.52,176.22,608.73,171.09,590.94,164.32,574.39,157.56,557.83,150.25,544.89,160,541.14,160,541.139,416.5,508.89,415.94,513.11,414.03,515.89,412.12,518.66,408.53,520.42,404.95,522.18,399.52,523.13,394.09,524.08,386.5,524.64,382.84,567.39,372.68,608.74,362.52,650.1,341.78,686.73,321.04,723.37,287.68,753.61,254.31,783.86,204.25,804.39,197.5,791.64,238.84,769.7,265.6,738.15,292.35,706.61,308.03,668.64,323.71,630.67,330.07,587.87,336.44,545.08,337,500.64,416.5,508.89,416.5,508.889,562.75,505.14,564.72,498.67,567.04,489.87,569.36,481.07,571.75,471.3,574.14,461.52,576.46,451.46,578.78,441.39,580.75,432.39,310.75,432.39,310.75,448.14,307.87,462.06,304.98,475.98,298.94,486.39,292.89,496.8,283.54,502.84,274.19,508.89,261.25,508.89,254.5,508.89,249.91,506.86,245.31,504.83,242.5,501.67,239.69,498.51,238.47,494.65,237.25,490.8,237.25,487.14,237.25,483.2,238.59,479.19,239.92,475.19,242.31,471.39,244.7,467.59,248.01,464.15,251.31,460.7,255.25,457.89,261.72,452.83,268.02,444.38,274.33,435.93,279.25,425.73,284.17,415.54,287.1,404.42,290.03,393.3,289.75,382.89,303.25,382.89,304.38,387.11,305.35,391.19,306.32,395.26,307.09,399.2,307.87,403.14,308.42,406.94,308.97,410.73,309.25,414.39,576.25,414.39,605.5,384.39,659.5,436.89,657.53,438.86,654.84,440.17,652.14,441.48,648.63,442.33,645.11,443.17,640.73,443.64,636.34,444.11,631,444.39,625.66,451.42,618.51,460.29,611.36,469.16,603.63,478.23,595.89,487.3,588.18,495.75,580.47,504.2,574,510.39,562.75,505.14,562.75,505.139,247,223.14,241.75,205.14,415.75,205.14,415.75,111.39,495.25,118.14,494.97,122.08,493.29,124.97,491.62,127.87,488.03,130.05,484.45,132.22,478.69,133.85,472.94,135.48,464.5,136.89,464.5,205.14,556.75,205.14,590.5,162.39,654.25,207.39,652,211.61,649.16,214.6,646.33,217.58,642.25,219.48,638.17,221.38,632.52,222.26,626.88,223.14,619,223.14,464.5,223.14,464.5,317.64,541.75,317.64,572.5,277.14,633.25,319.89,631,324.11,628.18,327.1,625.35,330.08,621.34,331.98,617.34,333.88,611.84,334.76,606.34,335.64,598.75,335.64,265,335.64,259.75,317.64,415.75,317.64,415.75,223.14,247,223.14,247,223.139,634,655.89,634,743.64,641.03,746.17,645.31,748.01,649.59,749.85,651.91,751.61,654.23,753.37,654.99,755.35,655.75,757.33,655.75,760.14,655.75,767.17,652.19,772.5,648.63,777.83,640.75,781.42,632.88,785.01,620.31,786.82,607.75,788.64,589.75,788.64,523,788.64,504.72,788.64,493.53,785.99,482.34,783.34,476.22,776.45,470.1,769.56,468.05,757.63,466,745.7,466,727.14,466,487.14,538,493.89,537.44,497.26,536.14,499.72,534.84,502.19,532.09,504.01,529.35,505.84,524.82,507.18,520.28,508.51,513.25,509.64,513.25,727.89,513.25,735.2,513.58,739.28,513.91,743.36,515.31,745.33,516.72,747.3,519.58,747.72,522.44,748.14,527.5,748.14,587.5,748.14,590.59,748.14,593.04,747.78,595.49,747.41,597.53,746.36,599.57,745.3,601.32,743.39,603.06,741.48,604.75,738.39,606.16,735.3,608.46,727.08,610.77,718.87,613.66,707.55,616.54,696.22,619.83,682.81,623.13,669.39,626.5,655.89,634,655.89,634,655.889] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [896.25,294.86,889.78,312.3,881.86,332.57,873.94,352.85,866.06,372.67,858.19,392.5,851.11,410.24,844.03,427.99,839.25,440.36,836.44,448.24,833.86,456.7,831.28,465.16,829.31,473.17,827.34,481.19,826.17,488.24,825,495.3,825,500.36,825,502.33,825.7,507.23,826.41,512.13,827.25,517.61,828.09,523.1,828.8,527.99,829.5,532.89,829.5,534.86,829.5,538.8,828.69,542.22,827.88,545.64,825.84,548.17,823.8,550.7,820.32,552.16,816.84,553.61,811.5,553.61,798.56,553.61,783.35,541.96,768.14,530.31,755.06,505.99,741.98,481.66,733.24,444.13,724.5,406.61,724.5,354.86,724.5,330.95,726.55,308.84,728.6,286.73,731.91,266.27,735.21,245.81,739.37,226.93,743.53,208.05,747.75,190.61,752.25,173.17,756.45,157.13,760.64,141.09,763.88,126.39,767.11,111.7,769.05,98.33,771,84.95,771,72.86,771,64.7,769.68,55.12,768.35,45.53,764.91,37.24,761.46,28.94,755.5,23.29,749.53,17.64,740.25,17.36,739.5,14.36,742.59,11.27,745.58,9.36,748.57,7.45,751.59,6.39,754.62,5.34,757.75,4.97,760.88,4.61,764.25,4.61,773.81,4.61,785.32,10.44,796.83,16.26,806.81,27.02,816.8,37.78,823.52,53.02,830.25,68.27,830.25,87.11,830.25,92.17,829.05,96.66,827.86,101.15,825.75,105.58,823.64,110.01,820.76,114.64,817.88,119.27,814.5,124.61,807.47,135.3,798.15,160.29,788.84,185.29,780.47,217.7,772.1,250.12,766.3,286.51,760.5,322.89,760.5,356.36,760.5,375.49,762.2,392.76,763.9,410.03,767.34,423.11,770.79,436.19,776,443.9,781.22,451.61,788.25,451.61,791.91,451.61,803.29,432.81,814.66,414.02,828.66,387.86,842.65,361.7,856.7,333.91,870.75,306.11,879.75,288.11,896.25,294.86,896.25,294.861,1071.75,0.86,1074,-5.61,1077.97,-10.75,1081.95,-15.9,1087.22,-19.48,1092.49,-23.07,1098.86,-24.98,1105.22,-26.89,1112.25,-26.89,1123.22,-26.89,1137.6,-23.49,1151.98,-20.09,1164.84,-13.76,1177.71,-7.44,1186.61,1.59,1195.5,10.61,1195.5,21.86,1195.5,26.92,1194.45,31.4,1193.39,35.88,1192.13,41.36,1190.86,46.85,1189.8,54.13,1188.75,61.42,1188.75,72.11,1188.75,82.52,1189.01,94.61,1189.27,106.7,1189.69,119.92,1190.11,133.14,1190.65,147.2,1191.19,161.27,1191.75,175.61,1203,173.36,1216.82,170.27,1230.63,167.17,1243.22,162.67,1255.8,158.17,1265.26,151.99,1274.72,145.8,1277.25,137.36,1288.78,139.05,1300.54,140.29,1312.29,141.53,1321.78,143.92,1331.27,146.31,1337.26,150.65,1343.25,154.99,1343.25,162.86,1343.25,168.77,1340.25,172.92,1337.25,177.06,1331.63,180.3,1326,183.53,1317.94,186.28,1309.88,189.02,1299.75,192.11,1290.75,194.64,1279.02,197.4,1267.29,200.15,1253.72,202.89,1240.15,205.63,1225.18,208.25,1210.22,210.86,1194.75,213.11,1195.31,229.14,1195.73,245.61,1196.16,262.07,1196.44,279.02,1196.72,295.96,1196.86,313.41,1197,330.86,1197,348.86,1197,394.7,1187.84,434.75,1178.67,474.79,1154.06,508.89,1129.45,542.99,1086.26,571.08,1043.06,599.17,975,621.11,964.5,606.86,1017.66,582.67,1053.7,555.42,1089.75,528.16,1111.69,494.55,1133.63,460.94,1142.95,419.34,1152.28,377.74,1152,324.86,1152,313.33,1151.99,300.32,1151.98,287.31,1151.91,273.67,1151.84,260.03,1151.68,246.18,1151.53,232.33,1151.25,219.11,1137.75,220.8,1123.59,222.06,1109.44,223.33,1095.94,224.17,1082.44,225.02,1070.25,225.44,1058.06,225.86,1048.5,225.86,1032.75,225.86,1017.73,222.02,1002.7,218.17,989.63,211.42,976.55,204.67,966.02,195.49,955.5,186.3,948.75,175.61,957,164.36,966.28,171.39,976.08,176.72,985.88,182.06,996.56,185.64,1007.25,189.23,1019.02,191.04,1030.78,192.86,1044,192.86,1056.38,192.86,1070.86,192.19,1085.34,191.53,1099.69,190.33,1114.03,189.13,1127.11,187.48,1140.19,185.83,1149.75,183.86,1148.91,155.17,1147.72,129.99,1146.54,104.81,1144.78,84.77,1143.02,64.73,1140.57,50.65,1138.13,36.58,1134.75,30.11,1131.09,21.95,1126.01,16.48,1120.92,11.01,1114.88,7.7,1108.83,4.4,1102.05,3.01,1095.28,1.61,1088.25,1.61,1086.56,1.61,1084.75,1.74,1082.93,1.87,1081.03,2.08,1079.13,2.29,1077.18,2.56,1075.22,2.83,1073.25,3.11,1071.75,0.86,1071.75,0.861] ) );
    shape.graphics.endFill();

    return shape;
  },
  "回る" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,1,2,2,2,2,2,1,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [596.5,151.64,661.75,200.39,659.78,202.64,656.49,204.84,653.2,207.05,648.91,209.01,644.62,210.98,639.5,212.62,634.38,214.26,628.75,215.39,628.75,765.14,628.75,765.98,626.2,769.14,623.64,772.29,617.88,775.73,612.11,779.18,602.8,781.91,593.5,784.64,580,784.64,580,729.89,89.5,729.89,89.5,773.39,89.5,773.67,88.22,776.87,86.95,780.07,82.09,783.8,77.24,787.52,67.67,790.58,58.09,793.64,41.5,793.64,41.5,158.39,94.75,183.89,572.5,183.89,596.5,151.64,596.5,151.639,89.5,711.89,580,711.89,580,201.89,89.5,201.89,89.5,711.89,89.5,711.889,439.75,306.89,503.5,352.64,501.53,354.61,498.47,356.66,495.41,358.71,491.41,360.61,487.4,362.51,482.51,364.14,477.63,365.76,472,366.89,472,588.89,472,589.45,469.16,592.1,466.33,594.75,460.56,597.7,454.8,600.65,446.05,603.02,437.31,605.39,425.5,605.39,425.5,559.64,235.75,559.64,235.75,595.64,235.75,595.64,234.3,598.1,232.84,600.56,228.06,603.51,223.28,606.47,214.23,608.93,205.19,611.39,190,611.39,190,313.64,240.25,336.14,418,336.14,439.75,306.89,439.75,306.889,235.75,541.64,425.5,541.64,425.5,354.14,235.75,354.14,235.75,541.64,235.75,541.639] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [863.25,272.25,885.19,259.88,908.96,249.54,932.72,239.2,956.63,231.75,980.53,224.3,1003.74,220.15,1026.94,216,1047.75,216,1103.16,216,1140.55,230.17,1177.95,244.34,1200.66,268.03,1223.37,291.73,1233.06,322.63,1242.75,353.53,1242.75,387,1242.75,425.53,1226.37,459.06,1209.99,492.59,1178.63,517.41,1147.27,542.23,1101.63,556.49,1056,570.75,997.5,570.75,963.47,570.75,935.54,563.14,907.62,555.54,887.72,542.53,867.82,529.52,856.91,512.21,846,494.91,846,475.5,846,457.78,853.63,441.86,861.26,425.93,875.53,413.91,889.81,401.88,910.23,394.82,930.66,387.75,956.25,387.75,982.69,387.75,1007.91,397.44,1033.13,407.13,1052.81,423.09,1072.5,439.05,1084.5,459.57,1096.5,480.09,1096.5,501.75,1096.5,504,1096.23,506.09,1095.96,508.17,1095.47,510,1094.98,511.83,1094.29,513.35,1093.6,514.88,1092.75,516,1113.85,508.97,1131.6,495.5,1149.35,482.04,1162.22,464.53,1175.09,447.02,1182.29,426.67,1189.5,406.31,1189.5,385.5,1189.5,353.72,1181.51,327.01,1173.52,300.3,1155.94,280.97,1138.36,261.63,1110.4,250.82,1082.44,240,1042.5,240,1023.38,240,989.65,246.9,955.92,253.8,917.25,271.03,878.58,288.26,839.79,317.52,801,346.78,771.75,391.5,768.1,397.13,764.22,403.1,760.34,409.08,755.91,414,751.48,418.92,746.33,422.09,741.19,425.25,735,425.25,729.66,425.25,725.01,422.12,720.35,418.99,716.91,414.28,713.46,409.57,711.48,404.05,709.5,398.53,709.5,393.75,709.5,384.75,713.69,376.39,717.87,368.04,723.85,360.66,729.82,353.27,736.4,347.03,742.97,340.78,747.75,336,771.1,312.94,809.5,274.57,847.9,236.2,891.28,192.75,934.67,149.3,977.99,105.87,1021.31,62.44,1054.5,29.25,1056.75,27.28,1058.32,25.59,1059.89,23.91,1060.88,22.5,1061.86,21.09,1062.31,19.97,1062.75,18.84,1062.75,18,1062.75,16.88,1062.21,16.15,1061.67,15.42,1060.69,15,1059.71,14.58,1058.32,14.41,1056.94,14.25,1055.25,14.25,1050.19,14.25,1027.49,18.27,1004.79,22.29,976.6,28.41,948.4,34.52,920.78,41.78,893.16,49.03,878.25,55.5,871.5,58.59,867.38,61.56,863.25,64.52,859.88,66.84,856.5,69.16,852.94,70.58,849.38,72,843.75,72,831.1,72,819.2,65.77,807.31,59.53,798.1,49.69,788.88,39.84,783.32,27.7,777.75,15.56,777.75,3.75,777.75,-0.19,778.58,-4.7,779.42,-9.21,781.6,-13.78,783.78,-18.35,787.56,-22.72,791.35,-27.09,797.25,-30.75,801,-28.5,800.16,-19.5,802.68,-11.81,805.2,-4.13,810.47,1.5,815.74,7.13,823.47,10.31,831.19,13.5,840.75,13.5,858.19,13.5,888.14,10.3,918.1,7.1,949.31,2.53,980.53,-2.04,1007.39,-7.07,1034.25,-12.09,1045.5,-15.75,1050.28,-17.44,1054.53,-20.93,1058.77,-24.42,1062.56,-27.94,1066.36,-31.45,1069.76,-34.1,1073.16,-36.75,1076.25,-36.75,1087.5,-36.75,1099.57,-30.98,1111.64,-25.22,1121.63,-17.06,1131.61,-8.91,1138.06,-0.05,1144.5,8.81,1144.5,15,1144.5,22.03,1140.56,25.7,1136.63,29.37,1129.88,32.53,1123.13,35.7,1114.13,39.79,1105.13,43.88,1095,51.75,1063.5,76.22,1030.57,105.04,997.64,133.85,966.56,163.03,935.49,192.21,907.9,219.76,880.31,247.31,859.5,269.25,863.25,272.25,863.252,272.25,999.75,531.75,1006.5,531.75,1013.6,531.46,1020.71,531.16,1027.88,530.53,1035.05,529.9,1042.15,528.9,1049.25,527.91,1056,526.5,1054.88,525.09,1053.79,523.64,1052.7,522.19,1051.78,520.5,1050.87,518.81,1050.2,516.8,1049.53,514.78,1049.25,512.25,1047.56,492.84,1038.56,475.07,1029.56,457.29,1015.5,443.72,1001.44,430.15,983.44,422.07,965.44,414,945.75,414,931.69,414,919.38,417.93,907.08,421.85,897.94,429.09,888.8,436.34,883.53,446.59,878.25,456.84,878.25,469.5,878.25,488.34,889.43,500.43,900.61,512.51,918.19,519.47,935.77,526.43,957.35,529.09,978.94,531.75,999.75,531.75,999.752,531.75] ) );
    shape.graphics.endFill();

    return shape;
  },
  "見せず" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [614.5,478.61,613.75,578.36,622.19,581.17,627.23,583.17,632.27,585.16,634.94,586.99,637.61,588.81,638.43,590.81,639.25,592.8,639.25,595.61,639.25,602.92,635.09,608.53,630.93,614.13,621.16,617.92,611.38,621.72,595.27,623.67,579.16,625.61,555.25,625.61,413.5,625.61,390.16,625.61,375.64,623.28,361.12,620.95,353.03,614.27,344.95,607.59,342.1,595.55,339.25,583.52,339.25,564.11,339.25,386.36,242.5,386.36,240.81,387.77,238.53,388.89,236.24,390.02,233.22,390.86,230.2,391.7,226.36,392.27,222.53,392.83,217.75,393.11,212.69,435.58,197.75,474.37,182.8,513.16,152.22,545.92,121.63,578.69,72.52,604.26,23.41,629.83,-50,645.86,-56.75,633.11,3.16,616.52,44.32,591.5,85.49,566.48,111.72,534.77,137.95,503.06,151.13,465.52,164.31,427.99,168.25,386.36,112,386.36,112,416.36,112,416.36,110.5,419.17,109,421.99,103.94,425.36,98.88,428.74,89.22,431.55,79.56,434.36,63.25,434.36,63.25,-30.64,116.5,-5.89,463,-5.89,486.25,-36.64,551.5,10.61,549.53,12.86,546.36,15.06,543.18,17.27,539.03,19.24,534.88,21.2,529.88,22.85,524.88,24.49,519.25,25.61,519.25,408.86,519.25,409.7,516.38,412.62,513.51,415.54,507.53,418.7,501.55,421.87,492.36,424.36,483.16,426.86,470.5,426.86,470.5,386.36,406,386.36,404.59,387.2,402.75,387.91,400.91,388.61,398.59,389.17,396.27,389.74,393.45,390.16,390.63,390.58,387.25,390.86,387.25,564.86,387.25,571.89,387.8,575.82,388.35,579.74,391.09,581.64,393.84,583.54,399.59,583.95,405.34,584.36,415.75,584.36,556,584.36,561.63,584.36,565.69,584.07,569.76,583.78,572.78,582.58,575.8,581.38,578.04,578.98,580.28,576.58,582.25,572.36,584.22,568.7,586.86,560.03,589.49,551.36,592.66,538.99,595.82,526.61,599.44,511.19,603.06,495.77,607,478.61,614.5,478.61,614.5,478.611,470.5,12.11,112,12.11,112,116.36,470.5,116.36,470.5,12.11,470.5,12.111,470.5,241.61,470.5,134.36,112,134.36,112,241.61,470.5,241.61,470.5,241.611,112,368.36,470.5,368.36,470.5,259.61,112,259.61,112,368.36,112,368.361] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [626.2,0,627.7,-2.55,629.89,-4.8,632.09,-7.06,634.75,-8.75,637.41,-10.43,640.43,-11.41,643.45,-12.4,646.6,-12.4,653.05,-12.4,660.29,-10.05,667.54,-7.71,673.65,-3.85,679.76,0.02,683.78,4.99,687.8,9.95,687.8,15.2,687.8,18.35,686.96,20.99,686.12,23.62,685,26.35,683.87,29.09,682.74,32.25,681.6,35.4,681,39.6,680.4,43.95,679.75,49.98,679.11,56.02,678.55,62.95,677.99,69.89,677.57,77.35,677.15,84.8,677,92,688.7,88.7,706.1,84.19,723.5,79.68,742.1,75.1,760.7,70.53,778.25,66.46,795.8,62.4,807.8,60,807.65,44.55,807.35,32.75,807.05,20.94,806.6,12.05,806.15,3.17,805.55,-3.17,804.95,-9.5,804.2,-14,802.85,-21.95,798.16,-25.93,793.48,-29.92,788.05,-31.5,782.61,-33.07,777.7,-33.01,772.8,-32.95,771,-32.8,769.8,-35.2,771.15,-37.75,773.28,-40.07,775.42,-42.38,778.2,-44.15,780.97,-45.91,784.31,-46.95,787.65,-48,791.4,-48,799.95,-48,807.45,-45.65,814.96,-43.31,820.55,-39.75,826.13,-36.18,829.36,-31.97,832.6,-27.75,832.6,-24,832.6,-21.9,832.09,-19.61,831.58,-17.32,830.95,-14.4,830.31,-11.47,829.73,-7.68,829.15,-3.9,829,1.2,829,7.2,829,11.1,829.06,16.4,829.13,21.7,829.25,28,829.36,34.3,829.5,41.4,829.65,48.5,829.8,56,839.7,54.35,848.21,52.93,856.73,51.5,863.45,49.7,870.16,47.9,874.85,45.43,879.54,42.95,881.79,39.2,892.59,41,901.19,43.6,909.79,46.2,915.79,49.5,921.79,52.8,924.99,56.75,928.19,60.7,928.19,65.2,928.19,67.6,926.94,69.15,925.69,70.7,923.59,71.6,921.49,72.5,918.74,72.85,915.99,73.2,912.99,73.2,910.59,73.2,904.12,72.76,897.64,72.33,890.29,71.8,882.94,71.28,876.32,70.84,869.69,70.4,866.99,70.4,863.39,70.55,858.76,70.78,854.13,71.01,849.15,71.35,844.16,71.69,839.15,72.15,834.15,72.6,829.8,73.2,829.8,97.6,829.8,107.05,829.05,119.08,828.31,131.11,826.85,142.85,825.38,154.59,823.21,164.59,821.05,174.6,818.2,180,815.2,185.25,812.17,189.34,809.15,193.44,805.7,196.25,802.25,199.06,798.17,200.53,794.1,202,789,202,786.45,202,784.25,200.49,782.06,198.97,780.15,196.8,778.23,194.63,776.56,192.21,774.9,189.8,773.4,188,771.15,185.15,766.63,181.93,762.12,178.71,755.9,175.15,749.67,171.59,742.01,167.69,734.35,163.8,725.8,159.6,729.4,152,739,155.6,747.7,158.8,756.4,162,763.6,164.4,770.8,166.8,776.2,168.2,781.6,169.6,784.6,169.6,791.2,169.6,795.88,163.81,800.56,158.01,803.45,146.35,806.33,134.69,807.49,117.12,808.65,99.55,808.2,76,793.65,78.4,776.31,82.08,758.98,85.76,741.25,90.15,723.51,94.54,706.55,99.34,689.6,104.15,675.8,108.8,675.5,115.7,675.27,124.43,675.05,133.15,674.9,142.6,674.75,152.05,674.67,161.68,674.6,171.3,674.6,180,674.6,204,679.77,219.19,684.95,234.37,696.2,243,707.45,251.62,725.22,254.81,743,258,768.2,258,787.4,258,800.35,257.35,813.3,256.7,821.7,255.5,830.1,254.3,834.8,252.6,839.5,250.9,842.2,248.8,851.8,250.3,858.81,251.94,865.82,253.59,870.4,255.65,874.97,257.71,877.18,260.33,879.39,262.95,879.39,266.4,879.39,271.2,872.96,273.92,866.53,276.65,853.75,278,840.96,279.35,821.85,279.67,802.75,280,777.4,280,745.15,280,722.05,274.77,698.96,269.54,684.15,257.65,669.34,245.76,662.37,226.51,655.4,207.25,655.4,179.2,655.4,175.75,655.34,166.85,655.29,157.95,655.25,147.9,655.21,137.85,655.23,128.8,655.25,119.75,655.4,116,651.5,117.2,646.22,119.23,640.94,121.26,635.65,123.55,630.36,125.84,625.76,128.1,621.15,130.35,618.6,132,615.9,133.5,613.69,134.95,611.47,136.4,609.3,137.6,607.12,138.8,604.76,139.65,602.4,140.5,599.4,140.8,593.7,140.8,587.49,137.19,581.27,133.58,576.1,128.1,570.92,122.63,567.56,116.16,564.2,109.7,564.2,104,564.2,101,564.62,98.3,565.04,95.59,566.05,93.15,567.06,90.71,568.76,88.53,570.45,86.35,573,84.4,574.2,84.8,573.75,86.6,574.94,90.83,576.12,95.05,579.2,99.4,582.27,103.75,587.36,107.08,592.45,110.4,599.8,110.4,603.4,110.4,610.07,109.19,616.74,107.98,624.65,106.1,632.56,104.23,640.81,101.96,649.05,99.7,655.8,97.6,655.95,92.05,656.22,82.72,656.49,73.39,656.75,64.05,657.01,54.72,657.21,47.26,657.4,39.8,657.4,38,657.4,30.05,656.76,24.19,656.11,18.33,654.65,14.2,653.19,10.08,650.82,7.52,648.45,4.95,645,3.6,643.5,2.85,641.06,2.34,638.62,1.82,636,1.55,633.37,1.29,630.94,1.3,628.5,1.3,627,1.6,626.2,0,626.199,0.004] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [893.5,215.75,896.32,209.56,900.45,204.22,904.59,198.88,910.29,194.94,915.98,191,923.35,188.75,930.72,186.5,940,186.5,954.07,186.5,968.02,190.11,981.98,193.72,993.16,199.63,1004.34,205.53,1011.41,213.08,1018.47,220.63,1018.75,228.5,1018.75,233.28,1017.55,237.07,1016.34,240.85,1014.72,244.16,1013.11,247.46,1011.48,250.54,1009.85,253.63,1009,257,1007.88,260.38,1007.15,266.07,1006.43,271.77,1006,280.06,1005.58,288.36,1005.42,299.4,1005.25,310.44,1005.25,324.5,1023.54,323.38,1041.54,322.29,1059.54,321.2,1075.57,320.28,1091.6,319.37,1104.82,318.7,1118.04,318.03,1126.75,317.75,1138.57,317.19,1147.71,316.21,1156.85,315.24,1163.88,313.34,1170.91,311.45,1176.11,308.36,1181.32,305.28,1185.25,300.5,1206.91,306.41,1222.74,311.48,1238.57,316.55,1248.91,321.97,1259.25,327.38,1264.25,333.72,1269.25,340.06,1269.25,348.5,1269.25,351.59,1267.23,353.86,1265.2,356.12,1262.04,357.59,1258.87,359.07,1255.02,359.79,1251.16,360.5,1247.5,360.5,1240.47,360.5,1230.9,359.07,1221.32,357.64,1208.04,355.81,1194.75,353.98,1177.16,352.27,1159.57,350.56,1136.5,350,1130.6,349.72,1124.3,349.57,1118.01,349.41,1111.47,349.34,1104.93,349.27,1098.22,349.26,1091.5,349.25,1084.75,349.25,1074.91,349.25,1064.86,349.39,1054.8,349.53,1044.82,349.81,1034.83,350.09,1025.06,350.52,1015.29,350.94,1006,351.5,1006,370.34,1006.14,390.24,1006.29,410.14,1006.57,428.56,1006.85,446.98,1007.27,462.66,1007.69,478.34,1008.25,488.75,1013.32,497.19,1017.46,507.58,1021.61,517.98,1024.57,531.41,1027.52,544.84,1029.14,561.84,1030.75,578.84,1030.75,600.5,1030.75,644.66,1018.23,683.45,1005.7,722.23,978.91,754.44,952.12,786.64,910.2,811.65,868.29,836.66,809.5,853.25,800.5,838.25,843.54,821.66,876.07,799.46,908.6,777.27,930.82,751.25,953.04,725.23,965.04,696.29,977.04,667.34,979,637.25,972.82,646.81,964,654.34,955.19,661.86,943.94,667.06,932.69,672.27,919.1,675.01,905.5,677.75,889.75,677.75,864.72,677.75,843.66,668.76,822.61,659.77,807.35,644.09,792.09,628.41,783.55,607.19,775,585.97,775,561.5,775,534.5,784.65,511.44,794.29,488.38,811.1,471.5,827.9,454.63,850.63,445.06,873.35,435.5,899.5,435.5,909.07,435.5,918.38,436.78,927.7,438.05,936.35,440.66,945,443.26,952.77,447.21,960.54,451.16,967,456.5,967,441.88,966.41,427.8,965.81,413.73,965.04,400.72,964.26,387.71,963.52,376.03,962.79,364.34,962.5,354.5,944.79,355.63,919.33,358.11,893.88,360.59,867.44,363.69,841,366.78,816.96,370.11,792.91,373.44,778,376.25,770.97,377.38,764.01,378.99,757.05,380.61,750.44,382.44,743.83,384.27,737.71,386.16,731.6,388.06,726.25,389.75,719.5,392,715.11,394.39,710.71,396.78,706.85,398.75,702.98,400.72,698.73,401.98,694.47,403.25,688,403.25,677.6,402.97,665.52,396.5,653.43,390.03,643.1,380.19,632.76,370.34,625.88,358.53,619,346.72,619,335.75,619,330.97,619.94,326.75,620.88,322.53,622.57,318.88,624.25,315.22,626.6,312.13,628.94,309.03,631.75,306.5,636.25,306.5,636.82,310.72,639.17,318.16,641.53,325.6,648.35,332.84,655.17,340.09,667.79,345.42,680.41,350.75,701.5,350.75,715.29,350.75,751.75,347.77,788.22,344.8,829.57,341,870.91,337.2,908.22,333.66,945.54,330.13,961,329,959.88,294.69,958.51,273.05,957.14,251.42,952.85,239.19,948.56,226.95,940.02,222.48,931.47,218,916,218,913.47,218,910.94,218.13,908.41,218.26,905.88,218.47,903.35,218.68,900.82,218.95,898.29,219.22,895.75,219.5,893.5,215.75,893.504,215.75,976.75,538.25,976.75,526.44,971.95,513.24,967.14,500.05,957.44,488.94,947.74,477.83,933.09,470.54,918.44,463.25,898.75,463.25,882.72,463.25,868.18,469.39,853.64,475.53,842.6,487.63,831.56,499.72,825.03,517.67,818.5,535.63,818.5,559.25,818.5,578.94,825.49,594.29,832.47,609.64,843.44,620.19,854.41,630.73,867.86,636.24,881.32,641.75,894.25,641.75,918.72,641.75,934.67,634.44,950.62,627.13,959.97,613.63,969.32,600.13,973.04,581,976.75,561.88,976.75,538.25,976.754,538.25,1082.5,165.5,1113.72,175.34,1134.38,187.1,1155.04,198.85,1167.35,210.59,1179.65,222.34,1184.7,233.11,1189.75,243.88,1189.75,251.75,1189.75,256.53,1187.97,260.76,1186.19,264.99,1183.38,268.16,1180.57,271.32,1177.1,273.16,1173.63,275,1170.25,275,1165.19,275,1161.55,273.73,1157.9,272.47,1155.16,269.94,1152.42,267.41,1150.32,263.61,1148.22,259.81,1146.25,254.75,1142.6,245.75,1136.26,235.6,1129.92,225.45,1120.85,215.19,1111.78,204.92,1099.95,195.05,1088.13,185.19,1073.5,176.75,1082.5,165.5,1082.504,165.5,1180.75,150.5,1214.22,161.75,1235.75,173.91,1257.28,186.08,1269.72,197.75,1282.17,209.42,1286.96,219.9,1291.75,230.38,1291.75,238.25,1291.75,242.75,1290.09,246.83,1288.43,250.91,1285.75,254,1283.08,257.09,1279.73,258.92,1276.38,260.75,1273,260.75,1267.94,260.75,1264.3,259.6,1260.65,258.45,1257.91,256.06,1255.17,253.67,1253.07,249.99,1250.97,246.31,1249,241.25,1245.07,231.69,1238,221.25,1230.93,210.8,1221.16,200.47,1211.39,190.13,1199.12,180.39,1186.85,170.66,1172.5,162.5,1180.75,150.5,1180.754,150.5] ) );
    shape.graphics.endFill();

    return shape;
  },
  "見えず" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [580.5,616.5,579.75,716.25,588.19,719.06,593.23,721.05,598.27,723.05,600.94,724.88,603.61,726.7,604.43,728.7,605.25,730.69,605.25,733.5,605.25,740.81,601.09,746.41,596.93,752.02,587.16,755.81,577.38,759.61,561.27,761.55,545.16,763.5,521.25,763.5,379.5,763.5,356.16,763.5,341.64,761.17,327.12,758.84,319.03,752.16,310.95,745.48,308.1,733.44,305.25,721.41,305.25,702,305.25,524.25,208.5,524.25,206.81,525.66,204.53,526.78,202.24,527.91,199.22,528.75,196.2,529.59,192.36,530.16,188.53,530.72,183.75,531,178.69,573.47,163.75,612.26,148.8,651.05,118.22,683.81,87.63,716.58,38.52,742.15,-10.59,767.72,-84,783.75,-90.75,771,-30.84,754.41,10.32,729.39,51.49,704.37,77.72,672.66,103.95,640.95,117.13,603.41,130.31,565.88,134.25,524.25,78,524.25,78,554.25,78,554.25,76.5,557.06,75,559.88,69.94,563.25,64.88,566.63,55.22,569.44,45.56,572.25,29.25,572.25,29.25,107.25,82.5,132,429,132,452.25,101.25,517.5,148.5,515.53,150.75,512.36,152.95,509.18,155.16,505.03,157.13,500.88,159.09,495.88,160.73,490.88,162.38,485.25,163.5,485.25,546.75,485.25,547.59,482.38,550.51,479.51,553.43,473.53,556.59,467.55,559.76,458.36,562.25,449.16,564.75,436.5,564.75,436.5,524.25,372,524.25,370.59,525.09,368.75,525.8,366.91,526.5,364.59,527.06,362.27,527.63,359.45,528.05,356.63,528.47,353.25,528.75,353.25,702.75,353.25,709.78,353.8,713.71,354.35,717.63,357.09,719.53,359.84,721.43,365.59,721.84,371.34,722.25,381.75,722.25,522,722.25,527.63,722.25,531.69,721.96,535.76,721.66,538.78,720.47,541.8,719.27,544.04,716.87,546.28,714.47,548.25,710.25,550.22,706.59,552.86,697.92,555.49,689.25,558.66,676.88,561.82,664.5,565.44,649.08,569.06,633.66,573,616.5,580.5,616.5,580.5,616.5,436.5,150,78,150,78,254.25,436.5,254.25,436.5,150,436.5,150,436.5,379.5,436.5,272.25,78,272.25,78,379.5,436.5,379.5,436.5,379.5,78,506.25,436.5,506.25,436.5,397.5,78,397.5,78,506.25,78,506.25] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [734.2,506,734.2,515.6,735.65,522.11,737.1,528.63,741,532.6,744.9,536.58,751.75,538.29,758.6,540,769.4,540,778.7,540,784.85,539.92,791,539.84,795.2,539.65,799.4,539.46,802.25,539.16,805.09,538.85,807.79,538.4,809.59,538.1,811.46,537.63,813.32,537.15,815.19,536.7,817.07,536.25,818.93,535.92,820.79,535.6,822.59,535.6,823.94,535.6,827.68,536.9,831.41,538.2,835.34,540.6,839.28,543,842.34,546.4,845.39,549.8,845.39,554,845.39,557.9,841.24,560.2,837.08,562.5,829.24,563.7,821.41,564.9,810.13,565.25,798.84,565.6,784.59,565.6,764.35,565.6,750.38,561.78,736.41,557.96,727.75,550.35,719.08,542.74,715.24,531.34,711.4,519.95,711.4,504.8,711.4,503.75,711.52,500.76,711.65,497.76,711.8,494.35,711.95,490.94,712.07,487.87,712.2,484.8,712.2,483.6,712.2,472.95,710.72,466.31,709.23,459.66,706.35,455.95,703.46,452.24,699.2,450.92,694.95,449.6,689.4,449.6,682.35,449.6,670.6,454.12,658.85,458.64,644,469.55,629.15,480.46,612,498.71,594.85,516.95,577,544.4,573.85,549.2,571.38,552.8,568.91,556.4,566.55,558.8,564.19,561.2,561.64,562.4,559.1,563.6,555.8,563.6,552.5,563.6,549.9,562.58,547.3,561.56,545.5,559.65,543.7,557.74,542.75,554.99,541.8,552.25,541.8,548.8,541.8,542.35,544.06,537.24,546.31,532.13,550.25,527.4,554.19,522.68,559.52,517.86,564.85,513.05,571,507.2,581.05,497.6,598.46,480.56,615.87,463.53,637.1,442.3,658.32,421.08,681.59,397.29,704.85,373.5,726.6,350.4,727.35,349.5,727.94,348.75,728.53,348,728.95,347.4,729.36,346.8,729.58,346.35,729.8,345.9,729.8,345.6,729.8,345.45,729.72,345.31,729.63,345.17,729.45,345.05,729.26,344.94,728.95,344.87,728.65,344.8,728.2,344.8,726.7,344.8,711.88,347.85,697.07,350.89,678.4,355.35,659.72,359.82,641.91,364.88,624.1,369.95,616.6,374,614.05,375.5,612.02,377.07,610,378.63,608.2,379.9,606.4,381.18,604.67,381.99,602.95,382.8,601,382.8,596.5,382.8,591.5,380.31,586.5,377.82,582.3,373.65,578.1,369.49,575.35,364.07,572.6,358.65,572.6,352.8,572.6,348.75,574.34,344.52,576.09,340.29,579.05,336.35,582.01,332.42,585.93,329.01,589.85,325.6,594.2,323.2,598.2,327.2,596.55,329.15,595.22,331.1,593.89,333.04,592.95,334.95,592.01,336.87,591.5,338.73,591,340.6,591,342.4,591,344.5,591.93,346.33,592.86,348.15,594.85,349.5,596.84,350.85,599.94,351.63,603.05,352.4,607.4,352.4,614.45,352.4,630.23,350.05,646.02,347.7,664.1,344.4,682.17,341.1,699.31,337.55,716.45,334,726.2,331.6,728.9,331,731.25,329.24,733.61,327.48,735.75,325.6,737.88,323.73,739.86,322.27,741.85,320.8,743.8,320.8,747.7,320.8,753.18,323.32,758.67,325.83,763.7,329.5,768.72,333.18,772.26,337.34,775.79,341.5,775.79,344.8,775.79,346.9,774.09,348.47,772.38,350.03,769.65,351.3,766.91,352.58,763.48,353.69,760.05,354.8,756.6,356,749.4,358.55,732.57,373.36,715.75,388.17,698.2,405.15,680.65,422.14,666.82,436.27,653,450.4,651.8,451.6,653.4,452,660.6,447.5,667.07,444.5,673.53,441.5,679.35,439.7,685.16,437.9,690.35,437.15,695.55,436.4,700.2,436.4,708.75,436.4,715.19,439.3,721.63,442.2,725.95,448.2,730.26,454.2,732.43,463.4,734.6,472.6,734.6,485.2,734.2,506,734.197,506.001,701,276,698.9,276.15,696.8,276.3,694.71,276.44,692.65,276.55,690.58,276.67,688.57,276.74,686.55,276.8,684.6,276.8,670.95,276.8,659.48,274.73,648.01,272.65,639.05,268.6,630.09,264.55,623.79,258.58,617.5,252.6,614.2,244.8,621.4,240,624.7,244.2,629.64,247.35,634.59,250.5,641.15,252.6,647.71,254.7,655.88,255.75,664.05,256.8,673.8,256.8,681.3,256.8,688.52,256.24,695.75,255.68,702.2,255,708.65,254.33,714.07,253.77,719.5,253.2,723.4,253.2,731.8,253.2,738.03,255.27,744.27,257.34,748.4,260.45,752.52,263.57,754.56,267.21,756.6,270.85,756.6,274,756.6,277.6,753.57,279.39,750.53,281.17,745.85,281.95,741.16,282.74,735.5,282.95,729.85,283.15,724.6,283.6,716.8,284.5,707.55,286.88,698.3,289.25,688.7,292.4,679.1,295.55,669.7,299.13,660.3,302.7,652.2,306,649.4,299.2,654.5,297.25,661.46,294.35,668.41,291.45,675.65,288.3,682.89,285.15,689.62,282.1,696.35,279.05,701,276.8,701,276,700.998,276.004] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [1015.5,0.86,1018.32,-5.33,1022.45,-10.67,1026.59,-16.01,1032.29,-19.95,1037.98,-23.89,1045.35,-26.14,1052.72,-28.39,1062,-28.39,1076.07,-28.39,1090.02,-24.78,1103.98,-21.17,1115.16,-15.26,1126.34,-9.36,1133.41,-1.81,1140.47,5.74,1140.75,13.61,1140.75,18.39,1139.55,22.18,1138.34,25.96,1136.72,29.27,1135.11,32.57,1133.48,35.65,1131.85,38.74,1131,42.11,1129.88,45.49,1129.15,51.18,1128.43,56.88,1128,65.17,1127.58,73.47,1127.42,84.51,1127.25,95.55,1127.25,109.61,1145.54,108.49,1163.54,107.4,1181.54,106.31,1197.57,105.39,1213.6,104.48,1226.82,103.81,1240.04,103.14,1248.75,102.86,1260.57,102.3,1269.71,101.33,1278.85,100.35,1285.88,98.45,1292.91,96.56,1298.11,93.47,1303.32,90.39,1307.25,85.61,1328.91,91.52,1344.74,96.59,1360.57,101.67,1370.91,107.08,1381.25,112.49,1386.25,118.83,1391.25,125.17,1391.25,133.61,1391.25,136.7,1389.23,138.97,1387.2,141.23,1384.04,142.7,1380.87,144.18,1377.02,144.9,1373.16,145.61,1369.5,145.61,1362.47,145.61,1352.9,144.18,1343.32,142.75,1330.04,140.92,1316.75,139.1,1299.16,137.38,1281.57,135.67,1258.5,135.11,1252.6,134.83,1246.3,134.68,1240.01,134.53,1233.47,134.45,1226.93,134.38,1220.22,134.37,1213.5,134.36,1206.75,134.36,1196.91,134.36,1186.86,134.5,1176.8,134.64,1166.82,134.92,1156.83,135.2,1147.06,135.63,1137.29,136.05,1128,136.61,1128,155.45,1128.14,175.35,1128.29,195.25,1128.57,213.67,1128.85,232.1,1129.27,247.78,1129.69,263.45,1130.25,273.86,1135.32,282.3,1139.46,292.69,1143.61,303.09,1146.57,316.52,1149.52,329.95,1151.14,346.95,1152.75,363.95,1152.75,385.61,1152.75,429.77,1140.23,468.56,1127.7,507.35,1100.91,539.55,1074.12,571.75,1032.2,596.76,990.29,621.77,931.5,638.36,922.5,623.36,965.54,606.77,998.07,584.57,1030.6,562.38,1052.82,536.36,1075.04,510.35,1087.04,481.4,1099.04,452.45,1101,422.36,1094.82,431.92,1086,439.45,1077.19,446.97,1065.94,452.17,1054.69,457.38,1041.1,460.12,1027.5,462.86,1011.75,462.86,986.72,462.86,965.66,453.87,944.61,444.88,929.35,429.2,914.09,413.53,905.55,392.3,897,371.08,897,346.61,897,319.61,906.65,296.55,916.29,273.49,933.1,256.61,949.9,239.74,972.63,230.17,995.35,220.61,1021.5,220.61,1031.07,220.61,1040.38,221.89,1049.7,223.17,1058.35,225.77,1067,228.37,1074.77,232.32,1082.54,236.27,1089,241.61,1089,226.99,1088.41,212.91,1087.81,198.84,1087.04,185.83,1086.26,172.82,1085.52,161.14,1084.79,149.45,1084.5,139.61,1066.79,140.74,1041.33,143.22,1015.88,145.7,989.44,148.8,963,151.89,938.96,155.22,914.91,158.55,900,161.36,892.97,162.49,886.01,164.1,879.05,165.72,872.44,167.55,865.83,169.38,859.71,171.28,853.6,173.17,848.25,174.86,841.5,177.11,837.11,179.5,832.71,181.89,828.85,183.86,824.98,185.83,820.73,187.1,816.47,188.36,810,188.36,799.6,188.08,787.52,181.61,775.43,175.14,765.1,165.3,754.76,155.45,747.88,143.64,741,131.83,741,120.86,741,116.08,741.94,111.86,742.88,107.64,744.57,103.99,746.25,100.33,748.6,97.24,750.94,94.14,753.75,91.61,758.25,91.61,758.82,95.83,761.17,103.27,763.53,110.71,770.35,117.95,777.17,125.2,789.79,130.53,802.41,135.86,823.5,135.86,837.29,135.86,873.75,132.88,910.22,129.91,951.57,126.11,992.91,122.31,1030.22,118.78,1067.54,115.24,1083,114.11,1081.88,79.8,1080.51,58.17,1079.14,36.53,1074.85,24.3,1070.56,12.06,1062.02,7.59,1053.47,3.11,1038,3.11,1035.47,3.11,1032.94,3.24,1030.41,3.37,1027.88,3.58,1025.35,3.79,1022.82,4.06,1020.29,4.33,1017.75,4.61,1015.5,0.86,1015.504,0.861,1098.75,323.36,1098.75,311.55,1093.95,298.35,1089.14,285.16,1079.44,274.05,1069.74,262.94,1055.09,255.65,1040.44,248.36,1020.75,248.36,1004.72,248.36,990.18,254.5,975.64,260.64,964.6,272.74,953.56,284.83,947.03,302.78,940.5,320.74,940.5,344.36,940.5,364.05,947.49,379.4,954.47,394.75,965.44,405.3,976.41,415.85,989.86,421.35,1003.32,426.86,1016.25,426.86,1040.72,426.86,1056.67,419.55,1072.62,412.24,1081.97,398.74,1091.32,385.24,1095.04,366.11,1098.75,346.99,1098.75,323.36,1098.754,323.361,1204.5,-49.39,1235.72,-39.55,1256.38,-27.79,1277.04,-16.04,1289.35,-4.3,1301.65,7.45,1306.7,18.22,1311.75,28.99,1311.75,36.86,1311.75,41.64,1309.97,45.87,1308.19,50.1,1305.38,53.27,1302.57,56.43,1299.1,58.27,1295.63,60.11,1292.25,60.11,1287.19,60.11,1283.55,58.85,1279.9,57.58,1277.16,55.05,1274.42,52.52,1272.32,48.72,1270.22,44.92,1268.25,39.86,1264.6,30.86,1258.26,20.71,1251.92,10.56,1242.85,0.3,1233.78,-9.97,1221.95,-19.83,1210.13,-29.7,1195.5,-38.14,1204.5,-49.39,1204.504,-49.389,1302.75,-64.39,1336.22,-53.14,1357.75,-40.97,1379.28,-28.81,1391.72,-17.14,1404.17,-5.47,1408.96,5.01,1413.75,15.49,1413.75,23.36,1413.75,27.86,1412.09,31.94,1410.43,36.02,1407.75,39.11,1405.08,42.2,1401.73,44.03,1398.38,45.86,1395,45.86,1389.94,45.86,1386.3,44.71,1382.65,43.56,1379.91,41.17,1377.17,38.78,1375.07,35.1,1372.97,31.42,1371,26.36,1367.07,16.8,1360,6.36,1352.93,-4.08,1343.16,-14.42,1333.39,-24.76,1321.12,-34.49,1308.85,-44.23,1294.5,-52.39,1302.75,-64.39,1302.754,-64.389] ) );
    shape.graphics.endFill();

    return shape;
  },
  "大人" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,2] ), $.toNumberVector( [667,166.25,664.75,170.19,661.79,173.14,658.82,176.09,654.53,178.06,650.24,180.03,644.32,181.02,638.41,182,630.25,182,337.75,182,347.88,236.28,369.54,291.56,391.21,346.84,430.09,399.22,468.98,451.6,527.91,499.14,586.84,546.69,671.5,585.5,670,594.5,659.88,595.63,651.47,598.1,643.07,600.57,636.53,605.28,629.99,609.99,625.39,617.39,620.78,624.78,618.25,635.75,538.38,591.59,485.28,536.59,432.18,481.58,398.78,421.81,365.38,362.05,348.14,300.57,330.91,239.09,322.75,182,320.5,182,312.63,248.38,293.64,311.35,274.66,374.33,236.13,432.13,197.59,489.92,135.3,541.65,73,593.38,-21.5,637.25,-30.5,623.75,50.5,578.47,104.51,527.62,158.52,476.77,192.34,421.16,226.16,365.54,243.19,305.55,260.22,245.56,267.25,182,-27.5,182,-32.75,164,269.5,164,271.75,140.38,272.97,117.59,274.19,94.81,274.75,68.94,275.31,43.06,275.41,12.13,275.5,-18.81,275.5,-58.75,362.5,-51.25,361.94,-47.31,360.43,-44.22,358.91,-41.13,355.47,-38.88,352.02,-36.63,346.15,-35.22,340.28,-33.81,331,-33.25,330.44,-8.22,329.91,16.66,329.38,41.54,328.47,66.22,327.55,90.9,326.04,115.36,324.53,139.81,322,164,550.75,164,590.5,113,667,166.25,667,166.25] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [628.75,787.5,742.09,716.91,803.04,636.57,863.99,556.24,891.91,471.09,919.82,385.95,924.38,298.44,928.94,210.94,929.5,126,1014.25,133.5,1013.69,137.16,1012.18,140.11,1010.66,143.06,1007.22,145.31,1003.77,147.56,997.9,149.11,992.03,150.66,982.75,151.5,989.78,237,1008.67,320.7,1027.56,404.39,1066.38,481.88,1105.19,559.36,1167.95,628.43,1230.72,697.5,1325.5,753.75,1323.25,762,1313.41,762.84,1305.12,765.26,1296.84,767.67,1290.16,772.31,1283.48,776.95,1278.43,784.15,1273.38,791.34,1270,801.75,1196.31,750,1145.22,687.56,1094.13,625.13,1060.38,555.94,1026.63,486.75,1007.59,412.78,988.56,338.81,979,264,978.25,264,973.75,335.16,959.44,407.27,945.13,479.39,908.78,548.44,872.43,617.48,807.92,681.45,743.41,745.41,638.5,800.25,628.75,787.5,628.75,787.5] ) );
    shape.graphics.endFill();

    return shape;
  },
  "なんて" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [101.8,23.8,104.43,18.03,109.2,13.26,113.97,8.49,120,5.08,126.04,1.66,132.91,-0.22,139.78,-2.1,146.6,-2.1,159.2,-2.1,171.72,0.9,184.23,3.9,194.2,8.75,204.18,13.61,210.39,19.76,216.6,25.9,216.6,32.2,216.6,38.5,214.4,42.31,212.21,46.11,208.99,50.58,205.77,55.04,202.13,61.73,198.49,68.43,195.6,80.5,194.55,85.75,192.72,91.89,190.88,98.02,188.78,104.39,186.68,110.76,184.58,117.02,182.48,123.29,180.9,128.8,197.97,125.65,217.94,120.61,237.91,115.57,255.63,108.41,273.35,101.26,286.23,91.89,299.12,82.51,302,70.7,326.15,69.91,340.98,71.18,355.82,72.45,363.95,75.08,372.09,77.7,374.85,81.33,377.6,84.96,377.6,88.9,377.6,94.41,374.85,98.8,372.09,103.19,366.05,107.19,360.02,111.19,350.43,115.18,340.85,119.18,327.2,123.9,313.82,128.63,294.45,134.27,275.07,139.91,253.62,145.43,232.16,150.94,210.55,155.8,188.95,160.65,171.1,163.8,160.08,198.71,143.34,240.31,126.61,281.9,107.58,322.79,88.55,363.67,68.93,400.15,49.3,436.63,32.5,461.3,30.14,464.45,27.33,467.36,24.52,470.27,21.57,472.5,18.61,474.73,15.67,476.07,12.73,477.4,10.1,477.4,7.74,477.4,3.95,476.04,0.15,474.69,-3.46,471.28,-7.07,467.86,-9.68,462.04,-12.3,456.23,-12.3,447.3,-12.3,443.36,-11.71,438.7,-11.11,434.04,-9.67,429.45,-8.23,424.86,-5.8,420.72,-3.37,416.59,0.3,413.7,17.1,399.79,36.42,372.49,55.73,345.19,73.98,311.33,92.22,277.46,107.6,240.45,122.98,203.44,131.9,170.1,123.5,171.15,115.08,172.06,106.66,172.97,99.18,173.69,91.7,174.41,85.64,174.92,79.58,175.44,75.9,175.7,63.57,175.7,52.76,174.5,41.95,173.29,33.03,170.8,24.1,168.31,17.23,164.48,10.37,160.65,5.9,155.4,3.28,153.04,0.52,149.39,-2.23,145.73,-4.6,141.4,-6.96,137.07,-8.67,132.37,-10.37,127.66,-10.9,123.2,-1.8,114.8,3.45,123.46,9.73,129.25,16.01,135.04,23.75,138.51,31.5,141.99,40.92,143.45,50.35,144.9,61.9,144.9,68.99,144.9,78.48,144.4,87.98,143.89,98.48,142.98,108.98,142.06,119.78,140.77,130.59,139.48,140.3,137.9,143.45,124.51,145.92,113,148.4,101.48,150.1,91.44,151.81,81.4,152.71,72.64,153.6,63.88,153.6,56,153.6,49.7,152.72,44.32,151.83,38.94,148.61,35,145.4,31.06,139.13,28.83,132.86,26.6,122.1,26.6,120.26,26.6,118.28,26.73,116.31,26.86,114.14,27.13,111.97,27.39,109.6,27.78,107.23,28.18,104.6,28.7,101.8,23.8,101.803,23.802,303.4,214.2,325.19,202.39,344.71,194.57,364.24,186.75,381.89,182.09,399.54,177.43,415.52,175.52,431.5,173.6,446.2,173.6,471.4,173.6,492.6,177.58,513.79,181.56,529.15,188.65,544.51,195.74,553.1,205.5,561.7,215.25,561.7,226.8,561.7,229.69,560.34,231.69,558.99,233.69,556.63,234.94,554.26,236.19,551.07,236.74,547.88,237.3,544.2,237.3,541.31,237.3,538.35,237.05,535.39,236.8,532.56,236.34,529.74,235.88,527.17,235.23,524.6,234.59,522.5,233.8,519.09,232.23,514.26,231.05,509.44,229.86,503.86,229.08,498.29,228.29,492.28,227.9,486.28,227.5,480.5,227.5,477.88,227.5,475.38,227.52,472.89,227.55,470.53,227.68,468.16,227.81,465.93,228.09,463.7,228.38,461.6,228.9,434.3,235.2,418.53,244.83,402.76,254.45,394.75,267.05,386.75,279.65,384.62,295.05,382.5,310.45,382.5,328.3,382.5,340.9,382.76,350.09,383.93,359.54,385.1,368.99,386.61,378.18,388.12,387.36,389.69,396.03,391.25,404.69,392.3,412.3,392.83,414.4,393.34,417.16,393.85,419.91,394.31,422.8,394.77,425.69,395.16,428.45,395.54,431.2,395.8,433.3,412.34,439.08,429.13,445.87,445.92,452.66,461.86,460.34,477.81,468.02,492.37,476.52,506.93,485.01,519,494.2,527.93,501.03,533.74,507.79,539.56,514.54,542.98,520.98,546.39,527.41,547.74,533.38,549.1,539.35,549.1,544.6,548.84,548.8,546.32,552.17,543.81,555.54,540,557.9,536.19,560.26,531.58,561.53,526.96,562.8,522.5,562.8,518.04,562.8,509.66,554.04,501.28,545.28,486.98,532.09,472.67,518.9,451.43,503.44,430.19,487.99,400,474.6,400.26,477.49,400.52,481.11,400.77,484.73,400.96,488.86,401.16,493,401.28,497.54,401.4,502.08,401.4,506.8,401.4,509.69,401.39,512.44,401.38,515.2,401.31,517.83,401.25,520.45,401.11,522.94,400.96,525.44,400.7,527.8,399.39,541.45,391.78,553.88,384.16,566.3,369.2,575.75,354.24,585.2,331.4,590.8,308.56,596.4,276.8,596.4,247.14,596.4,222.65,589.54,198.16,582.69,180.64,570.41,163.12,558.14,153.46,541.18,143.8,524.21,143.8,504,143.8,484.05,154.59,467.78,165.37,451.5,183.88,439.95,202.38,428.4,227.08,422.1,251.78,415.8,279.6,415.8,287.74,415.8,297.81,416.53,307.89,417.27,318.19,418.51,328.49,419.76,338.17,421.41,347.85,423.06,355.2,424.9,354.94,420.18,353.7,407.88,352.47,395.59,351.09,381.68,349.71,367.76,348.61,355.21,347.5,342.65,347.5,337.4,347.5,315.88,352.08,297.03,356.67,278.19,368.94,262.24,381.21,246.29,402.73,233.35,424.24,220.42,458.1,210.7,458.1,207.2,454.43,206.42,450.37,205.77,446.31,205.12,441.91,204.67,437.52,204.21,432.8,203.95,428.09,203.7,423.1,203.7,412.08,203.7,399.48,204.97,386.88,206.24,372.7,209.13,358.53,212.02,342.78,216.7,327.03,221.38,309.7,228.2,303.4,214.2,303.402,214.202,358,457.1,349.34,453.43,338.54,450.45,327.75,447.48,316.26,445.38,304.78,443.28,293.33,442.14,281.88,441,271.9,441,252.21,441,234.55,445.36,216.89,449.73,203.57,457.54,190.24,465.35,182.42,476.14,174.6,486.94,174.6,499.8,174.6,514.24,180.99,525.34,187.38,536.44,199.98,543.99,212.58,551.53,231.3,555.42,250.03,559.3,274.7,559.3,298.07,559.3,314.44,555.66,330.81,552.02,341.12,545.39,351.42,538.76,356.11,529.47,360.8,520.19,360.8,508.9,360.8,502.34,360.56,494.9,360.32,487.46,359.93,480.38,359.53,473.29,359.03,467.16,358.53,461.04,358,457.1,358.002,457.101] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [591.5,574,602.19,561.25,615.22,549.03,628.24,536.81,642.82,527.25,657.4,517.69,673.14,511.84,688.88,506,705,506,717.38,506,729.08,509.76,740.79,513.52,749.88,522.19,758.97,530.86,764.49,545.02,770,559.19,770,580,770,588.06,769.69,596.2,769.38,604.33,769,612.06,768.63,619.8,768.32,626.9,768,634,768,640,768,652.19,772.19,660.98,776.38,669.77,783.5,675.44,790.63,681.11,800.07,683.8,809.5,686.5,820,686.5,842.32,686.5,860.83,678.41,879.35,670.31,894.63,654.75,909.91,639.19,922.24,616.47,934.57,593.75,944.5,564.5,954,567.5,945.94,604.63,933.46,632.94,920.97,661.25,904,680.38,887.04,699.5,865.55,709.25,844.07,719,818,719,798.32,719,782.97,714.16,767.61,709.31,757.07,699.75,746.52,690.19,741.01,675.97,735.5,661.75,735.5,643,735.5,636.44,735.82,628.53,736.13,620.63,736.5,612.75,736.88,604.88,737.19,597.72,737.5,590.56,737.5,585.5,737.5,566.94,735.73,554.7,733.96,542.45,729.32,535.19,724.68,527.92,716.62,524.96,708.57,522,696,522,683.25,522,668.58,529.24,653.9,536.48,639.32,548.81,624.74,561.14,611.28,577.48,597.82,593.81,587.5,612,581.32,622.69,576.54,634.67,571.75,646.66,568,658.38,564.25,670.09,561.35,680.77,558.44,691.44,556,699.5,554.32,705.31,552.14,709.16,549.96,713.02,547.19,715.31,544.43,717.61,541.03,718.55,537.63,719.5,533.5,719.5,530.69,719.5,527.29,717.93,523.9,716.36,520.94,713.31,517.99,710.27,516,705.79,514,701.31,514,695.5,514,690.44,515.08,685.86,516.16,681.28,517.75,677.25,519.35,673.22,521.18,669.77,523,666.31,524.5,663.5,528.07,657.69,533.28,646.07,538.49,634.45,545.19,618.56,551.9,602.67,560.01,583.27,568.13,563.88,577.5,542.5,588.75,517,602.22,488.16,615.68,459.31,627.82,433.25,639.96,407.19,649.01,386.97,658.07,366.75,660.5,358.5,661.25,356.44,661.74,354.56,662.22,352.69,662.5,351,662.79,349.31,662.9,347.81,663,346.31,663,345,663,338.25,659.11,334.68,655.22,331.11,649.88,329.56,644.54,328.02,638.96,327.91,633.38,327.81,630,328,629,326.5,630.69,322.94,633.68,319.75,636.66,316.56,640.5,314.13,644.35,311.69,648.83,310.19,653.32,308.69,658,308.5,667.75,308.69,677.72,311.17,687.69,313.66,695.75,318.25,703.82,322.84,708.91,329.45,714,336.06,714,344.5,714,348.25,711.72,351.41,709.43,354.58,705.82,358.19,702.21,361.8,697.76,366.37,693.32,370.94,689,377.5,676.07,397.94,662.08,423.45,648.08,448.95,634.82,475.44,621.55,501.92,609.9,527.34,598.25,552.75,590,573,591.5,574,591.505,574] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [752.5,99.3,753.82,107.7,757.98,114.55,762.15,121.4,768.52,126.25,774.88,131.11,783.12,133.76,791.36,136.4,800.8,136.4,805.27,136.4,812,135.9,818.74,135.4,826.35,134.48,833.97,133.56,841.75,132.27,849.54,130.98,856.1,129.4,876.84,125.2,915.92,118.06,955,110.92,1000.74,103.24,1046.48,95.56,1093.04,88.55,1139.6,81.54,1175.3,77.6,1183.18,76.55,1190.52,74.78,1197.86,73.01,1204.09,70.78,1210.32,68.55,1215.17,65.99,1220.02,63.43,1222.9,60.8,1244.69,65,1259.99,69.58,1275.29,74.17,1284.94,79.61,1294.59,85.06,1299,91.61,1303.4,98.16,1303.4,106.3,1303.4,110.76,1301.28,113.62,1299.16,116.47,1295.35,118.11,1291.55,119.76,1286.27,120.38,1281,121,1274.7,121,1268.93,121,1262.34,120.56,1255.76,120.13,1248.8,119.6,1241.85,119.08,1234.74,118.64,1227.63,118.2,1220.8,118.2,1192.72,118.2,1162.16,130.53,1131.6,142.86,1103.38,162.21,1075.16,181.57,1051.69,205.32,1028.22,229.06,1014.3,251.9,1005.64,265.03,998.11,282.47,990.57,299.92,984.99,320.06,979.41,340.21,976.21,362.25,973,384.29,973,406.6,973,443.87,983.76,468.51,994.51,493.14,1013.34,508.62,1032.18,524.11,1057.76,532.21,1083.34,540.3,1113,544.5,1120.35,545.55,1128.31,545.75,1136.26,545.94,1143.54,546.07,1150.83,546.21,1156.81,546.66,1162.79,547.12,1166.2,548.7,1175.13,552.37,1181.39,556.67,1187.64,560.97,1191.58,565.76,1195.52,570.55,1197.31,575.77,1199.1,580.99,1199.1,586.5,1199.1,590.96,1197.04,594.14,1194.97,597.33,1190.97,599.36,1186.96,601.4,1181.09,602.35,1175.22,603.3,1167.6,603.3,1165.24,603.3,1162.75,603.18,1160.25,603.06,1157.63,602.86,1155,602.66,1152.25,602.41,1149.49,602.16,1146.6,601.9,1082.55,594.55,1040.97,579.77,999.39,565,975.1,541.44,950.82,517.88,941.26,484.86,931.7,451.84,931.7,408,931.7,357.6,948.92,312.89,966.14,268.18,994.35,230.38,1022.57,192.58,1058.69,162.3,1094.8,132.03,1132.6,110.5,1131.9,108.4,1101.19,111.55,1056.02,119.48,1010.85,127.41,966.35,137.71,921.86,148.02,885.61,159.49,849.37,170.96,836.5,181.2,832.83,183.56,829.31,185.83,825.79,188.09,821.98,189.86,818.17,191.64,813.87,192.72,809.56,193.8,804.31,193.8,793.02,193.8,781,187.47,768.98,181.14,759.07,171.49,749.16,161.84,742.78,150.39,736.41,138.94,736.41,128.7,736.41,123.71,737.18,119.08,737.96,114.44,739.47,110.5,740.98,106.56,743.2,103.5,745.42,100.44,748.31,98.6,752.5,99.3,752.505,99.302] ) );
    shape.graphics.endFill();

    return shape;
  },
  "たまま" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0x0,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [45.68,189.71,48.69,197.57,52.17,203.58,55.64,209.59,59.98,213.66,64.33,217.73,69.75,219.81,75.18,221.89,82.1,221.89,88.31,221.89,95.75,220.98,103.19,220.07,110.77,218.53,118.36,216.98,125.53,214.95,132.71,212.91,138.38,210.67,138.74,208.7,140.04,199.23,141.34,189.75,142.76,176.42,144.18,163.09,145.3,147.72,146.43,132.35,146.43,118.6,146.43,107.93,145.36,100.75,144.3,93.57,142.17,89.22,140.04,84.87,136.85,83.02,133.65,81.17,129.4,81.17,127.09,81.17,124.85,81.23,122.61,81.29,120.35,81.64,118.09,81.99,115.76,82.75,113.43,83.51,110.95,84.91,109.06,79.67,110.48,74.62,112.64,69.31,114.81,64,118.58,59.65,122.35,55.3,128.15,52.51,133.95,49.73,142.64,49.73,149.91,49.73,158.36,52.69,166.81,55.65,174.04,61.05,181.26,66.46,186.08,74.05,190.89,81.64,190.89,90.9,190.89,96.23,190.01,99.78,189.14,103.32,187.81,106.34,186.48,109.36,184.9,112.48,183.32,115.6,181.9,120.09,180.48,124.59,179.14,130.61,177.81,136.63,176.16,145.82,174.52,155.02,172.39,168.2,170.25,181.38,167.24,200.19,183.91,193.73,197.36,186.49,210.81,179.25,220.92,170.9,231.03,162.55,237.74,152.92,244.45,143.3,247.65,132.07,251.9,131.32,258.47,131.88,266.09,132.54,273.71,133.19,280.23,135.44,286.74,137.68,291.08,142.27,295.42,146.85,295.42,155.27,295.42,162.29,292.35,168.08,289.27,173.87,283.6,179.13,277.92,184.4,269.88,189.48,261.84,194.57,251.9,200.19,241.08,206.36,229.21,212.19,217.33,218.01,205.49,223.2,193.65,228.4,182.4,232.82,171.14,237.24,161.56,240.61,155.71,275.69,146.79,322.5,137.88,369.31,128.57,415.76,119.26,462.22,110.88,502.29,102.5,542.36,97.71,563.98,90.79,596.82,86.02,618.11,81.25,639.41,76.95,651.83,72.65,664.25,67.97,669.13,63.3,674.01,56.56,674.01,53.54,674.01,51.46,672.36,49.39,670.71,48.1,666.99,46.81,663.27,46.25,657.27,45.68,651.27,45.68,642.57,45.68,638.64,45.76,634.14,45.85,629.64,46.03,624.51,46.21,619.39,46.47,613.62,46.74,607.86,47.1,601.4,54.19,586.24,60.24,570.47,66.28,554.69,71.34,539.18,76.39,523.67,80.49,508.88,84.58,494.08,87.77,480.89,92.56,461.24,99.13,431.68,105.7,402.13,112.31,369.64,118.92,337.14,124.69,305.2,130.46,273.26,133.65,248.84,126.56,251.09,120.01,252.77,113.46,254.45,107.52,255.58,101.58,256.7,96.27,257.26,90.97,257.82,86.35,257.82,73.05,257.82,64.15,251.69,55.24,245.57,49.87,236.3,44.51,227.04,42.25,216.14,40,205.24,40,195.7,45.68,189.71,45.676,189.708,248.59,447.95,245.22,457.22,242.36,466.96,239.5,476.7,237.42,486.6,235.33,496.49,234.16,506.37,232.98,516.26,232.98,525.8,232.98,556.96,242.93,573.84,252.88,590.71,267.87,598.5,282.86,606.29,300.43,607.59,318.01,608.89,333.26,608.89,338.58,608.89,343.25,608.74,347.91,608.59,352.12,608.23,356.33,607.88,360.2,607.31,364.06,606.74,367.79,605.9,371.34,605.62,374.57,604.76,377.81,603.91,380.56,603,383.31,602.08,385.48,601.37,387.65,600.66,389.07,600.66,394.75,600.66,400.56,603.15,406.37,605.64,411.07,609.92,415.77,614.2,418.74,619.92,421.71,625.64,421.71,632.09,421.71,640.23,417.39,645.23,413.06,650.22,404.86,652.96,396.66,655.7,384.79,656.62,372.93,657.54,357.86,657.54,326.46,657.54,300.44,653.22,274.42,648.89,255.75,636.4,237.08,623.91,226.75,601.33,216.43,578.76,216.43,542.27,216.43,530.2,217.95,517.53,219.47,504.87,222.58,492.02,225.68,479.18,230.4,466.37,235.11,453.57,241.5,441.22,248.59,447.95,248.593,447.953,285.01,373.85,291.75,364.87,299.43,355.53,307.11,346.2,314.87,337.36,322.63,328.52,330.05,320.59,337.46,312.66,343.67,306.48,330.54,305.36,317.6,306.75,304.66,308.14,291.58,312.56,278.5,316.98,265.11,324.69,251.73,332.4,237.71,343.91,232.04,332.68,246.58,313.59,262.18,300.56,277.79,287.53,294.06,279.53,310.34,271.53,327.09,268.05,343.84,264.56,360.7,264.56,371.16,264.56,380.3,267.77,389.44,270.97,396.23,276.16,403.01,281.36,406.92,287.93,410.83,294.5,410.83,301.24,410.83,306.01,409.99,308.95,409.15,311.88,407.64,313.5,406.13,315.11,404.05,315.66,401.96,316.21,399.48,316.21,397.88,316.21,396.13,316.09,394.38,315.98,392.56,315.84,390.74,315.7,388.9,315.58,387.06,315.46,385.29,315.46,375.36,315.46,364.09,321.16,352.82,326.85,340.89,336.33,328.96,345.8,316.71,358.09,304.47,370.39,292.58,383.58,285.01,373.85,285.014,373.849] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0x0,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [604.76,68.44,606,63.11,608.66,58,611.31,52.89,614.99,48.89,618.67,44.89,623.19,42.44,627.7,40,632.67,40,642.6,40,652.05,43.38,661.49,46.76,668.85,52.44,676.21,58.13,680.69,65.58,685.17,73.03,685.17,81.17,685.17,85.38,683.96,88.65,682.75,91.93,681.15,95.58,679.56,99.23,677.99,103.91,676.42,108.58,675.71,115.6,675.36,119.25,675.15,124.26,674.94,129.26,674.77,135.44,674.59,141.61,674.38,148.87,674.17,156.12,673.82,164.26,685.7,162.57,697.1,160.14,708.5,157.71,718.52,154.9,728.54,152.09,736.74,149.1,744.95,146.11,750.44,143.3,756.65,140.21,760.78,137.68,764.9,135.16,767.47,132.63,770.04,130.11,771.33,127.3,772.62,124.49,773.15,120.84,777.88,118.6,783.91,121.4,791.83,122.58,799.75,123.77,806.85,125.8,813.94,127.84,818.85,131.96,823.76,136.09,823.76,144.8,823.76,151.25,820.5,155.82,817.24,160.4,811.52,163.98,805.8,167.56,798.02,170.58,790.24,173.61,781.19,176.98,771.61,180.35,757.28,183.98,742.95,187.6,727.56,190.83,712.18,194.06,697.58,196.56,682.98,199.06,672.87,200.19,672.7,207.77,672.6,215.89,672.5,224.02,672.46,232.65,672.41,241.29,672.41,250.4,672.4,259.51,672.4,269.05,672.4,276.63,672.41,284.43,672.41,292.23,672.46,300.02,672.5,307.81,672.6,315.47,672.7,323.13,672.87,330.43,676.95,330.15,690.99,328.29,705.02,326.43,720.23,322.85,735.44,319.27,747.44,313.91,759.43,308.54,759.43,301.24,759.43,299.84,759.08,298.19,758.72,296.54,758.01,294.78,757.3,293.03,756.24,291.24,755.18,289.45,753.76,287.77,759.9,279.53,763.63,283.46,766.17,286.29,768.71,289.12,771.02,290.95,773.33,292.77,775.87,293.64,778.41,294.5,782.14,294.5,786.57,294.78,791.56,295.49,796.55,296.19,800.76,297.87,804.97,299.55,807.74,302.5,810.52,305.45,810.52,310.22,810.52,317.8,808.54,322.98,806.55,328.16,802.12,332.02,797.69,335.88,790.56,338.96,783.44,342.03,773.15,345.4,764.99,348.21,753.64,350.85,742.29,353.5,729.16,355.88,716.03,358.27,701.84,360.35,687.65,362.43,673.82,364.12,674.17,382.08,674.7,398.75,675.22,415.42,675.89,430.08,676.55,444.75,677.34,457.06,678.14,469.38,679.02,478.64,680.44,501.85,698.53,508.86,715.86,518.61,733.2,528.35,748.49,539.37,763.79,550.39,776.42,561.95,789.05,573.52,797.75,584.19,802.89,590.36,806.49,596.33,810.09,602.29,812.35,608.33,814.61,614.36,815.64,620.61,816.66,626.85,816.66,633.59,816.66,638.08,815.66,642.03,814.65,645.99,812.88,648.93,811.11,651.88,808.68,653.59,806.26,655.3,803.42,655.3,800.76,655.3,797.65,654.5,794.54,653.71,790.95,651.18,787.35,648.65,783.27,643.93,779.18,639.2,774.57,631.34,766.94,618.15,757.3,605.87,747.67,593.59,736.14,582.5,724.61,571.41,711.24,561.66,697.88,551.91,682.81,543.77,682.98,549.1,683.15,554.87,683.32,560.63,683.46,566.32,683.59,572,683.67,577.34,683.75,582.69,683.75,587.18,683.75,611.04,678.79,628.53,673.83,646.01,663.24,657.45,652.64,668.89,636.06,674.44,619.48,680,596.25,680,572.48,680,554.28,671.91,536.09,663.81,523.76,650.06,511.43,636.3,505.12,618.1,498.81,599.9,498.81,579.69,498.81,557.24,507.41,539.93,516.01,522.62,530.38,510.83,544.75,499.04,563.46,492.96,582.18,486.88,602.4,486.88,608.43,486.88,614.89,487.41,621.36,487.95,627.88,488.93,634.4,489.92,640.78,491.3,647.15,492.68,653.01,494.36,653.01,487.62,652.26,469.74,651.52,451.86,650.58,431.58,649.65,411.3,648.82,392.99,647.98,374.69,647.8,367.11,640.71,368.23,632,369.07,623.3,369.92,613.99,370.48,604.67,371.04,595.26,371.32,585.84,371.6,577.33,371.6,558.88,371.6,546.01,367.58,533.13,363.55,525.06,356.26,516.99,348.96,513.34,338.76,509.69,328.56,509.69,316.21,509.69,307.51,513.13,298.17,516.58,288.84,522.7,279.72,528.81,270.59,537.23,262.1,545.64,253.61,555.57,246.59,560.3,257.07,551.61,263.53,545.27,270.43,538.94,277.33,534.82,284.21,530.69,291.09,528.7,297.71,526.72,304.33,526.72,310.22,526.72,318.08,529.8,323.86,532.88,329.64,538.95,333.43,545.03,337.21,554.05,339.06,563.08,340.91,574.96,340.91,583.3,340.91,593.06,340.4,602.81,339.88,612.57,339.04,622.32,338.2,631.37,337.12,640.41,336.04,647.33,334.92,646.98,318.64,646.7,301.81,646.43,284.98,646.21,268.21,645.99,251.44,645.8,235.03,645.62,218.62,645.44,203.18,635.68,204.02,624.21,204.95,612.74,205.87,601.57,206.64,590.39,207.41,580.52,207.92,570.65,208.42,564.08,208.42,548.12,208.42,535.81,205.53,523.49,202.64,513.83,195.97,504.16,189.31,496.64,178.42,489.11,167.53,482.73,151.53,488.88,139.55,494.55,149.1,502.09,155.79,509.63,162.48,518.32,166.69,527.01,170.9,536.5,172.82,545.99,174.74,555.57,174.74,563.91,174.74,575.86,174.33,587.81,173.92,600.45,173.14,613.08,172.37,624.95,171.26,636.81,170.15,644.97,168.75,644.97,163.41,644.89,157.65,644.82,151.88,644.73,146.2,644.64,140.51,644.57,135.17,644.49,129.82,644.49,125.33,644.32,111.29,643.75,101,643.19,90.71,640.71,83.97,638.23,77.24,633.05,73.96,627.88,70.69,618.48,70.69,617.06,70.69,615.63,70.83,614.21,70.97,612.74,71.25,611.28,71.53,609.76,71.95,608.25,72.37,606.65,72.93,604.76,68.44,604.761,68.444,653.95,528.8,647.04,525.71,639.76,523.1,632.49,520.49,625.22,518.6,617.95,516.7,610.85,515.64,603.76,514.57,597.19,514.57,579.28,514.57,564.77,519.12,550.26,523.67,540.02,531.88,529.78,540.09,524.23,551.52,518.67,562.95,518.67,576.7,518.67,592.7,524.31,604.53,529.94,616.35,539.96,624.14,549.98,631.93,563.77,635.75,577.56,639.58,593.88,639.58,610.02,639.58,621.49,636.18,632.96,632.77,640.24,625.26,647.51,617.75,650.82,605.79,654.13,593.82,653.95,576.7,653.95,574.18,654.02,567.43,654.09,560.68,654.13,553.03,654.17,545.38,654.15,538.49,654.13,531.6,653.95,528.8,653.953,528.796] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0x0,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [1021,68.44,1022.24,63.11,1024.9,58,1027.55,52.89,1031.23,48.89,1034.91,44.89,1039.43,42.44,1043.94,40,1048.91,40,1058.84,40,1068.29,43.38,1077.73,46.76,1085.09,52.44,1092.45,58.13,1096.93,65.58,1101.41,73.03,1101.41,81.17,1101.41,85.38,1100.2,88.65,1098.99,91.93,1097.39,95.58,1095.79,99.23,1094.23,103.91,1092.66,108.58,1091.95,115.6,1091.6,119.25,1091.39,124.26,1091.18,129.26,1091,135.44,1090.83,141.61,1090.62,148.87,1090.41,156.12,1090.06,164.26,1101.94,162.57,1113.34,160.14,1124.73,157.71,1134.76,154.9,1144.78,152.09,1152.98,149.1,1161.18,146.11,1166.68,143.3,1172.89,140.21,1177.02,137.68,1181.14,135.16,1183.71,132.63,1186.28,130.11,1187.57,127.3,1188.86,124.49,1189.39,120.84,1194.12,118.6,1200.15,121.4,1208.07,122.58,1215.99,123.77,1223.09,125.8,1230.18,127.84,1235.09,131.96,1240,136.09,1240,144.8,1240,151.25,1236.74,155.82,1233.48,160.4,1227.76,163.98,1222.04,167.56,1214.26,170.58,1206.48,173.61,1197.43,176.98,1187.85,180.35,1173.52,183.98,1159.19,187.6,1143.8,190.83,1128.42,194.06,1113.82,196.56,1099.22,199.06,1089.11,200.19,1088.93,207.77,1088.84,215.89,1088.74,224.02,1088.7,232.65,1088.65,241.29,1088.65,250.4,1088.64,259.51,1088.64,269.05,1088.64,276.63,1088.65,284.43,1088.65,292.23,1088.7,300.02,1088.74,307.81,1088.84,315.47,1088.93,323.13,1089.11,330.43,1093.19,330.15,1107.23,328.29,1121.26,326.43,1136.47,322.85,1151.68,319.27,1163.68,313.91,1175.67,308.54,1175.67,301.24,1175.67,299.84,1175.32,298.19,1174.96,296.54,1174.25,294.78,1173.54,293.03,1172.48,291.24,1171.42,289.45,1170,287.77,1176.14,279.53,1179.87,283.46,1182.41,286.29,1184.95,289.12,1187.26,290.95,1189.57,292.77,1192.11,293.64,1194.65,294.5,1198.37,294.5,1202.81,294.78,1207.8,295.49,1212.79,296.19,1217,297.87,1221.21,299.55,1223.98,302.5,1226.75,305.45,1226.75,310.22,1226.75,317.8,1224.77,322.98,1222.79,328.16,1218.36,332.02,1213.93,335.88,1206.8,338.96,1199.68,342.03,1189.39,345.4,1181.23,348.21,1169.88,350.85,1158.52,353.5,1145.4,355.88,1132.27,358.27,1118.08,360.35,1103.89,362.43,1090.06,364.12,1090.41,382.08,1090.94,398.75,1091.46,415.42,1092.13,430.08,1092.79,444.75,1093.58,457.06,1094.37,469.38,1095.26,478.64,1096.68,501.85,1114.77,508.86,1132.1,518.61,1149.43,528.35,1164.73,539.37,1180.03,550.39,1192.66,561.95,1205.29,573.52,1213.98,584.19,1219.13,590.36,1222.73,596.33,1226.33,602.29,1228.59,608.33,1230.85,614.36,1231.88,620.61,1232.9,626.85,1232.9,633.59,1232.9,638.08,1231.9,642.03,1230.89,645.99,1229.12,648.93,1227.35,651.88,1224.92,653.59,1222.5,655.3,1219.66,655.3,1217,655.3,1213.89,654.5,1210.78,653.71,1207.19,651.18,1203.59,648.65,1199.51,643.93,1195.42,639.2,1190.81,631.34,1183.18,618.15,1173.54,605.87,1163.91,593.59,1152.38,582.5,1140.85,571.41,1127.48,561.66,1114.12,551.91,1099.05,543.77,1099.22,549.1,1099.39,554.87,1099.56,560.63,1099.7,566.32,1099.83,572,1099.91,577.34,1099.99,582.69,1099.99,587.18,1099.99,611.04,1095.03,628.53,1090.07,646.01,1079.48,657.45,1068.88,668.89,1052.3,674.44,1035.72,680,1012.49,680,988.72,680,970.52,671.91,952.33,663.81,940,650.06,927.67,636.3,921.36,618.1,915.05,599.9,915.05,579.69,915.05,557.24,923.65,539.93,932.25,522.62,946.62,510.83,960.99,499.04,979.7,492.96,998.41,486.88,1018.63,486.88,1024.67,486.88,1031.13,487.41,1037.6,487.95,1044.12,488.93,1050.64,489.92,1057.01,491.3,1063.39,492.68,1069.25,494.36,1069.25,487.62,1068.5,469.74,1067.75,451.86,1066.82,431.58,1065.89,411.3,1065.06,392.99,1064.22,374.69,1064.04,367.11,1056.95,368.23,1048.24,369.07,1039.54,369.92,1030.22,370.48,1020.91,371.04,1011.5,371.32,1002.08,371.6,993.57,371.6,975.12,371.6,962.24,367.58,949.37,363.55,941.3,356.26,933.23,348.96,929.58,338.76,925.93,328.56,925.93,316.21,925.93,307.51,929.37,298.17,932.81,288.84,938.93,279.72,945.05,270.59,953.46,262.1,961.87,253.61,971.81,246.59,976.54,257.07,967.85,263.53,961.51,270.43,955.18,277.33,951.05,284.21,946.93,291.09,944.94,297.71,942.95,304.33,942.95,310.22,942.95,318.08,946.04,323.86,949.12,329.64,955.19,333.43,961.27,337.21,970.29,339.06,979.32,340.91,991.2,340.91,999.54,340.91,1009.29,340.4,1019.05,339.88,1028.8,339.04,1038.56,338.2,1047.61,337.12,1056.65,336.04,1063.57,334.92,1063.21,318.64,1062.94,301.81,1062.67,284.98,1062.45,268.21,1062.22,251.44,1062.04,235.03,1061.85,218.62,1061.68,203.18,1051.92,204.02,1040.45,204.95,1028.98,205.87,1017.8,206.64,1006.63,207.41,996.76,207.92,986.88,208.42,980.32,208.42,964.36,208.42,952.04,205.53,939.73,202.64,930.06,195.97,920.4,189.31,912.87,178.42,905.35,167.53,898.96,151.53,905.11,139.55,910.79,149.1,918.33,155.79,925.87,162.48,934.56,166.69,943.25,170.9,952.74,172.82,962.23,174.74,971.81,174.74,980.14,174.74,992.09,174.33,1004.04,173.92,1016.68,173.14,1029.32,172.37,1041.18,171.26,1053.04,170.15,1061.2,168.75,1061.2,163.41,1061.13,157.65,1061.05,151.88,1060.97,146.2,1060.88,140.51,1060.8,135.17,1060.73,129.82,1060.73,125.33,1060.55,111.29,1059.99,101,1059.43,90.71,1056.95,83.97,1054.46,77.24,1049.29,73.96,1044.12,70.69,1034.72,70.69,1033.3,70.69,1031.87,70.83,1030.44,70.97,1028.98,71.25,1027.52,71.53,1026,71.95,1024.49,72.37,1022.89,72.93,1021,68.44,1021.001,68.444,1070.19,528.8,1063.27,525.71,1056,523.1,1048.73,520.49,1041.46,518.6,1034.19,516.7,1027.09,515.64,1019.99,514.57,1013.43,514.57,995.52,514.57,981.01,519.12,966.5,523.67,956.26,531.88,946.01,540.09,940.46,551.52,934.91,562.95,934.91,576.7,934.91,592.7,940.54,604.53,946.18,616.35,956.2,624.14,966.22,631.93,980.01,635.75,993.8,639.58,1010.12,639.58,1026.26,639.58,1037.73,636.18,1049.2,632.77,1056.47,625.26,1063.75,617.75,1067.06,605.79,1070.37,593.82,1070.19,576.7,1070.19,574.18,1070.26,567.43,1070.33,560.68,1070.37,553.03,1070.41,545.38,1070.39,538.49,1070.37,531.6,1070.19,528.8,1070.192,528.796] ) );
    shape.graphics.endFill();

    return shape;
  },
  "耐えて_1" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,1,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,2,2,2,2,3,3,3,3,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [282.8,157.57,301.4,132.37,353,170.17,351.65,171.74,349.34,173.47,347.02,175.19,343.93,176.77,340.84,178.34,337.06,179.62,333.28,180.89,329,181.57,329,468.97,329,480.9,327.4,490.91,325.8,500.92,320.68,508.57,315.56,516.22,305.97,521.28,296.38,526.35,280.4,528.37,280.4,517.12,279.58,509.56,278.75,502.01,275.6,497.17,272.45,492.33,266.23,489.73,260,487.12,249.2,485.77,249.2,477.37,282.2,477.37,284,477.37,285.17,476.88,286.33,476.4,287,475.27,287.68,474.15,287.94,472.31,288.2,470.47,288.2,467.77,288.2,170.77,246.2,170.77,246.2,502.57,246.2,503.47,243.93,505.46,241.67,507.44,237.5,509.47,233.34,511.49,227.47,513.03,221.6,514.57,214.4,514.57,209,514.57,209,170.77,168.8,170.77,168.8,504.37,168.8,505.5,166.54,507.51,164.28,509.53,160.18,511.5,156.07,513.46,150.32,514.92,144.58,516.37,137.6,516.37,131.6,516.37,131.6,170.77,93.2,170.77,93.2,516.37,93.2,517.72,90.82,520.05,88.44,522.37,84.05,524.62,79.67,526.87,73.46,528.52,67.25,530.17,59.6,530.17,53,530.17,53,137.17,100.4,157.57,154.4,157.57,155.97,144.07,157.41,128.44,158.84,112.81,160.03,96.89,161.21,80.97,162.08,65.68,162.95,50.39,163.4,37.57,29,37.57,25.4,23.77,286.4,23.77,318.2,-17.63,377.6,25.57,375.8,28.72,373.44,30.98,371.08,33.25,367.7,34.72,364.33,36.18,359.72,36.87,355.1,37.57,348.8,37.57,218.6,37.57,214.33,51.07,209.15,66.69,203.98,82.32,198.35,98.24,192.73,114.16,186.88,129.45,181.03,144.74,175.4,157.57,282.8,157.57,282.803,157.567,546.8,98.17,591.2,138.97,589.63,142.12,587.41,144.29,585.19,146.47,581.98,147.82,578.77,149.17,574.41,149.77,570.06,150.37,564.2,150.37,516.2,150.37,516.2,461.17,516.2,474.44,513.86,485.85,511.52,497.26,504.2,506.1,496.89,514.93,483.3,520.82,469.7,526.72,447.2,528.97,447.2,517.05,444.54,508.82,441.88,500.6,434.9,495.15,427.93,489.69,415.82,486.53,403.7,483.37,384.8,481.57,384.8,472.57,456.8,472.57,460.63,472.57,463.08,471.88,465.52,471.18,466.93,469.72,468.34,468.26,468.87,465.99,469.4,463.72,469.4,460.57,469.4,150.37,336.8,150.37,333.2,137.17,469.4,137.17,469.4,-21.23,542.61,-14.63,542.16,-11.26,541.01,-8.73,539.87,-6.2,537.06,-4.29,534.24,-2.37,529.27,-0.97,524.31,0.44,516.21,1.56,516.21,137.17,522.81,137.17,546.8,98.17,546.805,98.167,363.2,216.97,385.48,231.59,400.54,246.55,415.61,261.5,424.78,275.84,433.95,290.19,437.88,303.45,441.81,316.72,441.81,327.97,441.81,337.64,439.41,345.51,437.02,353.37,433.03,358.94,429.04,364.51,423.83,367.54,418.63,370.57,413,370.57,410.31,370.57,407.71,369.88,405.11,369.2,402.58,367.79,400.05,366.39,397.56,364.24,395.08,362.09,392.61,359.17,392.83,357.59,392.95,355.93,393.07,354.26,393.13,352.57,393.19,350.88,393.2,349.21,393.21,347.54,393.21,345.97,393.21,330.22,390.26,313.13,387.32,296.04,382.26,279.44,377.19,262.85,370.42,247.67,363.66,232.49,356.01,220.57,363.2,216.97,363.204,216.967] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [810.53,656.47,810.53,670.2,812.45,679.6,814.36,689.01,819.53,694.8,824.71,700.59,833.82,703.13,842.93,705.67,857.33,705.67,869.26,705.67,877.67,705.46,886.08,705.24,892.21,704.85,898.34,704.46,902.81,703.9,907.28,703.35,911.33,702.67,914.03,702.22,916.82,701.51,919.6,700.8,922.36,700.12,925.12,699.45,927.79,698.96,930.46,698.47,932.94,698.47,935.86,698.47,942.23,700.82,948.59,703.16,955.06,707.32,961.53,711.49,966.43,717.21,971.34,722.92,971.34,729.67,971.34,735.97,965.43,740.04,959.52,744.11,947.93,746.47,936.35,748.84,919.19,749.76,902.03,750.67,879.53,750.67,849.61,750.67,828.71,745.16,807.81,739.65,794.71,728.62,781.6,717.6,775.67,701.06,769.73,684.52,769.73,662.47,769.73,660.67,769.92,655.86,770.11,651.06,770.33,645.6,770.56,640.14,770.75,635.22,770.93,630.3,770.93,628.27,770.93,613.2,769,603.63,767.07,594.05,763.13,588.6,759.19,583.14,753.21,581.11,747.23,579.07,739.13,579.07,728.56,579.07,716.36,583.31,704.16,587.55,691.06,595.42,677.95,603.3,664.29,614.51,650.63,625.72,637.13,639.67,628.36,648.67,619.83,659.04,611.31,669.41,603.61,679.88,595.9,690.34,589.29,700.26,582.68,710.18,577.73,718.28,573.23,725.25,569.34,730.72,565.45,736.18,561.46,739.95,557.46,743.72,553.01,745.7,548.56,747.67,542.93,747.67,537.53,747.67,533.11,746.27,528.68,744.86,525.53,741.83,522.38,738.79,520.65,734.01,518.93,729.23,518.93,722.47,518.93,713.25,521.84,705.56,524.74,697.87,530.03,690.67,535.32,683.47,542.72,676.24,550.13,669,559.13,660.67,574.21,646.5,599.42,622.23,624.64,597.96,655.58,567.3,686.52,536.64,720.96,501.46,755.41,466.27,788.93,430.27,790.06,428.92,790.95,427.8,791.84,426.67,792.46,425.77,793.08,424.87,793.4,424.2,793.73,423.52,793.73,423.07,793.73,422.85,793.61,422.63,793.49,422.42,793.21,422.25,792.93,422.08,792.47,421.98,792.01,421.87,791.33,421.87,788.63,421.87,767.78,426.35,746.93,430.84,720.83,437.47,694.73,444.11,669.83,451.74,644.93,459.37,634.13,465.67,630.08,467.92,626.81,470.46,623.54,472.99,620.56,475.12,617.58,477.26,614.64,478.67,611.71,480.07,608.33,480.07,601.36,480.07,593.55,476.42,585.74,472.76,579.16,466.57,572.57,460.39,568.25,452.23,563.93,444.07,563.93,435.07,563.93,428.1,566.69,421.14,569.44,414.18,574.28,407.77,579.12,401.36,585.7,395.75,592.28,390.15,599.93,385.87,605.33,391.87,602.86,394.8,600.95,397.69,599.05,400.59,597.76,403.35,596.46,406.1,595.8,408.66,595.13,411.22,595.13,413.47,595.13,416.85,596.62,419.61,598.11,422.38,601.21,424.35,604.3,426.32,609.05,427.39,613.81,428.47,620.33,428.47,630.68,428.47,653.17,425.32,675.66,422.17,701.26,417.67,726.85,413.17,751.03,408.22,775.21,403.27,788.93,399.67,792.98,398.77,796.63,396.04,800.28,393.3,803.71,390.37,807.14,387.45,810.45,385.16,813.76,382.87,817.13,382.87,823.21,382.87,832.03,386.77,840.85,390.67,849.01,396.52,857.16,402.37,862.95,409.2,868.73,416.02,868.73,421.87,868.73,425.7,866,428.59,863.26,431.49,858.98,433.8,854.71,436.1,849.5,437.99,844.28,439.87,839.33,441.67,829.43,445.27,809.66,461.4,789.89,477.52,767.11,498.67,744.33,519.82,721.97,542.25,699.61,564.67,684.53,580.87,687.53,581.47,698.56,574.27,708.48,569.53,718.39,564.79,727.28,561.97,736.17,559.16,744.06,558.02,751.96,556.87,758.93,556.87,771.98,556.87,781.77,561.37,791.56,565.86,798.08,574.8,804.61,583.74,807.87,597.12,811.13,610.5,811.13,628.27,810.53,656.47,810.533,656.473,751.13,318.67,748.88,318.9,746.63,319.02,744.38,319.14,742.13,319.2,739.88,319.25,737.63,319.26,735.38,319.27,733.13,319.27,712.88,319.27,695.64,315.66,678.4,312.05,664.96,305.24,651.51,298.44,642.26,288.64,633.01,278.84,628.73,266.47,638.33,259.87,643.28,266.17,650.69,270.89,658.09,275.62,667.88,278.77,677.67,281.92,689.8,283.49,701.93,285.07,716.33,285.07,727.13,285.07,737.63,284.13,748.13,283.19,757.58,282.07,767.03,280.94,775.06,280.01,783.08,279.07,788.93,279.07,801.76,279.07,811.52,282.3,821.28,285.54,827.86,290.54,834.44,295.55,837.79,301.6,841.13,307.64,841.13,313.27,841.13,319.8,836.13,323.07,831.12,326.34,823.58,327.75,816.05,329.15,807.21,329.39,798.38,329.62,790.73,330.07,779.71,331.2,765.57,334.63,751.43,338.06,736.58,342.67,721.73,347.28,707.37,352.51,693.01,357.75,681.53,362.47,677.33,353.47,684.53,350.32,694.61,345.86,704.69,341.4,715.21,336.67,725.73,331.95,735.47,327.48,745.21,323.02,751.73,319.87,751.13,318.67,751.133,318.67] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [772.69,102.13,773.81,110.23,777.4,116.49,780.99,122.75,786.56,127.03,792.13,131.3,799.43,133.52,806.74,135.73,815.29,135.73,819.34,135.73,825.14,135.3,830.94,134.87,837.41,134.08,843.88,133.29,850.47,132.18,857.06,131.08,862.69,129.73,880.91,125.9,913.73,119.85,946.54,113.79,984.34,107.38,1022.14,100.97,1060.13,95.13,1098.12,89.3,1126.69,85.93,1133.67,85.03,1140.29,83.49,1146.9,81.95,1152.64,79.93,1158.38,77.9,1162.97,75.47,1167.57,73.03,1170.49,70.33,1189.84,73.93,1203.7,78.08,1217.55,82.23,1226.44,87.35,1235.33,92.47,1239.51,98.76,1243.69,105.05,1243.69,112.93,1243.69,117.65,1241.36,120.59,1239.02,123.52,1234.92,125.15,1230.81,126.78,1225.21,127.36,1219.62,127.93,1213.09,127.93,1208.37,127.93,1203.34,127.74,1198.32,127.55,1193.14,127.33,1187.97,127.1,1182.72,126.92,1177.47,126.73,1172.29,126.73,1147.09,126.73,1121.07,136.89,1095.04,147.05,1071.64,163.03,1048.24,179,1029.19,198.62,1010.14,218.23,998.89,237.13,992.14,247.7,986.14,262.35,980.14,276.99,975.64,293.98,971.14,310.97,968.51,329.44,965.89,347.91,965.89,366.13,965.89,395.38,974.23,415.4,982.58,435.41,997.54,448.41,1012.5,461.4,1033.22,468.48,1053.94,475.56,1078.69,478.93,1084.77,479.83,1091.29,480.2,1097.82,480.56,1103.89,480.96,1109.97,481.35,1115.14,482.05,1120.32,482.76,1123.69,484.33,1131.57,487.48,1137.05,491.57,1142.54,495.66,1145.97,500.38,1149.4,505.11,1150.94,510.32,1152.49,515.53,1152.49,520.93,1152.49,525.66,1150.41,529.06,1148.33,532.46,1144.39,534.66,1140.45,536.85,1134.77,537.89,1129.09,538.93,1121.89,538.93,1120.09,538.93,1118.18,538.83,1116.27,538.73,1114.24,538.56,1112.22,538.39,1110.08,538.17,1107.94,537.96,1105.69,537.73,1053.04,531.66,1018.24,519,983.44,506.34,962.74,485.98,942.04,465.62,933.56,436.99,925.09,408.36,925.09,370.33,925.09,328.93,938.74,291.37,952.39,253.82,975.34,221.53,998.29,189.24,1028.36,162.93,1058.44,136.63,1091.29,117.73,1090.69,115.93,1070.89,118.18,1036.36,124.09,1001.83,130.01,965.21,138.5,928.59,147,896.2,157.53,863.81,168.05,848.29,179.53,845.36,181.55,842.27,183.59,839.17,185.62,835.69,187.25,832.2,188.89,828.21,189.91,824.21,190.93,819.49,190.93,809.59,190.93,798.6,185.42,787.61,179.9,778.39,171.13,769.16,162.35,763.12,151.44,757.09,140.53,757.09,129.73,757.09,125.23,757.93,121.1,758.77,116.98,760.24,113.38,761.7,109.78,763.67,106.78,765.64,103.78,767.89,101.53,772.69,102.13,772.688,102.128] ) );
    shape.graphics.endFill();

    return shape;
  },
  "耐えて_2" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,1,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,2,2,2,2,3,3,3,3,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [299.8,304.57,318.4,279.37,370,317.17,368.65,318.74,366.34,320.47,364.02,322.19,360.93,323.77,357.84,325.34,354.06,326.62,350.28,327.89,346,328.57,346,615.97,346,627.9,344.4,637.91,342.8,647.92,337.68,655.57,332.56,663.22,322.97,668.28,313.38,673.35,297.4,675.37,297.4,664.12,296.58,656.56,295.75,649.01,292.6,644.17,289.45,639.33,283.23,636.73,277,634.12,266.2,632.77,266.2,624.37,299.2,624.37,301,624.37,302.17,623.88,303.33,623.4,304,622.27,304.68,621.15,304.94,619.31,305.2,617.47,305.2,614.77,305.2,317.77,263.2,317.77,263.2,649.57,263.2,650.47,260.93,652.46,258.67,654.44,254.5,656.47,250.34,658.5,244.47,660.03,238.6,661.57,231.4,661.57,226,661.57,226,317.77,185.8,317.77,185.8,651.37,185.8,652.5,183.54,654.51,181.28,656.53,177.18,658.5,173.07,660.46,167.32,661.92,161.58,663.37,154.6,663.37,148.6,663.37,148.6,317.77,110.2,317.77,110.2,663.37,110.2,664.72,107.82,667.05,105.44,669.37,101.05,671.62,96.67,673.87,90.46,675.52,84.25,677.17,76.6,677.17,70,677.17,70,284.17,117.4,304.57,171.4,304.57,172.97,291.07,174.41,275.44,175.84,259.81,177.03,243.89,178.21,227.97,179.08,212.68,179.95,197.39,180.4,184.57,46,184.57,42.4,170.77,303.4,170.77,335.2,129.37,394.6,172.57,392.8,175.72,390.44,177.98,388.08,180.25,384.7,181.72,381.33,183.18,376.72,183.87,372.1,184.57,365.8,184.57,235.6,184.57,231.33,198.07,226.15,213.69,220.98,229.32,215.35,245.24,209.73,261.16,203.88,276.45,198.03,291.74,192.4,304.57,299.8,304.57,299.803,304.567,563.8,245.17,608.2,285.97,606.63,289.12,604.41,291.29,602.19,293.47,598.98,294.82,595.77,296.17,591.41,296.77,587.06,297.37,581.2,297.37,533.2,297.37,533.2,608.17,533.2,621.44,530.86,632.85,528.52,644.26,521.2,653.1,513.89,661.93,500.3,667.82,486.7,673.72,464.2,675.97,464.2,664.05,461.54,655.82,458.88,647.6,451.9,642.15,444.93,636.69,432.82,633.53,420.7,630.37,401.8,628.57,401.8,619.57,473.8,619.57,477.63,619.57,480.08,618.88,482.52,618.18,483.93,616.72,485.34,615.26,485.87,612.99,486.4,610.72,486.4,607.57,486.4,297.37,353.8,297.37,350.2,284.17,486.4,284.17,486.4,125.77,559.61,132.37,559.16,135.74,558.01,138.27,556.87,140.8,554.06,142.72,551.24,144.63,546.27,146.03,541.31,147.44,533.21,148.56,533.21,284.17,539.81,284.17,563.8,245.17,563.805,245.167,380.2,363.97,402.48,378.59,417.54,393.55,432.61,408.5,441.78,422.84,450.95,437.19,454.88,450.45,458.81,463.72,458.81,474.97,458.81,484.64,456.41,492.51,454.02,500.38,450.03,505.94,446.04,511.51,440.83,514.54,435.63,517.57,430,517.57,427.31,517.57,424.71,516.88,422.11,516.2,419.58,514.79,417.05,513.39,414.56,511.24,412.08,509.09,409.61,506.17,409.83,504.59,409.95,502.93,410.07,501.26,410.13,499.57,410.19,497.88,410.2,496.21,410.21,494.54,410.21,492.97,410.21,477.22,407.26,460.13,404.32,443.04,399.26,426.44,394.19,409.85,387.42,394.67,380.66,379.49,373.01,367.57,380.2,363.97,380.204,363.967] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [790.33,485.68,790.33,494.82,791.6,501.09,792.87,507.36,796.32,511.22,799.77,515.09,805.85,516.78,811.92,518.48,821.52,518.48,829.47,518.48,835.08,518.33,840.69,518.19,844.77,517.93,848.86,517.66,851.84,517.29,854.82,516.93,857.52,516.48,859.32,516.18,861.18,515.7,863.04,515.23,864.87,514.78,866.71,514.33,868.49,514,870.27,513.68,871.92,513.68,873.87,513.68,878.12,515.24,882.36,516.8,886.67,519.58,890.99,522.35,894.25,526.16,897.52,529.98,897.52,534.48,897.52,538.67,893.59,541.39,889.65,544.1,881.92,545.67,874.2,547.25,862.76,547.86,851.32,548.48,836.32,548.48,816.37,548.48,802.44,544.8,788.51,541.12,779.77,533.77,771.04,526.42,767.08,515.4,763.13,504.37,763.13,489.68,763.13,488.48,763.25,485.27,763.38,482.06,763.53,478.43,763.68,474.79,763.8,471.51,763.93,468.23,763.93,466.88,763.93,456.83,762.64,450.44,761.35,444.06,758.73,440.43,756.1,436.79,752.11,435.43,748.13,434.08,742.73,434.08,735.68,434.08,727.54,436.9,719.41,439.73,710.68,444.98,701.94,450.23,692.83,457.7,683.73,465.18,674.73,474.48,668.88,480.47,663.2,487.39,657.51,494.3,652.38,501.27,647.24,508.25,642.83,514.86,638.43,521.47,635.13,526.87,632.13,531.52,629.53,535.17,626.94,538.81,624.28,541.32,621.62,543.84,618.65,545.16,615.68,546.47,611.93,546.47,608.33,546.47,605.38,545.54,602.43,544.6,600.33,542.57,598.23,540.55,597.08,537.36,595.93,534.17,595.93,529.67,595.93,523.52,597.87,518.4,599.8,513.27,603.33,508.47,606.85,503.67,611.79,498.85,616.73,494.02,622.73,488.47,632.78,479.02,649.59,462.84,666.4,446.66,687.03,426.23,707.65,405.79,730.61,382.33,753.58,358.88,775.93,334.88,776.68,333.98,777.27,333.23,777.86,332.48,778.28,331.88,778.69,331.28,778.91,330.83,779.12,330.38,779.12,330.08,779.12,329.93,779.04,329.78,778.96,329.64,778.77,329.53,778.59,329.41,778.28,329.35,777.97,329.28,777.52,329.28,775.72,329.28,761.82,332.26,747.92,335.25,730.53,339.68,713.13,344.1,696.53,349.19,679.93,354.28,672.73,358.48,670.03,359.98,667.85,361.66,665.66,363.35,663.68,364.78,661.69,366.2,659.73,367.14,657.78,368.08,655.53,368.08,650.88,368.08,645.67,365.64,640.46,363.2,636.08,359.08,631.69,354.95,628.81,349.51,625.93,344.08,625.93,338.08,625.93,333.43,627.76,328.79,629.6,324.15,632.83,319.88,636.05,315.6,640.44,311.87,644.83,308.13,649.93,305.28,653.53,309.28,651.88,311.23,650.61,313.16,649.34,315.09,648.48,316.93,647.61,318.77,647.17,320.47,646.73,322.18,646.73,323.68,646.73,325.93,647.72,327.77,648.71,329.62,650.78,330.93,652.84,332.24,656.01,332.96,659.18,333.68,663.53,333.68,670.43,333.68,685.42,331.58,700.41,329.48,717.48,326.48,734.54,323.48,750.66,320.18,766.77,316.88,775.92,314.48,778.62,313.88,781.06,312.05,783.49,310.23,785.77,308.28,788.06,306.33,790.27,304.8,792.47,303.28,794.72,303.28,798.77,303.28,804.66,305.88,810.54,308.48,815.97,312.38,821.41,316.28,825.27,320.83,829.12,325.38,829.12,329.28,829.12,331.83,827.3,333.76,825.47,335.69,822.62,337.23,819.77,338.77,816.3,340.02,812.82,341.28,809.52,342.48,802.92,344.88,789.74,355.63,776.56,366.38,761.37,380.48,746.19,394.58,731.28,409.53,716.37,424.48,706.32,435.28,708.32,435.68,715.67,430.88,722.29,427.71,728.9,424.55,734.82,422.68,740.75,420.8,746.01,420.04,751.27,419.28,755.92,419.28,764.62,419.28,771.15,422.27,777.67,425.26,782.02,431.23,786.37,437.19,788.55,446.11,790.72,455.03,790.72,466.88,790.33,485.68,790.325,485.675,750.73,260.48,749.23,260.63,747.73,260.71,746.23,260.79,744.73,260.83,743.23,260.87,741.73,260.87,740.23,260.88,738.73,260.88,725.23,260.88,713.73,258.47,702.24,256.07,693.28,251.53,684.31,246.99,678.15,240.46,671.98,233.93,669.13,225.68,675.53,221.28,678.83,225.48,683.76,228.63,688.7,231.78,695.23,233.88,701.75,235.98,709.84,237.03,717.92,238.08,727.52,238.08,734.73,238.08,741.73,237.45,748.73,236.83,755.02,236.08,761.32,235.33,766.67,234.7,772.02,234.08,775.92,234.08,784.47,234.08,790.98,236.24,797.49,238.39,801.87,241.73,806.26,245.07,808.49,249.1,810.72,253.13,810.72,256.88,810.72,261.23,807.39,263.41,804.05,265.59,799.02,266.53,794,267.47,788.11,267.62,782.22,267.78,777.12,268.08,769.77,268.83,760.35,271.12,750.92,273.4,741.02,276.48,731.13,279.55,721.55,283.04,711.98,286.53,704.32,289.68,701.52,283.68,706.32,281.58,713.04,278.6,719.76,275.63,726.77,272.48,733.79,269.33,740.28,266.35,746.77,263.38,751.12,261.28,750.73,260.48,750.726,260.479] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [745.69,57.13,746.81,65.23,750.4,71.49,753.99,77.75,759.56,82.03,765.13,86.3,772.43,88.52,779.74,90.73,788.29,90.73,792.34,90.73,798.14,90.3,803.94,89.87,810.41,89.08,816.88,88.29,823.47,87.18,830.06,86.08,835.69,84.73,853.91,80.9,886.73,74.85,919.54,68.79,957.34,62.38,995.14,55.97,1033.13,50.13,1071.12,44.3,1099.69,40.93,1106.67,40.03,1113.29,38.49,1119.9,36.95,1125.64,34.93,1131.38,32.9,1135.97,30.47,1140.57,28.03,1143.49,25.33,1162.84,28.93,1176.7,33.08,1190.55,37.23,1199.44,42.35,1208.33,47.47,1212.51,53.76,1216.69,60.05,1216.69,67.93,1216.69,72.65,1214.36,75.59,1212.02,78.52,1207.92,80.15,1203.81,81.78,1198.21,82.36,1192.62,82.93,1186.09,82.93,1181.37,82.93,1176.34,82.74,1171.32,82.55,1166.14,82.33,1160.97,82.1,1155.72,81.92,1150.47,81.73,1145.29,81.73,1120.09,81.73,1094.07,91.89,1068.04,102.05,1044.64,118.03,1021.24,134,1002.19,153.62,983.14,173.23,971.89,192.13,965.14,202.7,959.14,217.35,953.14,231.99,948.64,248.98,944.14,265.97,941.51,284.44,938.89,302.91,938.89,321.13,938.89,350.38,947.23,370.4,955.58,390.41,970.54,403.41,985.5,416.4,1006.22,423.48,1026.94,430.56,1051.69,433.93,1057.77,434.83,1064.29,435.2,1070.82,435.56,1076.89,435.96,1082.97,436.35,1088.14,437.05,1093.32,437.76,1096.69,439.33,1104.57,442.48,1110.05,446.57,1115.54,450.66,1118.97,455.38,1122.4,460.11,1123.94,465.32,1125.49,470.53,1125.49,475.93,1125.49,480.66,1123.41,484.06,1121.33,487.46,1117.39,489.66,1113.45,491.85,1107.77,492.89,1102.09,493.93,1094.89,493.93,1093.09,493.93,1091.18,493.83,1089.27,493.73,1087.24,493.56,1085.22,493.39,1083.08,493.17,1080.94,492.96,1078.69,492.73,1026.04,486.66,991.24,474,956.44,461.34,935.74,440.98,915.04,420.62,906.56,391.99,898.09,363.36,898.09,325.33,898.09,283.93,911.74,246.37,925.39,208.82,948.34,176.53,971.29,144.24,1001.36,117.93,1031.44,91.63,1064.29,72.73,1063.69,70.93,1043.89,73.18,1009.36,79.09,974.83,85.01,938.21,93.5,901.59,102,869.2,112.53,836.81,123.05,821.29,134.53,818.36,136.55,815.27,138.59,812.17,140.62,808.69,142.25,805.2,143.89,801.21,144.91,797.21,145.93,792.49,145.93,782.59,145.93,771.6,140.42,760.61,134.9,751.39,126.13,742.16,117.35,736.12,106.44,730.09,95.53,730.09,84.73,730.09,80.23,730.93,76.1,731.77,71.98,733.24,68.38,734.7,64.78,736.67,61.78,738.64,58.78,740.89,56.53,745.69,57.13,745.688,57.128] ) );
    shape.graphics.endFill();

    return shape;
  },
  "絶えた" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,2,2,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,2,3,3,3,3,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [69.5,347.21,68.93,349.89,67.72,351.87,66.51,353.86,64.2,355.16,61.89,356.47,58.26,357.11,54.62,357.74,49.22,357.73,42.93,377.72,35.24,397.32,27.54,416.91,18.64,434.76,9.75,452.61,-0.24,468.05,-10.23,483.48,-21.11,495.17,-30.48,489.95,-24.24,476.03,-18.23,457.84,-12.22,439.65,-6.86,418.99,-1.5,398.34,3,376.14,7.5,353.94,10.72,332.01,69.5,347.21,69.502,347.214,508.61,427.24,505.25,503.37,513.45,506.43,518.33,508.61,523.22,510.78,525.78,512.76,528.34,514.73,529.06,516.83,529.79,518.94,529.66,521.86,529.33,529.28,525.21,534.72,521.08,540.16,511.59,543.51,502.09,546.86,486.44,548.08,470.79,549.29,447.41,548.26,307.75,542.1,285.27,541.11,270.97,537.77,256.66,534.42,248.67,526.81,240.67,519.19,238.04,506.34,235.42,493.49,236.3,473.49,248.62,194.16,242,201.3,235.19,207.98,228.39,214.66,221.47,220.88,214.55,227.11,207.56,232.88,200.57,238.66,193.57,243.98,188.96,239.57,188.94,240.17,194.95,246.74,199.12,253.18,203.28,259.61,205.83,265.69,208.38,271.77,209.42,277.39,210.47,283.01,210.25,287.96,209.96,294.7,207.72,300.23,205.49,305.76,201.94,309.66,198.39,313.56,193.83,315.61,189.27,317.66,184.33,317.44,181.86,317.33,179.42,316.64,176.98,315.96,174.62,314.61,172.26,313.27,169.99,311.24,167.72,309.2,165.6,306.41,165.57,301.9,165.03,297.06,164.49,292.23,163.59,287.18,162.69,282.12,161.49,276.92,160.3,271.71,158.95,266.48,122.01,273.25,110.46,535.2,110.4,536.55,107.5,538.84,104.61,541.14,99.44,543.27,94.28,545.41,87.14,546.84,80.01,548.27,71.46,547.9,64.27,547.58,76.01,281.43,68.98,282.48,61.61,283.61,54.24,284.75,46.53,285.99,38.82,287.23,30.76,288.56,22.71,289.89,14.31,291.33,12.61,294.18,10.64,296.25,8.67,298.32,6.59,299.69,4.5,301.07,2.37,301.78,0.23,302.49,-1.8,302.63,-18.68,249.63,-13.51,249.86,-7.04,250.14,-0.57,250.41,7.02,250.69,14.61,250.97,23.22,251.23,31.84,251.48,41.29,251.68,55.08,229.99,69.68,205.57,84.28,181.14,98.27,156.37,112.25,131.59,124.92,107.65,137.58,83.7,147.5,62.97,212.17,94.65,211.2,96.19,209.9,97.36,208.59,98.53,206.86,99.3,205.14,100.07,202.97,100.41,200.79,100.76,198.09,100.64,196.97,100.59,195.83,100.43,194.69,100.28,193.47,100.06,192.24,99.83,190.88,99.56,189.52,99.28,187.96,98.99,175.97,115.58,161.01,134.74,146.05,153.9,129.4,173.88,112.75,193.87,95.06,213.81,77.36,233.75,59.89,251.9,70.47,252.14,81.79,252.31,93.11,252.48,104.98,252.61,116.86,252.74,129.19,252.84,141.53,252.94,154.14,253.05,151.72,246.64,148.98,240.38,146.24,234.12,143.29,228.25,140.34,222.37,137.23,217,134.12,211.63,130.94,206.98,137.12,203.05,145.27,207.24,152.32,211.48,159.37,215.72,165.43,219.99,171.49,224.25,176.62,228.53,181.76,232.8,186.07,237.04,202.69,217.73,220.05,191.22,237.41,164.72,253.92,133.58,270.44,102.44,285.34,67.94,300.23,33.45,311.92,-1.85,379.17,25.74,378.17,28.17,376.52,29.99,374.87,31.8,372.18,32.86,369.48,33.93,365.54,34.18,361.6,34.42,356,33.73,353.03,39.68,350.06,45.52,347.1,51.35,344.08,57.08,341.07,62.8,338,68.41,334.93,74.01,331.76,79.5,419.87,83.39,448.66,57.03,495.75,105.96,493.89,107.45,491.55,108.49,489.21,109.53,486.26,110.19,483.3,110.85,479.65,111.16,475.99,111.47,471.49,111.49,463.68,119.93,454.06,130.28,444.43,140.63,433.76,151.42,423.1,162.21,411.78,172.71,400.46,183.21,389.26,191.95,463.59,195.23,484.5,170.32,537.96,211.12,536.53,212.86,534.34,214.43,532.15,216.01,529.28,217.34,526.4,218.68,522.88,219.75,519.37,220.81,515.28,221.53,508.38,377.98,508.37,378.21,505.68,380.27,502.99,382.34,497.2,384.62,491.41,386.9,482.32,388.57,473.23,390.24,460.42,389.68,461.82,357.91,288.59,350.27,283.03,476.15,282.69,484.01,283.26,488.59,283.84,493.17,286.61,495.6,289.37,498.03,294.95,498.88,300.54,499.74,310.2,500.17,446.87,506.19,451.14,506.38,454.96,506.34,458.78,506.29,462.14,505.59,465.49,504.89,468.36,503.34,471.24,501.79,473.62,498.97,476,495.92,479.07,490.04,482.13,484.16,485.85,475.26,489.56,466.35,493.91,454.34,498.26,442.32,503.22,427,508.61,427.24,508.607,427.24,-7.22,84.98,-0.1,87.09,6.23,89.39,12.57,91.69,18.2,94.13,23.84,96.57,28.81,99.15,33.78,101.72,38.17,104.39,43.44,92.24,49.15,78.12,54.85,64.01,60.58,49,66.31,34,71.85,18.64,77.39,3.27,82.32,-11.37,148.99,15.59,147.97,18.25,146.34,20.1,144.7,21.95,142.06,23.02,139.42,24.08,135.6,24.37,131.78,24.67,126.39,24.2,118,35.77,108.8,47.69,99.61,59.6,90.09,71.17,80.57,82.75,70.97,93.63,61.36,104.52,52.16,114.02,58.46,119.25,62.8,124.57,67.13,129.88,69.78,135.07,72.42,140.25,73.51,145.2,74.59,150.14,74.39,154.64,74.15,160.26,72.06,165,69.97,169.74,66.67,173.14,63.37,176.54,59.16,178.38,54.95,180.21,50.45,180.01,48.2,179.91,45.98,179.35,43.75,178.79,41.54,177.74,39.34,176.68,37.15,175.12,34.97,173.55,32.81,171.42,31.46,161.23,27.17,149.99,22.88,138.76,16.72,127.85,10.55,116.93,3.05,107.02,-4.45,97.11,-12.22,89.56,-7.22,84.98,-7.218,84.976,141.99,337.8,159.7,349.84,171.49,361.89,183.28,373.95,190.27,385.35,197.25,396.75,199.99,407.16,202.73,417.58,202.34,426.35,202.01,433.99,199.65,440.19,197.29,446.39,193.61,450.73,189.93,455.08,185.27,457.35,180.61,459.62,175.66,459.4,173.19,459.29,170.75,458.59,168.32,457.9,165.96,456.5,163.6,455.1,161.34,452.94,159.08,450.79,156.96,447.77,157.95,435.42,156.52,421.18,155.1,406.94,151.95,392.67,148.81,378.4,144.3,365.03,139.8,351.67,134.64,341.08,141.99,337.8,141.988,337.798,374.27,191.29,380.56,181.43,387.06,169.41,393.56,157.38,399.74,144.82,405.93,132.25,411.54,119.96,417.15,107.67,421.66,97.28,323.95,92.97,317.4,103.72,310.64,114.01,303.88,124.3,296.91,134.12,289.95,143.95,282.78,153.32,275.61,162.69,268.23,171.6,303.54,188.17,374.27,191.29,374.271,191.289,295.17,201.01,289.17,337.08,353.3,339.91,359.31,203.84,295.17,201.01,295.166,201.013,468.4,208.65,403.66,205.8,397.66,341.87,462.4,344.72,468.4,208.65,468.399,208.653] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [782.77,618.35,783.67,632.04,786.2,641.3,788.72,650.56,794.26,656,799.81,661.44,809.07,663.38,818.33,665.32,832.7,664.38,844.59,663.6,852.97,662.83,861.35,662.07,867.44,661.27,873.53,660.48,877.96,659.63,882.39,658.79,886.38,657.85,889.05,657.22,891.78,656.33,894.51,655.44,897.22,654.58,899.92,653.73,902.56,653.07,905.19,652.41,907.66,652.24,910.58,652.05,917.09,653.98,923.59,655.9,930.32,659.63,937.05,663.36,942.31,668.74,947.58,674.13,948.02,680.86,948.44,687.15,942.81,691.6,937.18,696.04,925.77,699.16,914.37,702.28,897.31,704.32,880.25,706.36,857.79,707.83,827.93,709.79,806.72,705.66,785.51,701.52,771.71,691.38,757.91,681.24,750.9,665.12,743.9,649.01,742.45,627.01,742.34,625.21,742.21,620.4,742.08,615.59,741.95,610.13,741.82,604.67,741.68,599.75,741.55,594.82,741.41,592.8,740.43,577.76,737.87,568.33,735.32,558.91,731.03,553.72,726.75,548.53,720.64,546.9,714.54,545.26,706.46,545.79,695.91,546.48,684.01,551.51,672.12,556.53,659.56,565.25,647,573.97,634.1,586.05,621.2,598.13,608.65,612.94,600.48,622.49,592.65,633.39,584.83,644.3,577.82,655.24,570.82,666.19,564.87,676.52,558.93,686.85,554.52,695.26,550.48,702.51,546.96,708.22,543.44,713.93,539.7,717.95,535.96,721.97,531.64,724.24,527.33,726.5,521.72,726.87,516.33,727.22,511.82,726.11,507.31,725,503.97,722.17,500.63,719.35,498.59,714.69,496.56,710.03,496.12,703.3,495.51,694.09,497.91,686.23,500.31,678.37,505.11,670.84,509.92,663.31,516.83,655.6,523.75,647.89,532.18,639,546.3,623.86,569.88,597.99,593.45,572.12,622.32,539.51,651.18,506.89,683.25,469.53,715.32,432.16,746.41,394.04,747.45,392.62,748.26,391.44,749.08,390.26,749.63,389.32,750.19,388.38,750.48,387.69,750.76,386.99,750.73,386.54,750.72,386.32,750.58,386.11,750.44,385.91,750.15,385.76,749.86,385.61,749.39,385.53,748.93,385.46,748.26,385.5,745.56,385.68,725.05,391.52,704.54,397.36,678.93,405.69,653.32,414.02,628.97,423.26,604.62,432.51,594.26,439.5,590.36,442.01,587.27,444.75,584.17,447.49,581.33,449.82,578.5,452.15,575.66,453.75,572.82,455.34,569.46,455.56,562.5,456.02,554.46,452.88,546.43,449.74,539.46,444,532.49,438.26,527.64,430.4,522.79,422.55,522.2,413.56,521.75,406.6,524.04,399.48,526.34,392.36,530.75,385.65,535.15,378.93,541.35,372.9,547.55,366.88,554.91,362.11,560.69,367.75,558.41,370.83,556.7,373.84,554.99,376.86,553.88,379.69,552.77,382.53,552.27,385.13,551.78,387.72,551.92,389.97,552.14,393.34,553.81,396,555.48,398.66,558.7,400.42,561.91,402.19,566.73,402.95,571.54,403.71,578.05,403.29,588.38,402.61,610.62,397.99,632.85,393.38,658.1,387.21,683.34,381.05,707.14,374.52,730.95,368,744.41,363.51,748.39,362.35,751.85,359.38,755.31,356.41,758.54,353.26,761.77,350.12,764.93,347.62,768.08,345.12,771.45,344.9,777.51,344.5,786.57,347.82,795.63,351.13,804.15,356.43,812.67,361.74,818.89,368.17,825.11,374.6,825.49,380.44,825.74,384.26,823.2,387.33,820.66,390.4,816.54,392.98,812.43,395.56,807.35,397.78,802.27,400,797.45,402.12,787.8,406.36,769.13,423.75,750.46,441.13,729.11,463.73,707.76,486.33,686.92,510.17,666.07,534.01,652.09,551.16,655.12,551.56,665.65,543.65,675.24,538.27,684.83,532.89,693.51,529.5,702.2,526.11,710,524.45,717.8,522.8,724.76,522.34,737.78,521.48,747.85,525.32,757.91,529.17,765,537.66,772.1,546.16,776.23,559.3,780.36,572.43,781.52,590.17,782.77,618.35,782.774,618.347,701.39,285.16,699.16,285.53,696.92,285.8,694.68,286.07,692.44,286.27,690.2,286.47,687.95,286.63,685.71,286.79,683.46,286.93,663.26,288.26,645.82,285.79,628.38,283.31,614.52,277.4,600.66,271.49,590.78,262.32,580.91,253.15,575.83,241.08,584.98,233.87,590.33,239.83,598.03,244.06,605.73,248.29,615.7,250.79,625.67,253.29,637.88,254.07,650.09,254.85,664.46,253.91,675.24,253.2,685.65,251.58,696.07,249.95,705.43,248.21,714.78,246.47,722.73,245.01,730.67,243.55,736.51,243.17,749.31,242.33,759.26,244.92,769.21,247.5,776.11,252.07,783,256.63,786.74,262.45,790.47,268.26,790.84,273.88,791.27,280.39,786.49,283.98,781.7,287.57,774.27,289.47,766.85,291.37,758.05,292.18,749.25,292.99,741.65,293.94,730.72,295.78,716.84,300.13,702.95,304.48,688.44,310.06,673.92,315.63,659.93,321.79,645.94,327.95,634.8,333.42,630.02,324.71,637,321.1,646.76,315.99,656.53,310.87,666.72,305.47,676.9,300.07,686.33,294.98,695.76,289.89,702.06,286.32,701.39,285.16,701.387,285.157] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [798.4,127.95,802.92,133.44,807.78,137.43,812.64,141.43,818.32,143.89,824,146.35,830.75,147.26,837.49,148.16,845.79,147.47,853.64,146.81,862.98,145.31,872.32,143.82,881.75,141.9,891.19,139.98,900.02,137.85,908.86,135.72,915.69,133.8,916.61,125.82,917.44,116.58,918.28,107.35,918.81,98.16,919.34,88.97,919.45,80.48,919.56,71.98,919.01,65.48,918.4,58.08,917.11,51.8,915.82,45.52,913.13,41.06,910.45,36.6,905.99,34.31,901.54,32.02,894.59,32.6,891.68,32.84,888.75,33.13,885.83,33.43,882.89,33.95,879.94,34.48,876.95,35.34,873.97,36.21,870.92,37.59,868.18,33.6,870.24,28.47,873.06,23.37,875.89,18.28,880.85,14.03,885.8,9.78,893.54,6.76,901.28,3.74,913.17,2.75,923.48,1.89,934.98,3.49,946.48,5.1,956.28,8.85,966.07,12.61,972.72,18.35,979.37,24.08,979.99,31.48,980.37,35.97,979.6,39,978.83,42.04,977.41,44.64,975.99,47.25,974.17,49.92,972.35,52.59,970.63,56.35,969.16,60.31,967.65,66.54,966.14,72.77,964.55,80.87,962.97,88.96,961.3,98.7,959.63,108.45,957.84,119.43,982.34,109.94,998.42,101.9,1014.51,93.87,1024.56,86.54,1034.62,79.2,1039.84,72.19,1045.05,65.18,1047.82,57.72,1053.15,56.68,1062.62,56.56,1073.22,56.62,1083.82,56.69,1092.87,58.25,1101.92,59.8,1108.08,63.51,1114.24,67.22,1114.84,74.4,1115.35,80.45,1112.07,85.82,1108.79,91.18,1102.22,96.3,1095.65,101.42,1086.03,106.53,1076.41,111.63,1064.23,117.16,1050.96,123.24,1036.42,129.14,1021.88,135.04,1007.32,140.44,992.75,145.83,978.79,150.55,964.83,155.28,952.72,159,947.85,187.18,940.19,225.09,932.54,263,924.45,300.6,916.35,338.19,909.01,370.43,901.67,402.68,897.43,419.51,892.04,444.12,887.56,461.72,883.09,479.32,877.95,490.76,872.81,502.2,866.21,507.89,859.61,513.59,849.97,514.4,845.26,514.79,841.81,513.25,838.36,511.7,835.94,507.67,833.51,503.64,831.99,496.85,830.48,490.06,829.63,479.97,829.39,477.06,829.23,473.9,829.07,470.74,828.95,467.31,828.83,463.88,828.74,460.15,828.64,456.42,828.53,452.37,836.48,439.51,843,426.46,849.51,413.42,854.77,400.73,860.03,388.04,864.14,375.98,868.25,363.93,871.4,353.05,876.01,337.99,882.05,314.97,888.08,291.95,893.96,266.34,899.83,240.73,904.76,215.21,909.68,189.69,912.06,169.62,903.45,171.92,895.7,173.8,887.94,175.69,881.01,177.11,874.07,178.54,867.93,179.49,861.79,180.45,856.41,180.9,838.25,182.42,826.14,177.51,814.04,172.61,806.67,164.81,799.3,157.02,796.01,148.1,792.71,139.19,792.17,132.68,798.4,127.95,798.397,127.946,1075.04,311.34,1071.57,318.4,1068.87,325.99,1066.17,333.57,1064.45,341.28,1062.72,348.98,1062.06,356.62,1061.4,364.26,1062,371.44,1064.01,395.43,1077.23,407.41,1090.45,419.39,1108.61,423.91,1126.77,428.43,1146.72,427.77,1166.68,427.11,1182.15,425.81,1189.77,425.18,1196.28,424.52,1202.78,423.87,1208.65,423.15,1214.51,422.43,1219.99,421.64,1225.46,420.84,1231.03,419.92,1235.7,419.08,1239.86,417.92,1244.01,416.77,1247.53,415.68,1251.06,414.6,1253.89,413.78,1256.71,412.96,1258.73,412.79,1265.91,412.19,1273.92,413.94,1281.93,415.69,1288.77,419.23,1295.62,422.78,1300.3,427.86,1304.97,432.93,1305.48,438.99,1306.12,446.61,1301.04,451.76,1295.97,456.9,1285.81,460.35,1275.66,463.79,1260.74,465.93,1245.82,468.06,1226.76,469.65,1186.85,472.99,1153.61,472.01,1120.38,471.04,1095.98,462.75,1071.58,454.46,1057.09,437.35,1042.6,420.25,1040.18,391.32,1039.36,381.46,1040.51,370.95,1041.66,360.45,1044.83,349.69,1047.99,338.93,1053.18,328.09,1058.37,317.25,1065.62,306.71,1075.04,311.34,1075.04,311.339,1114.59,251.44,1122.32,244.01,1130.95,236.21,1139.57,228.4,1148.31,220.84,1157.05,213.28,1165.51,206.28,1173.98,199.28,1181.39,193.47,1165.4,193.9,1149.24,196.26,1133.09,198.62,1116.89,203.3,1100.68,207.99,1084.48,215.2,1068.28,222.42,1052.2,232.57,1044.92,224.75,1060.87,207.61,1079.42,194.86,1097.97,182.12,1118.07,173.32,1138.16,164.53,1159.27,159.47,1180.39,154.42,1201.46,152.65,1215.81,151.45,1228.21,153.22,1240.61,154.99,1249.85,158.84,1259.09,162.7,1264.57,168.21,1270.06,173.71,1270.58,179.99,1271.16,186.94,1268.47,190.5,1265.77,194.05,1261.06,195.69,1256.34,197.33,1250.22,197.78,1244.11,198.24,1237.85,198.98,1225.11,200.5,1211.46,205.43,1197.82,210.36,1183.45,218.06,1169.08,225.75,1154.06,235.88,1139.05,246,1123.56,257.91,1114.59,251.44,1114.587,251.435] ) );
    shape.graphics.endFill();

    return shape;
  },
  "の気持ち" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0x0,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [163.03,610.48,196.46,600.77,219.71,578.04,242.96,555.31,257.49,523.75,272.02,492.18,278.56,453.87,285.1,415.55,285.1,374.66,285.1,328.14,279.67,286.54,274.24,244.94,262.25,213.63,250.27,182.32,231.15,163.98,212.04,145.65,184.67,145.65,182.37,145.65,178.93,146.13,175.49,146.62,171.67,147.52,167.86,148.41,164.05,149.67,160.25,150.93,157.22,152.46,160.13,156.81,162.41,163.88,164.69,170.95,166.26,179.89,167.84,188.84,168.67,199.23,169.49,209.63,169.49,220.62,169.49,267.65,162.13,325.92,154.77,384.2,142.33,435.31,129.88,486.43,113.5,521.19,97.12,555.95,79.07,555.95,70.48,555.95,63.3,545.68,56.12,535.4,50.94,516.68,45.76,497.96,42.88,471.7,40,445.45,40,413.5,40,354.46,50.87,302.14,61.74,249.82,81.17,210.65,100.61,171.48,127.46,148.68,154.32,125.88,186.29,125.88,216.08,125.88,238.92,144.48,261.77,163.09,277.27,196.51,292.77,229.93,300.72,276.26,308.68,322.6,308.68,378.06,308.68,425.86,300.8,468.02,292.93,510.18,275.74,543.09,258.54,576,231.29,597.84,204.05,619.68,165.3,626.84,163.03,610.48,163.035,610.479,148.5,156.55,130.1,166.01,113.87,188.63,97.64,211.25,85.53,244.47,73.42,277.7,66.4,320.26,59.37,362.81,59.37,412.14,59.37,432.08,60.79,449.58,62.21,467.09,64.9,480.13,67.6,493.16,71.5,500.7,75.4,508.24,80.36,508.24,94.17,508.24,107.35,476.04,120.53,443.83,130.82,396.8,141.12,349.78,147.39,296.61,153.67,243.45,153.67,201.53,153.67,194.63,153.23,187.6,152.78,180.58,152.06,174.44,151.33,168.31,150.4,163.58,149.47,158.85,148.5,156.55,148.503,156.549] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0x0,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,2,2,2,3,3,3,3,2,2,2] ), $.toNumberVector( [634.19,132.01,633.22,135.85,631.99,138.56,630.77,141.28,628.98,143,627.19,144.73,624.7,145.53,622.2,146.33,618.69,146.33,418.47,146.33,410.6,175.21,401.92,201.65,393.24,228.09,383.92,251.54,374.59,275,364.7,295.18,354.81,315.36,344.52,331.72,340.32,324.22,350.5,301.47,360.87,270.22,371.25,238.98,380.97,202.04,390.69,165.11,399.31,123.9,407.94,82.68,414.6,40,447.86,67.26,447.25,70.08,446.34,72.21,445.44,74.33,443.98,75.61,442.53,76.89,440.41,77.23,438.29,77.57,435.26,76.8,433.81,83.71,432.3,90.48,430.78,97.25,429.21,103.9,427.64,110.54,426,117.06,424.37,123.58,422.67,129.97,588.65,129.97,604.48,87.71,634.19,132.01,634.187,132.013,378.11,392.37,391.67,403.11,403.85,413.82,416.04,424.54,426.91,435.14,437.78,445.75,447.36,456.21,456.94,466.67,465.3,476.89,471.59,461.04,477.32,444.76,483.06,428.48,488.14,412.06,493.23,395.63,497.63,379.22,502.03,362.81,505.66,346.71,536.34,378.75,535.73,380.79,535.04,382.32,534.34,383.86,533.43,384.88,532.52,385.9,531.34,386.41,530.16,386.92,528.59,386.92,527.98,386.92,527.42,386.91,526.86,386.9,526.29,386.84,525.71,386.77,525.09,386.63,524.47,386.5,523.75,386.24,519.75,400.3,515.15,414.46,510.56,428.63,505.38,442.81,500.2,457,494.45,471.16,488.71,485.33,482.41,499.38,498.27,521.36,508.99,541.47,519.7,561.58,526.21,578.96,532.72,596.34,535.5,610.57,538.28,624.79,538.28,635.02,538.28,640.39,537.64,644.46,537.01,648.54,535.86,651.29,534.7,654.04,533.1,655.43,531.5,656.83,529.56,656.83,528.59,656.83,527.56,656.44,526.53,656.06,525.44,655.29,524.35,654.53,523.2,653.38,522.05,652.23,520.84,650.69,517.21,638.17,512.02,623.98,506.83,609.8,500.17,594.46,493.51,579.13,485.42,562.9,477.32,546.67,467.88,530.05,456.5,552.29,443.68,573.42,430.87,594.55,416.74,613.72,402.6,632.89,387.18,649.67,371.77,666.45,355.18,680,352.27,669.1,366.8,653.5,380.51,635.01,394.22,616.51,406.97,595.74,419.71,574.97,431.42,552.26,443.14,529.54,453.67,505.52,445.44,492.23,436.42,479,427.4,465.77,417.62,452.86,407.85,439.96,397.32,427.5,386.79,415.04,375.52,403.28,378.11,392.37,378.105,392.374,641.29,550.5,637.42,632.97,639.35,637.83,640.81,642.16,642.26,646.5,643.23,650.27,644.2,654.04,644.68,657.22,645.17,660.4,645.17,662.96,645.17,666.03,644.45,669.07,643.74,672.12,642.38,674.55,641.02,676.98,639.04,678.49,637.05,680,634.51,680,631.85,680,628.98,678.55,626.12,677.1,623.25,674.55,620.37,671.99,617.57,668.5,614.77,665.01,612.23,660.92,598.06,640.21,588.73,608.99,579.41,577.76,573.72,535.85,568.03,493.93,565.36,441.24,562.7,388.54,561.85,324.9,376.49,324.9,374.23,308.54,558.62,308.54,568.95,279.92,596.73,324.22,595.88,326.01,594.66,327.65,593.45,329.29,591.84,330.69,590.24,332.1,588.23,333.23,586.23,334.36,583.81,335.12,583.81,385.47,585.58,430.18,587.35,474.89,591.68,511.31,596.01,547.73,603.29,574.55,610.57,601.36,621.59,615.93,622.2,616.7,622.69,617.33,623.19,617.96,623.61,618.4,624.03,618.85,624.41,619.09,624.78,619.34,625.14,619.34,626.35,619.34,628.25,610.3,630.15,601.26,632.09,589.44,634.02,577.61,635.68,566.15,637.33,554.68,638.06,549.82,641.29,550.5,641.291,550.5,410.4,216.53,566.7,216.53,581.55,176.31,610.29,218.57,609.32,222.41,608.05,225.12,606.79,227.84,605,229.56,603.22,231.29,600.8,232.09,598.38,232.89,595.11,232.89,412.34,232.89,410.4,216.53,410.398,216.528] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0x0,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,1,2,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,2,2,2,2,3,3,3,3,2,2,2,1,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [738.17,366.48,743.98,362.9,750.02,359.31,756.05,355.72,762.23,352.08,768.4,348.43,774.68,344.72,780.96,341,787.25,337.17,788.54,347.39,783.46,352.5,777.77,358.14,772.08,363.77,765.78,369.97,759.48,376.17,752.58,382.95,745.68,389.73,738.17,397.15,738.17,611.16,738.17,624.45,737.08,635.91,736,647.37,732.64,656.31,729.28,665.26,723.05,671.35,716.81,677.44,706.52,680,706.52,667.73,704.85,659.74,703.18,651.76,699.46,646.77,695.73,641.79,689.76,639.17,683.8,636.55,675.2,635.02,675.2,624.11,711.04,624.11,712.98,624.11,714.23,623.42,715.48,622.73,716.21,621.13,716.94,619.53,717.22,616.92,717.5,614.31,717.5,610.48,717.5,416.23,713.63,420.06,709.57,423.91,705.52,427.75,701.31,431.65,697.11,435.55,692.75,439.52,688.4,443.49,683.92,447.58,683.55,450.65,682.9,453.21,682.25,455.76,681.37,457.81,680.5,459.85,679.42,461.38,678.35,462.92,677.14,463.94,664.54,406,668.66,404.22,674.22,401.45,679.79,398.68,686.54,395.1,693.29,391.52,701.1,387.22,708.9,382.92,717.5,378.06,717.5,213.8,668.42,213.8,666.16,197.44,717.5,197.44,717.5,48.86,753.02,54.99,752.78,59.08,752.15,62.1,751.53,65.11,749.95,67.35,748.38,69.59,745.57,71.19,742.77,72.8,738.17,74.08,738.17,197.44,750.12,197.44,763.36,158.59,788.87,199.49,787.9,203.32,786.68,206.04,785.46,208.75,783.7,210.48,781.94,212.2,779.51,213,777.08,213.8,773.69,213.8,738.17,213.8,738.17,366.48,738.167,366.475,928.69,403.96,942.58,364.43,967.77,406.01,966.8,409.84,965.58,412.56,964.37,415.27,962.64,417,960.92,418.72,958.55,419.52,956.18,420.32,952.91,420.32,913.19,420.32,913.19,610.48,913.19,623.77,912.1,635.13,911.01,646.5,907.38,655.38,903.75,664.26,896.85,670.38,889.94,676.51,878.32,679.32,878.32,665.77,876.01,657.63,873.7,649.5,869.03,644.9,864.37,640.3,857.34,638.29,850.3,636.29,840.86,635.02,840.86,624.11,885.1,624.11,887.28,624.11,888.71,623.31,890.15,622.51,890.99,620.79,891.84,619.06,892.19,616.35,892.53,613.63,892.53,609.8,892.53,420.32,776.92,420.32,774.98,403.96,892.53,403.96,892.53,327.63,926.43,333.08,926.31,336.66,925.77,339.28,925.23,341.9,923.81,343.81,922.39,345.73,919.85,347.07,917.31,348.41,913.19,349.44,913.19,403.96,928.69,403.96,928.694,403.961,789.51,172.23,787.58,155.87,854.42,155.87,854.42,52.27,890.59,58.4,890.35,62.75,889.49,65.79,888.63,68.84,886.88,71.01,885.12,73.18,882.32,74.7,879.53,76.21,875.41,77.49,875.41,155.87,910.61,155.87,925.46,114.97,953.24,157.91,952.27,161.75,951.05,164.46,949.83,167.18,948.07,168.9,946.31,170.63,943.88,171.43,941.45,172.22,938.06,172.22,875.41,172.22,875.41,285.37,925.79,285.37,940.64,244.47,968.74,287.41,967.77,291.24,966.55,293.96,965.34,296.68,963.61,298.4,961.89,300.13,959.52,300.92,957.15,301.72,953.88,301.72,777.89,301.72,775.95,285.37,854.42,285.37,854.42,172.23,789.51,172.23,789.513,172.226,795.97,465.3,810.75,473.23,820.72,483.92,830.69,494.61,836.74,506.37,842.8,518.13,845.38,530.1,847.96,542.07,847.96,552.54,847.96,559.45,846.95,565.21,845.93,570.97,844.21,575.12,842.48,579.28,840.2,581.59,837.91,583.9,835.37,583.9,834.16,583.9,832.9,583.38,831.64,582.86,830.36,581.77,829.09,580.68,827.83,579.01,826.57,577.34,825.36,575.04,824.15,562,821,547.53,817.86,533.06,813.53,519.06,809.2,505.07,804.06,492.51,798.92,479.96,793.71,470.76,795.97,465.3,795.973,465.304] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0x0,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [1167.34,137.47,1168.19,138.74,1169.58,139.54,1170.97,140.34,1172.63,140.79,1174.3,141.24,1176.11,141.4,1177.92,141.56,1179.61,141.56,1184.22,141.56,1188.73,141.87,1193.25,142.19,1196.85,144.11,1200.45,146.03,1202.73,150.18,1205,154.34,1205.13,162,1205.13,167.63,1203.83,171.72,1202.54,175.8,1199.64,179.38,1196.73,182.96,1192.05,186.54,1187.36,190.12,1180.58,194.72,1174.41,198.81,1163.37,204.46,1152.33,210.12,1139.01,215.93,1125.69,221.75,1111.38,227.02,1097.07,232.29,1084.35,235.61,1082.29,258.87,1080.07,286.84,1077.84,314.8,1076,340.75,1074.15,366.69,1072.95,387.24,1071.76,407.8,1071.76,416.23,1071.76,419.04,1071.88,421.1,1072,423.15,1072.24,424.49,1072.48,425.84,1072.85,426.49,1073.21,427.13,1073.69,427.13,1073.94,427.13,1074.23,426.9,1074.53,426.67,1074.86,426.28,1075.2,425.9,1075.56,425.41,1075.91,424.92,1076.28,424.41,1086.93,408.82,1099.1,395.58,1111.26,382.34,1123.71,372.69,1136.15,363.05,1148.26,357.6,1160.36,352.16,1170.9,352.16,1188.33,352.16,1201.31,362.34,1214.29,372.52,1222.89,390.67,1231.48,408.82,1235.74,433.82,1240,458.83,1240,488.48,1240,529.88,1228.26,560.26,1216.53,590.63,1194.55,610.82,1172.57,631.01,1141.09,641.45,1109.62,651.88,1070.14,653.42,1068.53,636.38,1104.25,631.01,1131.88,618.72,1159.5,606.43,1178.36,587.64,1197.22,568.86,1206.99,543.79,1216.75,518.72,1216.75,487.79,1216.75,462.49,1214.35,441.86,1211.95,421.23,1206.26,406.6,1200.57,391.97,1191.14,383.99,1181.71,376.02,1167.67,376.02,1155.19,376.02,1142.85,382.86,1130.51,389.71,1119.07,401.66,1107.62,413.61,1097.46,429.79,1087.3,445.96,1079.18,464.62,1078.1,467.69,1077.19,472.12,1076.28,476.55,1075.07,480.64,1073.86,484.73,1072.1,487.62,1070.34,490.52,1067.56,490.52,1064.65,490.26,1061.11,487.24,1057.57,484.22,1054.48,478.59,1051.39,472.97,1049.3,464.83,1047.21,456.7,1047.21,446.22,1047.21,441.1,1047.81,437.46,1048.4,433.82,1049.27,430.37,1050.15,426.92,1051.17,423.02,1052.18,419.12,1053.03,413.5,1054.6,403.28,1056.33,382.41,1058.06,361.55,1059.85,336.57,1061.64,311.58,1063.43,285.74,1065.22,259.89,1066.91,239.7,1062.43,240.72,1058.31,241.49,1054.19,242.26,1050.41,242.77,1046.62,243.28,1043.16,243.53,1039.71,243.79,1036.56,243.79,1025.54,243.79,1017.86,239.06,1010.19,234.33,1005.19,226.41,1000.2,218.49,997.55,208.13,994.9,197.78,993.93,186.54,998.45,180.4,1000.63,187.3,1003.41,193.17,1006.19,199.04,1010.52,203.32,1014.85,207.6,1021.21,210.02,1027.56,212.44,1036.88,212.44,1039.91,212.44,1043.65,211.97,1047.4,211.5,1051.58,210.73,1055.75,209.97,1060.22,208.99,1064.69,208.01,1069.17,206.98,1070.26,193.69,1071.21,181.33,1072.15,168.97,1072.85,158.17,1073.54,147.37,1073.94,138.45,1074.34,129.54,1074.34,123.15,1074.22,116.51,1073.61,111.31,1073,106.11,1071.64,102.53,1070.28,98.95,1068.03,97.08,1065.78,95.21,1062.39,95.21,1061.3,95.21,1060.09,95.45,1058.87,95.7,1057.51,96.14,1056.15,96.59,1054.63,97.22,1053.11,97.85,1051.41,98.61,1050.44,97.25,1051.66,90.61,1053.45,85.09,1055.25,79.57,1057.79,75.61,1060.34,71.65,1063.71,69.46,1067.08,67.26,1071.43,67.26,1076.04,67.26,1081.56,69,1087.08,70.73,1091.86,74.5,1096.64,78.27,1099.86,84.23,1103.08,90.18,1103.08,98.61,1103.08,103.98,1102.28,107.87,1101.48,111.76,1100.3,115.91,1099.12,120.06,1097.77,125.36,1096.42,130.65,1095.33,138.83,1094.61,143.94,1093.72,151.22,1092.83,158.51,1091.86,166.94,1090.89,175.38,1089.88,184.45,1088.87,193.52,1087.9,202.21,1097.59,199.66,1106.85,196.17,1116.11,192.69,1124.44,188.67,1132.76,184.64,1139.9,180.26,1147.04,175.89,1152.49,171.54,1156,168.48,1158.49,165.26,1160.99,162.04,1162.5,158.59,1164.01,155.14,1164.57,151.41,1165.12,147.69,1164.76,143.6,1167.34,137.47,1167.342,137.466] ) );
    shape.graphics.endFill();

    return shape;
  },
  "思いまで" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-339.4,31.6,-339.1,33.18,-338.88,34.71,-338.65,36.24,-338.5,37.73,-338.35,39.21,-338.27,40.63,-338.2,42.05,-338.2,43.4,-338.2,53,-341.18,60.2,-344.16,67.4,-348.52,72.2,-352.89,77,-357.86,79.4,-362.82,81.8,-366.8,81.8,-368.15,81.8,-369.23,81.47,-370.3,81.14,-371.05,80.52,-371.8,79.91,-372.2,79.01,-372.6,78.12,-372.6,77,-372.6,76.02,-372.21,75.06,-371.83,74.1,-371.15,73.2,-370.48,72.3,-369.56,71.49,-368.65,70.67,-367.6,70,-363.18,68.12,-358.81,64.62,-354.44,61.11,-350.95,56.2,-347.46,51.29,-345.27,45.08,-343.08,38.87,-343,31.6,-339.4,31.6,-339.4,31.6,-222.4,1.4,-337.4,1.4,-337.4,10.6,-337.4,10.6,-337.74,11.26,-338.07,11.91,-339.2,12.7,-340.32,13.49,-342.46,14.14,-344.6,14.8,-348.2,14.8,-348.2,-86.8,-336,-81,-224.4,-81,-218.8,-88.2,-202.8,-76.8,-203.33,-76.2,-204.21,-75.61,-205.08,-75.02,-206.23,-74.5,-207.37,-73.97,-208.74,-73.54,-210.1,-73.1,-211.6,-72.8,-211.6,7.6,-211.68,7.83,-212.42,8.48,-213.16,9.13,-214.53,9.83,-215.9,10.52,-217.87,11.06,-219.85,11.6,-222.4,11.6,-222.4,1.4,-222.402,1.4,-285.8,-76,-337.4,-76,-337.4,-42.6,-285.8,-42.6,-285.8,-76,-285.802,-75.999,-337.4,-3.6,-285.8,-3.6,-285.8,-37.6,-337.4,-37.6,-337.4,-3.6,-337.4,-3.6,-238.2,52.6,-238.6,77.2,-236.43,77.87,-235.12,78.3,-233.82,78.72,-233.13,79.1,-232.43,79.47,-232.22,79.9,-232,80.32,-232,81,-232,82.87,-233.11,84.23,-234.23,85.59,-236.85,86.47,-239.48,87.36,-243.81,87.78,-248.15,88.2,-254.6,88.2,-301,88.2,-307.15,88.2,-310.98,87.63,-314.81,87.07,-316.95,85.47,-319.09,83.88,-319.84,81.03,-320.6,78.17,-320.6,73.6,-320.6,28,-303,29.8,-303.15,30.7,-303.5,31.35,-303.85,32.01,-304.6,32.47,-305.35,32.94,-306.6,33.26,-307.85,33.57,-309.8,33.8,-309.8,73.8,-309.8,75.6,-309.63,76.61,-309.46,77.61,-308.6,78.1,-307.74,78.59,-305.92,78.69,-304.1,78.8,-300.8,78.8,-254.2,78.8,-252.55,78.8,-251.39,78.72,-250.22,78.65,-249.38,78.35,-248.53,78.05,-247.93,77.45,-247.33,76.85,-246.8,75.8,-246.2,74.82,-245.49,72.68,-244.78,70.54,-243.98,67.5,-243.17,64.46,-242.27,60.67,-241.38,56.87,-240.4,52.6,-238.2,52.6,-238.202,52.6,-305.4,10.8,-293.03,12.75,-284.67,16.15,-276.31,19.56,-271.23,23.47,-266.14,27.39,-263.97,31.36,-261.8,35.32,-261.8,38.4,-261.8,39.68,-262.16,40.74,-262.52,41.81,-263.18,42.58,-263.83,43.34,-264.75,43.77,-265.68,44.2,-266.8,44.2,-267.25,44.2,-267.7,44.16,-268.16,44.11,-268.63,44,-269.09,43.89,-269.59,43.69,-270.08,43.5,-270.6,43.2,-272.78,39,-276.75,34.66,-280.73,30.32,-285.63,26.33,-290.52,22.33,-295.88,18.93,-301.25,15.53,-306.2,13.2,-305.4,10.8,-305.401,10.8,-222.4,-76,-275,-76,-275,-42.6,-222.4,-42.6,-222.4,-76,-222.402,-75.999,-275,-3.6,-222.4,-3.6,-222.4,-37.6,-275,-37.6,-275,-3.6,-275.002,-3.6,-233,29,-219.95,33.95,-211.23,39.74,-202.5,45.54,-197.25,51.35,-192,57.16,-189.8,62.58,-187.6,68,-187.6,72.2,-187.6,74.22,-188.07,75.88,-188.53,77.54,-189.35,78.72,-190.18,79.9,-191.32,80.55,-192.45,81.2,-193.8,81.2,-194.4,81.2,-195.01,81.08,-195.61,80.97,-196.23,80.72,-196.85,80.48,-197.49,80.1,-198.13,79.72,-198.8,79.2,-199.85,72.82,-203.42,66.01,-206.98,59.21,-212,52.77,-217.03,46.34,-222.99,40.7,-228.95,35.05,-234.8,31,-233,29,-233.002,29] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-166.6,-60.6,-166,-61.65,-165.16,-62.41,-164.33,-63.16,-163.35,-63.65,-162.38,-64.14,-161.31,-64.37,-160.25,-64.6,-159.2,-64.6,-155.68,-64.6,-151.99,-63.04,-148.3,-61.49,-145.28,-58.9,-142.26,-56.31,-140.33,-52.96,-138.4,-49.6,-138.4,-46,-138.4,-45.02,-138.73,-44.05,-139.06,-43.07,-139.53,-42.1,-139.99,-41.12,-140.51,-40.15,-141.03,-39.17,-141.4,-38.2,-141.85,-36.92,-142.32,-35.22,-142.8,-33.51,-143.23,-31.75,-143.66,-29.99,-144.02,-28.36,-144.38,-26.72,-144.6,-25.6,-144.98,-22.97,-145.4,-19.44,-145.82,-15.91,-146.18,-11.57,-146.53,-7.24,-146.77,-2.17,-147,2.9,-147,8.6,-147,19.62,-144.41,28.03,-141.82,36.44,-138.43,42.12,-135.03,47.81,-131.73,50.7,-128.43,53.6,-127,53.6,-125.95,53.6,-125.08,53.12,-124.21,52.64,-123.2,51.55,-122.19,50.46,-120.87,48.71,-119.55,46.95,-117.6,44.4,-115.73,41.93,-112.61,37.12,-109.5,32.31,-105.75,26.2,-102,20.09,-97.91,13.18,-93.83,6.28,-90,-0.4,-85.6,1.2,-88.75,7.35,-92.83,15.12,-96.91,22.89,-100.85,30.53,-104.79,38.16,-108.04,44.77,-111.3,51.38,-112.8,55.2,-112.95,55.73,-113.09,56.22,-113.24,56.71,-113.35,57.18,-113.46,57.64,-113.53,58.1,-113.6,58.55,-113.6,59,-113.6,59.45,-113.53,59.86,-113.46,60.27,-113.33,60.63,-113.2,60.98,-113.01,61.28,-112.83,61.58,-112.6,61.8,-111.78,62.63,-111.08,63.6,-110.38,64.58,-109.88,65.58,-109.37,66.57,-109.09,67.51,-108.8,68.45,-108.8,69.2,-108.8,70.17,-109.39,70.83,-109.99,71.48,-111,71.87,-112.01,72.27,-113.36,72.43,-114.7,72.6,-116.2,72.6,-117.48,72.6,-119.69,71.92,-121.9,71.24,-124.45,70.02,-127,68.81,-129.59,67.12,-132.18,65.42,-134.2,63.4,-140.28,57.25,-144.38,50.23,-148.48,43.21,-150.98,35.9,-153.47,28.59,-154.53,21.27,-155.6,13.95,-155.6,7.2,-155.6,1.5,-155.4,-5.09,-155.19,-11.68,-154.87,-18.22,-154.56,-24.77,-154.17,-30.8,-153.77,-36.82,-153.4,-41.4,-153.4,-44,-153.4,-48.35,-154.47,-51.39,-155.54,-54.44,-157.32,-56.35,-159.11,-58.26,-161.42,-59.13,-163.72,-60,-166.2,-60,-166.6,-60.6,-166.601,-60.599,-46.8,-51.4,-33.83,-47.95,-24.11,-40.8,-14.4,-33.66,-7.93,-24.67,-1.46,-15.69,1.77,-5.81,5,4.08,5,13,5,15.7,4.69,18.29,4.39,20.87,3.62,22.9,2.85,24.92,1.54,26.16,0.22,27.4,-1.8,27.4,-3,27.4,-4.03,26.87,-5.06,26.34,-5.83,25.25,-6.6,24.16,-7.06,22.51,-7.53,20.85,-7.6,18.6,-7.9,7.87,-10.67,-2.35,-13.43,-12.57,-18.63,-21.33,-23.82,-30.08,-31.42,-36.89,-39.03,-43.7,-49,-47.6,-46.8,-51.4,-46.802,-51.399] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [86,-80.4,86.52,-81.75,87.58,-83.01,88.64,-84.27,90.1,-85.25,91.56,-86.22,93.37,-86.81,95.17,-87.4,97.2,-87.4,101.1,-87.4,104.87,-86.56,108.64,-85.72,111.6,-84.3,114.56,-82.87,116.38,-80.99,118.2,-79.1,118.2,-77,118.2,-75.87,117.69,-75.03,117.17,-74.18,116.5,-73.22,115.82,-72.27,115.16,-71.01,114.5,-69.75,114.2,-67.8,114.05,-66.75,113.96,-65.36,113.87,-63.98,113.8,-62.27,113.72,-60.57,113.64,-58.55,113.55,-56.52,113.4,-54.2,118.8,-54.65,123.95,-55.33,129.1,-56.01,133.6,-56.8,138.1,-57.59,141.75,-58.42,145.4,-59.25,147.8,-60,150.42,-60.82,152.13,-61.47,153.84,-62.11,154.87,-62.75,155.9,-63.39,156.38,-64.11,156.85,-64.82,157,-65.8,159.2,-66.4,161.6,-65.72,164.74,-65.49,167.88,-65.26,170.7,-64.82,173.51,-64.39,175.45,-63.45,177.4,-62.5,177.4,-60.4,177.4,-58.75,176.03,-57.6,174.66,-56.45,172.3,-55.55,169.93,-54.65,166.77,-53.87,163.6,-53.1,160,-52.2,156.02,-51.3,149.79,-50.3,143.55,-49.3,136.82,-48.4,130.09,-47.5,123.74,-46.8,117.4,-46.1,113.2,-45.8,113.12,-43.85,113.08,-41.71,113.04,-39.58,113.02,-37.25,113,-34.93,113,-32.41,113,-29.9,113,-27.2,113,-24.95,113,-22.71,113,-20.46,113.02,-18.25,113.04,-16.04,113.08,-13.87,113.12,-11.7,113.2,-9.6,116.2,-9.75,120.1,-10.11,124,-10.46,128.05,-10.95,132.1,-11.44,135.92,-12.02,139.75,-12.6,142.6,-13.2,143.87,-13.43,145.37,-13.74,146.88,-14.06,148.17,-14.55,149.47,-15.04,150.33,-15.73,151.2,-16.43,151.2,-17.4,151.2,-17.85,151.08,-18.3,150.96,-18.74,150.7,-19.17,150.43,-19.61,150.02,-20.02,149.6,-20.42,149,-20.8,151.8,-23,153.3,-22.02,154.33,-21.31,155.36,-20.59,156.3,-20.12,157.23,-19.66,158.27,-19.43,159.3,-19.2,160.8,-19.2,162.6,-19.2,164.54,-19.06,166.48,-18.92,168.1,-18.52,169.71,-18.13,170.75,-17.43,171.8,-16.72,171.8,-15.6,171.8,-13.72,171.02,-12.45,170.24,-11.18,168.42,-10.22,166.6,-9.27,163.61,-8.48,160.62,-7.7,156.2,-6.8,152.75,-6.05,147.88,-5.31,143.01,-4.57,137.35,-3.9,131.68,-3.22,125.54,-2.64,119.4,-2.05,113.4,-1.6,113.62,3.35,113.88,7.98,114.15,12.61,114.45,16.7,114.75,20.79,115.08,24.22,115.42,27.65,115.8,30.2,116.4,36.4,124.35,38.35,131.9,41.03,139.46,43.71,146.1,46.73,152.73,49.74,158.19,52.91,163.65,56.08,167.4,59,169.35,60.58,170.78,62.03,172.21,63.49,173.15,64.95,174.08,66.41,174.54,67.94,175,69.48,175,71.2,175,72.18,174.64,73.11,174.28,74.04,173.65,74.77,173.01,75.51,172.13,75.95,171.25,76.4,170.2,76.4,169.22,76.4,168.05,76.25,166.88,76.09,165.47,75.47,164.07,74.86,162.41,73.62,160.75,72.38,158.8,70.2,155.27,66.53,150.89,63.1,146.51,59.68,141.3,56.6,136.08,53.53,130.05,50.85,124.02,48.18,117.2,46,117.27,47.58,117.38,49.2,117.48,50.83,117.57,52.43,117.67,54.02,117.73,55.53,117.8,57.05,117.8,58.4,117.8,64.85,115.76,69.5,113.73,74.15,109.32,77.15,104.92,80.15,97.97,81.57,91.02,83,81.2,83,71.3,83,63.65,80.91,56.01,78.81,50.8,75.25,45.59,71.69,42.89,66.97,40.2,62.25,40.2,57,40.2,50.85,43.9,46.24,47.6,41.63,53.75,38.55,59.9,35.48,67.87,33.94,75.85,32.4,84.4,32.4,86.95,32.4,89.72,32.55,92.49,32.69,95.32,32.98,98.15,33.26,100.96,33.67,103.77,34.08,106.4,34.6,106.4,32.73,106.05,27.72,105.7,22.71,105.27,17.03,104.84,11.34,104.46,6.22,104.07,1.1,104,-1,100.85,-0.7,97.05,-0.47,93.25,-0.25,89.22,-0.1,85.19,0.05,81.13,0.13,77.07,0.2,73.4,0.2,65.45,0.2,59.99,-0.87,54.52,-1.94,51.15,-3.87,47.77,-5.81,46.29,-8.49,44.8,-11.17,44.8,-14.4,44.8,-16.72,46.32,-19.25,47.84,-21.77,50.5,-24.22,53.16,-26.68,56.78,-28.94,60.4,-31.2,64.6,-33,66.8,-30,62.75,-28.2,59.84,-26.28,56.92,-24.37,55.05,-22.47,53.17,-20.58,52.29,-18.78,51.4,-16.97,51.4,-15.4,51.4,-13.22,52.74,-11.64,54.08,-10.06,56.73,-9.02,59.37,-7.99,63.3,-7.5,67.23,-7,72.4,-7,76.08,-7,80.31,-7.14,84.55,-7.28,88.75,-7.5,92.95,-7.72,96.81,-8.01,100.67,-8.3,103.6,-8.6,103,-45.2,98.72,-44.9,93.67,-44.61,88.61,-44.33,83.7,-44.1,78.79,-43.88,74.48,-43.74,70.17,-43.6,67.4,-43.6,60.95,-43.6,55.93,-44.35,50.91,-45.1,46.87,-46.75,42.84,-48.4,39.58,-51.03,36.32,-53.65,33.4,-57.4,36.4,-60.8,38.8,-58.25,41.99,-56.49,45.17,-54.74,48.85,-53.65,52.52,-52.56,56.54,-52.08,60.55,-51.6,64.6,-51.6,68.2,-51.6,73.29,-51.71,78.39,-51.82,83.75,-52.03,89.11,-52.23,94.13,-52.53,99.15,-52.83,102.6,-53.2,102.6,-65.8,102.52,-69.33,102.29,-71.92,102.06,-74.52,101.05,-76.23,100.04,-77.93,97.93,-78.77,95.82,-79.6,92,-79.6,91.4,-79.6,90.79,-79.57,90.19,-79.53,89.57,-79.48,88.95,-79.42,88.31,-79.35,87.67,-79.28,87,-79.2,86,-80.4,85.999,-80.398,106.8,42.8,103.72,42.05,100.54,41.39,97.35,40.74,94.2,40.25,91.05,39.76,88.01,39.48,84.97,39.2,82.2,39.2,74.32,39.2,67.93,40.45,61.54,41.71,57.02,43.97,52.51,46.24,50.05,49.41,47.6,52.57,47.6,56.4,47.6,60.82,50.11,64.1,52.62,67.37,57.05,69.52,61.47,71.68,67.51,72.74,73.55,73.8,80.6,73.8,87.42,73.8,92.4,72.92,97.37,72.04,100.6,70.05,103.82,68.06,105.35,64.85,106.87,61.65,106.8,57,106.8,42.8,106.799,42.8] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [209,-62,209.23,-59.75,210.34,-57.84,211.44,-55.94,213.2,-54.55,214.97,-53.16,217.27,-52.38,219.58,-51.6,222.2,-51.6,223.48,-51.6,225.4,-51.77,227.33,-51.94,229.5,-52.23,231.68,-52.51,233.9,-52.87,236.13,-53.23,238,-53.6,243.93,-54.8,255.27,-56.84,266.61,-58.89,279.98,-61.1,293.35,-63.31,307.05,-65.36,320.75,-67.4,331.4,-68.6,333.58,-68.82,335.6,-69.29,337.62,-69.76,339.33,-70.37,341.03,-70.99,342.34,-71.72,343.65,-72.45,344.4,-73.2,350.48,-71.92,354.64,-70.62,358.81,-69.31,361.38,-67.85,363.94,-66.39,365.07,-64.71,366.2,-63.03,366.2,-61,366.2,-59.95,365.66,-59.26,365.13,-58.56,364.15,-58.15,363.18,-57.74,361.81,-57.57,360.45,-57.4,358.8,-57.4,357.15,-57.4,355.23,-57.52,353.31,-57.65,351.25,-57.8,349.19,-57.95,347.05,-58.08,344.9,-58.2,342.8,-58.2,335,-58.2,326.23,-54.61,317.46,-51.01,309.23,-45.35,301,-39.69,294.06,-32.72,287.13,-25.75,283,-19,280.45,-15.18,278.23,-10.14,276,-5.11,274.35,0.72,272.7,6.55,271.75,12.98,270.8,19.4,270.8,26,270.8,37.17,274.07,44.43,277.33,51.69,282.98,56.17,288.62,60.65,296.2,62.93,303.78,65.2,312.4,66.4,313,66.47,314.15,66.51,315.29,66.55,316.75,66.57,318.22,66.59,319.88,66.59,321.55,66.6,323.2,66.6,326.28,66.6,328.79,67.58,331.3,68.55,333.08,70.07,334.86,71.59,335.83,73.43,336.8,75.27,336.8,77,336.8,78.12,336.32,78.92,335.83,79.72,334.85,80.22,333.88,80.73,332.42,80.96,330.95,81.2,329,81.2,328.33,81.2,327.58,81.16,326.83,81.13,326,81.07,325.18,81.02,324.28,80.94,323.38,80.87,322.4,80.8,303.58,78.7,291.54,74.48,279.5,70.25,272.58,63.52,265.66,56.79,263.03,47.36,260.4,37.92,260.4,25.4,260.4,8.07,266.97,-5.95,273.54,-19.96,282.8,-30.65,292.07,-41.34,302.08,-48.68,312.1,-56.03,319,-60,318.8,-60.6,309.95,-59.78,296.58,-57.47,283.2,-55.16,270,-52.18,256.8,-49.19,246.13,-45.95,235.45,-42.7,232,-40,230.95,-39.33,229.95,-38.68,228.95,-38.03,227.88,-37.52,226.81,-37.02,225.62,-36.71,224.43,-36.4,223,-36.4,219.78,-36.4,216.47,-38.19,213.16,-39.98,210.48,-42.62,207.8,-45.27,206.1,-48.3,204.4,-51.32,204.4,-53.8,204.4,-55.3,204.62,-56.6,204.84,-57.91,205.25,-58.97,205.67,-60.04,206.26,-60.86,206.85,-61.67,207.6,-62.2,209,-62,209.004,-61.999,322.6,-23.8,331.83,-20.43,337.57,-16.86,343.32,-13.29,346.53,-9.97,349.73,-6.66,350.87,-3.8,352,-0.95,352,1,352,2.28,351.63,3.31,351.25,4.34,350.65,5.07,350.05,5.81,349.3,6.2,348.55,6.6,347.8,6.6,346.53,6.6,345.59,6.27,344.66,5.93,343.93,5.28,343.2,4.62,342.6,3.65,342,2.68,341.4,1.4,340.35,-1,338.37,-3.86,336.38,-6.73,333.63,-9.67,330.87,-12.62,327.42,-15.45,323.98,-18.27,320,-20.6,322.6,-23.8,322.602,-23.8,343,-41,352.23,-37.62,358,-34.03,363.78,-30.44,367.03,-27.1,370.27,-23.76,371.44,-20.92,372.6,-18.07,372.6,-16.2,372.6,-14.93,372.19,-13.89,371.79,-12.86,371.15,-12.12,370.51,-11.39,369.73,-11,368.95,-10.6,368.2,-10.6,366.93,-10.6,365.99,-10.93,365.06,-11.27,364.33,-11.92,363.6,-12.58,363,-13.55,362.4,-14.52,361.8,-15.8,360.75,-18.2,358.77,-21.06,356.79,-23.93,354.05,-26.87,351.31,-29.82,347.91,-32.65,344.5,-35.47,340.6,-37.8,343,-41,343.002,-40.999] ) );
    shape.graphics.endFill();

    return shape;
  },
  "偽られ" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,2,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,2,3,3,3,3,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,2,3,3,3,3,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-212.7,-86.1,-213,-85.27,-213.49,-84.61,-213.99,-83.95,-214.85,-83.5,-215.71,-83.05,-217.03,-82.84,-218.35,-82.62,-220.3,-82.7,-222.25,-77.15,-224.42,-71.62,-226.59,-66.09,-228.95,-60.65,-231.31,-55.21,-233.86,-49.91,-236.4,-44.6,-239.1,-39.5,-232.3,-36.9,-232.53,-36.23,-233.01,-35.63,-233.5,-35.04,-234.25,-34.58,-235,-34.11,-236.01,-33.78,-237.03,-33.45,-238.3,-33.3,-238.3,88.5,-238.37,88.87,-239.2,89.51,-240.02,90.15,-241.27,90.77,-242.53,91.39,-244.07,91.85,-245.6,92.3,-247.1,92.3,-249.1,92.3,-249.1,-21.7,-251.95,-16.97,-254.94,-12.56,-257.92,-8.14,-261,-4.07,-264.07,-0.01,-267.21,3.7,-270.35,7.4,-273.5,10.7,-276.7,8.9,-270.4,0.42,-264.03,-10.96,-257.67,-22.34,-251.72,-35.52,-245.78,-48.71,-240.5,-63.13,-235.22,-77.55,-231.1,-92.1,-212.7,-86.1,-212.7,-86.099,-103.5,11.1,-89.1,22.5,-89.63,23.02,-90.35,23.5,-91.07,23.98,-92.03,24.37,-92.98,24.77,-94.19,25.06,-95.4,25.35,-96.9,25.5,-97.73,38.47,-98.95,49,-100.18,59.52,-101.9,67.4,-103.63,75.27,-105.9,80.4,-108.18,85.52,-111.1,87.7,-112.9,89.05,-114.88,90,-116.86,90.95,-119.15,91.55,-121.44,92.15,-124.09,92.42,-126.75,92.7,-129.9,92.7,-129.9,90.75,-130.29,89.16,-130.67,87.58,-132.53,86.32,-134.38,85.07,-138.25,84.12,-142.13,83.17,-149.1,82.5,-149.1,78.9,-146.63,78.97,-143.18,79.11,-139.74,79.24,-136.25,79.37,-132.76,79.5,-129.69,79.6,-126.63,79.7,-124.9,79.7,-123.7,79.7,-122.74,79.64,-121.78,79.59,-120.98,79.4,-120.17,79.21,-119.47,78.85,-118.78,78.5,-118.1,77.9,-116.38,76.4,-114.85,72.04,-113.32,67.68,-112.03,60.72,-110.73,53.77,-109.69,44.35,-108.65,34.92,-107.9,23.3,-200.3,23.3,-204.12,27.2,-208.22,30.87,-212.31,34.55,-216.67,38,-221.04,41.45,-225.7,44.67,-230.35,47.9,-235.3,50.9,-237.5,48.1,-225.2,39.32,-214.78,28.71,-204.36,18.09,-195.7,6.2,-187.04,-5.69,-180.07,-18.56,-173.1,-31.42,-167.7,-44.7,-217.3,-44.7,-218.9,-49.7,-165.9,-49.7,-163.8,-55.1,-161.99,-60.5,-160.18,-65.89,-158.63,-71.27,-157.07,-76.66,-155.75,-82.02,-154.42,-87.37,-153.3,-92.7,-146.85,-91.12,-143.15,-90.23,-139.45,-89.34,-137.5,-88.87,-135.55,-88.41,-134.85,-88.23,-134.15,-88.05,-133.7,-87.9,-134,-86.85,-134.57,-86.1,-135.13,-85.34,-136.13,-84.87,-137.12,-84.41,-138.62,-84.21,-140.13,-84.02,-142.3,-84.1,-143.43,-79.9,-144.67,-75.63,-145.92,-71.36,-147.33,-67.05,-148.73,-62.74,-150.32,-58.39,-151.9,-54.05,-153.7,-49.7,-132.3,-49.7,-126.3,-55.9,-114.3,-45.3,-114.83,-44.7,-115.44,-44.31,-116.06,-43.92,-116.85,-43.67,-117.64,-43.43,-118.63,-43.3,-119.63,-43.17,-120.9,-43.1,-124.9,-15.3,-117.7,-15.3,-111.9,-21.5,-100.1,-10.9,-100.63,-10.37,-101.24,-10.02,-101.85,-9.67,-102.6,-9.42,-103.35,-9.18,-104.26,-9.02,-105.18,-8.85,-106.3,-8.7,-110.5,18.3,-109.5,18.3,-103.5,11.1,-103.501,11.1,-203.5,41.5,-203.28,42.92,-203.09,44.28,-202.91,45.63,-202.77,46.92,-202.64,48.22,-202.57,49.46,-202.5,50.7,-202.5,51.9,-202.5,60,-204.69,66.26,-206.89,72.52,-210.15,76.8,-213.41,81.07,-217.18,83.29,-220.95,85.5,-224.1,85.5,-225.98,85.5,-226.99,84.95,-228.01,84.41,-228.48,83.7,-228.94,82.99,-229.02,82.29,-229.1,81.6,-229.1,81.3,-229.1,80.4,-228.78,79.51,-228.46,78.61,-227.9,77.75,-227.34,76.89,-226.57,76.07,-225.8,75.25,-224.9,74.5,-221.75,72.62,-218.69,69.29,-215.63,65.95,-213.15,61.6,-210.68,57.25,-209.04,52.11,-207.4,46.97,-207.1,41.5,-203.5,41.5,-203.5,41.499,-205.1,-90.9,-198.65,-87.6,-194.28,-84,-189.91,-80.41,-187.25,-76.85,-184.59,-73.29,-183.44,-69.92,-182.3,-66.55,-182.3,-63.7,-182.3,-61.6,-182.86,-59.84,-183.41,-58.07,-184.35,-56.8,-185.29,-55.52,-186.52,-54.81,-187.75,-54.1,-189.1,-54.1,-189.7,-54.1,-190.33,-54.25,-190.96,-54.41,-191.6,-54.72,-192.24,-55.04,-192.87,-55.53,-193.5,-56.02,-194.1,-56.7,-193.88,-60.75,-194.89,-65.25,-195.91,-69.76,-197.75,-74.12,-199.59,-78.49,-202.03,-82.43,-204.47,-86.37,-207.1,-89.3,-205.1,-90.9,-205.1,-90.898,-116.7,-10.3,-173.7,-10.3,-176.1,-6.55,-178.65,-2.88,-181.21,0.79,-183.93,4.38,-186.64,7.96,-189.54,11.44,-192.43,14.93,-195.5,18.3,-121.5,18.3,-116.7,-10.3,-116.702,-10.3,-187.9,40.3,-184.3,43.75,-181.85,47.13,-179.4,50.52,-177.9,53.72,-176.4,56.93,-175.75,59.9,-175.1,62.87,-175.1,65.5,-175.1,68.5,-175.79,70.94,-176.48,73.37,-177.63,75.1,-178.77,76.82,-180.25,77.76,-181.72,78.7,-183.3,78.7,-183.97,78.7,-184.64,78.51,-185.31,78.32,-185.95,77.92,-186.59,77.53,-187.18,76.93,-187.77,76.32,-188.3,75.5,-187.92,74.07,-187.66,72.55,-187.39,71.02,-187.22,69.42,-187.06,67.83,-186.98,66.19,-186.9,64.55,-186.9,62.9,-186.9,59.9,-187.16,56.93,-187.41,53.97,-187.9,51.17,-188.39,48.38,-189.09,45.83,-189.8,43.27,-190.7,41.1,-187.9,40.3,-187.9,40.3,-169.3,37.3,-163.38,40.07,-159.38,43.15,-155.39,46.22,-152.97,49.3,-150.56,52.37,-149.53,55.3,-148.5,58.22,-148.5,60.7,-148.5,62.65,-148.99,64.24,-149.48,65.82,-150.32,66.95,-151.17,68.07,-152.3,68.69,-153.43,69.3,-154.7,69.3,-155.3,69.3,-155.9,69.18,-156.49,69.06,-157.07,68.8,-157.66,68.54,-158.22,68.12,-158.77,67.7,-159.3,67.1,-159.15,63.57,-160.1,59.68,-161.06,55.79,-162.73,52.02,-164.39,48.26,-166.58,44.85,-168.78,41.45,-171.1,38.9,-169.3,37.3,-169.3,37.3,-131.3,-44.7,-155.7,-44.7,-157.27,-40.95,-159,-37.24,-160.72,-33.52,-162.6,-29.85,-164.47,-26.17,-166.5,-22.54,-168.52,-18.9,-170.7,-15.3,-136.3,-15.3,-131.3,-44.7,-131.301,-44.699,-146.3,32.9,-139.93,34.7,-135.6,37.08,-131.27,39.46,-128.63,42.02,-125.98,44.59,-124.84,47.16,-123.7,49.72,-123.7,51.9,-123.7,53.32,-124.12,54.53,-124.54,55.74,-125.27,56.62,-126.01,57.51,-126.99,58,-127.97,58.5,-129.1,58.5,-129.63,58.5,-130.15,58.42,-130.68,58.34,-131.2,58.15,-131.72,57.96,-132.25,57.66,-132.77,57.35,-133.3,56.9,-133.9,54.12,-135.38,51.04,-136.87,47.96,-138.87,44.97,-140.88,41.99,-143.23,39.32,-145.57,36.65,-147.9,34.7,-146.3,32.9,-146.301,32.899] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-39.3,78.1,-16.57,77.05,1.05,74.23,18.67,71.41,30.73,66.17,42.78,60.94,49.04,52.98,55.3,45.02,55.3,33.7,55.3,24.47,52.75,18.23,50.19,11.98,45.52,8.17,40.86,4.37,34.29,2.73,27.72,1.1,19.7,1.1,13.02,1.1,5.54,2.89,-1.94,4.68,-9.85,8.37,-17.76,12.07,-25.92,17.72,-34.07,23.37,-42.1,31.1,-43.22,32.15,-44.11,33.47,-45,34.79,-45.9,35.95,-46.8,37.11,-47.84,37.91,-48.87,38.7,-50.3,38.7,-53.15,38.7,-55.6,37.59,-58.05,36.49,-59.85,34.8,-61.65,33.11,-62.67,31.11,-63.7,29.1,-63.7,27.3,-63.7,26.25,-63.42,25.48,-63.15,24.71,-62.7,23.97,-62.25,23.24,-61.67,22.43,-61.1,21.62,-60.5,20.5,-59.82,19.22,-59.14,17.56,-58.45,15.89,-57.85,13.92,-57.25,11.96,-56.79,9.73,-56.32,7.5,-56.1,5.1,-55.8,2.78,-55.45,-0.28,-55.1,-3.34,-54.8,-6.75,-54.5,-10.16,-54.3,-13.74,-54.1,-17.32,-54.1,-20.7,-54.1,-22.42,-54.17,-24.06,-54.25,-25.69,-54.4,-27.17,-54.55,-28.66,-54.77,-29.95,-55,-31.25,-55.3,-32.3,-55.45,-32.82,-55.56,-33.35,-55.67,-33.87,-55.75,-34.4,-55.82,-34.92,-55.86,-35.45,-55.9,-35.97,-55.9,-36.5,-55.9,-38.45,-55.32,-40.46,-54.74,-42.48,-53.37,-44.52,-52.01,-46.57,-49.74,-48.62,-47.47,-50.67,-44.1,-52.7,-41.4,-54.35,-37.09,-56.13,-32.77,-57.92,-27.9,-59.47,-23.02,-61.03,-18.11,-62.18,-13.2,-63.32,-9.3,-63.7,-9.5,-63.9,-16.18,-64.42,-21.81,-65.94,-27.45,-67.45,-31.95,-70.02,-36.45,-72.59,-39.76,-76.24,-43.07,-79.9,-45.1,-84.7,-40.5,-87.3,-37.05,-81.75,-31.85,-78.74,-26.64,-75.74,-20.02,-74.35,-13.41,-72.96,-5.54,-72.73,2.32,-72.5,11.1,-72.5,15.3,-72.5,19.05,-71.46,22.79,-70.42,25.63,-68.67,28.46,-66.93,30.14,-64.65,31.83,-62.37,31.9,-59.9,31.9,-58.55,31.18,-57.66,30.47,-56.77,29.33,-56.25,28.18,-55.72,26.75,-55.51,25.33,-55.3,23.9,-55.3,23.08,-55.3,21.66,-55.71,20.24,-56.13,18.58,-56.67,16.91,-57.22,15.15,-57.75,13.4,-58.27,11.9,-58.5,10.55,-58.72,9.17,-58.88,7.79,-59.03,6.4,-59.12,5.01,-59.22,3.63,-59.26,2.25,-59.3,0.9,-59.3,-4.8,-59.3,-10.35,-58.59,-15.9,-57.89,-21,-56.65,-26.1,-55.41,-30.6,-53.73,-35.1,-52.05,-38.7,-50.1,-40.87,-49.05,-42.71,-47.96,-44.54,-46.88,-45.87,-45.62,-47.21,-44.37,-47.95,-42.87,-48.7,-41.37,-48.7,-39.5,-48.7,-38.6,-48.49,-37.62,-48.27,-36.64,-47.9,-35.7,-47.52,-34.76,-47.01,-33.93,-46.5,-33.1,-45.9,-32.5,-45.3,-31.97,-44.79,-31.05,-44.27,-30.14,-43.9,-29.05,-43.52,-27.96,-43.31,-26.82,-43.1,-25.67,-43.1,-24.7,-43.1,-22.75,-43.46,-20.21,-43.83,-17.68,-44.37,-14.17,-44.92,-10.67,-45.55,-6,-46.17,-1.32,-46.7,4.9,-46.92,7.6,-47.23,9.94,-47.53,12.27,-47.92,14.28,-48.32,16.28,-48.81,17.98,-49.3,19.68,-49.9,21.1,-49.97,21.18,-50.01,21.28,-50.05,21.39,-50.07,21.5,-50.09,21.61,-50.09,21.72,-50.1,21.83,-50.1,21.9,-50.1,22.13,-50.03,22.34,-49.95,22.56,-49.82,22.73,-49.69,22.9,-49.51,23,-49.32,23.1,-49.1,23.1,-48.57,23.1,-47.94,23.04,-47.31,22.99,-46.6,22.8,-45.89,22.61,-45.1,22.26,-44.32,21.9,-43.5,21.3,-36.3,16.13,-28.19,11.29,-20.07,6.46,-11.75,2.73,-3.42,-1.01,4.76,-3.25,12.95,-5.5,20.3,-5.5,31.17,-5.5,39.91,-3.17,48.64,-0.83,54.77,4.03,60.91,8.88,64.2,16.35,67.5,23.82,67.5,34.1,67.5,48.05,60.3,57.34,53.1,66.62,39.45,72.25,25.8,77.87,6.08,80.34,-13.65,82.8,-38.7,83.1,-39.3,78.1,-39.298,78.099] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [132.1,-80.5,133.08,-81.4,134.19,-82.17,135.31,-82.94,136.55,-83.5,137.79,-84.06,139.13,-84.38,140.47,-84.7,141.9,-84.7,144.22,-84.7,147.11,-83.68,149.99,-82.65,152.53,-80.87,155.06,-79.09,156.78,-76.68,158.5,-74.27,158.5,-71.5,158.5,-69.55,158.01,-68.24,157.51,-66.94,156.8,-65.55,156.09,-64.16,155.29,-62.33,154.5,-60.5,153.9,-57.5,153.75,-56.75,153.63,-55.78,153.52,-54.81,153.43,-53.8,153.33,-52.79,153.25,-51.82,153.18,-50.85,153.1,-50.1,154.53,-49.2,155.86,-48.28,157.19,-47.36,158.22,-46.32,159.26,-45.29,159.88,-44.11,160.5,-42.92,160.5,-41.5,160.5,-40.15,159.62,-39.06,158.73,-37.98,157.48,-36.72,156.22,-35.47,154.85,-33.82,153.47,-32.17,152.5,-29.7,152.13,-28.72,151.78,-27.68,151.43,-26.64,151.05,-24.97,150.68,-23.31,150.25,-20.73,149.82,-18.15,149.3,-14.1,157.85,-22.8,167.2,-30.07,176.54,-37.35,185.52,-42.6,194.51,-47.85,202.54,-50.77,210.57,-53.7,216.5,-53.7,225.35,-53.7,230.55,-51.13,235.75,-48.57,238.45,-44.27,241.15,-39.98,241.92,-34.38,242.7,-28.77,242.7,-22.7,242.7,-18.35,242.61,-15.05,242.52,-11.74,242.27,-8.12,242.03,-4.51,241.6,0.11,241.17,4.73,240.5,11.7,240.12,15.6,239.76,19.63,239.4,23.66,239.12,27.57,238.84,31.49,238.67,35.18,238.5,38.87,238.5,42.1,238.5,47.42,239.14,51.31,239.77,55.19,241.05,57.72,242.32,60.25,244.24,61.48,246.15,62.7,248.7,62.7,251.47,62.7,254.37,62.02,257.27,61.34,260.35,59.8,263.42,58.26,266.7,55.78,269.97,53.3,273.5,49.7,276.7,52.1,273.62,57.35,270.39,61.57,267.15,65.79,263.55,68.75,259.95,71.71,255.89,73.3,251.82,74.9,247.1,74.9,241.55,74.9,237.73,72.63,233.91,70.36,231.55,66.35,229.19,62.34,228.14,56.84,227.1,51.35,227.1,44.9,227.1,36.8,227.55,28.53,228,20.26,228.6,12.62,229.2,4.99,229.8,-1.59,230.4,-8.17,230.7,-12.9,230.77,-14.4,230.84,-15.87,230.92,-17.33,230.97,-18.78,231.03,-20.22,231.06,-21.65,231.1,-23.08,231.1,-24.5,231.1,-29,230.52,-32.94,229.95,-36.88,228.3,-39.8,226.65,-42.73,223.67,-44.41,220.7,-46.1,215.9,-46.1,208.62,-46.1,200.68,-43.16,192.74,-40.22,184.32,-34.9,175.91,-29.57,167.1,-22.14,158.3,-14.7,149.3,-5.7,149.15,-3.67,149.01,-1.04,148.86,1.59,148.75,4.28,148.64,6.96,148.57,9.4,148.5,11.85,148.5,13.5,148.5,18.75,148.51,24.54,148.53,30.33,148.6,36.42,148.67,42.52,148.84,48.8,149,55.07,149.3,61.3,149.38,62.8,149.6,64.59,149.83,66.37,150.08,68.25,150.32,70.12,150.51,71.99,150.7,73.85,150.7,75.5,150.7,77.15,149.89,79.01,149.07,80.87,147.8,82.45,146.52,84.02,144.96,85.06,143.4,86.1,141.9,86.1,140.55,86.1,139.56,84.83,138.58,83.56,137.92,81.47,137.27,79.39,136.92,76.73,136.58,74.07,136.5,71.3,136.43,68.22,135.92,65.32,135.41,62.42,133.95,58.87,132.49,55.33,129.81,50.74,127.13,46.15,122.7,39.7,124.9,38.1,126.63,40.2,128.7,42.4,130.78,44.6,132.65,46.4,134.53,48.2,135.93,49.35,137.33,50.5,137.7,50.5,138.08,50.5,138.4,50.24,138.73,49.99,138.98,49.2,139.22,48.41,139.36,46.95,139.5,45.5,139.5,43.1,139.5,37.85,139.57,32.51,139.64,27.16,139.75,22.1,139.86,17.04,140.01,12.44,140.15,7.85,140.3,4.1,136.25,8.3,132.38,12.65,128.5,17.01,124.9,21.37,121.3,25.74,118.03,30.06,114.75,34.37,111.9,38.5,110.7,40.45,109.7,42.22,108.69,44,107.63,45.35,106.56,46.7,105.29,47.5,104.03,48.3,102.3,48.3,100.65,48.3,99.54,47.7,98.43,47.11,97.75,45.95,97.08,44.79,96.79,43.07,96.5,41.35,96.5,39.1,96.5,37.9,96.6,37.12,96.69,36.34,97.13,35.57,97.56,34.8,98.44,33.84,99.33,32.87,100.9,31.3,107.13,25.22,113.47,18.73,119.82,12.24,125.3,5.92,130.77,-0.39,134.87,-6.25,138.97,-12.1,140.7,-16.9,140.93,-19.68,141.09,-22.56,141.25,-25.44,141.4,-28.28,141.55,-31.11,141.71,-33.8,141.87,-36.5,142.1,-38.9,139.77,-38.68,136.67,-37.85,133.57,-37.02,130.32,-35.88,127.08,-34.73,124.02,-33.42,120.95,-32.1,118.7,-30.9,117.43,-30.23,116.48,-29.26,115.54,-28.3,114.93,-27.1,114.31,-25.9,114,-24.49,113.7,-23.08,113.7,-21.5,113.7,-20.75,113.74,-19.97,113.79,-19.18,113.9,-18.38,114.01,-17.57,114.21,-16.75,114.4,-15.93,114.7,-15.1,110.9,-13.5,110.15,-16.05,109.28,-17.86,108.4,-19.66,107.65,-21.2,106.9,-22.74,106.4,-24.24,105.9,-25.75,105.9,-27.7,105.9,-30.25,106.63,-32.48,107.36,-34.71,108.87,-36.53,110.39,-38.34,112.73,-39.71,115.07,-41.08,118.3,-41.9,121.15,-42.58,124.98,-43.5,128.81,-44.42,132.45,-45.38,136.09,-46.33,138.94,-47.22,141.8,-48.1,142.7,-48.7,142.85,-51.03,142.99,-53.82,143.14,-56.62,143.25,-59.25,143.36,-61.87,143.43,-64,143.5,-66.12,143.5,-67.1,143.5,-71.37,142.85,-73.78,142.2,-76.18,140.85,-77.32,139.5,-78.47,137.42,-78.66,135.35,-78.85,132.5,-78.7,132.1,-80.5,132.1,-80.499] ) );
    shape.graphics.endFill();

    return shape;
  },
  "出会えずに" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,2,2,2,2] ), $.toNumberVector( [-318.9,10.6,-299.7,12.2,-299.85,13.25,-300.29,14.05,-300.72,14.85,-301.65,15.45,-302.59,16.05,-304.15,16.48,-305.7,16.9,-308.1,17.2,-308.1,89,-308.1,89.15,-308.47,89.79,-308.83,90.44,-309.98,91.15,-311.12,91.86,-313.25,92.43,-315.38,93,-318.9,93,-318.9,76.4,-453.5,76.4,-453.5,90.8,-453.5,91.02,-453.87,91.68,-454.23,92.33,-455.38,93.02,-456.52,93.72,-458.65,94.26,-460.78,94.8,-464.3,94.8,-464.3,10.6,-445.1,12.2,-445.25,13.25,-445.68,14.05,-446.12,14.85,-447.05,15.45,-447.99,16.05,-449.55,16.48,-451.1,16.9,-453.5,17.2,-453.5,71.4,-392.1,71.4,-392.1,-7.6,-443.3,-7.6,-443.3,0.6,-443.3,0.75,-443.67,1.39,-444.03,2.04,-445.18,2.75,-446.32,3.46,-448.45,4.03,-450.58,4.6,-454.1,4.6,-454.1,-71.2,-434.9,-69.8,-435.05,-68.67,-435.54,-67.84,-436.03,-67,-437,-66.4,-437.98,-65.8,-439.52,-65.41,-441.05,-65.02,-443.3,-64.8,-443.3,-12.6,-392.1,-12.6,-392.1,-88.8,-371.7,-87,-371.78,-85.72,-372.3,-84.8,-372.83,-83.88,-373.95,-83.22,-375.08,-82.57,-376.88,-82.13,-378.68,-81.7,-381.3,-81.4,-381.3,-12.6,-328.91,-12.6,-328.91,-71.2,-309.71,-69.8,-309.86,-68.67,-310.34,-67.84,-310.83,-67,-311.81,-66.4,-312.78,-65.8,-314.32,-65.41,-315.86,-65.03,-318.11,-64.8,-318.11,-0.4,-318.11,-0.25,-318.5,0.39,-318.89,1.04,-320.06,1.75,-321.22,2.46,-323.34,3.03,-325.46,3.6,-328.91,3.6,-328.91,-7.6,-381.3,-7.6,-381.3,71.4,-318.91,71.4,-318.91,10.6,-318.904,10.6] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,2,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,2,1,2,3,3,3,3,2,2,2,2,2] ), $.toNumberVector( [-279.3,-9.8,-266.33,-17.3,-253.32,-27.07,-240.32,-36.83,-228.83,-47.57,-217.33,-58.32,-208.12,-69.4,-198.9,-80.47,-193.5,-90.6,-173.7,-85.2,-173.93,-84.37,-174.44,-83.76,-174.96,-83.15,-175.88,-82.7,-176.8,-82.25,-178.17,-81.94,-179.55,-81.62,-181.5,-81.4,-173.93,-72.7,-164.38,-64.34,-154.84,-55.98,-143.7,-48.42,-132.57,-40.87,-120.02,-34.35,-107.48,-27.83,-93.9,-22.8,-94.5,-19.8,-96.53,-19.28,-98.18,-18.36,-99.83,-17.44,-101.13,-16.2,-102.42,-14.96,-103.36,-13.44,-104.3,-11.93,-104.9,-10.2,-117.65,-16.72,-129.42,-24.53,-141.18,-32.33,-151.45,-41.12,-161.73,-49.92,-170.26,-59.56,-178.8,-69.2,-185.1,-79.4,-192.15,-69.95,-202.19,-59.84,-212.23,-49.73,-224.3,-40.07,-236.38,-30.42,-250.01,-21.77,-263.65,-13.13,-277.9,-6.6,-279.3,-9.8,-279.301,-9.8,-126.1,16.6,-116.7,4.8,-98.9,17.2,-99.5,18.33,-100.26,19.15,-101.02,19.98,-102.13,20.52,-103.24,21.07,-104.78,21.33,-106.33,21.6,-108.5,21.6,-203.9,21.6,-195.9,24.6,-196.2,25.2,-196.63,25.65,-197.06,26.1,-197.68,26.4,-198.3,26.7,-199.14,26.85,-199.98,27,-201.1,27,-201.4,27,-201.71,27,-202.01,26.99,-202.33,26.97,-202.65,26.96,-202.99,26.91,-203.33,26.87,-203.7,26.8,-206.48,32.27,-210.01,38.45,-213.54,44.62,-217.55,51,-221.56,57.37,-225.92,63.7,-230.28,70.02,-234.7,75.8,-224.88,75.42,-213.51,74.91,-202.15,74.4,-189.68,73.8,-177.21,73.2,-163.86,72.54,-150.5,71.87,-136.7,71.2,-140.23,67.3,-144.11,63.55,-147.99,59.81,-152,56.4,-156.02,52.99,-160.05,49.99,-164.08,47,-167.9,44.6,-166.3,42.4,-150.4,48.02,-139.76,54.39,-129.12,60.75,-122.7,66.92,-116.29,73.09,-113.6,78.59,-110.9,84.1,-110.9,88,-110.9,89.65,-111.33,90.98,-111.75,92.31,-112.5,93.25,-113.25,94.18,-114.28,94.69,-115.3,95.2,-116.5,95.2,-117.1,95.2,-117.71,95.08,-118.31,94.97,-118.93,94.75,-119.55,94.52,-120.19,94.18,-120.83,93.85,-121.5,93.4,-122.4,91.3,-123.59,89.09,-124.79,86.89,-126.23,84.62,-127.67,82.35,-129.35,80.04,-131.03,77.72,-132.9,75.4,-143.03,76.75,-155.34,78.18,-167.65,79.62,-182.35,81.17,-197.05,82.73,-214.24,84.43,-231.43,86.12,-251.3,88,-251.75,88.9,-252.31,89.58,-252.86,90.27,-253.5,90.77,-254.14,91.28,-254.84,91.63,-255.55,91.97,-256.3,92.2,-265.9,76.6,-263.43,76.6,-260.58,76.56,-257.73,76.52,-254.53,76.45,-251.32,76.37,-247.76,76.26,-244.2,76.15,-240.3,76,-237.08,69.92,-233.76,63.05,-230.45,56.18,-227.3,49.1,-224.15,42.01,-221.29,34.99,-218.43,27.97,-216.1,21.6,-272.1,21.6,-273.5,16.6,-126.1,16.6,-126.103,16.6,-154.1,-31.2,-136.7,-19,-137.3,-17.8,-138.06,-16.93,-138.82,-16.06,-139.9,-15.5,-140.99,-14.94,-142.5,-14.67,-144,-14.4,-146.1,-14.4,-239.3,-14.4,-240.7,-19.4,-163.5,-19.4,-154.1,-31.2,-154.103,-31.199] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [17.1,40,17.1,34.52,16.29,31.12,15.48,27.72,13.95,25.82,12.41,23.93,10.18,23.27,7.95,22.6,5.1,22.6,1.05,22.6,-5.28,25.23,-11.62,27.87,-19.3,33.62,-26.99,39.38,-35.57,48.5,-44.15,57.62,-52.7,70.6,-54.35,73,-55.56,74.8,-56.76,76.6,-57.85,77.8,-58.94,79,-60.07,79.6,-61.2,80.2,-62.7,80.2,-64.28,80.2,-65.47,79.67,-66.67,79.14,-67.48,78.22,-68.28,77.31,-68.69,76.07,-69.1,74.82,-69.1,73.4,-69.1,70.02,-67.88,67.45,-66.66,64.87,-64.58,62.52,-62.49,60.18,-59.74,57.79,-56.98,55.4,-53.9,52.4,-46.03,44.97,-32.48,31.52,-18.93,18.07,-5.83,4.78,7.28,-8.52,16.89,-18.56,26.5,-28.6,26.5,-29.2,26.5,-29.35,26.42,-29.46,26.35,-29.57,26.2,-29.65,26.05,-29.72,25.82,-29.76,25.6,-29.8,25.3,-29.8,24.62,-29.8,16.89,-28.25,9.15,-26.7,-0.58,-24.45,-10.31,-22.2,-19.51,-19.67,-28.7,-17.15,-32.3,-15.2,-33.58,-14.45,-34.53,-13.7,-35.48,-12.95,-36.3,-12.35,-37.13,-11.75,-37.93,-11.37,-38.73,-11,-39.7,-11,-41.8,-11,-44.19,-12.27,-46.58,-13.55,-48.6,-15.65,-50.63,-17.75,-51.96,-20.45,-53.3,-23.15,-53.3,-26,-53.3,-27.87,-52.45,-29.87,-51.59,-31.87,-50.2,-33.72,-48.81,-35.58,-47.06,-37.17,-45.3,-38.75,-43.5,-39.8,-41.3,-37.8,-42.13,-36.82,-42.79,-35.82,-43.46,-34.82,-43.93,-33.85,-44.4,-32.87,-44.65,-31.95,-44.9,-31.02,-44.9,-30.2,-44.9,-29.15,-44.47,-28.24,-44.03,-27.32,-43.08,-26.65,-42.12,-25.97,-40.6,-25.59,-39.08,-25.2,-36.9,-25.2,-33.38,-25.2,-25.23,-26.43,-17.08,-27.67,-7.7,-29.37,1.67,-31.08,10.57,-32.88,19.47,-34.67,24.5,-35.8,25.85,-36.1,26.99,-36.98,28.14,-37.86,29.17,-38.8,30.2,-39.74,31.16,-40.47,32.12,-41.2,33.1,-41.2,34.9,-41.2,37.46,-39.98,40.03,-38.76,42.4,-37,44.76,-35.24,46.43,-33.27,48.1,-31.3,48.1,-29.8,48.1,-28.9,47.27,-28.23,46.45,-27.56,45.12,-27,43.79,-26.44,42.1,-25.92,40.42,-25.4,38.7,-24.8,35.92,-23.97,29.18,-18.19,22.43,-12.4,14.45,-4.75,6.46,2.9,-1.41,10.86,-9.28,18.83,-14.3,24,-13.3,24.2,-9.85,22.02,-6.73,20.53,-3.61,19.04,-0.78,18.12,2.05,17.21,4.61,16.8,7.17,16.4,9.5,16.4,13.77,16.4,16.99,17.83,20.21,19.26,22.37,22.3,24.53,25.34,25.61,30.07,26.7,34.8,26.7,41.4,26.5,52.6,26.5,57.4,27.3,60.69,28.1,63.97,30.2,66,32.3,68.02,35.95,68.91,39.6,69.8,45.3,69.8,50.4,69.8,53.68,69.76,56.97,69.72,59.12,69.62,61.28,69.53,62.65,69.38,64.02,69.22,65.3,69,66.2,68.85,67.13,68.64,68.06,68.44,69,68.25,69.93,68.06,70.86,67.93,71.8,67.8,72.7,67.8,73.3,67.8,75,68.32,76.7,68.85,78.5,69.9,80.3,70.95,81.7,72.52,83.1,74.1,83.1,76.2,83.1,77.92,81,78.89,78.9,79.85,75,80.32,71.1,80.79,65.55,80.89,60,81,53.1,81,42.97,81,36.02,79.12,29.07,77.25,24.77,73.5,20.48,69.75,18.59,64.12,16.7,58.5,16.7,51,17.1,40,17.097,39.999,11.9,-64.2,10.62,-64.12,9.35,-64.05,8.08,-63.98,6.85,-63.92,5.61,-63.87,4.42,-63.83,3.22,-63.8,2.1,-63.8,-4.73,-63.8,-10.43,-64.68,-16.14,-65.56,-20.6,-67.37,-25.07,-69.19,-28.22,-71.98,-31.38,-74.77,-33.1,-78.6,-29.3,-81.2,-27.65,-79.1,-25.15,-77.49,-22.65,-75.89,-19.33,-74.8,-16.01,-73.71,-11.89,-73.16,-7.78,-72.6,-2.9,-72.6,0.85,-72.6,4.52,-72.91,8.2,-73.22,11.5,-73.6,14.8,-73.97,17.57,-74.29,20.35,-74.6,22.3,-74.6,26.35,-74.6,29.35,-73.57,32.36,-72.55,34.35,-71.05,36.33,-69.55,37.32,-67.85,38.3,-66.15,38.3,-64.8,38.3,-63.15,36.85,-62.37,35.4,-61.59,33.15,-61.25,30.9,-60.91,28.17,-60.81,25.45,-60.7,22.9,-60.4,18.92,-59.88,14.34,-58.67,9.77,-57.47,5.02,-55.9,0.28,-54.32,-4.41,-52.52,-9.1,-50.72,-13.3,-49,-14.5,-52.4,-11.88,-53.45,-8.35,-54.94,-4.83,-56.42,-1.15,-58,2.52,-59.57,5.97,-61.06,9.42,-62.55,11.9,-63.6,11.9,-64.2,11.897,-64.199] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [178.5,-78.2,179.18,-79.85,180.2,-81.21,181.23,-82.57,182.68,-83.55,184.12,-84.52,186.01,-85.06,187.9,-85.6,190.3,-85.6,193.83,-85.6,197.33,-84.68,200.84,-83.75,203.65,-82.27,206.46,-80.79,208.24,-78.93,210.03,-77.07,210.1,-75.2,210.1,-73.92,209.75,-72.86,209.39,-71.79,208.93,-70.85,208.46,-69.91,207.99,-69.07,207.53,-68.22,207.3,-67.4,207.07,-66.57,206.92,-65.08,206.77,-63.59,206.67,-61.32,206.58,-59.05,206.54,-55.95,206.5,-52.85,206.5,-48.8,211.82,-49.17,216.93,-49.47,222.04,-49.77,226.52,-50,231.01,-50.22,234.65,-50.37,238.3,-50.52,240.7,-50.6,243.85,-50.67,246.23,-50.92,248.6,-51.17,250.42,-51.67,252.24,-52.18,253.61,-52.99,254.97,-53.8,256.1,-55,261.72,-53.42,265.74,-52.08,269.75,-50.74,272.32,-49.35,274.89,-47.96,276.09,-46.39,277.3,-44.82,277.3,-42.8,277.3,-42.12,276.82,-41.6,276.34,-41.08,275.57,-40.72,274.8,-40.37,273.84,-40.18,272.87,-40,271.9,-40,270.1,-40,267.51,-40.41,264.92,-40.82,261.22,-41.32,257.53,-41.83,252.58,-42.28,247.62,-42.72,241.1,-42.8,239.52,-42.87,237.85,-42.91,236.17,-42.95,234.42,-42.97,232.68,-42.99,230.89,-42.99,229.1,-43,227.3,-43,224.75,-43,222.11,-42.96,219.47,-42.92,216.82,-42.85,214.18,-42.77,211.58,-42.66,208.97,-42.55,206.5,-42.4,206.5,-37.45,206.54,-32.12,206.57,-26.8,206.65,-21.85,206.72,-16.9,206.84,-12.7,206.95,-8.5,207.1,-5.8,208.52,-3.32,209.64,-0.43,210.76,2.47,211.52,6.13,212.29,9.78,212.7,14.37,213.1,18.95,213.1,24.8,213.1,36.13,209.87,46.35,206.64,56.58,199.72,65.2,192.81,73.83,181.97,80.6,171.12,87.38,155.9,91.8,153.3,87.6,165,83.1,173.82,77.19,182.65,71.27,188.65,64.3,194.65,57.32,197.85,49.46,201.05,41.6,201.5,33.2,199.85,35.97,197.43,38.13,195.01,40.29,191.88,41.77,188.74,43.26,184.93,44.03,181.13,44.8,176.7,44.8,170.02,44.8,164.47,42.38,158.92,39.96,154.93,35.77,150.93,31.59,148.72,25.98,146.5,20.37,146.5,14,146.5,6.73,149.06,0.57,151.63,-5.59,156.05,-10.07,160.48,-14.56,166.41,-17.08,172.35,-19.6,179.1,-19.6,181.87,-19.6,184.48,-19.23,187.09,-18.85,189.45,-18.1,191.81,-17.35,193.89,-16.23,195.98,-15.1,197.7,-13.6,197.7,-17.73,197.57,-21.63,197.44,-25.54,197.28,-29.1,197.11,-32.66,196.94,-35.82,196.78,-38.98,196.7,-41.6,191.83,-41.3,184.76,-40.64,177.7,-39.97,170.35,-39.15,163,-38.32,156.31,-37.44,149.63,-36.55,145.5,-35.8,143.78,-35.43,142,-34.98,140.23,-34.54,138.5,-34.07,136.78,-33.61,135.15,-33.13,133.53,-32.65,132.1,-32.2,130.23,-31.6,129.08,-30.99,127.93,-30.39,126.95,-29.9,125.98,-29.41,124.9,-29.11,123.83,-28.8,122.1,-28.8,119.48,-28.87,116.4,-30.53,113.32,-32.18,110.68,-34.67,108.03,-37.17,106.27,-40.13,104.5,-43.1,104.5,-45.8,104.5,-47.07,104.75,-48.14,105,-49.2,105.43,-50.1,105.86,-51,106.44,-51.76,107.03,-52.52,107.7,-53.2,108.9,-53.2,109.13,-52,109.83,-50.07,110.53,-48.14,112.25,-46.3,113.98,-44.46,117,-43.13,120.03,-41.8,124.9,-41.8,128.73,-41.8,138.76,-42.62,148.79,-43.45,160.15,-44.5,171.51,-45.55,181.77,-46.52,192.03,-47.5,196.3,-47.8,196.07,-52.6,195.95,-55.99,195.82,-59.38,195.72,-61.72,195.63,-64.07,195.54,-65.55,195.45,-67.02,195.3,-68,195,-69.87,194.48,-71.64,193.97,-73.41,192.82,-74.77,191.68,-76.14,189.7,-76.97,187.72,-77.8,184.5,-77.8,183.82,-77.8,183.15,-77.76,182.47,-77.73,181.8,-77.67,181.12,-77.62,180.45,-77.55,179.77,-77.47,179.1,-77.4,178.5,-78.2,178.5,-78.199,200.7,7.4,200.7,4.33,199.38,0.78,198.06,-2.76,195.38,-5.77,192.69,-8.79,188.63,-10.8,184.58,-12.8,179.1,-12.8,174.6,-12.8,170.54,-11.12,166.48,-9.44,163.4,-6.13,160.33,-2.81,158.51,2.13,156.7,7.07,156.7,13.6,156.7,18.92,158.63,23.12,160.56,27.32,163.6,30.22,166.64,33.13,170.37,34.66,174.1,36.2,177.7,36.2,184.83,36.2,189.31,34.09,193.79,31.98,196.33,28.17,198.86,24.37,199.78,19.07,200.7,13.77,200.7,7.4,200.7,7.4,226.9,-91.2,235.67,-88.35,241.27,-85.04,246.87,-81.73,250.07,-78.52,253.28,-75.32,254.49,-72.5,255.7,-69.67,255.7,-67.8,255.7,-66.6,255.2,-65.54,254.7,-64.49,253.95,-63.7,253.2,-62.91,252.33,-62.46,251.45,-62,250.7,-62,249.43,-62,248.49,-62.31,247.56,-62.61,246.85,-63.25,246.14,-63.89,245.58,-64.87,245.03,-65.85,244.5,-67.2,243.45,-69.6,241.66,-72.28,239.86,-74.95,237.35,-77.67,234.84,-80.39,231.62,-83.03,228.4,-85.67,224.5,-88,226.9,-91.2,226.9,-91.198,253.1,-95.2,262.4,-91.97,268.22,-88.59,274.04,-85.2,277.3,-82.05,280.56,-78.9,281.73,-76.19,282.9,-73.47,282.9,-71.6,282.9,-70.32,282.46,-69.23,282.02,-68.13,281.35,-67.32,280.67,-66.52,279.86,-66.06,279.05,-65.6,278.3,-65.6,277.02,-65.6,276.09,-65.94,275.16,-66.27,274.42,-66.95,273.69,-67.62,273.1,-68.64,272.5,-69.65,271.9,-71,270.85,-73.47,268.87,-76.22,266.89,-78.97,264.15,-81.72,261.41,-84.48,258.01,-87.11,254.6,-89.75,250.7,-92,253.1,-95.2,253.099,-95.198] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [351.7,9.6,347.73,17.85,343.92,26.24,340.11,34.63,337.13,41.92,334.15,49.22,332.33,54.8,330.5,60.37,330.5,63,330.5,64.12,330.85,65.44,331.19,66.76,331.6,68.27,332.02,69.79,332.36,71.52,332.7,73.25,332.7,75.2,332.7,77.37,332.28,78.68,331.85,79.98,331.23,80.67,330.61,81.37,329.92,81.58,329.23,81.8,328.7,81.8,325.4,81.8,322.15,78.64,318.89,75.49,316.3,69,313.72,62.51,312.11,52.61,310.5,42.7,310.5,29.2,310.5,17.8,311.8,7.38,313.1,-3.04,314.9,-12.33,316.7,-21.61,318.6,-29.67,320.5,-37.73,321.7,-44.4,321.93,-45.67,322.08,-46.88,322.24,-48.09,322.33,-49.25,322.42,-50.41,322.46,-51.54,322.5,-52.67,322.5,-53.8,322.5,-58.97,321.01,-62.16,319.52,-65.34,317.63,-67.1,315.74,-68.86,313.98,-69.49,312.23,-70.12,311.7,-70.2,311.5,-72,312.18,-72.67,313.08,-73.13,313.99,-73.59,314.98,-73.87,315.97,-74.15,316.99,-74.28,318,-74.4,318.9,-74.4,323.18,-74.4,326.78,-72.45,330.37,-70.5,332.98,-67.65,335.58,-64.8,337.04,-61.57,338.5,-58.35,338.5,-55.8,338.5,-53.77,338.02,-52.17,337.54,-50.56,336.88,-49.25,336.22,-47.94,335.55,-46.85,334.88,-45.77,334.5,-44.8,328.88,-30.47,325.83,-18.62,322.79,-6.76,321.38,2.35,319.97,11.46,319.74,17.69,319.5,23.93,319.5,27,319.5,31.73,319.71,35.4,319.92,39.08,320.28,41.88,320.64,44.67,321.11,46.66,321.58,48.65,322.1,50,324.1,49.2,325.08,47.55,327.84,42.7,330.6,37.85,334.05,31.7,337.5,25.55,341.09,19.05,344.68,12.55,347.3,7.6,351.7,9.6,351.703,9.6,391.1,4.2,387.65,7.8,384.66,11.61,381.67,15.42,379.45,19.37,377.24,23.33,375.97,27.4,374.7,31.47,374.7,35.6,374.7,42.12,377.08,46.53,379.47,50.94,384.45,53.62,389.44,56.3,397.15,57.45,404.85,58.6,415.5,58.6,422.1,58.6,427.74,58.23,433.38,57.87,437.83,57.32,442.27,56.78,445.4,56.15,448.53,55.52,450.1,55,454.08,55.52,456.79,56.48,459.51,57.44,461.18,58.62,462.85,59.8,463.57,61.1,464.3,62.4,464.3,63.6,464.3,65.32,462.77,66.45,461.23,67.57,456.53,68.22,451.82,68.88,443.12,69.14,434.43,69.4,420.1,69.4,406.45,69.4,396.34,67.65,386.23,65.91,379.55,62.02,372.88,58.14,369.59,51.93,366.3,45.72,366.3,36.8,366.3,31.62,368.06,26.76,369.81,21.89,372.68,17.37,375.55,12.86,379.21,8.7,382.88,4.55,386.7,0.8,391.1,4.2,391.102,4.2,370.5,-46.6,372.3,-46.08,374.72,-45.73,377.15,-45.38,379.83,-45.17,382.51,-44.97,385.27,-44.88,388.03,-44.8,390.5,-44.8,394.33,-44.8,399.81,-45.37,405.29,-45.94,411.13,-46.95,416.96,-47.96,422.48,-49.36,428,-50.75,431.9,-52.4,433.18,-52.92,434.51,-53.65,435.85,-54.37,437.05,-55.02,438.25,-55.68,439.21,-56.14,440.18,-56.6,440.7,-56.6,443.03,-56.6,445.72,-56.18,448.42,-55.76,450.73,-54.87,453.03,-53.99,454.57,-52.63,456.1,-51.27,456.1,-49.4,456.1,-47.9,454.88,-46.88,453.67,-45.85,451.63,-45.1,449.58,-44.35,446.9,-43.77,444.23,-43.2,441.3,-42.6,435.6,-41.4,429.08,-40.37,422.57,-39.35,416.33,-38.6,410.08,-37.85,404.65,-37.42,399.23,-37,395.7,-37,392.63,-37,389.19,-37.15,385.75,-37.29,382.3,-37.87,378.85,-38.46,375.56,-39.61,372.28,-40.77,369.5,-42.8,370.5,-46.6,370.502,-46.6] ) );
    shape.graphics.endFill();

    return shape;
  },
  "見つからぬ" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [-290.8,47.3,-291,73.9,-288.98,74.57,-287.72,75.06,-286.47,75.55,-285.78,76,-285.08,76.45,-284.84,76.94,-284.6,77.42,-284.6,78.1,-284.6,79.75,-285.7,81.02,-286.79,82.29,-289.3,83.15,-291.81,84.01,-295.91,84.46,-300,84.9,-306,84.9,-345,84.9,-350.78,84.9,-354.37,84.36,-357.97,83.82,-359.98,82.22,-361.98,80.63,-362.69,77.73,-363.4,74.82,-363.4,70.1,-363.4,22.5,-391.8,22.5,-392.32,22.8,-392.94,23.03,-393.55,23.26,-394.3,23.42,-395.05,23.59,-395.96,23.71,-396.88,23.82,-398,23.9,-399.35,35.07,-403.31,45.3,-407.28,55.53,-415.3,64.17,-423.33,72.82,-436.14,79.56,-448.95,86.3,-468,90.5,-469.8,87.1,-453.9,82.82,-442.87,76.33,-431.83,69.84,-424.73,61.55,-417.62,53.26,-413.97,43.39,-410.32,33.52,-409.2,22.5,-426.8,22.5,-426.8,31.3,-426.8,31.3,-427.11,31.96,-427.43,32.61,-428.55,33.4,-429.68,34.19,-431.86,34.84,-434.05,35.5,-437.8,35.5,-437.8,-88.7,-425.6,-82.9,-330,-82.9,-324.2,-90.5,-308.4,-78.7,-308.93,-78.1,-309.77,-77.51,-310.62,-76.92,-311.73,-76.4,-312.83,-75.87,-314.17,-75.44,-315.5,-75,-317,-74.7,-317,28.9,-317,29.12,-317.62,29.84,-318.25,30.56,-319.58,31.32,-320.91,32.09,-322.99,32.7,-325.08,33.3,-328,33.3,-328,22.5,-348,22.5,-348.38,22.65,-348.83,22.8,-349.28,22.94,-349.83,23.07,-350.37,23.21,-351.01,23.32,-351.65,23.43,-352.4,23.5,-352.4,70.3,-352.4,72.17,-352.25,73.22,-352.11,74.27,-351.38,74.77,-350.64,75.28,-349.11,75.39,-347.58,75.5,-344.8,75.5,-305.8,75.5,-304.38,75.5,-303.34,75.42,-302.3,75.34,-301.53,75.02,-300.76,74.71,-300.2,74.07,-299.65,73.42,-299.2,72.3,-298.68,71.32,-297.98,68.98,-297.28,66.64,-296.48,63.32,-295.67,60.01,-294.79,55.9,-293.9,51.8,-293,47.3,-290.8,47.3,-290.802,47.299,-328,-77.9,-426.8,-77.9,-426.8,-50.1,-328,-50.1,-328,-77.9,-328.002,-77.899,-328,-16.5,-328,-45.1,-426.8,-45.1,-426.8,-16.5,-328,-16.5,-328.002,-16.5,-426.8,17.5,-328,17.5,-328,-11.5,-426.8,-11.5,-426.8,17.5,-426.8,17.5] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-221.6,62.5,-208.25,61.67,-195.78,59.84,-183.32,58,-172.43,55.45,-161.53,52.9,-152.55,49.79,-143.58,46.67,-137.2,43.3,-129.85,39.4,-124.21,34.11,-118.58,28.81,-114.75,22.55,-110.93,16.29,-108.96,9.27,-107,2.25,-107,-5.1,-107,-16.35,-110.19,-25.1,-113.37,-33.85,-119.43,-39.85,-125.48,-45.85,-134.25,-48.97,-143.03,-52.1,-154.2,-52.1,-163.43,-52.1,-173.43,-50.17,-183.44,-48.24,-193.3,-45.05,-203.16,-41.86,-212.42,-37.76,-221.67,-33.65,-229.4,-29.3,-232.85,-27.42,-235.2,-25.63,-237.55,-23.83,-239.5,-22.42,-241.45,-21.02,-243.35,-20.16,-245.25,-19.3,-247.8,-19.3,-250.2,-19.3,-253.81,-20.76,-257.42,-22.22,-260.8,-24.82,-264.17,-27.43,-266.59,-31.03,-269,-34.62,-269,-38.9,-269,-40.17,-268.9,-41.44,-268.81,-42.71,-268.4,-43.95,-267.99,-45.19,-267.14,-46.38,-266.3,-47.57,-264.8,-48.7,-263.4,-48.7,-263.02,-46.22,-262.09,-43.91,-261.15,-41.61,-259.5,-39.82,-257.85,-38.04,-255.41,-36.97,-252.97,-35.9,-249.6,-35.9,-243.9,-35.9,-233.95,-39.56,-223.99,-43.21,-211.22,-47.6,-198.46,-51.99,-183.59,-55.64,-168.73,-59.3,-153.2,-59.3,-139.85,-59.3,-128.81,-55.77,-117.76,-52.24,-109.85,-45.3,-101.94,-38.36,-97.57,-28.08,-93.2,-17.8,-93.2,-4.3,-93.2,4.7,-95.59,12.98,-97.97,21.26,-102.68,28.5,-107.38,35.74,-114.38,41.77,-121.38,47.8,-130.6,52.3,-137.8,55.82,-147.5,58.56,-157.2,61.3,-168.75,63.25,-180.3,65.2,-193.38,66.36,-206.45,67.52,-220.4,67.9,-221.6,62.5,-221.6,62.499] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-26.4,-78.9,-25.72,-80.32,-24.58,-81.6,-23.44,-82.87,-22.05,-83.82,-20.66,-84.78,-19.14,-85.34,-17.62,-85.9,-16.2,-85.9,-12.07,-85.9,-8.18,-84.74,-4.29,-83.59,-1.27,-81.75,1.74,-79.91,3.57,-77.63,5.4,-75.35,5.4,-73.1,5.4,-72.05,4.8,-71.35,4.21,-70.65,3.33,-69.6,2.44,-68.55,1.44,-66.8,0.43,-65.05,-0.4,-61.9,-1.22,-58.67,-2.12,-55.35,-3.02,-52.02,-3.97,-48.65,-4.93,-45.27,-5.94,-41.87,-6.95,-38.47,-8,-35.1,-6.12,-35.4,-3.54,-35.81,-0.96,-36.23,2.03,-36.6,5.01,-36.98,8.23,-37.24,11.45,-37.5,14.6,-37.5,25.55,-37.5,31.98,-34.38,38.41,-31.25,41.75,-25.4,45.09,-19.55,46.04,-11.18,47,-2.8,47,7.7,47,19.7,44.77,32.48,42.53,45.26,38.28,55.8,34.02,66.34,27.85,73.12,21.68,79.9,13.8,79.9,12.23,79.9,11.13,79.23,10.03,78.57,9.23,77.42,8.42,76.28,7.81,74.75,7.2,73.22,6.6,71.5,6.15,70.07,3.62,67.59,1.09,65.1,-2.55,62.1,-6.19,59.1,-10.44,55.86,-14.7,52.62,-18.6,49.7,-15.8,45.9,-11.82,48.37,-7.1,51.28,-2.39,54.18,2.15,56.67,6.69,59.17,10.58,60.83,14.48,62.5,16.8,62.5,21.45,62.5,25.19,56.5,28.93,50.49,31.55,41.92,34.18,33.36,35.59,23.94,37,14.52,37,7.7,37,-1.75,36.53,-9.03,36.05,-16.31,33.8,-21.27,31.55,-26.24,26.88,-28.83,22.2,-31.42,13.8,-31.5,11.7,-31.5,8.45,-31.13,5.19,-30.77,1.73,-30.23,-1.74,-29.68,-4.96,-29.05,-8.17,-28.43,-10.2,-27.9,-14.1,-15.52,-18.78,-2.35,-23.46,10.83,-28.42,23.37,-33.39,35.92,-38.41,47.11,-43.42,58.3,-48,66.7,-49.57,69.62,-50.94,71.58,-52.3,73.54,-53.5,74.72,-54.7,75.9,-55.76,76.4,-56.82,76.9,-57.8,76.9,-59,76.9,-60.05,76.35,-61.11,75.79,-61.9,74.57,-62.69,73.36,-63.14,71.41,-63.6,69.47,-63.6,66.7,-63.6,65.2,-62.77,63.48,-61.94,61.76,-60.7,60,-59.46,58.24,-58.03,56.52,-56.6,54.8,-55.4,53.3,-51.8,49.02,-47.04,39.97,-42.27,30.92,-37.4,19.72,-32.52,8.53,-28.06,-3.48,-23.6,-15.5,-20.6,-25.7,-22.62,-25.17,-25.35,-24.44,-28.07,-23.71,-30.97,-22.85,-33.88,-21.99,-36.71,-21.03,-39.55,-20.07,-41.8,-19.1,-42.55,-18.8,-43.46,-18.11,-44.37,-17.41,-45.32,-16.7,-46.28,-15.99,-47.23,-15.44,-48.17,-14.9,-49,-14.9,-52.3,-14.9,-54.96,-16.66,-57.62,-18.41,-59.5,-21,-61.37,-23.59,-62.39,-26.54,-63.4,-29.5,-63.4,-31.9,-63.4,-33.4,-62.92,-34.75,-62.44,-36.11,-61.65,-37.17,-60.86,-38.24,-59.85,-38.96,-58.85,-39.67,-57.8,-39.9,-57.2,-39.5,-57.57,-37.92,-57.04,-36.04,-56.52,-34.16,-55.22,-32.52,-53.93,-30.89,-51.94,-29.8,-49.95,-28.7,-47.4,-28.7,-44.62,-28.7,-41.24,-29.11,-37.86,-29.52,-34.15,-30.17,-30.44,-30.83,-26.53,-31.65,-22.62,-32.47,-18.8,-33.3,-18.12,-35.55,-16.88,-40.45,-15.64,-45.35,-14.42,-50.9,-13.2,-56.45,-12.3,-61.65,-11.4,-66.85,-11.4,-69.7,-11.4,-72.4,-12.1,-74.22,-12.8,-76.05,-14.47,-77.1,-16.14,-78.15,-18.91,-78.47,-21.67,-78.8,-25.8,-78.5,-26.4,-78.9,-26.399,-78.899,60.2,-51.9,73.4,-47.55,82.36,-40.25,91.32,-32.96,96.8,-24.42,102.27,-15.89,104.64,-6.98,107,1.92,107,9.5,107,13.02,106.43,15.75,105.87,18.47,104.87,20.33,103.88,22.18,102.53,23.14,101.17,24.1,99.6,24.1,98.32,24.1,97.2,23.71,96.07,23.33,95.22,22.35,94.38,21.38,93.89,19.71,93.4,18.05,93.4,15.5,93.4,6.5,91.8,-2.64,90.19,-11.79,86.12,-20.15,82.06,-28.51,75.09,-35.63,68.12,-42.75,57.4,-47.7,60.2,-51.9,60.199,-51.899] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [164.2,75.9,186.93,74.85,204.55,72.03,222.17,69.21,234.23,63.97,246.28,58.74,252.54,50.78,258.8,42.82,258.8,31.5,258.8,22.27,256.25,16.03,253.69,9.78,249.03,5.97,244.36,2.17,237.79,0.53,231.23,-1.1,223.2,-1.1,216.53,-1.1,209.04,0.69,201.56,2.48,193.65,6.18,185.74,9.87,177.58,15.52,169.43,21.17,161.4,28.9,160.28,29.95,159.39,31.27,158.5,32.59,157.6,33.75,156.7,34.91,155.66,35.71,154.63,36.5,153.2,36.5,150.35,36.5,147.9,35.39,145.45,34.29,143.65,32.6,141.85,30.91,140.83,28.91,139.8,26.9,139.8,25.1,139.8,24.05,140.08,23.28,140.35,22.51,140.8,21.77,141.25,21.04,141.83,20.23,142.4,19.43,143,18.3,143.68,17.03,144.36,15.36,145.05,13.69,145.65,11.73,146.25,9.76,146.71,7.53,147.18,5.3,147.4,2.9,147.7,0.58,148.05,-2.48,148.4,-5.54,148.7,-8.95,149,-12.36,149.2,-15.94,149.4,-19.52,149.4,-22.9,149.4,-24.62,149.33,-26.26,149.25,-27.89,149.1,-29.37,148.95,-30.86,148.73,-32.15,148.5,-33.45,148.2,-34.5,148.05,-35.02,147.94,-35.55,147.83,-36.07,147.75,-36.6,147.68,-37.12,147.64,-37.65,147.6,-38.17,147.6,-38.7,147.6,-40.65,148.18,-42.66,148.76,-44.68,150.13,-46.72,151.5,-48.77,153.76,-50.82,156.03,-52.87,159.4,-54.9,162.1,-56.55,166.41,-58.33,170.73,-60.12,175.6,-61.67,180.48,-63.23,185.39,-64.38,190.3,-65.52,194.2,-65.9,194,-66.1,187.33,-66.62,181.69,-68.14,176.05,-69.66,171.55,-72.22,167.05,-74.79,163.74,-78.45,160.43,-82.1,158.4,-86.9,163,-89.5,166.45,-83.95,171.65,-80.94,176.86,-77.94,183.48,-76.55,190.1,-75.16,197.96,-74.93,205.83,-74.7,214.6,-74.7,218.8,-74.7,222.55,-73.66,226.3,-72.62,229.13,-70.87,231.96,-69.13,233.64,-66.85,235.33,-64.57,235.4,-62.1,235.4,-60.75,234.69,-59.86,233.97,-58.97,232.83,-58.45,231.68,-57.92,230.25,-57.71,228.83,-57.5,227.4,-57.5,226.58,-57.5,225.16,-57.91,223.75,-58.33,222.08,-58.87,220.41,-59.42,218.66,-59.94,216.9,-60.47,215.4,-60.7,214.05,-60.92,212.67,-61.08,211.29,-61.23,209.9,-61.32,208.51,-61.42,207.13,-61.46,205.75,-61.5,204.4,-61.5,198.7,-61.5,193.15,-60.79,187.6,-60.09,182.5,-58.85,177.4,-57.61,172.9,-55.93,168.4,-54.25,164.8,-52.3,162.63,-51.25,160.79,-50.16,158.96,-49.08,157.63,-47.82,156.3,-46.57,155.55,-45.07,154.8,-43.57,154.8,-41.7,154.8,-40.8,155.01,-39.82,155.23,-38.84,155.6,-37.9,155.98,-36.96,156.49,-36.13,157,-35.3,157.6,-34.7,158.2,-34.17,158.72,-33.25,159.23,-32.34,159.6,-31.25,159.98,-30.16,160.19,-29.02,160.4,-27.87,160.4,-26.9,160.4,-24.95,160.04,-22.41,159.67,-19.88,159.13,-16.37,158.58,-12.87,157.96,-8.19,157.33,-3.52,156.8,2.7,156.58,5.4,156.27,7.74,155.97,10.07,155.58,12.08,155.18,14.08,154.69,15.78,154.2,17.48,153.6,18.9,153.53,18.98,153.49,19.08,153.45,19.19,153.43,19.3,153.41,19.41,153.41,19.52,153.4,19.63,153.4,19.7,153.4,19.93,153.47,20.14,153.55,20.36,153.68,20.53,153.81,20.7,153.99,20.8,154.18,20.9,154.4,20.9,154.93,20.9,155.56,20.85,156.19,20.79,156.9,20.6,157.61,20.41,158.4,20.06,159.18,19.7,160,19.1,167.2,13.93,175.31,9.09,183.43,4.26,191.75,0.53,200.08,-3.21,208.26,-5.45,216.45,-7.7,223.8,-7.7,234.68,-7.7,243.41,-5.37,252.14,-3.03,258.28,1.82,264.41,6.68,267.7,14.15,271,21.62,271,31.9,271,45.85,263.8,55.14,256.6,64.42,242.95,70.05,229.3,75.67,209.58,78.14,189.85,80.6,164.8,80.9,164.2,75.9,164.202,75.899] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [372.8,-78.1,373.7,-79.37,375.05,-80.35,376.39,-81.32,378,-81.97,379.61,-82.63,381.41,-82.96,383.2,-83.3,385,-83.3,385.6,-83.3,387.93,-83,390.25,-82.71,392.8,-81.82,395.35,-80.94,397.38,-79.33,399.4,-77.72,399.4,-75.1,399.4,-74.27,399.24,-73.37,399.09,-72.47,398.9,-71.5,398.71,-70.52,398.56,-69.47,398.4,-68.42,398.4,-67.3,398.4,-66.32,398.07,-64.06,397.73,-61.81,397.08,-58.52,396.42,-55.24,395.45,-51.07,394.48,-46.9,393.2,-42.1,395.38,-42.55,397.51,-42.92,399.64,-43.29,401.7,-43.55,403.76,-43.81,405.74,-43.96,407.73,-44.1,409.6,-44.1,421.98,-44.1,431.18,-41.1,440.38,-38.1,446.48,-31.35,452.57,-24.6,455.58,-13.72,458.6,-2.85,458.6,12.9,458.6,18.75,458.32,23.77,458.03,28.78,457.52,33.07,457.02,37.37,456.32,41,455.62,44.62,454.8,47.7,459.07,50.85,461.95,53.08,464.83,55.32,466.57,57.32,468.32,59.33,469.06,61.45,469.8,63.57,469.8,66.5,469.8,67.7,469.32,68.66,468.84,69.62,468.07,70.3,467.31,70.97,466.34,71.34,465.37,71.7,464.4,71.7,463.5,71.7,462.53,71.42,461.56,71.14,460.53,70.5,459.49,69.86,458.41,68.83,457.33,67.8,456.2,66.3,455.53,65.25,454.75,64.27,453.97,63.29,453.13,62.37,452.28,61.46,451.39,60.59,450.5,59.72,449.6,58.9,447.95,61.52,445.36,64.88,442.76,68.24,438.6,71.22,434.44,74.21,428.39,76.25,422.35,78.3,413.8,78.3,405.93,78.3,400.22,76.17,394.52,74.04,390.83,70.55,387.13,67.06,385.37,62.61,383.6,58.15,383.6,53.5,383.6,49.07,385.78,45.36,387.96,41.66,391.9,38.97,395.84,36.29,401.32,34.8,406.8,33.3,413.4,33.3,416.7,33.3,420.4,33.88,424.09,34.46,427.97,35.52,431.86,36.59,435.82,38.11,439.77,39.62,443.6,41.5,444.35,38.35,444.94,34.83,445.54,31.32,445.95,27.47,446.36,23.63,446.58,19.48,446.8,15.32,446.8,10.9,446.8,-3.2,443.9,-12.53,441.01,-21.85,435.92,-27.4,430.84,-32.95,423.93,-35.23,417.02,-37.5,409,-37.5,406.82,-37.5,404.64,-37.36,402.46,-37.21,400.25,-36.95,398.04,-36.69,395.78,-36.32,393.52,-35.95,391.2,-35.5,388.87,-27.25,385.8,-17.91,382.73,-8.56,378.93,1,375.12,10.56,370.59,19.91,366.05,29.25,360.8,37.5,362.75,39.45,363.81,40.76,364.86,42.07,365.35,43.05,365.84,44.02,365.92,44.81,366,45.6,366,46.5,366,47.32,365.84,48.18,365.68,49.03,365.3,49.72,364.93,50.42,364.31,50.86,363.7,51.3,362.8,51.3,361.9,51.3,360.93,50.94,359.96,50.59,358.93,49.95,357.89,49.31,356.81,48.43,355.73,47.55,354.6,46.5,350.63,51.75,346.39,56.06,342.15,60.37,337.65,63.45,333.15,66.52,328.39,68.21,323.63,69.9,318.6,69.9,315.45,69.9,312.56,68.31,309.66,66.72,307.45,63.95,305.24,61.17,303.92,57.41,302.6,53.65,302.6,49.3,302.6,40.9,305.11,32.77,307.61,24.65,311.23,17.6,314.85,10.55,318.89,4.97,322.93,-0.6,326,-3.9,324.8,-8.25,323.76,-12.85,322.71,-17.45,321.85,-22.25,320.99,-27.05,320.32,-32.03,319.65,-37,319.2,-42.1,318.9,-44.95,317.87,-47.37,316.83,-49.79,315.43,-51.7,314.02,-53.61,312.42,-54.98,310.83,-56.35,309.4,-57.1,310.6,-59.9,314.88,-59.52,318.53,-58.43,322.19,-57.33,324.88,-55.48,327.56,-53.62,329.08,-50.98,330.6,-48.35,330.6,-44.9,330.4,-36.9,330.4,-33.6,330.59,-30.28,330.77,-26.96,331.13,-23.7,331.48,-20.44,332,-17.27,332.53,-14.1,333.2,-11.1,338.45,-15.9,344.27,-20.08,350.09,-24.27,356.23,-27.78,362.36,-31.28,368.67,-34.08,374.97,-36.88,381.2,-38.9,382.25,-43.1,383.07,-47.15,383.89,-51.2,384.45,-54.95,385.01,-58.7,385.31,-62.07,385.6,-65.45,385.6,-68.3,385.6,-70.47,384.99,-72.03,384.37,-73.59,382.95,-74.6,381.52,-75.61,379.19,-76.12,376.85,-76.62,373.4,-76.7,372.8,-78.1,372.802,-78.099,320.6,59.1,324.05,59.1,327.52,57.7,331,56.3,334.43,53.75,337.86,51.2,341.22,47.62,344.58,44.05,347.8,39.7,346.83,38.72,344.72,36.19,342.61,33.66,339.95,29.35,337.29,25.04,334.36,18.83,331.43,12.62,328.8,4.3,326.93,6.62,324.19,11.3,321.46,15.97,318.93,21.75,316.4,27.52,314.6,33.77,312.8,40.02,312.8,45.5,312.8,49.33,313.37,51.93,313.94,54.53,314.95,56.13,315.97,57.72,317.36,58.41,318.75,59.1,320.4,59.1,320.6,59.1,320.603,59.099,353.6,30.7,357.8,23.88,361.6,16.16,365.4,8.44,368.7,0.33,372,-7.79,374.75,-16.07,377.5,-24.35,379.6,-32.3,373.53,-30.12,367.32,-27.04,361.11,-23.96,355.28,-20.22,349.45,-16.49,344.25,-12.25,339.05,-8,335,-3.5,336.5,2.12,338.41,7.13,340.32,12.14,342.48,16.3,344.63,20.46,346.95,23.67,349.28,26.87,351.6,28.9,353.6,30.7,353.602,30.7,413,69.1,417.43,69.1,421.48,68.11,425.53,67.13,429.05,64.97,432.58,62.82,435.5,59.4,438.43,55.97,440.6,51.1,436.85,48.4,432.97,46.34,429.08,44.29,425.28,42.9,421.47,41.51,417.85,40.81,414.23,40.1,411,40.1,406.2,40.1,402.41,41.19,398.63,42.29,396,44.2,393.38,46.11,391.99,48.71,390.6,51.3,390.6,54.3,390.6,57.52,392.25,60.24,393.89,62.96,396.85,64.92,399.81,66.89,403.93,68,408.05,69.1,413,69.1,413.001,69.099] ) );
    shape.graphics.endFill();

    return shape;
  },
  "本当の思い" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,2,3,3,3,3,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,2,2] ), $.toNumberVector( [-221.34,-92.7,-221.94,-91.57,-222.7,-90.75,-223.46,-89.92,-224.56,-89.37,-225.67,-88.83,-227.21,-88.56,-228.76,-88.3,-230.94,-88.3,-302.94,-88.3,-295.88,-74.72,-286.22,-61.98,-276.56,-49.23,-265.39,-38.23,-254.21,-27.22,-242.07,-18.41,-229.94,-9.6,-217.94,-3.9,-218.34,-1.9,-220.21,-1.75,-221.98,-1.08,-223.74,-0.41,-225.26,0.75,-226.78,1.91,-227.98,3.56,-229.19,5.2,-229.94,7.3,-241.49,0.25,-252.6,-9.59,-263.72,-19.44,-273.71,-31.55,-283.7,-43.66,-292.23,-57.78,-300.76,-71.9,-307.13,-87.5,-307.13,-5.1,-286.13,-5.1,-277.33,-16.5,-260.53,-4.5,-261.21,-3.3,-262,-2.46,-262.8,-1.63,-263.89,-1.1,-264.97,-0.58,-266.44,-0.34,-267.91,-0.1,-269.93,-0.1,-307.13,-0.1,-307.13,39.3,-307.13,39.52,-307.5,40.24,-307.87,40.95,-309.03,41.72,-310.2,42.49,-312.37,43.09,-314.53,43.7,-318.13,43.7,-318.13,-0.1,-362.53,-0.1,-363.73,-5.1,-318.13,-5.1,-318.13,-81.1,-324.88,-67.45,-333.76,-54.75,-342.63,-42.05,-353.43,-30.65,-364.23,-19.25,-376.86,-9.33,-389.48,0.6,-403.73,8.7,-406.13,5.7,-393.23,-3.08,-381.63,-13.88,-370.03,-24.69,-360.11,-36.8,-350.19,-48.91,-342.15,-61.97,-334.11,-75.02,-328.33,-88.3,-401.93,-88.3,-403.33,-93.3,-318.13,-93.3,-318.13,-141.1,-298.33,-139.3,-298.48,-138.25,-298.98,-137.45,-299.47,-136.65,-300.48,-136.07,-301.5,-135.49,-303.11,-135.11,-304.73,-134.72,-307.13,-134.5,-307.13,-93.3,-248.53,-93.3,-239.13,-105.3,-221.34,-92.7,-221.336,-92.699] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-15.49,-89.34,3.71,-75.18,3.08,-74.46,2.03,-73.72,0.97,-72.98,-0.4,-72.3,-1.77,-71.63,-3.41,-71.07,-5.05,-70.5,-6.85,-70.14,-6.85,40.26,-6.85,40.62,-7.63,41.53,-8.41,42.43,-10.03,43.38,-11.65,44.32,-14.14,45.05,-16.63,45.78,-20.05,45.78,-20.05,29.22,-184.21,29.22,-186.13,23.22,-20.05,23.22,-20.05,-23.1,-175.57,-23.1,-177.49,-29.1,-20.05,-29.1,-20.05,-74.22,-178.45,-74.22,-180.37,-80.22,-99.25,-80.22,-99.25,-174.55,-74.53,-172.39,-74.62,-170.86,-75.25,-169.78,-75.88,-168.71,-77.23,-167.94,-78.58,-167.18,-80.74,-166.65,-82.9,-166.11,-86.05,-165.66,-86.05,-80.22,-22.45,-80.22,-15.49,-89.34,-15.488,-89.344,-182.53,-158.94,-169.84,-151.66,-161.32,-144.21,-152.79,-136.77,-147.64,-129.81,-142.49,-122.86,-140.31,-116.72,-138.13,-110.58,-138.13,-105.9,-138.13,-103.29,-138.68,-101.24,-139.23,-99.19,-140.2,-97.77,-141.17,-96.36,-142.49,-95.61,-143.8,-94.86,-145.33,-94.86,-146.05,-94.86,-146.81,-95.01,-147.57,-95.15,-148.33,-95.46,-149.1,-95.78,-149.85,-96.28,-150.61,-96.78,-151.33,-97.5,-152.32,-104.61,-155.71,-112.74,-159.09,-120.87,-163.84,-128.85,-168.59,-136.84,-174.18,-144.11,-179.77,-151.38,-185.17,-156.78,-182.53,-158.94,-182.532,-158.945,-58.45,-91.98,-54.04,-98.01,-49.1,-105.91,-44.17,-113.8,-39.13,-122.73,-34.09,-131.67,-29.15,-141.23,-24.22,-150.78,-19.81,-160.15,2.03,-149.58,1.67,-148.86,1.21,-148.29,0.74,-147.71,0.11,-147.3,-0.52,-146.9,-1.34,-146.68,-2.17,-146.46,-3.25,-146.46,-3.7,-146.46,-4.15,-146.51,-4.6,-146.55,-5.08,-146.61,-5.55,-146.68,-6.05,-146.77,-6.55,-146.85,-7.09,-146.94,-12.4,-138.93,-18.33,-130.92,-24.26,-122.91,-30.43,-115.44,-36.59,-107.97,-42.8,-101.31,-49,-94.65,-54.85,-89.34,-58.45,-91.98,-58.449,-91.983] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [-75.44,166.73,-59.64,164.82,-48.64,160,-37.64,155.19,-30.76,148.35,-23.89,141.52,-20.79,133.11,-17.69,124.69,-17.69,115.58,-17.69,105.46,-20.3,96.27,-22.9,87.08,-28.61,80.11,-34.31,73.13,-43.38,69.01,-52.45,64.88,-65.39,64.88,-66.4,64.88,-67.99,64.99,-69.58,65.09,-71.35,65.28,-73.13,65.46,-74.88,65.71,-76.64,65.95,-77.99,66.23,-76.81,67.19,-75.94,68.75,-75.06,70.32,-74.49,72.23,-73.91,74.14,-73.63,76.27,-73.34,78.4,-73.34,80.48,-73.34,90.78,-76.78,103.64,-80.22,116.5,-86.02,127.82,-91.81,139.14,-99.41,146.86,-107.02,154.58,-115.34,154.58,-119.17,154.58,-122.36,152.35,-125.56,150.12,-127.87,146.09,-130.17,142.05,-131.46,136.42,-132.74,130.79,-132.74,123.98,-132.74,110.76,-127.63,99.22,-122.52,87.68,-113.45,79.11,-104.38,70.55,-91.93,65.62,-79.47,60.68,-64.79,60.68,-50.96,60.68,-40.41,64.8,-29.87,68.92,-22.76,76.3,-15.64,83.68,-12.02,93.9,-8.4,104.12,-8.4,116.33,-8.4,126.74,-12.04,135.91,-15.69,145.08,-23.62,152.23,-31.55,159.39,-44.08,164.15,-56.62,168.9,-74.39,170.48,-75.44,166.73,-75.442,166.728,-82.04,67.13,-90.7,69.1,-98.47,74.01,-106.23,78.91,-112.08,86.24,-117.93,93.56,-121.36,103.05,-124.79,112.54,-124.79,123.68,-124.79,128.18,-124.11,132.19,-123.42,136.19,-122.13,139.2,-120.83,142.21,-118.97,143.97,-117.1,145.73,-114.74,145.73,-107.99,145.73,-101.66,138.43,-95.33,131.14,-90.44,120.55,-85.55,109.96,-82.59,98.08,-79.64,86.2,-79.64,77.03,-79.64,75.57,-79.83,74.03,-80.01,72.49,-80.34,71.12,-80.66,69.76,-81.1,68.7,-81.54,67.64,-82.04,67.13,-82.042,67.131] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [45.8,112.28,46.13,114.02,46.37,115.71,46.62,117.39,46.79,119.02,46.95,120.65,47.03,122.22,47.11,123.78,47.11,125.27,47.11,135.83,43.84,143.75,40.56,151.66,35.76,156.94,30.95,162.23,25.49,164.87,20.03,167.5,15.66,167.5,14.17,167.5,12.99,167.14,11.81,166.78,10.98,166.1,10.16,165.42,9.72,164.44,9.27,163.46,9.27,162.22,9.27,161.15,9.7,160.09,10.13,159.03,10.87,158.05,11.61,157.06,12.62,156.16,13.62,155.27,14.77,154.53,19.64,152.46,24.45,148.61,29.25,144.75,33.09,139.34,36.93,133.94,39.34,127.11,41.75,120.29,41.84,112.28,45.8,112.28,45.797,112.285,174.5,79.06,48,79.06,48,89.19,48,89.19,47.62,89.91,47.25,90.63,46.02,91.5,44.78,92.36,42.43,93.08,40.08,93.81,36.12,93.81,36.12,-17.96,49.54,-11.57,172.3,-11.57,178.46,-19.5,196.06,-6.96,195.48,-6.3,194.51,-5.65,193.55,-5,192.29,-4.43,191.03,-3.85,189.53,-3.37,188.03,-2.89,186.38,-2.56,186.38,85.88,186.29,86.13,185.48,86.85,184.66,87.57,183.16,88.33,181.65,89.09,179.48,89.69,177.3,90.28,174.5,90.28,174.5,79.06,174.496,79.065,104.76,-6.08,48,-6.08,48,30.67,104.76,30.67,104.76,-6.08,104.756,-6.075,48,73.56,104.76,73.56,104.76,36.16,48,36.16,48,73.56,47.996,73.565,157.12,135.39,156.68,162.45,159.07,163.19,160.5,163.66,161.94,164.12,162.7,164.54,163.46,164.95,163.7,165.42,163.94,165.88,163.94,166.63,163.94,168.69,162.71,170.18,161.49,171.68,158.6,172.65,155.71,173.62,150.94,174.08,146.17,174.55,139.08,174.55,88.04,174.55,81.27,174.55,77.06,173.92,72.84,173.3,70.49,171.55,68.14,169.8,67.31,166.66,66.48,163.52,66.48,158.49,66.48,108.33,85.84,110.31,85.67,111.3,85.29,112.01,84.9,112.73,84.08,113.25,83.25,113.76,81.88,114.11,80.5,114.46,78.36,114.7,78.36,158.7,78.36,160.68,78.54,161.79,78.73,162.9,79.68,163.44,80.62,163.97,82.62,164.09,84.63,164.21,88.26,164.21,139.52,164.21,141.33,164.21,142.61,164.12,143.9,164.04,144.82,163.71,145.75,163.38,146.42,162.72,147.08,162.06,147.66,160.91,148.32,159.83,149.1,157.47,149.88,155.12,150.76,151.78,151.65,148.43,152.64,144.26,153.62,140.09,154.7,135.38,157.12,135.38,157.117,135.386,83.19,89.41,96.81,91.55,106,95.29,115.2,99.04,120.79,103.35,126.38,107.66,128.77,112.02,131.16,116.38,131.16,119.77,131.16,121.17,130.76,122.34,130.37,123.51,129.64,124.36,128.92,125.2,127.91,125.67,126.89,126.14,125.66,126.14,125.16,126.14,124.66,126.1,124.16,126.05,123.65,125.92,123.13,125.8,122.59,125.59,122.05,125.37,121.48,125.04,119.08,120.42,114.71,115.65,110.33,110.88,104.95,106.48,99.56,102.09,93.66,98.35,87.76,94.6,82.32,92.04,83.19,89.41,83.195,89.405,174.5,-6.08,116.64,-6.08,116.64,30.67,174.5,30.67,174.5,-6.08,174.496,-6.075,116.64,73.56,174.5,73.56,174.5,36.16,116.64,36.16,116.64,73.56,116.637,73.565,162.84,109.42,177.19,114.87,186.79,121.24,196.39,127.62,202.16,134.01,207.94,140.4,210.36,146.36,212.78,152.33,212.78,156.95,212.78,159.17,212.27,161,211.76,162.82,210.85,164.12,209.94,165.42,208.69,166.13,207.44,166.85,205.96,166.85,205.3,166.85,204.63,166.72,203.97,166.59,203.29,166.32,202.61,166.06,201.9,165.64,201.2,165.22,200.46,164.65,199.3,157.63,195.38,150.14,191.46,142.65,185.94,135.58,180.41,128.5,173.85,122.29,167.29,116.08,160.86,111.63,162.84,109.42,162.836,109.425] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [234.53,24.49,235.13,23.44,235.97,22.68,236.81,21.92,237.78,21.44,238.76,20.95,239.82,20.72,240.88,20.49,241.94,20.49,245.46,20.49,249.15,22.04,252.84,23.6,255.86,26.19,258.88,28.77,260.81,32.13,262.73,35.49,262.73,39.09,262.73,40.06,262.41,41.04,262.08,42.01,261.61,42.99,261.14,43.96,260.62,44.94,260.11,45.91,259.73,46.89,259.28,48.16,258.81,49.87,258.34,51.57,257.91,53.34,257.48,55.1,257.12,56.73,256.76,58.36,256.53,59.49,256.16,62.11,255.74,65.65,255.32,69.18,254.96,73.51,254.6,77.84,254.37,82.92,254.13,87.99,254.13,93.69,254.13,104.71,256.73,113.12,259.32,121.53,262.71,127.21,266.1,132.89,269.41,135.79,272.71,138.69,274.13,138.69,275.18,138.69,276.05,138.2,276.92,137.72,277.93,136.64,278.95,135.55,280.27,133.79,281.58,132.04,283.53,129.49,285.41,127.01,288.52,122.21,291.63,117.4,295.38,111.29,299.13,105.17,303.22,98.27,307.31,91.36,311.13,84.69,315.53,86.29,312.38,92.44,308.3,100.21,304.22,107.98,300.28,115.61,296.35,123.24,293.09,129.85,289.83,136.46,288.33,140.29,288.18,140.81,288.04,141.3,287.9,141.79,287.78,142.26,287.67,142.73,287.6,143.18,287.54,143.64,287.54,144.09,287.54,144.54,287.61,144.95,287.68,145.36,287.81,145.71,287.94,146.07,288.12,146.37,288.31,146.66,288.54,146.89,289.36,147.71,290.06,148.69,290.75,149.67,291.26,150.66,291.77,151.66,292.05,152.6,292.33,153.54,292.33,154.29,292.33,155.26,291.74,155.91,291.15,156.57,290.13,156.96,289.12,157.36,287.78,157.52,286.43,157.69,284.93,157.69,283.66,157.69,281.45,157.01,279.23,156.33,276.68,155.11,274.13,153.89,271.55,152.2,268.96,150.51,266.93,148.49,260.86,142.34,256.76,135.32,252.65,128.3,250.16,120.99,247.67,113.67,246.6,106.36,245.54,99.04,245.54,92.29,245.54,86.59,245.74,80,245.94,73.41,246.26,66.86,246.58,60.32,246.97,54.29,247.36,48.26,247.74,43.69,247.74,41.09,247.74,36.74,246.66,33.69,245.59,30.65,243.81,28.74,242.03,26.82,239.72,25.96,237.41,25.09,234.94,25.09,234.53,24.49,234.535,24.487,354.33,33.69,367.31,37.14,377.02,44.28,386.74,51.43,393.21,60.41,399.68,69.39,402.91,79.28,406.13,89.16,406.13,98.09,406.13,100.79,405.83,103.37,405.53,105.96,404.76,107.99,403.99,110.01,402.67,111.25,401.36,112.49,399.33,112.49,398.13,112.49,397.1,111.95,396.08,111.42,395.31,110.34,394.54,109.25,394.07,107.59,393.61,105.94,393.53,103.69,393.23,92.96,390.47,82.74,387.7,72.52,382.51,63.76,377.31,55,369.71,48.2,362.11,41.39,352.13,37.49,354.33,33.69,354.334,33.688] ) );
    shape.graphics.endFill();

    return shape;
  },
  "いつまでも" : function()
  {
    var shape = Shape();

    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-452.6,-59.3,-452,-60.2,-451.2,-60.84,-450.39,-61.49,-449.48,-61.9,-448.56,-62.31,-447.57,-62.51,-446.58,-62.7,-445.6,-62.7,-441.4,-62.7,-437.34,-61.01,-433.29,-59.33,-430.1,-56.57,-426.91,-53.82,-424.96,-50.3,-423,-46.77,-423,-43.1,-423,-42.05,-423.3,-41.03,-423.6,-40.02,-424.05,-39.02,-424.5,-38.03,-425.03,-37.05,-425.55,-36.07,-426,-35.1,-428.25,-28.72,-429.47,-21.64,-430.69,-14.56,-431.25,-8.12,-431.81,-1.69,-431.91,3.4,-432,8.5,-432,10.9,-432,20.8,-429.67,28.69,-427.34,36.59,-424.18,42.1,-421.01,47.61,-417.74,50.56,-414.48,53.5,-412.6,53.5,-411.55,53.5,-410.65,53.05,-409.75,52.59,-408.7,51.52,-407.65,50.46,-406.3,48.69,-404.95,46.92,-403,44.3,-401.13,41.75,-398.08,37.04,-395.04,32.33,-391.4,26.43,-387.76,20.52,-383.82,13.9,-379.88,7.28,-376.2,0.9,-372,2.5,-375.15,8.95,-379.04,16.68,-382.93,24.4,-386.63,31.9,-390.32,39.4,-393.35,45.93,-396.38,52.45,-397.8,56.5,-397.95,56.95,-398.06,57.37,-398.18,57.78,-398.25,58.18,-398.33,58.57,-398.36,58.95,-398.4,59.33,-398.4,59.7,-398.4,60.23,-398.33,60.71,-398.26,61.19,-398.13,61.6,-398,62.01,-397.81,62.34,-397.63,62.68,-397.4,62.9,-396.58,63.73,-395.88,64.73,-395.18,65.74,-394.68,66.78,-394.17,67.81,-393.89,68.78,-393.6,69.75,-393.6,70.5,-393.6,71.78,-394.24,72.62,-394.87,73.47,-395.98,73.98,-397.08,74.48,-398.58,74.69,-400.08,74.9,-401.8,74.9,-403.23,74.9,-405.56,74.21,-407.89,73.51,-410.58,72.2,-413.26,70.89,-416,68.99,-418.75,67.1,-421,64.7,-426.78,58.85,-430.78,52,-434.78,45.16,-437.28,37.83,-439.77,30.49,-440.88,22.93,-442,15.38,-442,8.1,-442,2.55,-441.77,-3.92,-441.54,-10.39,-441.2,-16.82,-440.86,-23.26,-440.48,-29.17,-440.1,-35.07,-439.8,-39.5,-439.8,-41.5,-439.8,-44.73,-440.39,-47.7,-440.98,-50.67,-442.43,-53,-443.87,-55.32,-446.3,-56.8,-448.73,-58.27,-452.4,-58.5,-452.6,-59.3,-452.601,-59.299,-334.6,-48.7,-321.03,-45.7,-310.92,-38.86,-300.82,-32.02,-294.13,-23.25,-287.43,-14.47,-284.12,-4.71,-280.8,5.05,-280.8,13.9,-280.8,16.83,-281.24,19.57,-281.68,22.31,-282.65,24.43,-283.63,26.54,-285.19,27.82,-286.75,29.1,-289,29.1,-290.28,29.1,-291.44,28.57,-292.6,28.04,-293.48,26.95,-294.36,25.86,-294.88,24.21,-295.4,22.55,-295.4,20.3,-295.78,9.5,-298.55,-0.74,-301.32,-10.99,-306.48,-19.65,-311.63,-28.31,-319.17,-34.88,-326.7,-41.45,-336.6,-44.9,-334.6,-48.7,-334.602,-48.699] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-210.4,66.5,-197.43,65.6,-185.23,63.69,-173.04,61.77,-162.35,59.15,-151.66,56.52,-142.84,53.34,-134.03,50.15,-127.8,46.7,-120.53,42.72,-114.96,37.4,-109.39,32.07,-105.63,25.82,-101.86,19.58,-99.93,12.64,-98,5.7,-98,-1.5,-98,-12.45,-101.02,-21.1,-104.03,-29.75,-109.83,-35.75,-115.62,-41.75,-124.07,-44.92,-132.53,-48.1,-143.4,-48.1,-152.4,-48.1,-162.19,-46.16,-171.98,-44.21,-181.67,-40.95,-191.37,-37.69,-200.52,-33.42,-209.67,-29.15,-217.4,-24.5,-220.62,-22.7,-222.91,-20.91,-225.2,-19.12,-227.17,-17.7,-229.14,-16.27,-231.1,-15.39,-233.05,-14.5,-235.6,-14.5,-238.52,-14.5,-242.36,-16.08,-246.19,-17.67,-249.62,-20.42,-253.05,-23.18,-255.43,-26.9,-257.8,-30.62,-257.8,-34.9,-257.8,-36.32,-257.64,-37.71,-257.49,-39.09,-257.02,-40.4,-256.55,-41.71,-255.69,-42.94,-254.82,-44.17,-253.4,-45.3,-252.2,-45.1,-251.75,-42.7,-250.77,-40.4,-249.79,-38.1,-248.12,-36.3,-246.45,-34.5,-244.01,-33.4,-241.57,-32.3,-238.2,-32.3,-232.35,-32.3,-222.44,-35.96,-212.53,-39.61,-199.87,-44,-187.22,-48.39,-172.47,-52.04,-157.72,-55.7,-142.2,-55.7,-128.85,-55.7,-117.81,-52.17,-106.76,-48.64,-98.85,-41.7,-90.94,-34.76,-86.57,-24.48,-82.2,-14.2,-82.2,-0.7,-82.2,8.3,-84.54,16.55,-86.89,24.8,-91.5,32,-96.11,39.2,-102.96,45.2,-109.8,51.2,-118.8,55.7,-126.15,59.38,-135.91,62.19,-145.67,65.01,-157.28,67,-168.88,68.99,-182.05,70.16,-195.23,71.32,-209.4,71.7,-210.4,66.5,-210.4,66.499] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [-2.8,-77.9,-2.27,-79.32,-1.15,-80.69,-0.03,-82.05,1.53,-83.12,3.08,-84.19,4.99,-84.84,6.9,-85.5,9,-85.5,13.2,-85.5,17.19,-84.6,21.19,-83.69,24.3,-82.17,27.41,-80.65,29.31,-78.66,31.2,-76.67,31.2,-74.5,31.2,-73.37,30.69,-72.5,30.18,-71.62,29.5,-70.65,28.83,-69.67,28.16,-68.42,27.5,-67.17,27.2,-65.3,27.05,-64.32,26.96,-62.99,26.88,-61.65,26.8,-60,26.73,-58.35,26.64,-56.41,26.55,-54.47,26.4,-52.3,31.43,-52.75,36.24,-53.4,41.06,-54.05,45.3,-54.8,49.54,-55.55,53.01,-56.35,56.48,-57.15,58.8,-57.9,61.42,-58.72,63.17,-59.4,64.91,-60.07,66,-60.75,67.09,-61.42,67.63,-62.17,68.17,-62.92,68.4,-63.9,70.4,-64.5,72.95,-63.75,76.3,-63.43,79.65,-63.12,82.65,-62.57,85.65,-62.03,87.72,-60.93,89.8,-59.82,89.8,-57.5,89.8,-55.77,88.42,-54.55,87.04,-53.33,84.62,-52.37,82.21,-51.42,78.92,-50.61,75.62,-49.8,71.8,-48.9,67.75,-48,61.69,-47.03,55.63,-46.06,49.13,-45.2,42.62,-44.34,36.45,-43.67,30.27,-43,26,-42.7,25.93,-40.67,25.88,-38.5,25.84,-36.33,25.83,-34.02,25.81,-31.72,25.8,-29.28,25.8,-26.85,25.8,-24.3,25.8,-22.28,25.8,-20.19,25.81,-18.11,25.83,-16.03,25.84,-13.94,25.88,-11.9,25.93,-9.85,26,-7.9,27.73,-7.98,33.66,-8.47,39.59,-8.97,46.03,-9.93,52.46,-10.88,57.53,-12.32,62.6,-13.75,62.6,-15.7,62.6,-16.07,62.45,-16.52,62.3,-16.96,62,-17.43,61.7,-17.89,61.25,-18.37,60.8,-18.85,60.2,-19.3,62.8,-21.5,64.38,-20.45,65.45,-19.69,66.53,-18.94,67.5,-18.45,68.48,-17.96,69.55,-17.73,70.63,-17.5,72.2,-17.5,74.08,-17.43,76.18,-17.24,78.29,-17.05,80.08,-16.6,81.86,-16.15,83.03,-15.36,84.2,-14.58,84.2,-13.3,84.2,-11.28,83.36,-9.89,82.53,-8.51,80.65,-7.48,78.78,-6.45,75.76,-5.62,72.75,-4.8,68.4,-3.9,64.95,-3.15,60.15,-2.44,55.35,-1.74,49.8,-1.1,44.25,-0.46,38.25,0.09,32.25,0.65,26.4,1.1,26.55,5.9,26.77,10.35,26.99,14.81,27.27,18.73,27.56,22.64,27.89,25.93,28.22,29.23,28.6,31.7,29.2,37.9,36.85,39.78,44.18,42.38,51.51,44.98,57.97,47.92,64.44,50.87,69.78,53.96,75.13,57.05,78.8,59.9,80.97,61.55,82.5,63.14,84.02,64.74,84.97,66.35,85.93,67.96,86.37,69.63,86.8,71.3,86.8,73.1,86.8,74.3,86.37,75.36,85.95,76.41,85.2,77.2,84.45,77.99,83.42,78.44,82.4,78.9,81.2,78.9,80.07,78.9,78.76,78.69,77.44,78.47,75.92,77.8,74.41,77.12,72.68,75.86,70.95,74.6,69,72.5,65.77,68.97,61.7,65.69,57.62,62.41,52.75,59.45,47.87,56.49,42.22,53.88,36.58,51.27,30.2,49.1,30.27,50.52,30.35,52.07,30.42,53.61,30.47,55.12,30.53,56.64,30.57,58.07,30.6,59.5,30.6,60.7,30.6,67.08,28.5,71.75,26.41,76.42,21.92,79.47,17.44,82.53,10.43,84.01,3.42,85.5,-6.4,85.5,-16.45,85.5,-24.14,83.34,-31.84,81.17,-37.05,77.5,-42.26,73.82,-44.93,68.96,-47.6,64.1,-47.6,58.7,-47.6,52.7,-43.96,48.08,-40.32,43.45,-34.25,40.3,-28.17,37.15,-20.26,35.52,-12.35,33.9,-3.8,33.9,-1.25,33.9,1.49,34.04,4.22,34.19,6.98,34.45,9.73,34.71,12.43,35.08,15.13,35.45,17.6,35.9,17.6,34.1,17.28,29.32,16.97,24.54,16.57,19.13,16.18,13.71,15.83,8.82,15.47,3.93,15.4,1.9,12.4,2.2,8.72,2.42,5.04,2.65,1.1,2.8,-2.84,2.95,-6.82,3.02,-10.8,3.1,-14.4,3.1,-22.2,3.1,-27.64,2.03,-33.09,0.95,-36.5,-1,-39.91,-2.95,-41.46,-5.67,-43,-8.4,-43,-11.7,-43,-14.02,-41.54,-16.52,-40.09,-19.01,-37.5,-21.45,-34.91,-23.89,-31.36,-26.16,-27.8,-28.42,-23.6,-30.3,-21.6,-27.5,-25.27,-25.77,-27.95,-23.93,-30.63,-22.09,-32.37,-20.25,-34.12,-18.41,-34.96,-16.64,-35.8,-14.87,-35.8,-13.3,-35.8,-11.2,-34.5,-9.66,-33.19,-8.11,-30.62,-7.1,-28.06,-6.09,-24.24,-5.59,-20.42,-5.1,-15.4,-5.1,-11.88,-5.1,-7.75,-5.24,-3.63,-5.38,0.5,-5.6,4.62,-5.83,8.45,-6.11,12.27,-6.4,15.2,-6.7,15.05,-11.05,14.93,-15.55,14.82,-20.04,14.73,-24.53,14.63,-29.01,14.55,-33.39,14.47,-37.77,14.4,-41.9,10.27,-41.67,5.43,-41.43,0.58,-41.18,-4.15,-40.97,-8.87,-40.77,-13.05,-40.63,-17.22,-40.5,-20,-40.5,-26.75,-40.5,-31.96,-41.27,-37.16,-42.04,-41.25,-43.82,-45.34,-45.61,-48.52,-48.51,-51.7,-51.42,-54.4,-55.7,-51.8,-58.9,-49.4,-56.35,-46.21,-54.56,-43.02,-52.77,-39.35,-51.65,-35.67,-50.52,-31.66,-50.01,-27.65,-49.5,-23.6,-49.5,-20.07,-49.5,-15.02,-49.61,-9.97,-49.72,-4.62,-49.92,0.72,-50.13,5.74,-50.43,10.75,-50.73,14.2,-51.1,14.2,-52.52,14.17,-54.07,14.14,-55.61,14.1,-57.12,14.06,-58.64,14.03,-60.07,14,-61.5,14,-62.7,13.93,-66.45,13.69,-69.2,13.45,-71.95,12.4,-73.75,11.35,-75.55,9.16,-76.42,6.98,-77.3,3,-77.3,2.4,-77.3,1.8,-77.26,1.2,-77.22,0.58,-77.15,-0.04,-77.07,-0.68,-76.96,-1.32,-76.85,-2,-76.7,-2.8,-77.9,-2.799,-77.898,18,45.1,15.07,44.27,12,43.58,8.93,42.88,5.85,42.37,2.78,41.87,-0.22,41.58,-3.22,41.3,-6,41.3,-13.57,41.3,-19.71,42.51,-25.84,43.73,-30.17,45.92,-34.5,48.12,-36.85,51.17,-39.2,54.22,-39.2,57.9,-39.2,62.17,-36.82,65.33,-34.44,68.49,-30.2,70.57,-25.96,72.66,-20.13,73.68,-14.3,74.7,-7.4,74.7,-0.57,74.7,4.28,73.79,9.13,72.88,12.2,70.87,15.28,68.87,16.68,65.67,18.08,62.47,18,57.9,18,57.22,18.03,55.42,18.06,53.62,18.08,51.57,18.09,49.53,18.08,47.69,18.07,45.85,18,45.1,18,45.1] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [121,-60.5,121.38,-58.1,122.57,-56.14,123.76,-54.19,125.58,-52.8,127.4,-51.41,129.75,-50.66,132.1,-49.9,134.81,-49.9,136.08,-49.9,138,-50.04,139.93,-50.19,142.1,-50.45,144.28,-50.71,146.5,-51.08,148.73,-51.45,150.61,-51.9,156.53,-53.1,167.7,-55.14,178.86,-57.18,191.93,-59.37,205,-61.57,218.3,-63.57,231.6,-65.57,241.8,-66.7,244.05,-67,246.15,-67.51,248.25,-68.01,250.03,-68.65,251.81,-69.29,253.19,-70.02,254.58,-70.75,255.4,-71.5,261.63,-70.3,266,-68.99,270.37,-67.68,273.13,-66.12,275.88,-64.57,277.14,-62.7,278.4,-60.82,278.4,-58.5,278.4,-57.3,277.76,-56.52,277.12,-55.75,275.95,-55.3,274.79,-54.85,273.17,-54.67,271.55,-54.5,269.6,-54.5,267.95,-54.5,266.14,-54.59,264.32,-54.69,262.43,-54.8,260.53,-54.91,258.61,-55.01,256.68,-55.1,254.8,-55.1,246.78,-55.1,238.05,-51.58,229.32,-48.06,221.25,-42.52,213.19,-36.99,206.49,-30.21,199.78,-23.43,195.8,-16.9,193.33,-13.15,191.18,-8.17,189.02,-3.18,187.43,2.57,185.83,8.33,184.92,14.63,184,20.92,184,27.3,184,37.95,187.08,44.99,190.15,52.02,195.53,56.45,200.91,60.87,208.22,63.19,215.53,65.5,224,66.7,226.1,67,228.37,67.05,230.65,67.11,232.73,67.15,234.81,67.19,236.52,67.32,238.23,67.45,239.2,67.9,241.75,68.95,243.54,70.18,245.33,71.4,246.45,72.77,247.58,74.14,248.09,75.63,248.6,77.12,248.6,78.7,248.6,79.97,248.01,80.88,247.42,81.79,246.28,82.37,245.13,82.95,243.46,83.23,241.78,83.5,239.6,83.5,238.93,83.5,238.21,83.46,237.5,83.43,236.75,83.37,236,83.32,235.21,83.25,234.43,83.17,233.6,83.1,215.3,81,203.42,76.78,191.54,72.55,184.6,65.82,177.67,59.09,174.94,49.66,172.2,40.22,172.2,27.7,172.2,13.3,177.12,0.53,182.04,-12.25,190.1,-23.05,198.17,-33.85,208.48,-42.5,218.8,-51.15,229.6,-57.3,229.4,-57.9,220.63,-57,207.72,-54.73,194.82,-52.47,182.1,-49.52,169.39,-46.58,159.03,-43.3,148.68,-40.02,145,-37.1,143.95,-36.42,142.95,-35.78,141.94,-35.13,140.85,-34.62,139.77,-34.12,138.54,-33.81,137.3,-33.5,135.8,-33.5,132.58,-33.5,129.15,-35.31,125.71,-37.12,122.88,-39.87,120.05,-42.63,118.23,-45.9,116.4,-49.17,116.4,-52.1,116.4,-53.52,116.63,-54.85,116.85,-56.17,117.28,-57.3,117.71,-58.42,118.35,-59.3,118.98,-60.17,119.8,-60.7,121,-60.5,121.005,-60.499,234.4,-21.5,243.25,-18.43,249.01,-15.08,254.78,-11.73,258.15,-8.5,261.53,-5.28,262.86,-2.38,264.2,0.52,264.2,2.7,264.2,3.97,263.79,5.07,263.38,6.17,262.7,6.97,262.03,7.78,261.16,8.24,260.3,8.7,259.4,8.7,258.13,8.7,257.16,8.33,256.2,7.97,255.45,7.27,254.7,6.58,254.12,5.58,253.53,4.57,253,3.3,251.95,0.9,250.06,-1.96,248.17,-4.82,245.53,-7.75,242.88,-10.67,239.53,-13.46,236.18,-16.25,232.2,-18.5,234.4,-21.5,234.402,-21.5,255,-38.7,263.85,-35.62,269.58,-32.24,275.32,-28.86,278.65,-25.6,281.99,-22.34,283.3,-19.41,284.6,-16.47,284.6,-14.3,284.6,-13.03,284.22,-11.96,283.84,-10.89,283.2,-10.13,282.56,-9.36,281.73,-8.93,280.9,-8.5,280,-8.5,278.65,-8.5,277.68,-8.87,276.7,-9.23,275.95,-9.92,275.2,-10.62,274.6,-11.62,274,-12.62,273.4,-13.9,272.43,-16.3,270.55,-19.13,268.66,-21.96,266,-24.85,263.34,-27.74,259.96,-30.49,256.58,-33.25,252.6,-35.5,255,-38.7,255.003,-38.699] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [425.6,7.1,431.75,14.38,436.74,20.44,441.73,26.51,445.25,31.95,448.78,37.39,450.69,42.48,452.6,47.57,452.6,52.9,452.6,59.12,449.79,65,446.97,70.87,440.13,75.42,433.28,79.98,421.8,82.74,410.33,85.5,393,85.5,379.35,85.5,370.08,82.67,360.81,79.85,355.15,74.3,349.49,68.75,347.05,60.53,344.6,52.3,344.6,41.5,344.6,39.1,344.83,36.27,345.06,33.44,345.38,30.58,345.7,27.71,346.04,24.99,346.38,22.28,346.6,20.1,339.48,19.88,333.81,18.44,328.14,17,324.2,14.45,320.26,11.9,318.2,8.29,316.13,4.68,316.2,0.1,316.2,-5,319.32,-10.41,322.45,-15.81,327.53,-20.8,332.61,-25.79,339.07,-29.99,345.53,-34.2,352.2,-36.9,349.35,-36.9,343.97,-37.24,338.58,-37.58,333.25,-39.62,327.93,-41.67,323.97,-46.09,320,-50.52,320,-58.7,323.4,-59.9,323.85,-56.15,326.06,-53.49,328.27,-50.84,331.9,-49.15,335.54,-47.46,340.45,-46.68,345.35,-45.9,351.2,-45.9,351.65,-45.9,352.92,-45.87,354.18,-45.84,355.63,-45.82,357.07,-45.8,358.37,-45.81,359.68,-45.82,360.2,-45.9,360.65,-48.82,361.12,-51.82,361.58,-54.82,361.95,-57.75,362.33,-60.67,362.57,-63.45,362.8,-66.22,362.8,-68.7,362.8,-71.32,361.89,-73.12,360.98,-74.92,359.43,-76.02,357.87,-77.13,355.8,-77.61,353.73,-78.1,351.4,-78.1,350.95,-78.1,350.47,-78.09,349.99,-78.09,349.5,-78.07,349.02,-78.05,348.53,-78.01,348.05,-77.97,347.6,-77.9,347.2,-78.5,347.88,-80.3,348.79,-81.62,349.7,-82.94,351.05,-83.8,352.4,-84.66,354.29,-85.08,356.18,-85.5,358.8,-85.5,362.85,-85.5,366.64,-84.39,370.43,-83.28,373.35,-81.57,376.28,-79.87,378.04,-77.82,379.8,-75.77,379.8,-73.9,379.8,-72.7,379.32,-71.53,378.84,-70.37,378.18,-69.1,377.52,-67.82,376.85,-66.36,376.18,-64.9,375.8,-63.1,375.5,-61.3,375.14,-59.37,374.77,-57.43,374.35,-55.45,373.94,-53.46,373.5,-51.45,373.05,-49.45,372.6,-47.5,375.98,-47.87,378.91,-48.44,381.84,-49,384.2,-49.77,386.57,-50.54,388.3,-51.52,390.03,-52.5,391,-53.7,395.58,-53.92,398.77,-53.24,401.97,-52.55,403.98,-51.37,405.98,-50.19,406.89,-48.72,407.8,-47.25,407.8,-45.9,407.8,-45.3,407.42,-44.64,407.03,-43.98,406.23,-43.32,405.42,-42.67,404.17,-42.04,402.93,-41.42,401.2,-40.9,399.78,-40.52,396.5,-39.99,393.22,-39.47,388.93,-38.92,384.63,-38.38,379.74,-37.89,374.85,-37.4,370.2,-37.1,368.63,-31.55,366.98,-25.67,365.34,-19.8,363.78,-13.8,362.22,-7.8,360.84,-1.77,359.45,4.25,358.4,10.1,362.98,10.1,368.12,9.95,373.27,9.79,377.83,9.45,382.38,9.11,385.77,8.58,389.15,8.05,390.2,7.3,393.73,7.98,396.89,9,400.05,10.03,402.43,11.3,404.81,12.58,406.21,14.05,407.6,15.53,407.6,17.1,407.6,18.38,406.92,19.26,406.25,20.13,405.18,20.68,404.11,21.22,402.79,21.46,401.48,21.7,400.2,21.7,399.83,21.7,399.45,21.7,399.08,21.7,398.7,21.68,398.33,21.66,397.95,21.62,397.58,21.58,397.2,21.5,393.15,20.83,389.18,20.5,385.2,20.16,380.55,20.05,375.9,19.94,370.2,19.98,364.5,20.03,357,20.1,356.63,22.13,356.27,24.66,355.91,27.19,355.63,29.85,355.35,32.52,355.18,35.12,355,37.73,355,39.9,355,48.53,356.62,54.86,358.23,61.19,362.38,65.35,366.52,69.52,373.65,71.57,380.78,73.63,391.8,73.7,404.78,73.7,413.84,71.83,422.9,69.97,428.58,66.7,434.26,63.44,436.83,59.02,439.4,54.6,439.4,49.5,439.4,44.4,438.22,39.55,437.03,34.69,434.73,29.85,432.42,25.02,429.03,20.08,425.63,15.15,421.2,9.9,425.6,7.1,425.601,7.1,358.8,-35.9,352.05,-32.9,345.93,-29.06,339.81,-25.22,335.18,-20.92,330.55,-16.63,327.84,-12.08,325.13,-7.52,325.2,-3.1,325.2,0.95,326.92,3.49,328.63,6.03,331.73,7.45,334.82,8.88,339.12,9.39,343.43,9.9,348.6,9.9,349.65,4.73,350.95,-1.25,352.26,-7.22,353.63,-13.3,355,-19.37,356.34,-25.2,357.68,-31.02,358.8,-35.9,358.802,-35.899] ) );
    shape.graphics.endFill();

    return shape;
  },
  "変わらずに" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,1,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,3,3,3,3,2,2,1,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-325.5,14.3,-311.5,27.9,-312.1,28.57,-312.85,29.01,-313.6,29.44,-314.65,29.73,-315.7,30.01,-317.13,30.18,-318.55,30.35,-320.5,30.5,-324.18,35.83,-328.38,40.67,-332.58,45.51,-337.33,49.88,-342.07,54.24,-347.36,58.15,-352.65,62.05,-358.5,65.5,-350.63,68.58,-341.78,71.05,-332.93,73.53,-322.98,75.4,-313.02,77.28,-301.89,78.55,-290.75,79.83,-278.3,80.5,-278.5,82.9,-280.75,83.5,-282.64,84.59,-284.53,85.68,-285.98,87.25,-287.42,88.82,-288.38,90.89,-289.33,92.95,-289.7,95.5,-302.9,93.85,-314.33,91.58,-325.75,89.32,-335.65,86.38,-345.55,83.43,-354.05,79.78,-362.55,76.13,-369.9,71.7,-379.2,76.2,-389.59,79.83,-399.98,83.46,-411.45,86.32,-422.93,89.19,-435.49,91.36,-448.05,93.52,-461.7,95.1,-462.5,91.5,-450.43,89.47,-439.09,86.91,-427.76,84.34,-417.28,81.15,-406.8,77.96,-397.22,74.12,-387.65,70.27,-379.1,65.7,-383.15,62.62,-386.91,59.28,-390.67,55.93,-394.18,52.27,-397.68,48.62,-400.96,44.63,-404.23,40.65,-407.3,36.3,-412.48,40.42,-418.13,44.29,-423.78,48.16,-429.85,51.65,-435.93,55.14,-442.4,58.18,-448.88,61.22,-455.7,63.7,-457.7,60.9,-447.35,56.02,-437.66,49.21,-427.96,42.41,-419.6,34.62,-411.24,26.84,-404.55,18.57,-397.85,10.3,-393.5,2.5,-372.1,7.3,-372.4,8.05,-373.06,8.64,-373.71,9.24,-374.78,9.65,-375.85,10.06,-377.36,10.28,-378.88,10.5,-380.9,10.5,-382.1,12,-383.38,13.5,-384.65,15,-386,16.5,-387.35,18,-388.78,19.5,-390.2,21,-391.7,22.5,-335.1,22.5,-325.5,14.3,-325.503,14.3,-454.7,14.5,-435.73,7.15,-424.65,-1.27,-413.58,-9.69,-407.8,-19.1,-402.03,-28.51,-400.25,-38.88,-398.48,-49.25,-398.1,-60.5,-460.9,-60.5,-462.3,-65.3,-376.7,-65.3,-376.7,-89.9,-354.3,-87.9,-354.38,-86.77,-354.9,-85.93,-355.42,-85.09,-356.53,-84.45,-357.63,-83.81,-359.39,-83.34,-361.15,-82.88,-363.7,-82.5,-363.7,-65.3,-305.9,-65.3,-296.3,-77.7,-277.7,-64.7,-278.23,-63.65,-278.97,-62.86,-279.72,-62.08,-280.83,-61.55,-281.93,-61.02,-283.47,-60.76,-285,-60.5,-287.1,-60.5,-341.7,-60.5,-341.7,-10.9,-341.7,-7.15,-342.37,-4.09,-343.03,-1.04,-345.08,1.25,-347.12,3.54,-350.9,5.02,-354.68,6.5,-360.9,7.1,-360.9,3.27,-362.13,1.03,-363.35,-1.21,-365.75,-2.45,-368.15,-3.69,-371.7,-4.21,-375.25,-4.72,-379.9,-5.1,-379.9,-7.9,-357.9,-7.9,-356.85,-7.9,-356.16,-8.03,-355.46,-8.17,-355.05,-8.53,-354.64,-8.88,-354.47,-9.5,-354.3,-10.13,-354.3,-11.1,-354.3,-60.5,-384.3,-60.5,-385.2,-47.97,-387.69,-36.75,-390.19,-25.52,-397.2,-15.68,-404.21,-5.83,-417.21,2.58,-430.2,11,-452.1,17.9,-454.7,14.5,-454.702,14.5,-460.7,-7.7,-456.35,-10.85,-451.68,-15.24,-447.01,-19.63,-442.4,-24.97,-437.79,-30.32,-433.42,-36.47,-429.05,-42.62,-425.3,-49.3,-409.1,-39.3,-409.4,-38.77,-409.79,-38.37,-410.17,-37.96,-410.68,-37.67,-411.18,-37.39,-411.83,-37.25,-412.48,-37.1,-413.3,-37.1,-413.68,-37.1,-414.09,-37.14,-414.5,-37.17,-414.95,-37.25,-415.4,-37.32,-415.89,-37.44,-416.38,-37.55,-416.9,-37.7,-421.25,-32.15,-426.27,-27.2,-431.29,-22.25,-436.65,-18.05,-442.02,-13.85,-447.56,-10.48,-453.1,-7.1,-458.5,-4.7,-460.7,-7.7,-460.702,-7.7,-403.9,33.7,-400.45,37.75,-396.62,41.43,-392.79,45.11,-388.55,48.42,-384.32,51.74,-379.66,54.71,-375,57.67,-369.9,60.3,-364.58,56.92,-359.75,53.2,-354.92,49.48,-350.63,45.37,-346.33,41.27,-342.59,36.76,-338.85,32.25,-335.7,27.3,-396.7,27.3,-403.9,33.7,-403.902,33.699,-330.3,-45.9,-316.58,-42.52,-307.33,-37.95,-298.08,-33.38,-292.48,-28.52,-286.87,-23.67,-284.49,-18.98,-282.1,-14.3,-282.1,-10.7,-282.1,-9.05,-282.57,-7.69,-283.03,-6.33,-283.85,-5.35,-284.68,-4.38,-285.82,-3.84,-286.95,-3.3,-288.3,-3.3,-288.83,-3.3,-289.42,-3.41,-290.02,-3.53,-290.65,-3.75,-291.29,-3.98,-291.96,-4.31,-292.63,-4.65,-293.3,-5.1,-295.48,-10.13,-299.67,-15.58,-303.86,-21.03,-309.13,-26.2,-314.4,-31.38,-320.28,-35.93,-326.15,-40.48,-331.7,-43.7,-330.3,-45.9,-330.303,-45.899] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-223.3,-75.5,-222.78,-77,-221.86,-78.19,-220.93,-79.38,-219.68,-80.22,-218.42,-81.07,-216.86,-81.55,-215.3,-82.02,-213.5,-82.1,-210.43,-82.1,-206.95,-81.11,-203.47,-80.12,-200.53,-78.4,-197.58,-76.67,-195.64,-74.34,-193.7,-72,-193.7,-69.3,-193.7,-67.8,-194.27,-66.23,-194.85,-64.66,-195.58,-62.9,-196.31,-61.14,-196.99,-59.12,-197.68,-57.1,-197.9,-54.7,-197.98,-53.8,-198.15,-52.84,-198.31,-51.87,-198.5,-50.9,-198.69,-49.92,-198.86,-48.96,-199.03,-48,-199.1,-47.1,-196.78,-46.65,-194.7,-45.73,-192.63,-44.81,-191.08,-43.65,-189.52,-42.49,-188.61,-41.19,-187.7,-39.9,-187.7,-38.7,-187.7,-37.05,-188.51,-35.84,-189.31,-34.63,-190.53,-33.52,-191.75,-32.42,-193.19,-31.25,-194.63,-30.07,-195.9,-28.5,-196.8,-27.45,-197.59,-26.38,-198.38,-25.32,-199.08,-24.32,-199.77,-23.33,-200.37,-22.45,-200.98,-21.57,-201.5,-20.9,-201.65,-19.47,-201.77,-18.21,-201.88,-16.95,-201.98,-15.75,-202.07,-14.55,-202.15,-13.36,-202.23,-12.17,-202.3,-10.9,-194.88,-16.3,-186.69,-20.66,-178.5,-25.02,-170.38,-28.1,-162.26,-31.17,-154.63,-32.84,-147,-34.5,-140.7,-34.5,-128.25,-34.5,-118.57,-31.18,-108.89,-27.86,-102.25,-21.27,-95.62,-14.69,-92.16,-4.88,-88.7,4.92,-88.7,17.9,-88.7,18.1,-88.7,30.1,-94.02,39.82,-99.34,49.54,-109.95,56.87,-120.57,64.2,-136.46,69.09,-152.35,73.97,-173.5,76.3,-174.9,71.5,-157.73,68.57,-144.3,63.5,-130.87,58.43,-121.63,51.47,-112.38,44.52,-107.54,35.81,-102.7,27.1,-102.7,16.9,-102.7,7.15,-104.99,-0.8,-107.27,-8.74,-111.98,-14.43,-116.68,-20.11,-123.88,-23.29,-131.08,-26.48,-140.9,-26.7,-147.65,-26.7,-155.37,-25.04,-163.08,-23.38,-171.13,-20.18,-179.17,-16.97,-187.22,-12.27,-195.28,-7.58,-202.7,-1.5,-202.78,0.97,-202.85,3.48,-202.92,5.98,-202.98,8.47,-203.03,10.97,-203.07,13.43,-203.1,15.9,-203.1,18.3,-203.03,23.4,-203.03,28.43,-203.04,33.45,-203,38.12,-202.96,42.79,-202.82,46.96,-202.68,51.12,-202.3,54.5,-201.93,57.42,-201.63,60.48,-201.33,63.54,-201.13,66.37,-200.92,69.2,-200.81,71.63,-200.7,74.05,-200.7,75.7,-200.7,77.87,-201.42,79.92,-202.14,81.98,-203.48,83.57,-204.81,85.17,-206.69,86.13,-208.58,87.1,-210.9,87.1,-212.18,87.1,-213.24,86.37,-214.31,85.64,-215.08,84.27,-215.84,82.9,-216.27,80.94,-216.7,78.97,-216.7,76.5,-216.7,73.05,-217.9,69.05,-219.09,65.05,-221.18,60.72,-223.26,56.39,-226.07,51.83,-228.88,47.27,-232.1,42.7,-229.1,40.1,-226.93,42.8,-224.48,45.66,-222.04,48.53,-219.93,50.9,-217.81,53.26,-216.3,54.78,-214.8,56.3,-214.5,56.3,-213.98,56.3,-213.69,55.58,-213.41,54.87,-213.28,52.4,-213.14,49.92,-213.12,45.16,-213.1,40.4,-213.1,32.3,-213.1,29.67,-213.09,26.6,-213.09,23.52,-213.05,20.15,-213.01,16.77,-212.93,13.17,-212.85,9.57,-212.7,5.9,-215.33,8.45,-218.28,11.11,-221.23,13.78,-224.18,16.57,-227.12,19.37,-229.88,22.29,-232.65,25.22,-234.9,28.3,-237.6,31.9,-239.5,34.53,-241.4,37.17,-242.9,38.9,-244.4,40.62,-245.7,41.46,-247,42.3,-248.5,42.3,-249.93,42.3,-251.1,41.6,-252.28,40.91,-253.13,39.75,-253.97,38.58,-254.43,37.06,-254.9,35.55,-254.9,33.9,-254.9,30.9,-254.05,28.9,-253.19,26.91,-251.82,25.45,-250.46,23.98,-248.74,22.81,-247.02,21.65,-245.3,20.3,-237.57,14.3,-231.64,9.06,-225.71,3.83,-221.55,-0.55,-217.39,-4.94,-214.98,-8.45,-212.57,-11.95,-211.9,-14.5,-211.83,-17.28,-211.75,-19.63,-211.67,-21.99,-211.58,-24.2,-211.48,-26.42,-211.37,-28.62,-211.25,-30.83,-211.1,-33.3,-213.2,-32.7,-215.46,-31.92,-217.71,-31.13,-219.85,-30.33,-221.99,-29.52,-223.87,-28.78,-225.75,-28.03,-227.1,-27.5,-228.3,-26.9,-229.43,-26.17,-230.56,-25.44,-231.65,-24.8,-232.74,-24.17,-233.79,-23.74,-234.85,-23.3,-235.9,-23.3,-238.6,-23.3,-241.09,-24.9,-243.59,-26.5,-245.5,-28.75,-247.41,-31,-248.56,-33.43,-249.7,-35.85,-249.7,-37.5,-249.7,-39,-249.51,-40.22,-249.33,-41.44,-248.95,-42.45,-248.58,-43.47,-248.01,-44.31,-247.45,-45.15,-246.7,-45.9,-245.7,-45.9,-245.63,-44.1,-244.86,-42.38,-244.1,-40.65,-242.75,-39.3,-241.4,-37.95,-239.51,-37.13,-237.63,-36.3,-235.3,-36.3,-232,-36.3,-228.05,-37.11,-224.11,-37.91,-220.53,-38.98,-216.94,-40.05,-214.24,-41.11,-211.53,-42.18,-210.7,-42.7,-210.63,-43.9,-210.43,-47.05,-210.23,-50.2,-210.03,-53.63,-209.82,-57.06,-209.66,-59.94,-209.5,-62.83,-209.5,-63.5,-209.5,-67.33,-210.78,-69.7,-212.06,-72.07,-214.05,-73.33,-216.04,-74.58,-218.44,-74.89,-220.85,-75.2,-223.1,-74.9,-223.3,-75.5,-223.302,-75.499] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-28.7,81.1,-6.28,79.82,11,76.71,28.27,73.59,40.02,68.17,51.78,62.76,57.84,54.8,63.9,46.85,63.9,35.9,63.9,27.05,61.51,20.94,59.12,14.84,54.67,11.05,50.23,7.26,43.9,5.58,37.57,3.9,29.7,3.9,22.95,3.9,15.51,5.78,8.06,7.67,0.3,11.47,-7.46,15.28,-15.36,21.03,-23.25,26.77,-30.9,34.5,-32.02,35.62,-32.89,36.98,-33.76,38.34,-34.68,39.52,-35.59,40.71,-36.72,41.5,-37.85,42.3,-39.5,42.3,-42.43,42.3,-45.01,41.07,-47.59,39.84,-49.53,38,-51.46,36.16,-52.58,34.03,-53.7,31.9,-53.7,30.1,-53.7,28.9,-53.42,28.02,-53.15,27.14,-52.7,26.35,-52.25,25.56,-51.67,24.76,-51.1,23.95,-50.5,22.9,-49.68,21.55,-48.94,19.78,-48.2,18.01,-47.6,15.95,-47,13.89,-46.56,11.59,-46.12,9.3,-45.9,6.9,-45.67,4.65,-45.37,1.7,-45.06,-1.24,-44.78,-4.52,-44.49,-7.81,-44.3,-11.24,-44.1,-14.67,-44.1,-17.9,-44.1,-19.55,-44.17,-21.14,-44.25,-22.74,-44.4,-24.2,-44.55,-25.66,-44.78,-26.96,-45,-28.25,-45.3,-29.3,-45.45,-29.82,-45.56,-30.35,-45.67,-30.88,-45.75,-31.42,-45.82,-31.97,-45.86,-32.53,-45.9,-33.1,-45.9,-33.7,-45.9,-35.65,-45.33,-37.66,-44.76,-39.67,-43.43,-41.7,-42.09,-43.72,-39.91,-45.74,-37.73,-47.75,-34.5,-49.7,-31.8,-51.5,-27.49,-53.33,-23.18,-55.17,-18.3,-56.72,-13.43,-58.28,-8.51,-59.4,-3.6,-60.52,0.3,-60.9,0.1,-61.1,-6.5,-61.62,-12.03,-63.23,-17.55,-64.85,-21.9,-67.55,-26.25,-70.25,-29.38,-74.04,-32.5,-77.82,-34.3,-82.7,-29.9,-85.3,-26.45,-79.82,-21.42,-76.86,-16.38,-73.89,-9.88,-72.52,-3.37,-71.15,4.55,-70.93,12.47,-70.7,21.7,-70.7,25.9,-70.7,29.65,-69.59,33.39,-68.49,36.22,-66.65,39.06,-64.81,40.74,-62.43,42.42,-60.05,42.5,-57.5,42.5,-56,41.75,-54.97,40.99,-53.94,39.77,-53.3,38.56,-52.66,37.02,-52.38,35.47,-52.1,33.9,-52.1,33,-52.1,31.55,-52.51,30.09,-52.93,28.42,-53.47,26.76,-54.02,25.04,-54.55,23.32,-55.07,21.9,-55.3,20.4,-55.52,18.9,-55.68,17.4,-55.83,15.9,-55.92,14.4,-56.02,12.9,-56.06,11.4,-56.1,9.9,-56.1,4.5,-56.1,-0.79,-55.49,-6.08,-54.89,-10.98,-53.8,-15.87,-52.71,-20.22,-51.21,-24.58,-49.7,-28.1,-47.9,-30.28,-46.85,-32.08,-45.76,-33.88,-44.68,-35.18,-43.42,-36.47,-42.17,-37.18,-40.67,-37.9,-39.17,-37.9,-37.3,-37.9,-36.4,-37.65,-35.45,-37.41,-34.5,-36.98,-33.6,-36.54,-32.7,-35.96,-31.9,-35.38,-31.1,-34.7,-30.5,-34.03,-29.9,-33.44,-28.94,-32.86,-27.97,-32.43,-26.85,-31.99,-25.72,-31.75,-24.54,-31.5,-23.35,-31.5,-22.3,-31.5,-20.27,-31.87,-17.65,-32.23,-15.03,-32.78,-11.52,-33.32,-8.02,-33.95,-3.48,-34.58,1.05,-35.1,6.9,-35.33,9.53,-35.63,11.79,-35.93,14.05,-36.33,16,-36.72,17.95,-37.21,19.61,-37.7,21.28,-38.3,22.7,-38.38,22.85,-38.42,22.97,-38.46,23.09,-38.48,23.2,-38.49,23.31,-38.5,23.43,-38.5,23.55,-38.5,23.7,-38.5,23.93,-38.43,24.11,-38.36,24.29,-38.23,24.43,-38.09,24.56,-37.91,24.63,-37.73,24.7,-37.5,24.7,-36.98,24.7,-36.32,24.64,-35.66,24.59,-34.93,24.4,-34.19,24.21,-33.42,23.86,-32.65,23.5,-31.9,22.9,-24.78,17.8,-16.77,13.07,-8.77,8.34,-0.58,4.7,7.62,1.06,15.66,-1.12,23.7,-3.3,30.9,-3.3,41.7,-3.3,50.42,-0.93,59.15,1.43,65.3,6.32,71.45,11.22,74.77,18.72,78.1,26.22,78.1,36.5,78.1,50.07,71.12,59.32,64.15,68.57,50.65,74.32,37.15,80.08,17.35,82.76,-2.45,85.45,-28.1,85.9,-28.7,81.1,-28.701,81.099] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [175.3,-78.1,176.05,-79.75,177.15,-81.17,178.26,-82.6,179.78,-83.65,181.29,-84.7,183.26,-85.3,185.23,-85.9,187.7,-85.9,191.45,-85.9,195.17,-84.94,198.89,-83.97,201.88,-82.4,204.86,-80.82,206.74,-78.81,208.63,-76.8,208.7,-74.7,208.7,-73.42,208.38,-72.42,208.06,-71.41,207.63,-70.52,207.19,-69.64,206.76,-68.82,206.32,-68,206.1,-67.1,205.8,-66.2,205.61,-64.68,205.41,-63.16,205.3,-60.95,205.19,-58.74,205.14,-55.79,205.1,-52.85,205.1,-49.1,209.97,-49.4,214.77,-49.69,219.57,-49.98,223.85,-50.23,228.12,-50.47,231.65,-50.65,235.17,-50.83,237.5,-50.9,240.65,-51.05,243.09,-51.31,245.52,-51.57,247.4,-52.07,249.27,-52.58,250.66,-53.4,252.05,-54.23,253.1,-55.5,258.87,-53.93,263.1,-52.57,267.32,-51.22,270.07,-49.78,272.83,-48.33,274.16,-46.64,275.5,-44.95,275.5,-42.7,275.5,-41.88,274.96,-41.27,274.42,-40.67,273.57,-40.27,272.73,-39.88,271.7,-39.69,270.67,-39.5,269.7,-39.5,267.82,-39.5,265.27,-39.88,262.72,-40.26,259.17,-40.75,255.63,-41.24,250.94,-41.69,246.25,-42.15,240.1,-42.3,238.52,-42.38,236.85,-42.42,235.17,-42.46,233.42,-42.48,231.68,-42.49,229.89,-42.5,228.1,-42.5,226.3,-42.5,223.67,-42.5,220.99,-42.46,218.31,-42.43,215.65,-42.35,212.99,-42.28,210.38,-42.16,207.77,-42.05,205.3,-41.9,205.3,-36.88,205.34,-31.57,205.37,-26.26,205.45,-21.35,205.52,-16.44,205.64,-12.26,205.75,-8.08,205.9,-5.3,207.25,-3.05,208.36,-0.28,209.46,2.49,210.25,6.07,211.04,9.66,211.47,14.19,211.9,18.72,211.9,24.5,211.9,36.27,208.56,46.62,205.22,56.96,198.07,65.55,190.93,74.14,179.75,80.8,168.57,87.47,152.9,91.9,150.5,87.9,161.97,83.47,170.65,77.55,179.32,71.64,185.25,64.7,191.17,57.76,194.37,50.04,197.57,42.32,198.1,34.3,196.45,36.85,194.1,38.86,191.75,40.86,188.75,42.25,185.75,43.64,182.12,44.37,178.5,45.1,174.3,45.1,167.62,45.1,162.01,42.7,156.39,40.3,152.32,36.12,148.26,31.94,145.98,26.28,143.7,20.62,143.7,14.1,143.7,6.9,146.27,0.75,148.84,-5.4,153.32,-9.9,157.81,-14.4,163.87,-16.95,169.92,-19.5,176.9,-19.5,179.45,-19.5,181.93,-19.16,184.42,-18.82,186.72,-18.13,189.03,-17.43,191.1,-16.38,193.17,-15.33,194.9,-13.9,194.9,-17.8,194.74,-21.55,194.58,-25.31,194.37,-28.77,194.17,-32.24,193.97,-35.36,193.77,-38.47,193.7,-41.1,188.97,-40.8,182.19,-40.14,175.4,-39.48,168.35,-38.65,161.3,-37.82,154.89,-36.94,148.47,-36.05,144.5,-35.3,142.62,-35,140.77,-34.57,138.91,-34.14,137.15,-33.65,135.39,-33.16,133.76,-32.66,132.12,-32.15,130.7,-31.7,128.9,-31.1,127.73,-30.46,126.56,-29.82,125.53,-29.3,124.49,-28.77,123.36,-28.44,122.23,-28.1,120.5,-28.1,117.73,-28.17,114.5,-29.9,111.28,-31.62,108.53,-34.25,105.77,-36.87,103.94,-40.02,102.1,-43.17,102.1,-46.1,102.1,-47.37,102.35,-48.5,102.6,-49.62,103.05,-50.6,103.5,-51.57,104.13,-52.4,104.75,-53.22,105.5,-53.9,106.7,-53.9,106.85,-52.77,107.48,-50.79,108.11,-48.81,109.93,-46.87,111.74,-44.94,115.11,-43.52,118.47,-42.1,124.1,-42.1,127.77,-42.1,137.5,-42.89,147.22,-43.69,158.25,-44.7,169.27,-45.71,179.22,-46.66,189.17,-47.6,193.3,-47.9,193,-57.05,192.63,-62.82,192.27,-68.59,191.12,-71.85,189.98,-75.11,187.7,-76.31,185.42,-77.5,181.3,-77.5,180.62,-77.5,179.95,-77.46,179.27,-77.43,178.6,-77.37,177.92,-77.32,177.25,-77.25,176.57,-77.17,175.9,-77.1,175.3,-78.1,175.301,-78.099,197.5,7.9,197.5,4.75,196.22,1.23,194.94,-2.29,192.35,-5.25,189.76,-8.21,185.86,-10.16,181.95,-12.1,176.7,-12.1,172.43,-12.1,168.55,-10.46,164.67,-8.82,161.73,-5.6,158.78,-2.37,157.04,2.41,155.3,7.2,155.3,13.5,155.3,18.75,157.16,22.84,159.03,26.94,161.95,29.75,164.88,32.56,168.46,34.03,172.05,35.5,175.5,35.5,182.03,35.5,186.28,33.55,190.53,31.6,193.03,28,195.52,24.4,196.51,19.3,197.5,14.2,197.5,7.9,197.501,7.899,225.7,-91.5,234.03,-88.87,239.53,-85.74,245.04,-82.61,248.33,-79.47,251.61,-76.34,252.95,-73.47,254.3,-70.6,254.3,-68.5,254.3,-67.22,253.83,-66.1,253.35,-64.97,252.6,-64.12,251.85,-63.28,250.93,-62.79,250,-62.3,249.1,-62.3,247.75,-62.3,246.78,-62.64,245.81,-62.97,245.08,-63.65,244.34,-64.32,243.79,-65.34,243.23,-66.35,242.7,-67.7,241.73,-70.1,240.04,-72.8,238.35,-75.51,235.93,-78.25,233.51,-80.99,230.35,-83.62,227.2,-86.25,223.3,-88.5,225.7,-91.5,225.701,-91.499,251.9,-95.5,260.82,-92.5,266.57,-89.26,272.31,-86.01,275.63,-82.9,278.94,-79.79,280.22,-76.99,281.5,-74.2,281.5,-72.1,281.5,-70.9,281.06,-69.81,280.61,-68.72,279.9,-67.9,279.19,-67.07,278.29,-66.59,277.4,-66.1,276.5,-66.1,275.15,-66.1,274.18,-66.41,273.21,-66.71,272.48,-67.35,271.74,-67.99,271.18,-68.97,270.63,-69.95,270.1,-71.3,269.05,-73.85,267.17,-76.63,265.28,-79.42,262.68,-82.17,260.07,-84.93,256.8,-87.53,253.53,-90.12,249.7,-92.3,251.9,-95.5,251.9,-95.499] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [349.9,8.3,346.08,16.63,342.44,25.02,338.8,33.42,335.95,40.7,333.1,47.97,331.34,53.52,329.58,59.07,329.5,61.7,329.5,62.75,329.85,64.09,330.19,65.43,330.6,67.02,331.02,68.62,331.36,70.45,331.7,72.27,331.7,74.3,331.7,76.25,331.29,77.65,330.88,79.05,330.2,79.95,329.53,80.85,328.67,81.27,327.8,81.7,326.9,81.7,323.53,81.7,320.14,78.52,316.75,75.34,314.03,68.87,311.31,62.41,309.61,52.59,307.9,42.77,307.9,29.5,307.9,18.32,309.17,8.02,310.44,-2.29,312.2,-11.55,313.97,-20.81,315.84,-28.94,317.7,-37.07,318.9,-43.9,319.13,-45.1,319.31,-46.26,319.5,-47.43,319.63,-48.57,319.76,-49.72,319.83,-50.85,319.9,-51.97,319.9,-53.1,319.9,-53.55,319.87,-54.03,319.84,-54.51,319.8,-55,319.77,-55.49,319.74,-55.97,319.7,-56.45,319.7,-56.9,319.7,-59.45,318.7,-61.84,317.69,-64.23,316.15,-66.12,314.62,-68.02,312.79,-69.25,310.95,-70.47,309.31,-70.7,309.11,-72.1,309.78,-72.85,310.66,-73.32,311.53,-73.79,312.51,-74.05,313.48,-74.31,314.51,-74.4,315.53,-74.5,316.5,-74.5,321.08,-74.5,324.87,-72.45,328.66,-70.4,331.38,-67.4,334.1,-64.4,335.6,-61,337.11,-57.6,337.11,-54.9,337.11,-52.8,336.65,-51.15,336.19,-49.5,335.56,-48.15,334.92,-46.8,334.24,-45.67,333.56,-44.55,333.11,-43.5,330.41,-36.82,327.75,-28.96,325.11,-21.09,323,-12.37,320.91,-3.66,319.61,5.75,318.31,15.15,318.31,24.9,318.31,29.47,318.51,33.16,318.72,36.85,319.08,39.7,319.44,42.55,319.91,44.59,320.38,46.62,320.91,47.9,322.71,47.3,323.98,45.35,326.78,40.53,329.57,35.71,332.93,29.72,336.29,23.74,339.72,17.46,343.16,11.17,345.71,6.3,349.9,8.3,349.904,8.3,389.3,3.5,385.93,7.18,383.04,11.02,380.15,14.86,378.03,18.8,375.91,22.74,374.71,26.73,373.5,30.72,373.5,34.7,373.5,40.92,375.84,45.2,378.18,49.48,383.05,52.12,387.93,54.77,395.44,55.93,402.95,57.1,413.3,57.1,419.75,57.1,425.28,56.73,430.81,56.37,435.2,55.82,439.59,55.28,442.72,54.65,445.85,54.02,447.5,53.5,451.55,54.1,454.4,55.11,457.25,56.12,459.05,57.4,460.85,58.67,461.68,60.14,462.5,61.6,462.5,63.1,462.5,65.05,460.77,66.32,459.04,67.6,454.2,68.35,449.36,69.1,440.73,69.4,432.1,69.7,418.3,69.7,404.73,69.7,394.59,67.89,384.46,66.08,377.73,62.12,371,58.17,367.65,51.9,364.3,45.62,364.3,36.7,364.3,31.6,366.04,26.74,367.77,21.87,370.68,17.3,373.58,12.72,377.38,8.46,381.18,4.2,385.3,0.3,389.3,3.5,389.303,3.5,368.5,-47.1,370.38,-46.58,372.81,-46.23,375.23,-45.88,377.88,-45.68,380.52,-45.47,383.21,-45.38,385.9,-45.3,388.3,-45.3,392.13,-45.3,397.51,-45.9,402.9,-46.49,408.58,-47.52,414.26,-48.56,419.61,-49.94,424.95,-51.32,428.7,-52.9,429.98,-53.42,431.35,-54.18,432.71,-54.93,433.95,-55.62,435.19,-56.32,436.18,-56.81,437.18,-57.3,437.7,-57.3,440.55,-57.3,443.5,-56.75,446.45,-56.2,448.85,-55.15,451.25,-54.1,452.78,-52.57,454.3,-51.05,454.3,-49.1,454.3,-47.53,453.09,-46.42,451.87,-45.32,449.83,-44.5,447.78,-43.67,445.11,-43.02,442.43,-42.37,439.5,-41.7,433.95,-40.58,427.67,-39.59,421.39,-38.61,415.35,-37.88,409.31,-37.14,404.01,-36.72,398.7,-36.3,395.1,-36.3,391.8,-36.3,388.2,-36.53,384.6,-36.76,381,-37.53,377.4,-38.29,373.95,-39.76,370.5,-41.23,367.5,-43.7,368.5,-47.1,368.503,-47.1] ) );
    shape.graphics.endFill();

    return shape;
  },
  "流れてく" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,2,2,3,3,3,3,2,2,1,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-345.1,-38.8,-336.03,-37.75,-329.93,-35.51,-323.82,-33.27,-320.13,-30.47,-316.44,-27.68,-314.87,-24.65,-313.3,-21.63,-313.3,-19,-313.3,-17.35,-313.8,-15.92,-314.3,-14.5,-315.18,-13.45,-316.06,-12.4,-317.27,-11.8,-318.48,-11.2,-319.9,-11.2,-320.5,-11.2,-321.14,-11.31,-321.77,-11.43,-322.43,-11.67,-323.09,-11.92,-323.76,-12.3,-324.43,-12.67,-325.1,-13.2,-326.23,-16.35,-328.44,-19.7,-330.65,-23.04,-333.5,-26.17,-336.35,-29.31,-339.62,-32.01,-342.88,-34.72,-346.1,-36.6,-345.1,-38.8,-345.104,-38.799,-334.3,36.4,-333.4,36.4,-332.79,36.33,-332.18,36.27,-331.65,35.87,-331.13,35.48,-330.59,34.63,-330.05,33.77,-329.3,32.2,-328.93,31.67,-327.73,29.27,-326.53,26.86,-322.58,18.2,-318.62,9.54,-310.94,-7.57,-303.25,-24.68,-289.9,-54.6,-286.1,-53.8,-289.4,-44.42,-293.93,-31.95,-298.45,-19.47,-302.78,-7.53,-307.11,4.42,-310.54,14.01,-313.98,23.6,-315.1,27.2,-315.78,29.52,-316.36,31.83,-316.95,34.14,-317.38,36.35,-317.81,38.56,-318.06,40.64,-318.3,42.72,-318.3,44.6,-318.15,47.75,-317.32,51.06,-316.49,54.37,-315.55,58.2,-314.62,62.02,-313.86,66.54,-313.1,71.05,-313.1,76.6,-313.1,77.95,-313.28,80.68,-313.45,83.41,-314.5,86.15,-315.55,88.89,-317.83,90.94,-320.1,93,-324.3,93,-325.58,93,-326.65,92.33,-327.72,91.67,-328.53,90.4,-329.33,89.12,-329.84,87.26,-330.35,85.4,-330.5,83,-330.13,80.15,-329.83,77.45,-329.53,74.75,-329.33,72.22,-329.12,69.69,-329.01,67.33,-328.9,64.97,-328.9,62.8,-328.9,55.6,-329.69,51.4,-330.48,47.21,-332.2,44.97,-333.93,42.74,-336.67,41.96,-339.4,41.17,-343.3,40.8,-343.3,36.4,-340.75,36.4,-339.03,36.37,-337.3,36.34,-336.25,36.3,-335.2,36.26,-334.75,36.23,-334.3,36.2,-334.3,36.2,-334.3,36.4,-334.303,36.4,-336.7,-90.6,-327.33,-89.32,-321,-86.86,-314.67,-84.39,-310.83,-81.37,-306.98,-78.35,-305.34,-75.1,-303.7,-71.85,-303.7,-69,-303.7,-67.27,-304.24,-65.81,-304.77,-64.34,-305.7,-63.27,-306.64,-62.2,-307.92,-61.6,-309.2,-61,-310.7,-61,-311.3,-61,-311.94,-61.08,-312.57,-61.17,-313.23,-61.37,-313.88,-61.58,-314.56,-61.93,-315.23,-62.27,-315.9,-62.8,-317.1,-66.25,-319.42,-69.9,-321.75,-73.54,-324.73,-76.97,-327.71,-80.4,-331.12,-83.41,-334.53,-86.42,-337.9,-88.6,-336.7,-90.6,-336.703,-90.598,-305.3,90.2,-295.1,84.12,-288.8,76.75,-282.49,69.37,-279,61.35,-275.52,53.32,-274.31,44.97,-273.1,36.62,-273.1,28.6,-273.1,2.2,-253.5,4,-253.58,4.97,-253.93,5.7,-254.28,6.43,-255.1,6.95,-255.93,7.48,-257.33,7.83,-258.73,8.18,-260.9,8.4,-260.9,28.8,-260.98,37.13,-262.54,46.03,-264.11,54.94,-268.63,63.45,-273.15,71.96,-281.35,79.59,-289.55,87.22,-302.9,93,-305.3,90.2,-305.304,90.199,-288.7,-21.4,-285.93,-21.32,-282.83,-21.29,-279.72,-21.25,-276.48,-21.25,-273.24,-21.25,-269.94,-21.29,-266.65,-21.32,-263.5,-21.4,-261.33,-25.6,-259.01,-30.36,-256.7,-35.12,-254.43,-39.97,-252.16,-44.83,-250.03,-49.55,-247.9,-54.27,-246.11,-58.4,-292.1,-58.4,-293.5,-63.2,-237.31,-63.2,-237.31,-93,-215.11,-91,-215.18,-89.87,-215.67,-89.03,-216.17,-88.19,-217.26,-87.55,-218.34,-86.91,-220.11,-86.44,-221.88,-85.97,-224.5,-85.6,-224.5,-63.2,-185.91,-63.2,-176.91,-75.2,-159.51,-62.6,-160.11,-61.47,-160.89,-60.68,-161.67,-59.88,-162.78,-59.37,-163.89,-58.87,-165.38,-58.63,-166.88,-58.4,-168.91,-58.4,-228.1,-58.4,-231.18,-53.97,-234.58,-49.19,-237.97,-44.4,-241.48,-39.6,-244.99,-34.8,-248.49,-30.16,-252,-25.53,-255.3,-21.4,-248.33,-21.48,-240.61,-21.59,-232.89,-21.7,-224.6,-21.85,-216.32,-22,-207.55,-22.19,-198.78,-22.38,-189.7,-22.6,-192.03,-25.45,-194.59,-28.17,-197.14,-30.88,-199.8,-33.38,-202.47,-35.87,-205.17,-38.1,-207.88,-40.33,-210.5,-42.2,-208.9,-44.2,-196.83,-40.3,-188.73,-35.57,-180.62,-30.84,-175.73,-26.03,-170.84,-21.21,-168.77,-16.67,-166.7,-12.13,-166.7,-8.6,-166.7,-6.8,-167.17,-5.33,-167.63,-3.85,-168.45,-2.8,-169.28,-1.75,-170.42,-1.18,-171.55,-0.6,-172.9,-0.6,-173.58,-0.6,-174.25,-0.72,-174.93,-0.83,-175.6,-1.08,-176.28,-1.32,-176.95,-1.7,-177.63,-2.08,-178.3,-2.6,-178.83,-4.48,-179.64,-6.39,-180.45,-8.3,-181.5,-10.25,-182.55,-12.2,-183.82,-14.19,-185.08,-16.17,-186.5,-18.2,-194.75,-17.15,-204.4,-15.99,-214.04,-14.82,-225.23,-13.55,-236.42,-12.27,-249.25,-10.89,-262.08,-9.5,-276.7,-8,-277.23,-7.1,-277.86,-6.39,-278.49,-5.67,-279.2,-5.15,-279.92,-4.62,-280.7,-4.29,-281.48,-3.95,-282.3,-3.8,-288.7,-21.4,-288.704,-21.399,-224.71,78.4,-224.71,78.55,-225.18,79.22,-225.65,79.9,-226.98,80.65,-228.31,81.4,-230.7,82,-233.08,82.6,-236.9,82.6,-236.9,2.4,-216.71,4,-216.86,5.05,-217.28,5.85,-217.71,6.64,-218.61,7.23,-219.5,7.81,-220.98,8.19,-222.46,8.58,-224.71,8.8,-224.71,78.4,-224.705,78.398,-162.51,57.6,-162.51,75.4,-160.78,76.15,-159.75,76.68,-158.72,77.22,-158.18,77.72,-157.64,78.23,-157.47,78.8,-157.31,79.38,-157.31,80.2,-157.31,82.08,-158.1,83.65,-158.89,85.23,-160.66,86.38,-162.42,87.52,-165.24,88.16,-168.06,88.8,-172.11,88.8,-185.31,88.8,-189.73,88.8,-192.47,88.08,-195.21,87.35,-196.73,85.4,-198.25,83.45,-198.78,80.03,-199.31,76.6,-199.31,71.2,-199.31,2,-180.11,3.8,-180.18,4.85,-180.55,5.58,-180.91,6.32,-181.68,6.83,-182.45,7.33,-183.68,7.65,-184.91,7.97,-186.71,8.2,-186.71,71.8,-186.71,73.75,-186.66,74.87,-186.62,75.99,-186.36,76.55,-186.09,77.11,-185.52,77.26,-184.96,77.4,-183.91,77.4,-172.31,77.4,-171.71,77.4,-171.24,77.36,-170.77,77.33,-170.38,77.12,-169.99,76.92,-169.63,76.47,-169.28,76.02,-168.91,75.2,-168.61,74.37,-168.17,72.79,-167.73,71.2,-167.18,68.95,-166.64,66.7,-166.01,63.84,-165.38,60.97,-164.71,57.6,-162.51,57.6,-162.506,57.6] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [6.69,-14.6,6.69,-14.53,6.53,-12.48,6.36,-10.43,6.09,-7.05,5.83,-3.68,5.51,0.7,5.19,5.07,4.89,9.8,4.52,14.52,4.16,19.31,3.8,24.09,3.52,28.27,3.24,32.46,3.07,35.7,2.89,38.95,2.89,40.6,2.89,45.85,3.53,49.66,4.17,53.47,5.44,55.95,6.72,58.42,8.63,59.61,10.54,60.8,13.09,60.8,15.72,60.8,18.63,60.15,21.54,59.5,24.69,58.02,27.84,56.54,31.21,54.13,34.57,51.72,38.09,48.2,41.09,50.4,38.02,56.02,34.65,60.44,31.27,64.87,27.47,67.92,23.66,70.98,19.35,72.59,15.04,74.2,10.09,74.2,4.32,74.2,0.35,71.91,-3.62,69.62,-6.08,65.5,-8.54,61.37,-9.62,55.64,-10.71,49.9,-10.71,43,-10.71,35.35,-10.25,27.26,-9.8,19.17,-9.18,11.57,-8.56,3.98,-7.92,-2.65,-7.28,-9.28,-6.91,-14,-6.83,-15.43,-6.76,-16.82,-6.69,-18.21,-6.63,-19.58,-6.57,-20.94,-6.54,-22.3,-6.51,-23.65,-6.51,-25,-6.51,-29.35,-7.07,-33.18,-7.64,-37,-9.23,-39.85,-10.82,-42.7,-13.68,-44.35,-16.53,-46,-21.11,-46,-28.16,-46,-35.87,-43.16,-43.58,-40.32,-51.76,-35.12,-59.93,-29.93,-68.47,-22.63,-77.01,-15.32,-85.71,-6.4,-85.86,-4.37,-86,-1.8,-86.14,0.78,-86.25,3.4,-86.37,6.03,-86.44,8.45,-86.5,10.88,-86.5,12.6,-86.5,17.55,-86.49,23.2,-86.48,28.86,-86.4,34.88,-86.33,40.89,-86.17,47.11,-86,53.33,-85.7,59.4,-85.55,61.13,-85.32,63.07,-85.08,65.01,-84.85,66.98,-84.63,68.94,-84.47,70.85,-84.3,72.75,-84.3,74.4,-84.3,76.12,-85.19,78.12,-86.07,80.12,-87.45,81.82,-88.84,83.53,-90.55,84.66,-92.25,85.8,-93.91,85.8,-95.4,85.8,-96.5,84.55,-97.6,83.31,-98.33,81.22,-99.06,79.14,-99.45,76.43,-99.83,73.72,-99.9,70.8,-99.9,67.65,-100.39,64.66,-100.88,61.66,-102.3,58.1,-103.73,54.54,-106.32,50.04,-108.9,45.55,-113.1,39.4,-110.9,37.8,-109.25,39.82,-107.25,41.95,-105.25,44.08,-103.43,45.82,-101.61,47.57,-100.25,48.68,-98.88,49.8,-98.5,49.8,-98.13,49.8,-97.8,49.51,-97.47,49.22,-97.23,48.4,-96.99,47.57,-96.85,46.09,-96.7,44.6,-96.7,42.2,-96.7,37.25,-96.64,32.14,-96.57,27.02,-96.45,22.15,-96.34,17.28,-96.2,12.84,-96.05,8.4,-95.9,4.8,-99.65,8.78,-103.33,12.97,-107,17.16,-110.43,21.4,-113.86,25.64,-116.97,29.83,-120.08,34.03,-122.7,38,-123.98,39.88,-125.03,41.73,-126.08,43.59,-127.2,45.07,-128.33,46.56,-129.68,47.48,-131.03,48.4,-132.9,48.4,-134.63,48.4,-135.88,47.73,-137.12,47.06,-137.93,45.75,-138.74,44.44,-139.12,42.49,-139.5,40.55,-139.5,38,-139.5,36.95,-139.38,36.19,-139.25,35.43,-138.78,34.62,-138.31,33.82,-137.4,32.8,-136.48,31.77,-134.9,30.2,-128.75,24.12,-122.47,17.67,-116.19,11.21,-110.75,4.95,-105.32,-1.31,-101.21,-7.09,-97.1,-12.88,-95.3,-17.6,-95.08,-20.23,-94.92,-22.96,-94.76,-25.69,-94.63,-28.37,-94.5,-31.06,-94.38,-33.6,-94.25,-36.15,-94.1,-38.4,-94.78,-38.32,-95.64,-38.15,-96.5,-37.98,-97.4,-37.77,-98.3,-37.57,-99.17,-37.36,-100.03,-37.15,-100.7,-37,-107.23,-35.2,-111.48,-33.43,-115.74,-31.66,-118.23,-29.72,-120.72,-27.79,-121.71,-25.61,-122.7,-23.43,-122.7,-20.8,-122.7,-20.13,-122.63,-19.42,-122.56,-18.71,-122.43,-17.98,-122.3,-17.24,-122.11,-16.5,-121.93,-15.75,-121.7,-15,-125.3,-13.4,-126.13,-15.95,-127.08,-17.76,-128.02,-19.58,-128.83,-21.15,-129.64,-22.73,-130.17,-24.31,-130.7,-25.9,-130.7,-28,-130.7,-30.63,-129.98,-32.93,-129.25,-35.22,-127.73,-37.1,-126.21,-38.97,-123.87,-40.38,-121.53,-41.78,-118.3,-42.6,-115.23,-43.35,-112.14,-44.09,-109.05,-44.83,-106.2,-45.53,-103.35,-46.22,-100.87,-46.85,-98.38,-47.48,-96.5,-48,-96.05,-48.15,-95.61,-48.3,-95.17,-48.45,-94.75,-48.6,-94.34,-48.75,-93.97,-48.9,-93.6,-49.05,-93.3,-49.2,-93.23,-51.08,-93.13,-53.42,-93.02,-55.76,-92.93,-58.2,-92.84,-60.64,-92.77,-62.98,-92.7,-65.32,-92.7,-67.2,-92.7,-71.4,-93.39,-73.85,-94.08,-76.3,-95.5,-77.5,-96.93,-78.7,-99.12,-78.9,-101.3,-79.1,-104.3,-78.8,-104.7,-80.6,-103.73,-81.65,-102.54,-82.53,-101.35,-83.41,-100,-84.05,-98.65,-84.69,-97.17,-85.04,-95.68,-85.4,-94.1,-85.4,-91.4,-85.4,-88.29,-84.31,-85.17,-83.23,-82.5,-81.35,-79.84,-79.48,-78.07,-76.96,-76.3,-74.45,-76.3,-71.6,-76.3,-69.73,-76.8,-68.44,-77.29,-67.15,-78,-65.8,-78.72,-64.45,-79.51,-62.71,-80.3,-60.98,-80.9,-58.2,-81.05,-57.3,-81.17,-56.25,-81.29,-55.21,-81.38,-54.18,-81.47,-53.14,-81.55,-52.21,-81.63,-51.28,-81.7,-50.6,-80.35,-49.63,-79.09,-48.67,-77.83,-47.71,-76.85,-46.7,-75.88,-45.69,-75.29,-44.58,-74.7,-43.48,-74.7,-42.2,-74.7,-40.85,-75.53,-39.74,-76.35,-38.63,-77.53,-37.38,-78.71,-36.12,-80.02,-34.52,-81.33,-32.93,-82.3,-30.6,-83.05,-28.65,-83.54,-26.91,-84.02,-25.16,-84.35,-23.4,-84.69,-21.64,-84.95,-19.74,-85.2,-17.85,-85.5,-15.6,-77.03,-24.3,-67.85,-31.45,-58.67,-38.6,-49.88,-43.7,-41.09,-48.8,-33.22,-51.6,-25.36,-54.4,-19.51,-54.4,-10.43,-54.48,-5.2,-51.73,0.03,-48.98,2.67,-44.42,5.31,-39.87,6,-34.01,6.69,-28.15,6.69,-22,6.69,-14.6,6.694,-14.6] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [58.5,-62.6,58.88,-60.2,60.07,-58.24,61.26,-56.29,63.08,-54.9,64.89,-53.51,67.25,-52.76,69.6,-52,72.3,-52,73.58,-52,75.5,-52.14,77.43,-52.29,79.6,-52.55,81.78,-52.81,84,-53.18,86.23,-53.55,88.1,-54,94.03,-55.2,105.19,-57.24,116.36,-59.28,129.43,-61.47,142.49,-63.67,155.8,-65.67,169.1,-67.67,179.3,-68.8,181.55,-69.1,183.65,-69.61,185.74,-70.11,187.52,-70.75,189.3,-71.39,190.69,-72.12,192.07,-72.85,192.9,-73.6,199.12,-72.4,203.5,-71.09,207.87,-69.78,210.62,-68.22,213.38,-66.67,214.64,-64.8,215.9,-62.92,215.9,-60.6,215.9,-59.32,215.29,-58.51,214.69,-57.69,213.6,-57.22,212.51,-56.76,211.01,-56.58,209.5,-56.4,207.7,-56.4,206.05,-56.4,204.17,-56.52,202.29,-56.65,200.3,-56.8,198.31,-56.95,196.28,-57.07,194.25,-57.2,192.3,-57.2,184.27,-57.2,175.54,-53.68,166.81,-50.16,158.75,-44.62,150.69,-39.09,143.98,-32.31,137.28,-25.53,133.3,-19,130.83,-15.25,128.67,-10.27,126.52,-5.28,124.93,0.47,123.33,6.23,122.42,12.53,121.5,18.82,121.5,25.2,121.5,35.85,124.57,42.89,127.64,49.92,133.03,54.35,138.41,58.77,145.72,61.09,153.02,63.4,161.5,64.6,163.6,64.9,165.87,64.95,168.14,65.01,170.22,65.05,172.31,65.09,174.02,65.22,175.72,65.35,176.7,65.8,179.25,66.85,181.04,68.08,182.82,69.3,183.95,70.67,185.07,72.04,185.59,73.53,186.1,75.02,186.1,76.6,186.1,77.87,185.51,78.78,184.92,79.69,183.77,80.27,182.63,80.85,180.95,81.13,179.27,81.4,177.1,81.4,176.42,81.4,175.71,81.36,175,81.33,174.25,81.27,173.5,81.22,172.71,81.15,171.92,81.07,171.1,81,152.8,78.9,140.92,74.68,129.04,70.46,122.1,63.72,115.16,56.99,112.43,47.56,109.7,38.13,109.7,25.6,109.7,11.2,114.62,-1.57,119.54,-14.35,127.6,-25.15,135.66,-35.95,145.98,-44.6,156.3,-53.25,167.1,-59.4,166.9,-60,158.12,-59.1,145.22,-56.83,132.31,-54.57,119.6,-51.62,106.89,-48.68,96.53,-45.4,86.17,-42.12,82.5,-39.2,81.45,-38.52,80.44,-37.88,79.44,-37.23,78.35,-36.72,77.26,-36.22,76.03,-35.91,74.8,-35.6,73.3,-35.6,70.08,-35.6,66.64,-37.41,63.21,-39.22,60.38,-41.97,57.54,-44.73,55.72,-48,53.9,-51.27,53.9,-54.2,53.9,-55.62,54.12,-56.95,54.34,-58.27,54.78,-59.4,55.21,-60.52,55.84,-61.4,56.48,-62.27,57.3,-62.8,58.5,-62.6,58.501,-62.599] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [303.1,-82.6,304,-84.02,305.08,-85.08,306.17,-86.13,307.4,-86.82,308.64,-87.52,310.02,-87.86,311.4,-88.2,312.9,-88.2,316.95,-88.2,321.55,-86.79,326.15,-85.38,330.05,-83.07,333.95,-80.77,336.53,-77.82,339.1,-74.87,339.1,-71.8,339.1,-70.37,338.1,-69.39,337.1,-68.4,335.43,-67.5,333.76,-66.6,331.59,-65.61,329.43,-64.62,327.1,-63.2,320.8,-59.3,311.88,-52.83,302.95,-46.36,293.95,-39.32,284.95,-32.29,277.15,-25.71,269.35,-19.13,265.3,-15,264.03,-13.72,263,-12.19,261.96,-10.65,261.23,-9,260.5,-7.35,260.1,-5.66,259.7,-3.98,259.7,-2.4,259.7,-0.6,260.69,1.13,261.67,2.86,263.68,4.7,265.69,6.54,268.73,8.57,271.78,10.6,275.9,13,292.4,22.45,305.43,32.31,318.47,42.16,327.5,51.05,336.54,59.94,341.32,67.17,346.1,74.4,346.1,78.6,346.1,80.55,345.56,82.29,345.02,84.04,344.03,85.35,343.03,86.66,341.63,87.43,340.23,88.2,338.5,88.2,337.3,88.2,335.91,87.42,334.52,86.64,333.08,85.28,331.63,83.91,330.2,82.04,328.78,80.18,327.5,78,323.45,71.1,317.15,63.09,310.86,55.09,302.78,46.95,294.7,38.81,285.06,31.03,275.43,23.25,264.7,16.8,261.48,14.78,258.92,12.65,256.36,10.52,254.58,8.18,252.8,5.83,251.85,3.22,250.9,0.6,250.9,-2.4,250.9,-4.72,251.45,-7.03,252,-9.34,253.05,-11.55,254.1,-13.76,255.63,-15.84,257.15,-17.92,259.1,-19.8,263.38,-24.22,269.85,-30.3,276.31,-36.38,283.4,-42.77,290.49,-49.17,297.41,-55.21,304.33,-61.25,309.5,-65.6,311,-66.87,312.22,-68.26,313.44,-69.65,314.3,-71,315.16,-72.35,315.63,-73.58,316.1,-74.82,316.1,-75.8,316.1,-77.52,314.76,-78.73,313.41,-79.94,311.5,-80.67,309.59,-81.4,307.5,-81.67,305.4,-81.95,303.9,-81.8,303.1,-82.6,303.103,-82.599] ) );
    shape.graphics.endFill();

    return shape;
  },
  "この同じ" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [-321.2,-15.9,-325.55,-11.4,-328.97,-6.55,-332.39,-1.7,-334.75,3.25,-337.11,8.2,-338.36,13.12,-339.6,18.05,-339.6,22.7,-339.6,29.52,-336.8,35.5,-333.99,41.48,-327.98,45.92,-321.96,50.37,-312.52,52.93,-303.08,55.5,-289.8,55.5,-280.43,55.5,-272.61,55.06,-264.8,54.62,-258.8,53.77,-252.8,52.93,-248.74,51.7,-244.68,50.47,-242.8,48.9,-237.93,49.57,-234.22,50.52,-230.52,51.47,-228.03,52.75,-225.53,54.02,-224.27,55.65,-223,57.27,-223,59.3,-223,62.22,-227.67,64,-232.33,65.77,-240.83,66.72,-249.32,67.68,-261.22,67.99,-273.13,68.3,-287.6,68.3,-306.58,68.3,-318.51,64.23,-330.44,60.16,-337.18,54.2,-343.91,48.24,-346.35,41.47,-348.8,34.7,-348.8,29.3,-348.8,23.97,-347.77,18.31,-346.73,12.65,-343.98,6.65,-341.22,0.65,-336.4,-5.69,-331.58,-12.02,-324,-18.7,-321.2,-15.9,-321.201,-15.9,-268.4,-56.3,-274.93,-55.32,-282.11,-53.95,-289.29,-52.58,-296.15,-51.32,-303.01,-50.07,-309.07,-49.18,-315.13,-48.3,-319.4,-48.3,-324.05,-48.3,-327.79,-49.97,-331.53,-51.64,-334.15,-54.15,-336.78,-56.66,-338.19,-59.61,-339.6,-62.55,-339.6,-65.1,-339.6,-65.77,-339.46,-66.5,-339.32,-67.23,-339.08,-67.92,-338.83,-68.62,-338.5,-69.23,-338.18,-69.85,-337.8,-70.3,-336.4,-70.1,-336.1,-68.6,-334.83,-66.85,-333.55,-65.1,-331,-63.6,-328.45,-62.1,-324.48,-61.1,-320.5,-60.1,-314.8,-60.1,-308.88,-60.1,-300.07,-61.12,-291.26,-62.15,-282.75,-63.65,-274.24,-65.15,-267.61,-66.85,-260.98,-68.55,-259.4,-69.9,-253.1,-69,-249.16,-67.55,-245.21,-66.11,-243,-64.32,-240.79,-62.54,-240,-60.53,-239.2,-58.52,-239.2,-56.5,-239.2,-55.3,-240.16,-54.36,-241.11,-53.42,-242.65,-52.75,-244.19,-52.07,-246.12,-51.66,-248.05,-51.25,-250,-51.1,-254.88,-50.88,-261.73,-48.71,-268.59,-46.54,-276.05,-43.38,-283.51,-40.21,-290.89,-36.5,-298.28,-32.8,-304.2,-29.5,-306.8,-32.5,-303.35,-35.2,-298.37,-38.31,-293.4,-41.42,-288.13,-44.5,-282.86,-47.57,-277.92,-50.39,-272.98,-53.2,-269.6,-55.3,-268.4,-56.3,-268.402,-56.299] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [-115.4,68.5,-94.7,65.65,-80.3,58.98,-65.9,52.31,-56.9,43.05,-47.9,33.79,-43.85,22.54,-39.8,11.3,-39.8,-0.7,-39.8,-14.35,-43.16,-26.56,-46.53,-38.76,-53.95,-47.95,-61.38,-57.14,-73.21,-62.52,-85.05,-67.9,-102,-67.9,-103.42,-67.9,-105.56,-67.75,-107.69,-67.61,-110.05,-67.35,-112.41,-67.09,-114.77,-66.72,-117.12,-66.35,-119,-65.9,-117.2,-64.62,-115.79,-62.55,-114.37,-60.47,-113.4,-57.85,-112.42,-55.22,-111.91,-52.17,-111.4,-49.12,-111.4,-45.9,-111.4,-32.1,-115.96,-15,-120.52,2.1,-128.22,17.1,-135.93,32.1,-146.08,42.3,-156.22,52.5,-167.4,52.5,-172.72,52.5,-177.17,49.48,-181.62,46.47,-184.82,40.97,-188.03,35.48,-189.81,27.78,-191.6,20.07,-191.6,10.7,-191.6,-6.62,-184.87,-21.98,-178.13,-37.33,-166.1,-48.82,-154.06,-60.32,-137.43,-67.01,-120.8,-73.7,-101,-73.7,-82.55,-73.7,-68.4,-68.24,-54.25,-62.78,-44.65,-52.97,-35.05,-43.17,-30.12,-29.57,-25.2,-15.97,-25.2,0.3,-25.2,14.32,-30.07,26.7,-34.95,39.07,-45.6,48.72,-56.25,58.38,-73.12,64.79,-90,71.2,-114,73.3,-115.4,68.5,-115.4,68.499,-124.4,-64.7,-135.8,-61.92,-145.85,-55.29,-155.9,-48.65,-163.4,-38.9,-170.9,-29.15,-175.25,-16.66,-179.6,-4.18,-179.6,10.3,-179.6,16.15,-178.72,21.29,-177.84,26.42,-176.17,30.25,-174.51,34.07,-172.09,36.29,-169.67,38.5,-166.6,38.5,-158.05,38.5,-149.89,29.05,-141.72,19.6,-135.35,5.8,-128.97,-8,-125.09,-23.6,-121.2,-39.2,-121.2,-51.5,-121.2,-53.52,-121.47,-55.59,-121.75,-57.65,-122.2,-59.45,-122.65,-61.25,-123.22,-62.64,-123.8,-64.02,-124.4,-64.7,-124.4,-64.699] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,1,2,3,3,3,3,2,2,2,2,2,1,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [159.2,-88.9,176.6,-75.9,176.07,-75.3,175.22,-74.68,174.37,-74.06,173.25,-73.5,172.12,-72.94,170.75,-72.47,169.37,-72,167.8,-71.7,167.8,70.5,167.8,74.17,167.07,77.14,166.34,80.1,163.9,82.35,161.46,84.6,156.83,86.14,152.2,87.67,144.4,88.5,144.4,85.05,142.65,82.88,140.91,80.72,137.62,79.42,134.34,78.13,129.63,77.5,124.92,76.87,119,76.5,119,73.5,149.6,73.5,151.03,73.5,152.02,73.42,153.01,73.34,153.63,73.02,154.24,72.71,154.52,72.07,154.8,71.42,154.8,70.3,154.8,-75.5,23.4,-75.5,23.4,83.5,23.4,83.72,23.06,84.6,22.72,85.47,21.43,86.42,20.13,87.38,17.58,88.14,15.03,88.9,10.6,88.9,10.6,-87.1,24.8,-80.3,152.8,-80.3,159.2,-88.9,159.199,-88.899,125,-60.3,142.4,-48.1,141.72,-46.97,140.93,-46.18,140.13,-45.38,139.02,-44.87,137.92,-44.37,136.41,-44.13,134.9,-43.9,132.8,-43.9,39.2,-43.9,38,-48.7,116,-48.7,125,-60.3,125,-60.299,133.8,-14.5,133.35,-13.98,132.58,-13.43,131.82,-12.89,130.83,-12.4,129.83,-11.91,128.65,-11.52,127.48,-11.13,126.2,-10.9,126.2,46.9,126.2,47.05,125.47,47.79,124.73,48.52,123.18,49.35,121.62,50.17,119.2,50.84,116.78,51.5,113.4,51.5,113.4,38.1,64,38.1,64,51.7,64,51.77,63.52,52.47,63.04,53.17,61.68,53.97,60.31,54.78,57.84,55.44,55.38,56.1,51.4,56.1,51.4,-24.7,64.8,-18.7,111.6,-18.7,117.4,-26.1,133.8,-14.5,133.8,-14.5,64,33.3,113.4,33.3,113.4,-13.9,64,-13.9,64,33.3,64.001,33.299] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [211.8,-78.3,212.48,-80.02,213.83,-81.43,215.19,-82.83,216.95,-83.82,218.71,-84.82,220.75,-85.36,222.78,-85.9,224.8,-85.9,228.25,-85.9,232.15,-84.9,236.06,-83.9,239.38,-82.1,242.69,-80.3,244.91,-77.8,247.13,-75.3,247.2,-72.3,247.2,-70.57,246.54,-69.32,245.88,-68.06,244.9,-66.3,243.93,-64.54,242.81,-61.78,241.7,-59.02,240.8,-54.3,239.75,-48.22,238.68,-38.26,237.6,-28.3,236.7,-16.9,235.8,-5.5,235.18,6.11,234.55,17.72,234.4,27.1,234.4,38.5,237.09,45.67,239.77,52.85,244.78,56.9,249.78,60.95,256.93,62.42,264.08,63.9,273,63.9,284.18,63.9,294.51,60.95,304.85,57.99,314.15,51.97,323.45,45.96,331.61,36.81,339.78,27.67,346.6,15.3,350.8,17.5,344.58,33.17,336.22,44.38,327.86,55.59,317.83,62.77,307.8,69.96,296.32,73.33,284.85,76.7,272.4,76.7,262.35,76.7,253.35,74.48,244.34,72.26,237.55,66.72,230.77,61.19,226.78,51.81,222.8,42.42,222.8,28.1,222.8,18.05,223.3,5.61,223.8,-6.83,224.55,-19.8,225.3,-32.78,226.18,-45.36,227.05,-57.95,227.8,-68.3,227.8,-69.5,227.8,-70.33,227.57,-71.74,227.34,-73.16,226.4,-74.53,225.47,-75.89,223.58,-76.9,221.7,-77.9,218.4,-77.9,217.65,-77.9,216.85,-77.87,216.04,-77.83,215.25,-77.78,214.47,-77.72,213.73,-77.65,213,-77.58,212.4,-77.5,211.8,-78.3,211.802,-78.299,287.4,-62.7,296.4,-59.55,302.21,-56.1,308.02,-52.65,311.4,-49.35,314.77,-46.05,316.09,-43.12,317.4,-40.2,317.4,-38.1,317.4,-36.75,317.04,-35.58,316.69,-34.41,316.05,-33.55,315.41,-32.69,314.53,-32.19,313.65,-31.7,312.6,-31.7,311.4,-31.7,310.38,-32.04,309.37,-32.38,308.53,-33.07,307.68,-33.77,307,-34.82,306.33,-35.87,305.8,-37.3,304.9,-39.55,302.97,-42.42,301.04,-45.3,298.32,-48.3,295.61,-51.3,292.22,-54.17,288.82,-57.05,285,-59.3,287.4,-62.7,287.4,-62.699,310,-77.5,319,-74.35,324.81,-70.9,330.63,-67.44,334,-64.12,337.38,-60.81,338.69,-57.84,340,-54.87,340,-52.7,340,-51.42,339.67,-50.3,339.34,-49.17,338.72,-48.32,338.11,-47.48,337.21,-46.99,336.32,-46.5,335.2,-46.5,334.07,-46.5,333.1,-46.84,332.12,-47.18,331.3,-47.85,330.47,-48.52,329.8,-49.54,329.12,-50.55,328.6,-51.9,327.7,-54.22,325.77,-57.11,323.84,-59.99,321.12,-62.97,318.41,-65.96,315.02,-68.8,311.62,-71.65,307.8,-73.9,310,-77.5,310,-77.499] ) );
    shape.graphics.endFill();

    return shape;
  },
  "時間" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,3,3,3,3,2,2,2,2,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,1,2,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,2,2,2,2,3,3,3,3,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-405.23,-91.58,-386.1,-77.4,-386.61,-76.73,-387.55,-76.07,-388.49,-75.41,-389.76,-74.82,-391.02,-74.22,-392.56,-73.73,-394.09,-73.24,-395.78,-72.9,-395.78,58.05,-395.78,58.3,-396.57,59.14,-397.36,59.98,-399.07,60.89,-400.78,61.8,-403.47,62.51,-406.16,63.23,-409.95,63.23,-409.95,46.8,-444.6,46.8,-444.6,68.85,-444.6,69.27,-445.45,70.1,-446.3,70.93,-447.87,71.75,-449.43,72.57,-451.63,73.19,-453.83,73.8,-456.53,73.8,-458.78,73.8,-458.78,-89.55,-441.9,-82.35,-412.2,-82.35,-405.23,-91.58,-405.226,-91.579,-409.95,-76.95,-444.6,-76.95,-444.6,-21.15,-409.95,-21.15,-409.95,-76.95,-409.952,-76.953,-444.6,41.4,-409.95,41.4,-409.95,-15.75,-444.6,-15.75,-444.6,41.4,-444.603,41.4,-274.72,-40.95,-255.15,-26.78,-255.82,-25.51,-256.67,-24.61,-257.52,-23.72,-258.75,-23.15,-259.97,-22.58,-261.67,-22.31,-263.36,-22.05,-265.72,-22.05,-391.73,-22.05,-393.08,-27.45,-337.05,-27.45,-337.05,-64.8,-382.28,-64.8,-383.63,-70.2,-337.05,-70.2,-337.05,-104.18,-312.08,-102.15,-312.25,-100.72,-312.84,-99.71,-313.44,-98.71,-314.66,-97.99,-315.89,-97.27,-317.84,-96.77,-319.78,-96.27,-322.65,-95.85,-322.65,-70.2,-297.9,-70.2,-287.77,-83.48,-268.42,-69.53,-269.1,-68.26,-269.99,-67.36,-270.87,-66.47,-272.14,-65.9,-273.4,-65.33,-275.13,-65.06,-276.86,-64.8,-279.22,-64.8,-322.65,-64.8,-322.65,-27.45,-285.08,-27.45,-274.72,-40.95,-274.723,-40.952,-286.42,13.28,-276.52,0.22,-258.07,13.95,-258.75,15.22,-259.6,16.11,-260.44,17.01,-261.65,17.58,-262.85,18.15,-264.5,18.41,-266.15,18.68,-268.42,18.68,-295.65,18.68,-295.65,81.45,-295.65,85.92,-296.4,89.75,-297.16,93.57,-299.64,96.53,-302.13,99.48,-306.85,101.45,-311.57,103.42,-319.5,104.18,-319.5,99.71,-321.13,97.02,-322.76,94.33,-325.94,92.82,-329.13,91.3,-333.84,90.64,-338.54,89.97,-344.7,89.55,-344.7,85.73,-315.23,85.73,-313.71,85.73,-312.71,85.53,-311.71,85.34,-311.12,84.86,-310.53,84.37,-310.29,83.54,-310.05,82.72,-310.05,81.45,-310.05,18.68,-391.28,18.68,-392.85,13.28,-310.05,13.28,-310.05,-14.4,-286.43,-12.6,-286.51,-11.5,-286.92,-10.65,-287.33,-9.79,-288.34,-9.14,-289.35,-8.49,-291.11,-8.01,-292.87,-7.54,-295.65,-7.2,-295.65,13.28,-286.42,13.28,-286.42,13.28,-286.423,13.275,-370.35,28.8,-361.74,33.02,-355.92,37.52,-350.1,42.03,-346.56,46.43,-343.01,50.84,-341.49,54.97,-339.98,59.09,-339.98,62.55,-339.98,65.08,-340.68,67.16,-341.39,69.23,-342.59,70.71,-343.79,72.18,-345.39,72.99,-346.98,73.8,-348.75,73.8,-349.59,73.8,-350.47,73.62,-351.35,73.44,-352.24,73.04,-353.12,72.64,-354,72,-354.88,71.35,-355.73,70.42,-356.06,65.7,-357.64,60.28,-359.21,54.85,-361.58,49.47,-363.94,44.09,-366.86,39.13,-369.79,34.17,-372.83,30.37,-370.35,28.8,-370.351,28.8] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [328.27,-24.08,280.8,-24.08,280.8,97.88,280.8,98.21,280.41,99.2,280.03,100.2,278.57,101.25,277.12,102.31,274.25,103.13,271.37,103.95,266.4,103.95,266.4,-97.2,282.15,-89.78,326.25,-89.78,332.55,-98.1,350.78,-85.05,350.27,-84.46,349.41,-83.85,348.55,-83.24,347.43,-82.69,346.31,-82.14,344.98,-81.7,343.66,-81.26,342.23,-81,342.23,-16.65,342.23,-16.48,341.41,-15.76,340.59,-15.03,338.88,-14.23,337.17,-13.43,334.54,-12.79,331.9,-12.15,328.28,-12.15,328.28,-24.08,328.27,-24.08,328.272,-24.077,328.27,-84.38,280.8,-84.38,280.8,-60.08,328.27,-60.08,328.27,-84.38,328.272,-84.378,280.8,-29.48,328.28,-29.48,328.28,-54.68,280.8,-54.68,280.8,-29.48,280.797,-29.476,407.7,7.65,407.19,8.24,406.33,8.85,405.46,9.46,404.33,10.01,403.19,10.56,401.82,11,400.44,11.45,398.93,11.7,398.93,81,398.93,81.17,398.08,81.96,397.22,82.76,395.49,83.64,393.76,84.53,391.14,85.24,388.52,85.95,384.98,85.95,384.98,75.38,329.62,75.38,329.62,83.25,329.62,83.25,329.12,84.02,328.62,84.8,327.12,85.73,325.62,86.65,322.88,87.43,320.15,88.2,315.67,88.2,315.67,-3.83,330.75,2.92,382.95,2.92,389.25,-5.4,407.7,7.65,407.701,7.65,384.98,8.32,329.62,8.32,329.62,35.55,384.98,35.55,384.98,8.32,384.975,8.325,329.62,69.98,384.97,69.98,384.97,40.95,329.62,40.95,329.62,69.98,329.623,69.976,439.2,-99.23,458.78,-84.83,458.19,-84.15,457.2,-83.46,456.21,-82.77,454.92,-82.16,453.64,-81.55,452.1,-81.06,450.56,-80.58,448.88,-80.33,448.88,82.35,448.88,86.74,448.02,90.38,447.17,94.02,444.57,96.78,441.98,99.54,437.2,101.37,432.42,103.19,424.58,103.95,424.58,99.23,422.88,96.43,421.18,93.64,417.91,92.08,414.64,90.52,409.86,89.84,405.09,89.16,398.93,88.65,398.93,85.5,429.3,85.5,430.82,85.5,431.78,85.32,432.75,85.14,433.3,84.74,433.84,84.34,434.05,83.7,434.25,83.06,434.25,82.13,434.25,-24.08,384.98,-24.08,384.98,-17.78,384.98,-17.69,384.47,-16.91,383.96,-16.12,382.44,-15.22,380.93,-14.31,378.14,-13.57,375.36,-12.83,370.8,-12.83,370.8,-96.53,385.88,-89.78,432,-89.78,439.2,-99.23,439.201,-99.229,434.25,-84.38,384.98,-84.38,384.98,-60.08,434.25,-60.08,434.25,-84.38,434.252,-84.378,384.98,-29.48,434.25,-29.48,434.25,-54.68,384.98,-54.68,384.98,-29.48,384.975,-29.476] ) );
    shape.graphics.endFill();

    return shape;
  },
  "のなかにも" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [-5.25,51.52,10.27,49.39,21.07,44.38,31.87,39.38,38.62,32.44,45.37,25.49,48.41,17.06,51.45,8.62,51.45,-0.38,51.45,-10.61,48.93,-19.77,46.4,-28.92,40.84,-35.81,35.27,-42.7,26.39,-46.74,17.51,-50.77,4.8,-50.77,3.73,-50.77,2.13,-50.66,0.53,-50.56,-1.24,-50.36,-3.01,-50.16,-4.78,-49.89,-6.54,-49.61,-7.95,-49.27,-6.6,-48.32,-5.54,-46.76,-4.48,-45.2,-3.75,-43.24,-3.02,-41.27,-2.63,-38.98,-2.25,-36.69,-2.25,-34.27,-2.25,-23.92,-5.67,-11.1,-9.09,1.73,-14.87,12.98,-20.65,24.22,-28.26,31.87,-35.87,39.52,-44.25,39.52,-48.24,39.52,-51.58,37.26,-54.91,35,-57.32,30.88,-59.72,26.76,-61.06,20.98,-62.4,15.21,-62.4,8.18,-62.4,-4.82,-57.35,-16.33,-52.3,-27.85,-43.27,-36.47,-34.24,-45.09,-21.77,-50.11,-9.3,-55.12,5.55,-55.12,19.39,-55.12,30,-51.03,40.61,-46.93,47.81,-39.58,55.01,-32.23,58.7,-22.03,62.4,-11.83,62.4,0.37,62.4,10.89,58.74,20.17,55.09,29.45,47.1,36.69,39.11,43.93,26.46,48.74,13.8,53.55,-4.2,55.12,-5.25,51.52,-5.25,51.523,-12,-48.37,-20.55,-46.29,-28.09,-41.31,-35.62,-36.34,-41.25,-29.02,-46.87,-21.71,-50.14,-12.35,-53.4,-2.98,-53.4,7.88,-53.4,12.26,-52.74,16.11,-52.08,19.97,-50.83,22.84,-49.58,25.7,-47.77,27.36,-45.95,29.02,-43.65,29.02,-37.24,29.02,-31.11,21.94,-24.99,14.85,-20.21,4.5,-15.43,-5.85,-12.52,-17.55,-9.6,-29.25,-9.6,-38.47,-9.6,-39.99,-9.81,-41.54,-10.01,-43.09,-10.35,-44.44,-10.69,-45.79,-11.12,-46.83,-11.55,-47.87,-12,-48.37,-12,-48.373] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [-203.18,-237.53,-202.33,-239.38,-200.8,-240.92,-199.27,-242.45,-197.33,-243.55,-195.39,-244.64,-193.18,-245.25,-190.97,-245.85,-188.78,-245.85,-184.73,-245.85,-180.71,-244.89,-176.68,-243.93,-173.48,-242.36,-170.27,-240.8,-168.27,-238.83,-166.28,-236.85,-166.28,-234.83,-166.28,-232.8,-166.98,-231.58,-167.69,-230.36,-168.72,-228.92,-169.76,-227.49,-170.93,-225.33,-172.1,-223.18,-173.03,-219.3,-173.36,-217.61,-173.96,-215.64,-174.55,-213.67,-175.22,-211.62,-175.9,-209.58,-176.57,-207.56,-177.25,-205.55,-177.75,-203.78,-172.27,-204.79,-165.85,-206.41,-159.43,-208.03,-153.73,-210.33,-148.04,-212.63,-143.9,-215.64,-139.75,-218.66,-138.83,-222.45,-131.06,-222.71,-126.3,-222.3,-121.53,-221.89,-118.91,-221.05,-116.3,-220.2,-115.41,-219.03,-114.52,-217.87,-114.52,-216.6,-114.52,-214.83,-115.41,-213.42,-116.3,-212.01,-118.24,-210.72,-120.18,-209.44,-123.26,-208.15,-126.34,-206.87,-130.73,-205.35,-135.03,-203.83,-141.26,-202.02,-147.48,-200.21,-154.38,-198.43,-161.28,-196.66,-168.22,-195.1,-175.16,-193.54,-180.9,-192.53,-184.45,-181.3,-189.82,-167.93,-195.2,-154.56,-201.32,-141.42,-207.44,-128.28,-213.75,-116.56,-220.05,-104.83,-225.45,-96.9,-226.21,-95.89,-227.12,-94.95,-228.02,-94.02,-228.97,-93.3,-229.92,-92.58,-230.86,-92.15,-231.81,-91.72,-232.65,-91.72,-233.41,-91.72,-234.63,-92.16,-235.85,-92.6,-237.01,-93.69,-238.17,-94.79,-239.01,-96.66,-239.85,-98.53,-239.85,-101.4,-239.85,-102.66,-239.66,-104.16,-239.47,-105.66,-239.01,-107.14,-238.55,-108.61,-237.77,-109.94,-236.98,-111.27,-235.8,-112.2,-230.4,-116.67,-224.19,-125.45,-217.99,-134.22,-212.12,-145.11,-206.26,-155.99,-201.31,-167.89,-196.37,-179.79,-193.5,-190.5,-196.2,-190.16,-198.91,-189.87,-201.62,-189.58,-204.02,-189.35,-206.43,-189.12,-208.37,-188.95,-210.32,-188.79,-211.5,-188.7,-215.47,-188.7,-218.94,-189.09,-222.42,-189.48,-225.28,-190.28,-228.15,-191.08,-230.36,-192.31,-232.57,-193.54,-234,-195.23,-234.85,-195.99,-235.73,-197.16,-236.62,-198.33,-237.38,-199.73,-238.14,-201.12,-238.69,-202.63,-239.23,-204.14,-239.4,-205.58,-236.48,-208.28,-234.79,-205.49,-232.77,-203.63,-230.75,-201.77,-228.27,-200.66,-225.78,-199.54,-222.75,-199.07,-219.71,-198.6,-216,-198.6,-213.72,-198.6,-210.67,-198.76,-207.62,-198.93,-204.25,-199.22,-200.87,-199.52,-197.4,-199.93,-193.92,-200.35,-190.8,-200.85,-189.79,-205.16,-188.99,-208.86,-188.2,-212.56,-187.65,-215.79,-187.1,-219.01,-186.81,-221.83,-186.53,-224.65,-186.53,-227.18,-186.53,-229.2,-186.81,-230.93,-187.1,-232.66,-188.13,-233.93,-189.16,-235.19,-191.18,-235.91,-193.19,-236.63,-196.65,-236.63,-197.24,-236.63,-197.88,-236.58,-198.52,-236.54,-199.21,-236.46,-199.91,-236.37,-200.67,-236.25,-201.43,-236.12,-202.28,-235.95,-203.18,-237.53,-203.178,-237.527,-138.38,-176.32,-131.37,-180.12,-125.1,-182.64,-118.82,-185.15,-113.15,-186.65,-107.47,-188.15,-102.34,-188.76,-97.2,-189.38,-92.47,-189.38,-84.37,-189.38,-77.56,-188.1,-70.75,-186.82,-65.81,-184.54,-60.87,-182.26,-58.11,-179.12,-55.35,-175.99,-55.35,-172.27,-55.35,-171.35,-55.78,-170.7,-56.22,-170.06,-56.98,-169.66,-57.74,-169.26,-58.77,-169.08,-59.79,-168.9,-60.97,-168.9,-61.9,-168.9,-62.85,-168.98,-63.81,-169.06,-64.71,-169.21,-65.62,-169.36,-66.45,-169.56,-67.27,-169.77,-67.95,-170.02,-69.05,-170.53,-70.6,-170.91,-72.15,-171.29,-73.94,-171.54,-75.73,-171.8,-77.66,-171.92,-79.59,-172.05,-81.45,-172.05,-82.29,-172.05,-83.1,-172.04,-83.9,-172.04,-84.66,-171.99,-85.42,-171.95,-86.13,-171.86,-86.85,-171.77,-87.52,-171.6,-96.3,-169.57,-101.37,-166.48,-106.44,-163.39,-109.01,-159.34,-111.59,-155.29,-112.27,-150.34,-112.95,-145.39,-112.95,-139.65,-112.95,-135.6,-112.87,-132.65,-112.49,-129.61,-112.11,-126.57,-111.63,-123.62,-111.14,-120.66,-110.64,-117.88,-110.14,-115.1,-109.8,-112.65,-109.63,-111.97,-109.47,-111.09,-109.3,-110.2,-109.15,-109.27,-109.01,-108.35,-108.88,-107.46,-108.76,-106.57,-108.68,-105.9,-103.36,-104.04,-97.96,-101.86,-92.57,-99.68,-87.44,-97.21,-82.31,-94.74,-77.64,-92.01,-72.96,-89.28,-69.07,-86.32,-66.21,-84.13,-64.33,-81.96,-62.46,-79.78,-61.37,-77.72,-60.27,-75.65,-59.83,-73.73,-59.4,-71.81,-59.4,-70.12,-59.48,-68.77,-60.29,-67.69,-61.1,-66.61,-62.32,-65.85,-63.55,-65.09,-65.03,-64.68,-66.51,-64.27,-67.95,-64.27,-69.38,-64.27,-72.08,-67.09,-74.77,-69.9,-79.37,-74.14,-83.97,-78.38,-90.79,-83.35,-97.62,-88.32,-107.32,-92.62,-107.24,-91.69,-107.16,-90.53,-107.08,-89.37,-107.02,-88.04,-106.95,-86.71,-106.91,-85.25,-106.88,-83.79,-106.88,-82.27,-106.88,-81.34,-106.88,-80.46,-106.88,-79.57,-106.9,-78.73,-106.93,-77.88,-106.97,-77.08,-107.02,-76.28,-107.1,-75.52,-107.52,-71.13,-109.97,-67.14,-112.42,-63.15,-117.23,-60.11,-122.04,-57.07,-129.38,-55.27,-136.72,-53.47,-146.93,-53.47,-156.46,-53.47,-164.33,-55.68,-172.21,-57.88,-177.84,-61.83,-183.47,-65.77,-186.57,-71.22,-189.68,-76.68,-189.68,-83.17,-189.68,-89.58,-186.21,-94.82,-182.74,-100.05,-176.8,-103.76,-170.85,-107.47,-162.91,-109.5,-154.97,-111.52,-146.03,-111.52,-143.41,-111.52,-140.17,-111.29,-136.94,-111.05,-133.62,-110.65,-130.31,-110.25,-127.2,-109.72,-124.09,-109.19,-121.73,-108.6,-121.81,-110.12,-122.21,-114.07,-122.61,-118.02,-123.05,-122.49,-123.49,-126.96,-123.85,-131,-124.2,-135.04,-124.2,-136.72,-124.2,-143.64,-122.73,-149.7,-121.26,-155.76,-117.31,-160.88,-113.37,-166.01,-106.45,-170.17,-99.54,-174.33,-88.65,-177.45,-88.65,-178.58,-89.83,-178.83,-91.14,-179.04,-92.44,-179.24,-93.85,-179.39,-95.27,-179.54,-96.78,-179.62,-98.3,-179.7,-99.9,-179.7,-103.44,-179.7,-107.49,-179.29,-111.55,-178.89,-116.1,-177.96,-120.66,-177.03,-125.72,-175.52,-130.78,-174.02,-136.35,-171.82,-138.38,-176.32,-138.376,-176.325,-120.83,-98.25,-123.61,-99.43,-127.08,-100.39,-130.55,-101.34,-134.24,-102.02,-137.93,-102.69,-141.61,-103.06,-145.29,-103.42,-148.5,-103.42,-154.83,-103.42,-160.51,-102.02,-166.18,-100.62,-170.47,-98.11,-174.75,-95.6,-177.26,-92.13,-179.78,-88.66,-179.78,-84.52,-179.78,-79.88,-177.72,-76.31,-175.67,-72.75,-171.62,-70.32,-167.57,-67.89,-161.55,-66.65,-155.53,-65.4,-147.6,-65.4,-140.09,-65.4,-134.83,-66.57,-129.56,-67.74,-126.25,-69.87,-122.94,-72,-121.43,-74.99,-119.92,-77.97,-119.92,-81.6,-119.92,-83.71,-120,-86.1,-120.08,-88.49,-120.21,-90.77,-120.33,-93.05,-120.49,-95.01,-120.66,-96.98,-120.83,-98.25,-120.825,-98.249] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [88.65,-234.38,89.49,-236.23,90.87,-237.77,92.25,-239.3,93.94,-240.4,95.62,-241.49,97.51,-242.1,99.39,-242.7,101.25,-242.7,105.98,-242.7,110.43,-241.4,114.89,-240.09,118.35,-238.01,121.81,-235.92,123.9,-233.31,126,-230.69,126,-228.08,126,-226.81,125.29,-225.87,124.59,-224.93,123.55,-223.61,122.52,-222.28,121.35,-220.2,120.18,-218.12,119.25,-214.58,118.41,-211.12,117.48,-207.58,116.56,-204.05,115.57,-200.49,114.57,-196.92,113.52,-193.34,112.47,-189.77,111.38,-186.22,113.48,-186.48,116.28,-186.9,119.07,-187.32,122.26,-187.72,125.45,-188.12,128.87,-188.41,132.3,-188.7,135.68,-188.7,147.83,-188.7,155.15,-185.26,162.47,-181.81,166.39,-175.31,170.31,-168.82,171.56,-159.46,172.8,-150.11,172.8,-138.3,172.8,-126.99,170.62,-112.71,168.44,-98.43,163.77,-85.82,159.11,-73.2,151.82,-64.57,144.54,-55.95,134.32,-55.95,132.55,-55.95,131.25,-56.67,129.95,-57.4,128.98,-58.7,128.01,-60.01,127.3,-61.83,126.59,-63.65,126,-65.85,125.49,-67.62,122.81,-70.49,120.14,-73.36,116.21,-76.82,112.29,-80.28,107.59,-84.07,102.88,-87.87,98.32,-91.5,101.25,-95.32,107.24,-91.61,112.69,-88.33,118.13,-85.06,122.71,-82.61,127.29,-80.16,130.83,-78.74,134.38,-77.32,136.58,-77.32,137.76,-77.32,138.81,-77.49,139.87,-77.65,140.99,-78.31,142.11,-78.96,143.38,-80.26,144.65,-81.57,146.25,-83.85,148.36,-86.8,150.7,-92.33,153.04,-97.86,155,-105.48,156.96,-113.09,158.24,-122.54,159.53,-132,159.53,-142.8,159.53,-151.99,158.82,-159.12,158.12,-166.25,155.59,-171.12,153.06,-175.99,148.13,-178.52,143.21,-181.05,134.78,-181.05,132.5,-181.05,128.99,-180.67,125.48,-180.3,121.72,-179.73,117.97,-179.16,114.46,-178.49,110.95,-177.81,108.67,-177.22,104.54,-163.64,99.42,-149.07,94.3,-134.5,88.79,-120.55,83.28,-106.61,77.7,-94.1,72.11,-81.6,67.05,-72.15,65.36,-68.86,63.79,-66.44,62.23,-64.03,60.75,-62.44,59.27,-60.86,57.87,-60.09,56.47,-59.32,55.12,-59.32,53.44,-59.32,52.06,-60.06,50.69,-60.79,49.72,-62.33,48.75,-63.87,48.23,-66.25,47.7,-68.63,47.7,-71.92,47.7,-73.7,48.67,-75.71,49.64,-77.73,51.07,-79.8,52.51,-81.87,54.15,-83.88,55.8,-85.9,57.15,-87.67,61.11,-92.4,66.32,-102.25,71.53,-112.1,76.86,-124.29,82.2,-136.49,87.11,-149.63,92.02,-162.77,95.4,-174.07,93.21,-173.48,90.34,-172.67,87.47,-171.85,84.43,-170.9,81.39,-169.95,78.44,-168.92,75.49,-167.89,73.12,-166.88,72.2,-166.45,71.12,-165.59,70.04,-164.73,68.9,-163.87,67.77,-163,66.61,-162.35,65.45,-161.7,64.35,-161.7,60.47,-161.7,57.31,-163.73,54.15,-165.75,51.92,-168.79,49.68,-171.83,48.46,-175.37,47.25,-178.91,47.25,-181.95,47.25,-183.72,47.82,-185.33,48.4,-186.94,49.33,-188.22,50.26,-189.51,51.42,-190.4,52.59,-191.29,53.77,-191.63,54.67,-191.18,54.34,-189.32,54.91,-187.15,55.48,-184.99,56.89,-183.13,58.31,-181.28,60.53,-180.04,62.74,-178.8,65.7,-178.8,68.9,-178.8,72.68,-179.23,76.46,-179.65,80.58,-180.35,84.69,-181.04,89.02,-181.93,93.35,-182.82,97.65,-183.75,98.58,-187.04,99.92,-192.67,101.27,-198.3,102.51,-204.31,103.76,-210.32,104.64,-215.74,105.52,-221.16,105.52,-224.03,105.52,-226.64,104.93,-228.55,104.33,-230.46,102.96,-231.71,101.59,-232.95,99.35,-233.55,97.11,-234.15,93.82,-234.15,93.32,-234.15,92.77,-234.15,92.23,-234.14,91.66,-234.12,91.09,-234.1,90.5,-234.06,89.91,-234.01,89.32,-233.93,88.65,-234.38,88.649,-234.377,185.85,-204.68,200.79,-200.2,211.09,-192.39,221.4,-184.57,227.79,-175.2,234.18,-165.83,237.02,-155.82,239.85,-145.81,239.85,-136.95,239.85,-132.81,239.14,-129.56,238.42,-126.3,237.15,-124.04,235.89,-121.78,234.16,-120.59,232.43,-119.4,230.4,-119.4,228.89,-119.48,227.46,-119.97,226.04,-120.45,224.95,-121.59,223.85,-122.73,223.19,-124.65,222.53,-126.57,222.53,-129.52,222.53,-139.82,220.77,-150.12,219.01,-160.42,214.54,-169.74,210.07,-179.07,202.4,-186.92,194.74,-194.78,182.93,-200.18,185.85,-204.68,185.853,-204.677] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-188.1,158.1,-192.41,167.47,-196.5,176.92,-200.59,186.37,-203.8,194.55,-207,202.74,-208.99,208.98,-210.97,215.22,-211.05,218.18,-211.05,219.36,-210.67,220.87,-210.28,222.37,-209.81,224.17,-209.35,225.96,-208.96,228.02,-208.58,230.07,-208.58,232.35,-208.58,234.55,-209.04,236.12,-209.51,237.7,-210.26,238.71,-211.02,239.72,-211.99,240.2,-212.96,240.68,-213.98,240.68,-217.77,240.68,-221.59,237.1,-225.4,233.53,-228.46,226.25,-231.52,218.97,-233.44,207.93,-235.35,196.89,-235.35,181.95,-235.35,169.38,-233.93,157.78,-232.5,146.19,-230.52,135.77,-228.53,125.35,-226.43,116.2,-224.33,107.05,-222.98,99.37,-222.72,98.02,-222.52,96.71,-222.31,95.4,-222.16,94.11,-222.01,92.83,-221.93,91.56,-221.85,90.29,-221.85,89.02,-221.85,88.52,-221.89,87.97,-221.92,87.43,-221.97,86.89,-222.01,86.34,-222.04,85.8,-222.08,85.25,-222.08,84.75,-222.08,81.88,-223.21,79.19,-224.34,76.5,-226.07,74.37,-227.8,72.24,-229.86,70.86,-231.92,69.48,-233.78,69.22,-234,67.65,-233.24,66.8,-232.26,66.28,-231.28,65.75,-230.18,65.45,-229.08,65.16,-227.93,65.05,-226.77,64.95,-225.68,64.95,-220.53,64.95,-216.27,67.26,-212,69.56,-208.94,72.94,-205.88,76.31,-204.19,80.14,-202.5,83.96,-202.5,87,-202.5,89.36,-203.02,91.22,-203.53,93.07,-204.25,94.59,-204.96,96.11,-205.73,97.38,-206.5,98.64,-207,99.82,-210.04,107.33,-213.02,116.18,-216,125.03,-218.37,134.84,-220.73,144.65,-222.19,155.23,-223.65,165.81,-223.65,176.78,-223.65,181.92,-223.42,186.07,-223.18,190.22,-222.78,193.43,-222.38,196.63,-221.85,198.93,-221.32,201.22,-220.73,202.65,-218.7,201.98,-217.27,199.78,-214.12,194.36,-210.98,188.93,-207.2,182.2,-203.42,175.48,-199.56,168.41,-195.7,161.34,-192.83,155.85,-188.1,158.1,-188.102,158.101,-143.78,152.7,-147.57,156.83,-150.82,161.16,-154.08,165.48,-156.46,169.91,-158.84,174.34,-160.2,178.84,-161.55,183.33,-161.55,187.8,-161.55,194.81,-158.92,199.62,-156.29,204.43,-150.81,207.41,-145.32,210.38,-136.87,211.69,-128.42,213,-116.78,213,-109.52,213,-103.3,212.59,-97.07,212.18,-92.14,211.57,-87.2,210.96,-83.68,210.25,-80.15,209.54,-78.3,208.95,-73.74,209.63,-70.54,210.77,-67.33,211.9,-65.3,213.34,-63.28,214.77,-62.35,216.42,-61.42,218.07,-61.42,219.75,-61.42,221.95,-63.37,223.38,-65.32,224.82,-70.76,225.66,-76.2,226.5,-85.91,226.84,-95.62,227.18,-111.15,227.18,-126.42,227.18,-137.82,225.14,-149.22,223.11,-156.8,218.66,-164.37,214.2,-168.14,207.15,-171.9,200.09,-171.9,190.05,-171.9,184.31,-169.95,178.84,-168,173.37,-164.73,168.23,-161.46,163.08,-157.19,158.28,-152.92,153.49,-148.28,149.1,-143.78,152.7,-143.775,152.7,-167.18,95.77,-165.07,96.36,-162.34,96.75,-159.6,97.14,-156.63,97.38,-153.65,97.61,-150.63,97.7,-147.6,97.8,-144.9,97.8,-140.6,97.8,-134.54,97.13,-128.48,96.46,-122.09,95.29,-115.7,94.13,-109.68,92.58,-103.67,91.02,-99.45,89.25,-98.02,88.66,-96.48,87.81,-94.94,86.96,-93.54,86.18,-92.15,85.4,-91.03,84.85,-89.92,84.3,-89.32,84.3,-86.12,84.3,-82.8,84.92,-79.48,85.53,-76.78,86.72,-74.08,87.9,-72.36,89.61,-70.65,91.33,-70.65,93.52,-70.65,95.3,-72.02,96.53,-73.38,97.77,-75.68,98.7,-77.98,99.63,-81,100.36,-84.01,101.09,-87.3,101.85,-93.54,103.11,-100.61,104.22,-107.68,105.33,-114.47,106.15,-121.26,106.97,-127.23,107.45,-133.2,107.92,-137.25,107.92,-140.96,107.92,-145.01,107.67,-149.06,107.41,-153.11,106.55,-157.16,105.68,-161.05,104.03,-164.93,102.38,-168.3,99.6,-167.18,95.77,-167.177,95.774] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [166.73,157.65,173.65,165.83,179.26,172.66,184.87,179.49,188.84,185.61,192.8,191.72,194.95,197.46,197.1,203.19,197.1,209.18,197.1,216.18,193.94,222.79,190.77,229.39,183.07,234.52,175.37,239.64,162.46,242.75,149.54,245.85,130.05,245.85,114.7,245.85,104.27,242.67,93.84,239.5,87.47,233.25,81.1,227.01,78.35,217.75,75.6,208.5,75.6,196.35,75.6,193.65,75.86,190.47,76.11,187.29,76.47,184.06,76.83,180.83,77.21,177.78,77.6,174.72,77.85,172.28,69.84,172.02,63.46,170.41,57.08,168.79,52.65,165.92,48.22,163.05,45.89,158.99,43.57,154.92,43.65,149.78,43.65,144.04,47.16,137.96,50.67,131.87,56.39,126.26,62.11,120.65,69.38,115.92,76.64,111.19,84.15,108.15,80.95,108.15,74.88,107.77,68.82,107.38,62.83,105.08,56.84,102.78,52.38,97.8,47.93,92.82,47.93,83.62,51.75,82.27,52.26,86.49,54.74,89.48,57.22,92.47,61.31,94.37,65.41,96.27,70.92,97.15,76.44,98.02,83.03,98.02,83.53,98.02,84.96,98.06,86.38,98.09,88,98.11,89.63,98.13,91.09,98.12,92.56,98.11,93.15,98.02,93.66,94.73,94.18,91.36,94.7,87.98,95.12,84.69,95.54,81.4,95.81,78.28,96.08,75.16,96.08,72.37,96.08,69.42,95.05,67.4,94.03,65.38,92.28,64.13,90.53,62.89,88.2,62.34,85.87,61.8,83.25,61.8,82.74,61.8,82.2,61.8,81.66,61.81,81.11,61.83,80.56,61.85,80.02,61.89,79.48,61.94,78.98,62.02,78.53,61.35,79.29,59.32,80.31,57.84,81.34,56.36,82.86,55.39,84.38,54.42,86.5,53.94,88.62,53.47,91.58,53.47,96.13,53.47,100.39,54.72,104.66,55.97,107.95,57.89,111.24,59.81,113.22,62.11,115.2,64.41,115.2,66.52,115.2,67.87,114.66,69.18,114.11,70.49,113.37,71.92,112.64,73.36,111.88,75,111.12,76.65,110.7,78.67,110.36,80.7,109.95,82.87,109.54,85.04,109.07,87.28,108.61,89.52,108.11,91.77,107.61,94.03,107.1,96.22,110.9,95.8,114.2,95.17,117.49,94.53,120.15,93.66,122.81,92.8,124.76,91.7,126.71,90.6,127.8,89.25,132.95,89,136.55,89.77,140.14,90.54,142.4,91.86,144.66,93.19,145.68,94.85,146.7,96.51,146.7,98.02,146.7,98.7,146.27,99.44,145.84,100.18,144.93,100.92,144.02,101.66,142.62,102.36,141.22,103.06,139.28,103.65,137.67,104.07,133.99,104.67,130.3,105.26,125.47,105.87,120.64,106.48,115.13,107.03,109.63,107.59,104.4,107.92,102.63,114.17,100.78,120.78,98.92,127.39,97.17,134.14,95.42,140.89,93.86,147.67,92.31,154.44,91.13,161.03,96.27,161.03,102.06,160.85,107.85,160.67,112.98,160.29,118.11,159.91,121.91,159.32,125.72,158.72,126.9,157.88,130.87,158.64,134.42,159.79,137.98,160.94,140.66,162.38,143.33,163.81,144.91,165.47,146.48,167.13,146.48,168.9,146.48,170.34,145.71,171.32,144.95,172.31,143.75,172.92,142.55,173.53,141.07,173.8,139.59,174.08,138.15,174.08,137.73,174.08,137.31,174.07,136.89,174.07,136.46,174.05,136.04,174.03,135.62,173.98,135.2,173.93,134.78,173.85,130.22,173.09,125.75,172.72,121.28,172.35,116.05,172.22,110.81,172.09,104.4,172.14,97.99,172.19,89.55,172.28,89.13,174.55,88.72,177.4,88.32,180.25,88,183.24,87.69,186.24,87.49,189.17,87.3,192.1,87.3,194.55,87.3,204.25,89.12,211.38,90.94,218.5,95.6,223.18,100.26,227.87,108.28,230.18,116.3,232.49,128.7,232.58,143.3,232.58,153.49,230.47,163.68,228.37,170.07,224.7,176.47,221.03,179.36,216.06,182.25,211.09,182.25,205.35,182.25,199.61,180.92,194.15,179.59,188.69,176.99,183.24,174.4,177.8,170.58,172.25,166.76,166.71,161.78,160.8,166.73,157.65,166.729,157.65,91.58,109.27,83.98,112.65,77.1,116.97,70.21,121.29,65,126.12,59.79,130.95,56.74,136.07,53.69,141.2,53.78,146.17,53.78,150.73,55.71,153.59,57.64,156.44,61.12,158.04,64.6,159.65,69.44,160.22,74.28,160.8,80.1,160.8,81.28,154.98,82.75,148.26,84.22,141.53,85.75,134.7,87.29,127.86,88.8,121.31,90.31,114.76,91.58,109.27,91.577,109.274] ) );
    shape.graphics.endFill();

    return shape;
  },
  "重なって" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,2,2,2,2,2,2,2,2,2,3,3,3,3,2,2,2,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,2,2,2,2,3,3,3,3,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [-200.41,52,-182.01,64.8,-182.61,65.92,-183.37,66.75,-184.13,67.58,-185.23,68.12,-186.34,68.67,-187.89,68.93,-189.43,69.2,-191.61,69.2,-366.61,69.2,-367.81,64.4,-282.21,64.4,-282.21,40.4,-350.81,40.4,-352.2,35.6,-282.21,35.6,-282.21,13.8,-325.61,13.8,-325.61,18.8,-325.61,18.87,-326.06,19.6,-326.52,20.33,-327.9,21.17,-329.29,22.02,-331.85,22.71,-334.41,23.4,-338.61,23.4,-338.61,-49.4,-324.21,-43.2,-282.21,-43.2,-282.21,-63.2,-363.21,-63.2,-364.61,-68,-282.21,-68,-282.21,-86.8,-290.53,-86.05,-299.04,-85.38,-307.55,-84.72,-316.08,-84.18,-324.61,-83.63,-333.08,-83.23,-341.56,-82.83,-349.81,-82.6,-350.41,-86.6,-333.61,-88.02,-315.29,-90.39,-296.97,-92.76,-279.46,-95.65,-261.95,-98.54,-246.4,-101.73,-230.86,-104.92,-219.61,-108,-206.01,-94.6,-206.38,-94.3,-206.8,-94.07,-207.21,-93.85,-207.68,-93.7,-208.15,-93.55,-208.68,-93.47,-209.21,-93.4,-209.81,-93.4,-210.48,-93.4,-211.23,-93.51,-211.98,-93.62,-212.81,-93.85,-213.63,-94.07,-214.53,-94.41,-215.43,-94.75,-216.41,-95.2,-222.03,-94.3,-228.23,-93.37,-234.42,-92.45,-241.06,-91.55,-247.7,-90.65,-254.71,-89.8,-261.73,-88.95,-269.01,-88.2,-269.01,-68,-212.01,-68,-202.61,-79.8,-184.81,-67.6,-185.33,-66.47,-186.08,-65.65,-186.83,-64.82,-187.93,-64.27,-189.04,-63.73,-190.57,-63.46,-192.11,-63.2,-194.21,-63.2,-269.01,-63.2,-269.01,-43.2,-226.41,-43.2,-220.41,-51.2,-202.81,-38.8,-203.33,-38.2,-204.18,-37.61,-205.03,-37.02,-206.13,-36.5,-207.24,-35.97,-208.57,-35.54,-209.91,-35.1,-211.41,-34.8,-211.41,18.4,-211.48,18.47,-212.29,19.08,-213.09,19.68,-214.68,20.37,-216.28,21.07,-218.69,21.63,-221.11,22.2,-224.41,22.2,-224.41,13.8,-269.01,13.8,-269.01,35.6,-221.41,35.6,-212.61,24.6,-195.41,36,-196.01,37.2,-196.76,38.04,-197.52,38.87,-198.61,39.4,-199.7,39.92,-201.2,40.16,-202.71,40.4,-204.81,40.4,-269.01,40.4,-269.01,64.4,-210.01,64.4,-200.41,52,-200.408,52,-282.21,-38.4,-325.61,-38.4,-325.61,-17.4,-282.21,-17.4,-282.21,-38.4,-282.207,-38.398,-325.61,9,-282.21,9,-282.21,-12.6,-325.61,-12.6,-325.61,9,-325.605,9.001,-224.41,-38.4,-269.01,-38.4,-269.01,-17.4,-224.41,-17.4,-224.41,-38.4,-224.407,-38.398,-269.01,9,-224.41,9,-224.41,-12.6,-269.01,-12.6,-269.01,9,-269.006,9.001] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [-126.2,-94.4,-125.45,-96.05,-124.09,-97.41,-122.73,-98.77,-121,-99.75,-119.28,-100.72,-117.32,-101.26,-115.36,-101.8,-113.41,-101.8,-109.81,-101.8,-106.23,-100.94,-102.66,-100.08,-99.81,-98.7,-96.95,-97.31,-95.18,-95.55,-93.41,-93.8,-93.41,-92,-93.41,-90.2,-94.03,-89.11,-94.66,-88.02,-95.58,-86.75,-96.5,-85.47,-97.54,-83.56,-98.58,-81.65,-99.41,-78.2,-99.7,-76.7,-100.23,-74.94,-100.76,-73.19,-101.36,-71.37,-101.95,-69.55,-102.56,-67.76,-103.16,-65.97,-103.61,-64.4,-98.73,-65.3,-93.02,-66.74,-87.32,-68.18,-82.26,-70.22,-77.19,-72.27,-73.51,-74.94,-69.83,-77.62,-69,-81,-62.11,-81.22,-57.87,-80.86,-53.63,-80.5,-51.31,-79.75,-48.98,-79,-48.19,-77.96,-47.4,-76.92,-47.4,-75.8,-47.4,-74.22,-48.19,-72.97,-48.98,-71.72,-50.7,-70.57,-52.43,-69.43,-55.17,-68.29,-57.9,-67.15,-61.8,-65.8,-65.63,-64.45,-71.16,-62.83,-76.7,-61.22,-82.83,-59.65,-88.96,-58.07,-95.13,-56.68,-101.3,-55.3,-106.4,-54.4,-109.55,-44.42,-114.34,-32.54,-119.12,-20.65,-124.55,-8.97,-129.99,2.71,-135.6,13.13,-141.2,23.55,-146,30.6,-146.68,31.5,-147.48,32.33,-148.29,33.16,-149.13,33.8,-149.97,34.44,-150.81,34.82,-151.65,35.2,-152.4,35.2,-153.08,35.2,-154.16,34.81,-155.25,34.43,-156.28,33.45,-157.31,32.48,-158.06,30.81,-158.8,29.15,-158.8,26.6,-158.8,25.48,-158.64,24.15,-158.47,22.81,-158.05,21.5,-157.64,20.19,-156.95,19.01,-156.25,17.83,-155.2,17,-150.4,13.03,-144.89,5.23,-139.37,-2.57,-134.15,-12.25,-128.94,-21.92,-124.55,-32.5,-120.16,-43.07,-117.61,-52.6,-120.01,-52.3,-122.41,-52.04,-124.82,-51.78,-126.96,-51.57,-129.09,-51.37,-130.82,-51.22,-132.56,-51.07,-133.61,-51,-137.13,-51,-140.22,-51.34,-143.31,-51.68,-145.86,-52.4,-148.41,-53.11,-150.37,-54.2,-152.33,-55.3,-153.61,-56.8,-154.36,-57.47,-155.14,-58.52,-155.93,-59.56,-156.61,-60.8,-157.28,-62.03,-157.77,-63.38,-158.26,-64.72,-158.41,-66,-155.81,-68.4,-154.31,-65.92,-152.51,-64.27,-150.72,-62.62,-148.51,-61.62,-146.29,-60.63,-143.6,-60.21,-140.91,-59.8,-137.61,-59.8,-135.58,-59.8,-132.87,-59.94,-130.16,-60.08,-127.16,-60.35,-124.16,-60.61,-121.07,-60.98,-117.98,-61.35,-115.21,-61.8,-114.31,-65.62,-113.6,-68.91,-112.89,-72.2,-112.41,-75.07,-111.92,-77.94,-111.66,-80.44,-111.41,-82.95,-111.41,-85.2,-111.41,-87,-111.66,-88.53,-111.91,-90.07,-112.83,-91.2,-113.75,-92.32,-115.54,-92.96,-117.33,-93.6,-120.41,-93.6,-120.93,-93.6,-121.5,-93.56,-122.06,-93.52,-122.68,-93.45,-123.3,-93.37,-123.98,-93.26,-124.66,-93.15,-125.41,-93,-126.2,-94.4,-126.205,-94.397,-68.61,-40,-62.38,-43.37,-56.8,-45.61,-51.22,-47.84,-46.18,-49.17,-41.14,-50.5,-36.57,-51.05,-32.01,-51.6,-27.81,-51.6,-20.61,-51.6,-14.55,-50.46,-8.49,-49.32,-4.11,-47.3,0.28,-45.27,2.74,-42.49,5.19,-39.7,5.19,-36.4,5.19,-35.57,4.81,-35,4.42,-34.43,3.74,-34.07,3.07,-33.72,2.16,-33.56,1.24,-33.4,0.19,-33.4,-0.63,-33.4,-1.48,-33.47,-2.32,-33.54,-3.13,-33.67,-3.94,-33.8,-4.67,-33.99,-5.41,-34.17,-6.01,-34.4,-6.98,-34.85,-8.36,-35.19,-9.74,-35.52,-11.33,-35.75,-12.92,-35.97,-14.64,-36.09,-16.36,-36.2,-18.01,-36.2,-18.76,-36.2,-19.47,-36.19,-20.18,-36.19,-20.86,-36.15,-21.53,-36.11,-22.17,-36.03,-22.81,-35.95,-23.41,-35.8,-31.21,-34,-35.71,-31.25,-40.22,-28.5,-42.51,-24.9,-44.79,-21.3,-45.4,-16.9,-46.01,-12.5,-46.01,-7.4,-46.01,-3.8,-45.93,-1.17,-45.6,1.53,-45.26,4.23,-44.83,6.85,-44.4,9.48,-43.95,11.95,-43.51,14.43,-43.21,16.6,-43.06,17.2,-42.91,17.99,-42.76,18.78,-42.63,19.6,-42.5,20.43,-42.39,21.21,-42.28,22,-42.21,22.6,-37.48,24.25,-32.68,26.19,-27.89,28.13,-23.33,30.33,-18.77,32.52,-14.62,34.95,-10.46,37.38,-7.01,40,-4.46,41.95,-2.79,43.88,-1.13,45.81,-0.16,47.65,0.82,49.49,1.21,51.19,1.59,52.9,1.59,54.4,1.52,55.6,0.8,56.56,0.08,57.53,-1.01,58.2,-2.09,58.88,-3.41,59.24,-4.73,59.6,-6.01,59.6,-7.28,59.6,-9.67,57.1,-12.07,54.59,-16.16,50.83,-20.24,47.06,-26.31,42.64,-32.38,38.23,-41.01,34.4,-40.93,35.23,-40.86,36.26,-40.79,37.3,-40.73,38.48,-40.67,39.66,-40.64,40.96,-40.61,42.25,-40.61,43.6,-40.61,44.43,-40.61,45.21,-40.61,46,-40.63,46.75,-40.65,47.5,-40.69,48.21,-40.73,48.93,-40.81,49.6,-41.18,53.5,-43.36,57.05,-45.53,60.6,-49.81,63.3,-54.08,66,-60.61,67.6,-67.13,69.2,-76.21,69.2,-84.68,69.2,-91.68,67.24,-98.67,65.28,-103.68,61.78,-108.69,58.27,-111.45,53.42,-114.21,48.58,-114.21,42.8,-114.21,37.1,-111.12,32.45,-108.04,27.8,-102.76,24.5,-97.47,21.2,-90.41,19.4,-83.36,17.6,-75.41,17.6,-73.08,17.6,-70.2,17.81,-67.32,18.02,-64.38,18.38,-61.44,18.73,-58.67,19.21,-55.91,19.68,-53.81,20.2,-53.88,18.85,-54.23,15.34,-54.59,11.83,-54.98,7.85,-55.37,3.88,-55.69,0.29,-56.01,-3.3,-56.01,-4.8,-56.01,-10.95,-54.7,-16.33,-53.39,-21.72,-49.88,-26.27,-46.37,-30.83,-40.23,-34.53,-34.08,-38.22,-24.41,-41,-24.41,-42,-25.46,-42.22,-26.61,-42.41,-27.77,-42.59,-29.03,-42.72,-30.29,-42.85,-31.63,-42.93,-32.98,-43,-34.41,-43,-37.56,-43,-41.15,-42.63,-44.75,-42.27,-48.8,-41.45,-52.85,-40.62,-57.35,-39.28,-61.85,-37.95,-66.8,-36,-68.61,-40,-68.605,-39.998,-53.01,29.4,-55.48,28.35,-58.57,27.5,-61.65,26.65,-64.93,26.05,-68.21,25.45,-71.48,25.13,-74.76,24.8,-77.61,24.8,-83.23,24.8,-88.28,26.05,-93.32,27.29,-97.13,29.53,-100.94,31.76,-103.17,34.84,-105.41,37.93,-105.41,41.6,-105.41,45.73,-103.58,48.9,-101.76,52.07,-98.16,54.23,-94.56,56.38,-89.21,57.49,-83.86,58.6,-76.81,58.6,-70.13,58.6,-65.45,57.56,-60.77,56.52,-57.83,54.63,-54.89,52.73,-53.55,50.08,-52.21,47.43,-52.21,44.2,-52.21,42.33,-52.27,40.2,-52.34,38.08,-52.46,36.05,-52.57,34.03,-52.71,32.28,-52.86,30.53,-53.01,29.4,-53.006,29.401] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [73.6,59.6,83.27,59,92.47,57.45,101.68,55.9,109.87,53.65,118.06,51.4,124.98,48.58,131.9,45.75,137,42.6,142.4,39.15,146.41,35.03,150.43,30.92,153.1,26.33,155.76,21.73,157.08,16.75,158.39,11.78,158.39,6.6,158.39,-1.12,156.07,-7.37,153.75,-13.62,149.42,-18.02,145.09,-22.43,138.9,-24.81,132.72,-27.2,125,-27.2,116.52,-27.2,106.95,-25.02,97.38,-22.84,88.65,-19.65,79.91,-16.46,72.97,-12.86,66.02,-9.25,62.8,-6.4,61.75,-5.65,60.77,-4.93,59.8,-4.21,58.9,-3.65,58,-3.09,57.17,-2.74,56.35,-2.4,55.6,-2.4,52.9,-2.4,49.78,-3.75,46.66,-5.11,44,-7.37,41.34,-9.64,39.57,-12.61,37.8,-15.57,37.8,-18.8,37.8,-19.92,38.04,-21.06,38.29,-22.19,38.72,-23.22,39.15,-24.26,39.74,-25.13,40.32,-26,41,-26.6,41.6,-26.4,41.37,-25.12,41.81,-23.68,42.25,-22.24,43.47,-21.02,44.69,-19.81,46.74,-19,48.8,-18.2,51.8,-18.2,57.5,-18.2,65.98,-20.61,74.46,-23.01,84.4,-25.9,94.34,-28.79,105.07,-31.19,115.8,-33.6,126,-33.6,137.25,-33.6,145.9,-30.48,154.56,-27.35,160.45,-21.82,166.33,-16.29,169.36,-8.71,172.4,-1.12,172.4,7.8,172.4,14.55,170.57,20.61,168.75,26.66,165.17,31.95,161.59,37.24,156.28,41.72,150.97,46.2,144,49.8,137.4,53.18,129.58,55.7,121.76,58.23,112.95,59.95,104.13,61.67,94.44,62.63,84.75,63.58,74.4,63.8,73.6,59.6,73.597,59.6] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [206,-77.4,206.38,-75,207.57,-73.04,208.76,-71.08,210.58,-69.7,212.4,-68.31,214.75,-67.55,217.1,-66.8,219.8,-66.8,221.08,-66.8,223,-66.94,224.93,-67.08,227.1,-67.35,229.28,-67.61,231.5,-67.98,233.73,-68.35,235.6,-68.8,241.53,-70,252.69,-72.04,263.86,-74.08,276.93,-76.27,289.99,-78.47,303.3,-80.47,316.6,-82.47,326.8,-83.6,329.05,-83.9,331.15,-84.4,333.24,-84.91,335.02,-85.55,336.81,-86.18,338.19,-86.92,339.57,-87.65,340.4,-88.4,346.63,-87.2,351,-85.89,355.37,-84.58,358.13,-83.02,360.88,-81.47,362.14,-79.59,363.4,-77.72,363.4,-75.4,363.4,-74.12,362.79,-73.31,362.19,-72.49,361.1,-72.02,360.01,-71.55,358.51,-71.38,357,-71.2,355.2,-71.2,353.55,-71.2,351.67,-71.32,349.79,-71.45,347.8,-71.6,345.81,-71.75,343.78,-71.87,341.75,-72,339.8,-72,331.78,-72,323.04,-68.48,314.31,-64.95,306.25,-59.42,298.19,-53.89,291.48,-47.11,284.78,-40.32,280.8,-33.8,278.33,-30.05,276.17,-25.06,274.02,-20.08,272.43,-14.32,270.83,-8.57,269.92,-2.27,269,4.03,269,10.4,269,21.05,272.07,28.09,275.15,35.13,280.53,39.55,285.91,43.98,293.22,46.29,300.53,48.6,309,49.8,311.1,50.1,313.37,50.16,315.64,50.21,317.73,50.25,319.81,50.29,321.52,50.42,323.23,50.55,324.2,51,326.75,52.05,328.54,53.28,330.33,54.51,331.45,55.88,332.58,57.24,333.09,58.73,333.6,60.23,333.6,61.8,333.6,63.08,333.01,63.98,332.42,64.89,331.27,65.47,330.13,66.06,328.45,66.33,326.78,66.6,324.6,66.6,323.93,66.6,323.21,66.57,322.5,66.53,321.75,66.48,321,66.42,320.21,66.35,319.43,66.28,318.6,66.2,300.3,64.1,288.42,59.88,276.54,55.66,269.6,48.93,262.66,42.19,259.93,32.76,257.2,23.33,257.2,10.8,257.2,-3.6,262.12,-16.37,267.04,-29.15,275.1,-39.95,283.16,-50.75,293.48,-59.4,303.8,-68.05,314.6,-74.2,314.4,-74.8,305.63,-73.9,292.72,-71.63,279.81,-69.37,267.1,-66.42,254.39,-63.48,244.03,-60.2,233.68,-56.92,230,-54,228.95,-53.32,227.95,-52.68,226.94,-52.03,225.85,-51.52,224.77,-51.02,223.53,-50.71,222.3,-50.4,220.8,-50.4,217.58,-50.4,214.14,-52.21,210.71,-54.02,207.88,-56.77,205.05,-59.53,203.22,-62.8,201.4,-66.07,201.4,-69,201.4,-70.42,201.62,-71.75,201.85,-73.07,202.28,-74.2,202.71,-75.32,203.34,-76.2,203.98,-77.07,204.8,-77.6,206,-77.4,206.002,-77.397] ) );
    shape.graphics.endFill();

    return shape;
  },
  "夢を見る" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,2,1,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,3,3,3,3,2,2,2,3,3,3,3,2,2,1,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [-205.41,-20.2,-190.81,-6,-191.33,-5.4,-192.02,-5.04,-192.71,-4.68,-193.63,-4.47,-194.55,-4.27,-195.73,-4.17,-196.91,-4.07,-198.41,-4,-199.98,-1.82,-202.17,0.77,-204.36,3.37,-206.78,5.98,-209.2,8.58,-211.65,10.99,-214.11,13.4,-216.21,15.2,-219.21,13.8,-218.46,12,-217.55,9.48,-216.64,6.96,-215.71,4.13,-214.77,1.3,-213.86,-1.64,-212.96,-4.57,-212.21,-7.2,-292.21,-7.2,-278.81,-3.8,-279.03,-3.05,-279.65,-2.49,-280.26,-1.92,-281.33,-1.55,-282.4,-1.17,-283.95,-0.99,-285.51,-0.8,-287.61,-0.8,-289.03,0.55,-290.57,1.94,-292.11,3.32,-293.76,4.73,-295.41,6.13,-297.17,7.56,-298.93,8.98,-300.81,10.4,-248.01,10.4,-240.21,3,-225.61,15.6,-226.21,16.2,-227.04,16.62,-227.88,17.05,-229.01,17.33,-230.13,17.61,-231.57,17.77,-233.01,17.93,-234.81,18,-246.13,31.28,-258.32,41.15,-270.52,51.02,-285.41,58.13,-300.29,65.23,-318.79,69.89,-337.28,74.55,-361.2,77.4,-362.4,73.4,-342.83,69.8,-326.51,64.9,-310.19,59.99,-296.48,53.08,-282.77,46.16,-271.36,36.87,-259.96,27.58,-250.21,15.2,-307.41,15.2,-309.06,16.33,-310.75,17.45,-312.44,18.57,-314.18,19.68,-315.92,20.78,-317.73,21.87,-319.53,22.95,-321.41,24,-312.41,25.43,-306.31,27.89,-300.22,30.36,-296.51,33.23,-292.79,36.09,-291.2,39.05,-289.61,42,-289.61,44.4,-289.61,45.6,-289.96,46.59,-290.32,47.59,-290.96,48.3,-291.59,49.01,-292.47,49.41,-293.36,49.8,-294.41,49.8,-294.86,49.8,-295.31,49.73,-295.76,49.65,-296.23,49.5,-296.7,49.35,-297.19,49.13,-297.68,48.9,-298.21,48.6,-300.16,45.6,-303.28,42.46,-306.41,39.32,-310.16,36.4,-313.91,33.48,-318.01,30.94,-322.11,28.4,-326.01,26.6,-329.68,28.55,-333.57,30.38,-337.45,32.21,-341.48,33.88,-345.51,35.54,-349.66,37.03,-353.81,38.52,-358.01,39.8,-359.81,37,-350.96,33.33,-342.29,28.13,-333.62,22.93,-325.86,17,-318.09,11.08,-311.6,4.83,-305.11,-1.42,-300.61,-7.2,-352.21,-7.2,-352.21,-2.55,-353.43,1.66,-354.66,5.86,-356.91,9.05,-359.16,12.24,-362.33,14.12,-365.51,16,-369.41,16,-371.13,16,-372.47,15.57,-373.81,15.14,-374.73,14.35,-375.65,13.56,-376.13,12.46,-376.61,11.35,-376.61,10,-376.61,8.88,-376.18,7.77,-375.76,6.66,-375.01,5.65,-374.26,4.64,-373.23,3.76,-372.21,2.88,-371.01,2.2,-368.38,0.93,-365.94,-1.36,-363.49,-3.64,-361.63,-6.62,-359.78,-9.61,-358.72,-13.13,-357.66,-16.65,-357.81,-20.4,-354.21,-20.4,-353.91,-19.27,-353.65,-18.19,-353.39,-17.1,-353.18,-16.05,-352.98,-15,-352.83,-13.99,-352.68,-12.97,-352.61,-12,-213.21,-12,-205.41,-20.2,-205.406,-20.198,-323.4,-83,-375.2,-83,-376.4,-87.8,-323.4,-87.8,-323.4,-108.4,-302.8,-107,-302.88,-105.87,-303.27,-105.09,-303.65,-104.32,-304.55,-103.77,-305.45,-103.23,-306.97,-102.86,-308.48,-102.5,-310.8,-102.2,-310.8,-87.8,-258.4,-87.8,-258.4,-108.4,-237.8,-107,-237.88,-105.87,-238.26,-105.09,-238.65,-104.32,-239.53,-103.77,-240.41,-103.23,-241.88,-102.86,-243.35,-102.5,-245.6,-102.2,-245.6,-87.8,-218,-87.8,-209.2,-99.8,-191.6,-87.2,-192.2,-86.15,-192.96,-85.36,-193.72,-84.57,-194.8,-84.05,-195.89,-83.52,-197.4,-83.26,-198.9,-83,-201,-83,-245.6,-83,-245.6,-70.4,-245.6,-70.25,-246.06,-69.57,-246.51,-68.9,-247.88,-68.15,-249.25,-67.4,-251.76,-66.8,-254.28,-66.2,-258.4,-66.2,-258.4,-83,-310.8,-83,-310.8,-69.4,-310.8,-69.17,-311.25,-68.55,-311.7,-67.93,-313.05,-67.27,-314.4,-66.62,-316.88,-66.11,-319.35,-65.6,-323.4,-65.6,-323.4,-83,-323.404,-82.998,-218.21,-25.2,-218.28,-24.75,-219.36,-24.04,-220.43,-23.32,-222.01,-22.65,-223.58,-21.97,-225.41,-21.49,-227.23,-21,-228.81,-21,-230.81,-21,-230.81,-27.6,-337.6,-27.6,-337.6,-23.6,-337.6,-23.52,-338.11,-22.86,-338.61,-22.19,-339.98,-21.42,-341.35,-20.65,-343.76,-20.03,-346.18,-19.4,-350,-19.4,-350,-71.4,-336.4,-65.4,-232.8,-65.4,-226.8,-73,-209.6,-61,-210.13,-60.47,-211,-59.93,-211.88,-59.38,-213,-58.87,-214.13,-58.37,-215.45,-57.93,-216.78,-57.5,-218.2,-57.2,-218.2,-25.2,-218.206,-25.198,-337.6,-60.6,-337.6,-32.4,-310.6,-32.4,-310.6,-60.6,-337.6,-60.6,-337.604,-60.598,-270.81,-60.6,-298.81,-60.6,-298.81,-32.4,-270.81,-32.4,-270.81,-60.6,-270.805,-60.598,-258.81,-32.4,-230.81,-32.4,-230.81,-60.6,-258.81,-60.6,-258.81,-32.4,-258.805,-32.398] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-38.21,-46.4,-37.61,-47.45,-36.38,-48.27,-35.16,-49.09,-33.68,-49.65,-32.2,-50.21,-30.64,-50.5,-29.08,-50.8,-27.81,-50.8,-23.61,-50.8,-19.71,-49.06,-15.81,-47.32,-12.81,-44.82,-9.81,-42.33,-8.01,-39.58,-6.21,-36.82,-6.21,-34.8,-6.21,-32.92,-6.97,-31.56,-7.74,-30.2,-9.33,-29.15,-10.92,-28.1,-13.38,-27.26,-15.83,-26.42,-19.21,-25.6,-22.81,-24.77,-28.69,-22.72,-34.58,-20.67,-41.56,-17.9,-48.53,-15.12,-55.99,-11.87,-63.46,-8.62,-70.21,-5.4,-70.13,-4.57,-70.09,-3.72,-70.05,-2.86,-70.03,-2,-70.01,-1.14,-70.01,-0.28,-70.01,0.58,-70.01,1.4,-70.01,10.4,-70.61,16.68,-71.21,22.96,-72.41,26.9,-73.61,30.84,-75.41,32.62,-77.21,34.4,-79.61,34.4,-80.95,34.4,-82.06,33.81,-83.17,33.23,-83.95,32.1,-84.74,30.98,-85.17,29.34,-85.61,27.7,-85.61,25.6,-85.61,25.15,-85.6,24.7,-85.6,24.25,-85.58,23.8,-85.56,23.35,-85.52,22.9,-85.48,22.45,-85.41,22,-84.88,18.63,-84.44,15.69,-84,12.76,-83.7,10.1,-83.4,7.44,-83.27,4.96,-83.13,2.48,-83.2,0.01,-89.95,3.53,-96.24,7.58,-102.52,11.63,-107.35,16.35,-112.19,21.08,-115.1,26.55,-118,32.02,-118,38.4,-118,43.2,-115.64,46.55,-113.29,49.9,-108.73,52,-104.17,54.1,-97.5,55.05,-90.83,56,-82.2,56,-74.7,56,-68.03,55.76,-61.35,55.51,-56.08,54.95,-50.81,54.39,-47.25,53.47,-43.68,52.55,-42.41,51.2,-37.61,51.65,-33.85,52.36,-30.09,53.08,-27.51,54.05,-24.92,55.02,-23.56,56.26,-22.21,57.5,-22.21,59,-22.21,60.35,-22.59,61.38,-22.98,62.42,-23.96,63.22,-24.93,64.03,-26.59,64.65,-28.26,65.27,-30.81,65.8,-34.26,66.55,-39.67,67.02,-45.09,67.49,-51.03,67.75,-56.97,68.01,-62.73,68.11,-68.48,68.2,-72.6,68.2,-89.18,68.2,-99.88,66.13,-110.57,64.06,-116.78,60.35,-122.99,56.64,-125.39,51.49,-127.8,46.35,-127.8,40.2,-127.8,32.85,-123.85,25.94,-119.9,19.04,-113.58,12.85,-107.26,6.66,-99.37,1.33,-91.48,-4,-83.6,-8.2,-83.6,-8.72,-83.64,-9.25,-83.67,-9.78,-83.7,-10.32,-83.74,-10.87,-83.77,-11.43,-83.8,-12,-83.8,-12.6,-84.18,-18.3,-85.56,-22.11,-86.95,-25.91,-89.03,-28.2,-91.11,-30.49,-93.73,-31.44,-96.35,-32.4,-99.2,-32.4,-106.1,-32.4,-113.58,-28.32,-121.05,-24.25,-128.53,-17.5,-136.01,-10.75,-143.22,-2.02,-150.43,6.7,-156.8,16,-158.6,18.63,-160.03,20.55,-161.47,22.47,-162.7,23.73,-163.94,24.98,-165.07,25.59,-166.2,26.2,-167.4,26.2,-168.45,26.2,-169.55,25.59,-170.65,24.98,-171.55,23.88,-172.45,22.77,-173.03,21.22,-173.6,19.67,-173.6,17.8,-173.6,15.85,-172.88,14.24,-172.16,12.63,-170.83,11.07,-169.5,9.52,-167.61,7.87,-165.73,6.22,-163.4,4.2,-157.1,-1.43,-150.81,-9.22,-144.51,-17.01,-138.98,-25.6,-133.45,-34.19,-129.06,-42.88,-124.68,-51.57,-122.2,-59,-124.38,-58.85,-126.65,-58.74,-128.92,-58.62,-131.08,-58.55,-133.24,-58.47,-135.17,-58.44,-137.1,-58.4,-138.6,-58.4,-144.6,-58.4,-149.16,-59.67,-153.72,-60.94,-157.08,-63.3,-160.43,-65.66,-162.71,-69.03,-164.98,-72.4,-166.4,-76.6,-164,-78.4,-161.98,-75.4,-159.52,-73.21,-157.05,-71.02,-153.9,-69.6,-150.75,-68.17,-146.79,-67.49,-142.83,-66.8,-137.8,-66.8,-136.08,-66.8,-133.68,-66.88,-131.28,-66.96,-128.68,-67.12,-126.07,-67.29,-123.49,-67.56,-120.9,-67.82,-118.8,-68.2,-117.68,-71.42,-116.88,-74.22,-116.08,-77.01,-115.58,-79.45,-115.07,-81.89,-114.84,-84.01,-114.6,-86.12,-114.6,-88,-114.6,-89.87,-115.52,-91.2,-116.45,-92.53,-117.93,-93.37,-119.41,-94.22,-121.27,-94.61,-123.13,-95,-125,-95,-125.6,-95,-126.2,-94.96,-126.79,-94.92,-127.35,-94.85,-127.92,-94.77,-128.43,-94.66,-128.95,-94.55,-129.4,-94.4,-129.8,-94.6,-129.43,-96.17,-128.46,-97.65,-127.5,-99.13,-125.98,-100.27,-124.46,-101.42,-122.41,-102.11,-120.35,-102.8,-117.8,-102.8,-113.68,-102.8,-109.97,-101.88,-106.27,-100.96,-103.48,-99.47,-100.68,-97.99,-99.04,-96.13,-97.4,-94.27,-97.4,-92.4,-97.4,-90.82,-97.87,-89.81,-98.33,-88.79,-99.03,-87.87,-99.72,-86.96,-100.52,-85.9,-101.33,-84.85,-102,-83.2,-102.6,-81.55,-103.21,-79.87,-103.81,-78.19,-104.43,-76.52,-105.05,-74.86,-105.69,-73.21,-106.33,-71.57,-107,-70,-102.88,-70.52,-98.21,-71.36,-93.54,-72.19,-89,-73.2,-84.47,-74.21,-80.4,-75.34,-76.33,-76.47,-73.4,-77.6,-71.6,-78.2,-69.95,-78.93,-68.3,-79.67,-66.93,-80.62,-65.56,-81.58,-64.54,-82.8,-63.53,-84.02,-63,-85.6,-58.5,-85.52,-54.78,-85.2,-51.07,-84.88,-48.4,-84.07,-45.74,-83.27,-44.27,-81.86,-42.8,-80.45,-42.8,-78.2,-42.8,-76.92,-43.76,-75.96,-44.72,-74.99,-46.28,-74.22,-47.83,-73.46,-49.81,-72.83,-51.78,-72.2,-53.8,-71.6,-58.75,-70.02,-65.95,-68.3,-73.14,-66.57,-81.05,-65,-88.96,-63.42,-96.83,-62.15,-104.7,-60.87,-111,-60.2,-113.18,-54.57,-115.68,-49.26,-118.18,-43.94,-120.8,-39.12,-123.43,-34.31,-126.08,-30.08,-128.73,-25.85,-131.2,-22.4,-130.2,-22.2,-125.03,-27.15,-120.29,-30.43,-115.55,-33.7,-111.33,-35.65,-107.11,-37.6,-103.46,-38.4,-99.8,-39.2,-96.8,-39.2,-92.6,-39.2,-88.62,-38.03,-84.64,-36.85,-81.3,-34,-77.97,-31.15,-75.48,-26.38,-73,-21.6,-71.8,-14.4,-63.93,-18.38,-55.85,-22.13,-47.77,-25.88,-41.23,-29.13,-34.68,-32.37,-30.54,-34.96,-26.4,-37.55,-26.4,-39.2,-26.4,-40.48,-27.04,-41.48,-27.67,-42.48,-28.78,-43.17,-29.89,-43.87,-31.38,-44.23,-32.88,-44.6,-34.6,-44.6,-34.98,-44.6,-35.32,-44.6,-35.67,-44.59,-36,-44.58,-36.34,-44.56,-36.69,-44.52,-37.03,-44.48,-37.4,-44.4,-38.21,-46.4,-38.206,-46.398] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [192,33.2,191.8,59.8,194.05,60.55,195.39,61.08,196.73,61.61,197.45,62.1,198.16,62.59,198.38,63.12,198.6,63.65,198.6,64.4,198.6,66.35,197.49,67.84,196.38,69.34,193.77,70.35,191.17,71.36,186.87,71.88,182.57,72.4,176.2,72.4,138.4,72.4,132.17,72.4,128.3,71.78,124.43,71.16,122.27,69.38,120.12,67.59,119.36,64.39,118.6,61.18,118.6,56,118.6,8.6,92.8,8.6,92.35,8.98,91.74,9.28,91.13,9.58,90.32,9.8,89.52,10.03,88.49,10.18,87.47,10.33,86.2,10.4,84.85,21.73,80.86,32.07,76.88,42.41,68.72,51.15,60.57,59.89,47.47,66.71,34.37,73.53,14.8,77.8,13,74.4,28.97,69.97,39.95,63.3,50.93,56.63,57.92,48.18,64.92,39.72,68.43,29.71,71.95,19.7,73,8.6,58,8.6,58,16.6,58,16.6,57.6,17.35,57.2,18.1,55.85,19,54.5,19.9,51.92,20.65,49.35,21.4,45,21.4,45,-102.6,59.2,-96,151.6,-96,157.8,-104.2,175.2,-91.6,174.67,-91,173.82,-90.41,172.98,-89.82,171.87,-89.3,170.76,-88.77,169.43,-88.33,168.1,-87.9,166.6,-87.6,166.6,14.6,166.6,14.83,165.83,15.6,165.06,16.38,163.47,17.23,161.88,18.07,159.42,18.74,156.97,19.4,153.6,19.4,153.6,8.6,136.4,8.6,136.02,8.83,135.53,9.01,135.04,9.2,134.42,9.35,133.8,9.5,133.05,9.61,132.3,9.73,131.4,9.8,131.4,56.2,131.4,58.08,131.54,59.12,131.69,60.17,132.42,60.67,133.15,61.18,134.69,61.29,136.22,61.4,139,61.4,176.4,61.4,177.9,61.4,178.98,61.32,180.06,61.24,180.87,60.92,181.68,60.61,182.27,59.97,182.87,59.33,183.4,58.2,183.92,57.22,184.62,54.91,185.33,52.6,186.17,49.3,187.01,46,187.98,41.89,188.95,37.78,190,33.2,192,33.2,191.997,33.201,153.6,-91.2,58,-91.2,58,-63.4,153.6,-63.4,153.6,-91.2,153.597,-91.197,153.6,-30,153.6,-58.6,58,-58.6,58,-30,153.6,-30,153.597,-29.999,58,3.8,153.6,3.8,153.6,-25.2,58,-25.2,58,3.8,57.998,3.801] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [261,-12.2,266.85,-15.5,273.19,-18.26,279.52,-21.01,285.9,-23,292.27,-24.99,298.46,-26.09,304.65,-27.2,310.2,-27.2,324.97,-27.2,334.94,-23.42,344.92,-19.64,350.97,-13.32,357.03,-7.01,359.61,1.23,362.2,9.47,362.2,18.4,362.2,28.67,357.83,37.62,353.46,46.56,345.1,53.17,336.73,59.79,324.57,63.6,312.4,67.4,296.8,67.4,287.72,67.4,280.28,65.37,272.83,63.34,267.52,59.87,262.22,56.41,259.31,51.79,256.4,47.17,256.4,42,256.4,37.27,258.43,33.03,260.47,28.78,264.27,25.58,268.08,22.37,273.53,20.49,278.97,18.6,285.8,18.6,292.85,18.6,299.57,21.19,306.3,23.77,311.55,28.03,316.8,32.28,320,37.75,323.2,43.23,323.2,49,323.2,49.6,323.13,50.16,323.05,50.71,322.92,51.2,322.79,51.69,322.61,52.09,322.42,52.5,322.2,52.8,327.82,50.92,332.56,47.33,337.29,43.74,340.72,39.08,344.15,34.41,346.08,28.98,348,23.55,348,18,348,9.53,345.87,2.4,343.74,-4.72,339.05,-9.87,334.36,-15.03,326.9,-17.91,319.45,-20.8,308.8,-20.8,303.7,-20.8,294.7,-18.96,285.71,-17.12,275.4,-12.52,265.09,-7.93,254.74,-0.13,244.4,7.68,236.6,19.6,235.62,21.1,234.59,22.69,233.56,24.29,232.37,25.6,231.19,26.91,229.82,27.76,228.45,28.6,226.8,28.6,225.38,28.6,224.13,27.77,222.89,26.93,221.98,25.68,221.06,24.42,220.53,22.95,220,21.48,220,20.2,220,17.8,221.12,15.57,222.23,13.34,223.82,11.38,225.42,9.41,227.17,7.74,228.92,6.08,230.2,4.8,236.42,-1.35,246.66,-11.58,256.9,-21.81,268.47,-33.4,280.04,-44.98,291.6,-56.57,303.15,-68.15,312,-77,312.6,-77.52,313.02,-77.97,313.44,-78.42,313.7,-78.8,313.96,-79.17,314.08,-79.47,314.2,-79.77,314.2,-80,314.2,-80.3,314.05,-80.49,313.91,-80.68,313.65,-80.8,313.39,-80.91,313.02,-80.95,312.65,-81,312.2,-81,310.85,-81,304.79,-79.93,298.74,-78.85,291.22,-77.22,283.7,-75.59,276.34,-73.66,268.97,-71.72,265,-70,263.2,-69.17,262.1,-68.38,261,-67.59,260.1,-66.97,259.2,-66.35,258.25,-65.98,257.3,-65.6,255.8,-65.6,252.42,-65.6,249.25,-67.26,246.08,-68.92,243.62,-71.55,241.17,-74.17,239.68,-77.41,238.2,-80.65,238.2,-83.8,238.2,-84.85,238.42,-86.05,238.64,-87.25,239.22,-88.47,239.81,-89.69,240.81,-90.86,241.82,-92.02,243.4,-93,244.4,-92.4,244.17,-90,244.85,-87.95,245.52,-85.9,246.92,-84.4,248.33,-82.9,250.39,-82.05,252.45,-81.2,255,-81.2,259.65,-81.2,267.64,-82.05,275.62,-82.9,283.95,-84.12,292.27,-85.34,299.44,-86.68,306.6,-88.02,309.6,-89,310.87,-89.45,312,-90.38,313.14,-91.31,314.15,-92.25,315.16,-93.18,316.07,-93.89,316.97,-94.6,317.8,-94.6,320.8,-94.6,324.02,-93.06,327.24,-91.52,329.9,-89.35,332.56,-87.17,334.28,-84.81,336,-82.45,336,-80.8,336,-78.92,334.95,-77.94,333.9,-76.97,332.1,-76.12,330.3,-75.28,327.9,-74.19,325.5,-73.1,322.8,-71,314.4,-64.47,305.62,-56.79,296.84,-49.1,288.55,-41.32,280.26,-33.54,272.91,-26.19,265.55,-18.85,260,-13,261,-12.2,260.999,-12.199,297.4,57,299.2,57,301.09,56.92,302.99,56.84,304.9,56.67,306.81,56.51,308.7,56.24,310.6,55.98,312.4,55.6,312.1,55.23,311.81,54.84,311.52,54.45,311.27,54,311.03,53.55,310.85,53.01,310.67,52.48,310.6,51.8,310.15,46.63,307.75,41.88,305.35,37.14,301.6,33.53,297.85,29.91,293.05,27.75,288.25,25.6,283,25.6,279.25,25.6,275.97,26.65,272.69,27.69,270.25,29.63,267.81,31.56,266.4,34.29,265,37.03,265,40.4,265,45.43,267.98,48.65,270.96,51.87,275.65,53.73,280.34,55.58,286.09,56.29,291.85,57,297.4,57,297.398,57] ) );
    shape.graphics.endFill();

    return shape;
  },
  "そんな人" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-334.2,-21.6,-323.78,-24.6,-313.14,-27.15,-302.51,-29.71,-292.18,-31.82,-281.85,-33.94,-272.07,-35.63,-262.3,-37.32,-253.6,-38.6,-249.85,-39.05,-247.32,-39.54,-244.79,-40.03,-242.95,-40.72,-241.11,-41.42,-239.71,-42.4,-238.3,-43.37,-236.8,-44.8,-230.28,-43.6,-225.55,-42.17,-220.83,-40.75,-217.75,-39.1,-214.68,-37.45,-213.18,-35.57,-211.68,-33.7,-211.6,-31.6,-211.6,-30.62,-212.04,-29.78,-212.48,-28.94,-213.33,-28.32,-214.17,-27.71,-215.4,-27.35,-216.63,-27,-218.2,-27,-219.48,-27,-222.82,-27.28,-226.16,-27.56,-229.93,-27.9,-233.7,-28.24,-237.07,-28.52,-240.45,-28.8,-241.8,-28.8,-256.88,-28.8,-269.1,-23.66,-281.33,-18.51,-289.98,-10.3,-298.62,-2.09,-303.31,8.16,-308,18.4,-308,28.6,-308,38.12,-302.74,43.28,-297.47,48.44,-290.03,50.82,-282.58,53.21,-274.5,53.6,-266.43,54,-260.8,54,-258.25,54,-255.96,54.88,-253.67,55.77,-251.93,57.17,-250.18,58.58,-249.13,60.33,-248.08,62.07,-248,63.8,-248,65.3,-248.87,66.42,-249.74,67.55,-251.05,68.3,-252.36,69.05,-253.91,69.42,-255.45,69.8,-256.8,69.8,-260.7,69.8,-264.42,69.52,-268.13,69.25,-271.68,68.8,-275.22,68.35,-278.6,67.77,-281.98,67.2,-285.2,66.6,-293.75,65.17,-300.32,62.14,-306.89,59.11,-311.35,54.63,-315.81,50.14,-318.11,44.3,-320.4,38.45,-320.4,31.4,-320.4,21.95,-316.55,12.96,-312.71,3.98,-306.58,-3.75,-300.44,-11.47,-292.81,-17.54,-285.18,-23.6,-277.6,-27.2,-278,-27.6,-284.6,-26.47,-293.35,-24.48,-302.11,-22.49,-311.28,-20.07,-320.44,-17.65,-329.16,-15.03,-337.88,-12.4,-344.4,-10,-348.3,-8.5,-351.38,-6.69,-354.47,-4.87,-357.22,-3.3,-359.98,-1.72,-362.65,-0.66,-365.32,0.4,-368.4,0.4,-369.38,0.4,-370.87,-0.04,-372.37,-0.49,-373.77,-1.37,-375.18,-2.25,-376.19,-3.56,-377.2,-4.87,-377.2,-6.6,-377.2,-7.95,-376.75,-9.33,-376.3,-10.71,-375.55,-11.95,-374.8,-13.19,-373.82,-14.19,-372.85,-15.2,-371.8,-15.8,-368.65,-16.02,-365.2,-16.79,-361.75,-17.55,-358,-18.9,-354.25,-20.25,-350.2,-22.21,-346.15,-24.17,-341.8,-26.8,-328.98,-34.45,-316.18,-44.24,-303.39,-54.04,-293.18,-63.02,-282.96,-72,-276.58,-78.69,-270.2,-85.37,-270.2,-86.8,-270.2,-86.95,-270.31,-87.09,-270.41,-87.23,-270.6,-87.35,-270.79,-87.46,-271.04,-87.53,-271.3,-87.6,-271.6,-87.6,-272.43,-87.6,-279.68,-85.51,-286.94,-83.42,-295.75,-80.77,-304.56,-78.13,-312.49,-75.7,-320.43,-73.27,-322.6,-72.6,-324.1,-72.07,-325.4,-71.13,-326.7,-70.19,-328.05,-69.27,-329.4,-68.35,-330.93,-67.68,-332.45,-67,-334.4,-67,-337.55,-67,-340.66,-68.83,-343.78,-70.66,-346.25,-73.55,-348.73,-76.43,-350.26,-79.99,-351.8,-83.55,-351.8,-87,-351.8,-88.2,-351.57,-89.38,-351.33,-90.57,-350.83,-91.67,-350.32,-92.78,-349.52,-93.78,-348.73,-94.77,-347.6,-95.6,-346.4,-95.2,-345.73,-91.97,-344.65,-89.69,-343.57,-87.42,-341.98,-85.97,-340.38,-84.53,-338.22,-83.86,-336.05,-83.2,-333.2,-83.2,-328.55,-83.2,-320.88,-84.27,-313.22,-85.33,-304.88,-86.95,-296.53,-88.56,-288.68,-90.45,-280.83,-92.35,-275.8,-94,-274.23,-94.6,-273.01,-95.55,-271.8,-96.5,-270.75,-97.4,-269.7,-98.3,-268.71,-98.95,-267.73,-99.6,-266.6,-99.6,-264.58,-99.6,-261.45,-98.2,-258.32,-96.8,-255.38,-94.7,-252.43,-92.6,-250.32,-90.15,-248.2,-87.7,-248.2,-85.6,-248.2,-83.35,-249.61,-82.1,-251.01,-80.85,-253.6,-79.52,-256.19,-78.19,-259.84,-76.23,-263.5,-74.27,-268,-70.6,-274.45,-65.42,-282.74,-59.09,-291.02,-52.77,-300.08,-46.22,-309.13,-39.68,-318.43,-33.39,-327.73,-27.1,-336.2,-22,-334.2,-21.6,-334.201,-21.599] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-155.8,8,-151.53,2.9,-146.32,-1.99,-141.11,-6.87,-135.28,-10.7,-129.44,-14.52,-123.15,-16.86,-116.85,-19.2,-110.4,-19.2,-105.45,-19.2,-100.77,-17.7,-96.09,-16.19,-92.45,-12.72,-88.81,-9.26,-86.61,-3.59,-84.4,2.08,-84.4,10.4,-84.4,13.63,-84.53,16.88,-84.65,20.13,-84.8,23.23,-84.95,26.32,-85.08,29.16,-85.2,32,-85.2,34.4,-85.2,39.28,-83.53,42.79,-81.85,46.31,-79,48.58,-76.15,50.84,-72.38,51.92,-68.6,53,-64.4,53,-55.48,53,-48.07,49.76,-40.66,46.53,-34.55,40.3,-28.44,34.08,-23.51,24.99,-18.58,15.9,-14.6,4.2,-10.8,5.4,-14.03,20.25,-19.02,31.58,-24.01,42.9,-30.8,50.55,-37.59,58.2,-46.18,62.1,-54.78,66,-65.2,66,-73.08,66,-79.22,64.06,-85.36,62.13,-89.58,58.3,-93.8,54.48,-96,48.79,-98.2,43.1,-98.2,35.6,-98.2,32.98,-98.08,29.81,-97.95,26.65,-97.8,23.5,-97.65,20.35,-97.53,17.49,-97.4,14.63,-97.4,12.6,-97.4,5.18,-98.11,0.28,-98.82,-4.62,-100.68,-7.52,-102.53,-10.43,-105.76,-11.61,-108.98,-12.8,-114,-12.8,-119.1,-12.8,-124.97,-9.9,-130.85,-7.01,-136.68,-2.07,-142.51,2.86,-147.89,9.39,-153.28,15.93,-157.4,23.2,-159.88,27.48,-161.79,32.27,-163.7,37.06,-165.2,41.75,-166.7,46.44,-167.86,50.71,-169.03,54.98,-170,58.2,-170.68,60.52,-171.55,62.07,-172.42,63.61,-173.53,64.52,-174.63,65.44,-175.99,65.82,-177.35,66.2,-179,66.2,-180.13,66.2,-181.49,65.57,-182.84,64.94,-184.03,63.72,-185.21,62.51,-186,60.72,-186.8,58.92,-186.8,56.6,-186.8,54.57,-186.37,52.74,-185.94,50.91,-185.3,49.3,-184.66,47.69,-183.93,46.31,-183.2,44.92,-182.6,43.8,-181.18,41.48,-179.09,36.83,-177.01,32.18,-174.33,25.83,-171.64,19.47,-168.4,11.71,-165.15,3.95,-161.4,-4.6,-156.9,-14.8,-151.52,-26.34,-146.13,-37.87,-141.28,-48.3,-136.42,-58.72,-132.8,-66.81,-129.18,-74.9,-128.2,-78.2,-127.9,-79.02,-127.71,-79.77,-127.51,-80.52,-127.4,-81.2,-127.29,-81.87,-127.25,-82.47,-127.2,-83.07,-127.2,-83.6,-127.2,-86.3,-128.76,-87.73,-130.31,-89.15,-132.45,-89.77,-134.59,-90.39,-136.82,-90.43,-139.05,-90.47,-140.4,-90.4,-140.8,-91,-140.13,-92.42,-138.93,-93.7,-137.74,-94.97,-136.2,-95.95,-134.66,-96.92,-132.87,-97.52,-131.08,-98.12,-129.2,-98.2,-125.3,-98.12,-121.31,-97.13,-117.33,-96.14,-114.1,-94.3,-110.88,-92.46,-108.84,-89.82,-106.8,-87.17,-106.8,-83.8,-106.8,-82.3,-107.72,-81.03,-108.63,-79.77,-110.08,-78.32,-111.52,-76.88,-113.3,-75.05,-115.08,-73.22,-116.8,-70.6,-121.98,-62.42,-127.57,-52.22,-133.17,-42.02,-138.48,-31.42,-143.78,-20.83,-148.44,-10.66,-153.1,-0.5,-156.4,7.6,-155.8,8,-155.8,8.001] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [42.8,-94.4,43.55,-96.05,44.91,-97.41,46.27,-98.77,48,-99.75,49.72,-100.72,51.69,-101.26,53.65,-101.8,55.6,-101.8,59.2,-101.8,62.77,-100.94,66.35,-100.08,69.2,-98.7,72.05,-97.31,73.82,-95.55,75.6,-93.8,75.6,-92,75.6,-90.2,74.97,-89.11,74.34,-88.02,73.42,-86.75,72.51,-85.47,71.47,-83.56,70.42,-81.65,69.6,-78.2,69.3,-76.7,68.77,-74.94,68.25,-73.19,67.65,-71.37,67.05,-69.55,66.45,-67.76,65.85,-65.97,65.4,-64.4,70.27,-65.3,75.98,-66.74,81.69,-68.18,86.75,-70.22,91.81,-72.27,95.49,-74.94,99.17,-77.62,100,-81,106.9,-81.22,111.14,-80.86,115.37,-80.5,117.7,-79.75,120.02,-79,120.81,-77.96,121.6,-76.92,121.6,-75.8,121.6,-74.22,120.81,-72.97,120.02,-71.72,118.3,-70.57,116.58,-69.43,113.84,-68.29,111.1,-67.15,107.2,-65.8,103.37,-64.45,97.84,-62.83,92.31,-61.22,86.18,-59.65,80.04,-58.07,73.87,-56.68,67.7,-55.3,62.6,-54.4,59.45,-44.42,54.67,-32.54,49.89,-20.65,44.45,-8.97,39.01,2.71,33.41,13.13,27.8,23.55,23,30.6,22.33,31.5,21.52,32.33,20.72,33.16,19.88,33.8,19.03,34.44,18.19,34.82,17.35,35.2,16.6,35.2,15.93,35.2,14.84,34.81,13.76,34.43,12.73,33.45,11.69,32.48,10.95,30.81,10.2,29.15,10.2,26.6,10.2,25.48,10.37,24.15,10.54,22.81,10.95,21.5,11.36,20.19,12.06,19.01,12.75,17.83,13.8,17,18.6,13.03,24.12,5.23,29.64,-2.57,34.85,-12.25,40.06,-21.92,44.46,-32.5,48.85,-43.07,51.4,-52.6,49,-52.3,46.59,-52.04,44.19,-51.78,42.05,-51.57,39.91,-51.37,38.18,-51.22,36.45,-51.07,35.4,-51,31.88,-51,28.79,-51.34,25.7,-51.69,23.15,-52.4,20.6,-53.11,18.64,-54.2,16.67,-55.3,15.4,-56.8,14.65,-57.47,13.86,-58.52,13.07,-59.56,12.4,-60.8,11.72,-62.04,11.24,-63.38,10.75,-64.72,10.6,-66,13.2,-68.4,14.7,-65.92,16.49,-64.27,18.29,-62.62,20.5,-61.62,22.71,-60.63,25.41,-60.21,28.1,-59.8,31.4,-59.8,33.42,-59.8,36.14,-59.94,38.85,-60.09,41.85,-60.35,44.85,-60.61,47.94,-60.98,51.02,-61.35,53.8,-61.8,54.7,-65.62,55.41,-68.91,56.11,-72.2,56.6,-75.07,57.09,-77.94,57.34,-80.44,57.6,-82.95,57.6,-85.2,57.6,-87,57.35,-88.53,57.09,-90.07,56.17,-91.2,55.26,-92.32,53.46,-92.96,51.67,-93.6,48.6,-93.6,48.07,-93.6,47.51,-93.56,46.94,-93.52,46.32,-93.45,45.71,-93.37,45.03,-93.26,44.35,-93.15,43.6,-93,42.8,-94.4,42.8,-94.397,100.4,-40,106.62,-43.37,112.2,-45.61,117.78,-47.84,122.82,-49.17,127.87,-50.5,132.43,-51.05,137,-51.6,141.2,-51.6,148.4,-51.6,154.45,-50.46,160.51,-49.32,164.9,-47.3,169.28,-45.27,171.74,-42.49,174.2,-39.7,174.2,-36.4,174.2,-35.57,173.81,-35,173.42,-34.43,172.75,-34.07,172.07,-33.72,171.16,-33.56,170.25,-33.4,169.2,-33.4,168.37,-33.4,167.53,-33.47,166.68,-33.54,165.87,-33.67,165.07,-33.8,164.33,-33.99,163.6,-34.17,163,-34.4,162.02,-34.85,160.64,-35.19,159.27,-35.52,157.67,-35.75,156.08,-35.97,154.36,-36.09,152.65,-36.2,151,-36.2,150.25,-36.2,149.54,-36.19,148.82,-36.19,148.15,-36.15,147.47,-36.11,146.84,-36.03,146.2,-35.95,145.6,-35.8,137.8,-34,133.29,-31.25,128.79,-28.5,126.5,-24.9,124.21,-21.3,123.6,-16.9,123,-12.5,123,-7.4,123,-3.8,123.07,-1.17,123.41,1.53,123.74,4.23,124.17,6.85,124.6,9.48,125.05,11.95,125.5,14.43,125.8,16.6,125.95,17.2,126.1,17.99,126.24,18.78,126.37,19.6,126.5,20.43,126.61,21.21,126.72,22,126.8,22.6,131.52,24.25,136.32,26.19,141.12,28.13,145.67,30.33,150.23,32.52,154.39,34.95,158.55,37.38,162,40,164.55,41.95,166.21,43.88,167.87,45.81,168.85,47.65,169.82,49.49,170.21,51.19,170.6,52.9,170.6,54.4,170.52,55.6,169.8,56.56,169.09,57.53,168,58.2,166.91,58.88,165.59,59.24,164.27,59.6,163,59.6,161.72,59.6,159.33,57.1,156.94,54.59,152.85,50.83,148.76,47.06,142.69,42.64,136.62,38.23,128,34.4,128.07,35.23,128.14,36.26,128.22,37.3,128.27,38.48,128.33,39.66,128.36,40.96,128.4,42.25,128.4,43.6,128.4,44.43,128.39,45.21,128.39,46,128.37,46.75,128.35,47.5,128.31,48.21,128.27,48.93,128.2,49.6,127.82,53.5,125.65,57.05,123.47,60.6,119.2,63.3,114.92,66,108.4,67.6,101.87,69.2,92.8,69.2,84.32,69.2,77.33,67.24,70.33,65.28,65.32,61.78,60.32,58.27,57.56,53.42,54.8,48.58,54.8,42.8,54.8,37.1,57.88,32.45,60.96,27.8,66.25,24.5,71.54,21.2,78.59,19.4,85.65,17.6,93.6,17.6,95.92,17.6,98.8,17.81,101.68,18.02,104.62,18.38,107.57,18.73,110.33,19.2,113.1,19.68,115.2,20.2,115.12,18.85,114.77,15.34,114.42,11.83,114.02,7.85,113.63,3.88,113.31,0.29,113,-3.3,113,-4.8,113,-10.95,114.31,-16.33,115.62,-21.72,119.12,-26.27,122.63,-30.83,128.78,-34.53,134.92,-38.22,144.6,-41,144.6,-42,143.55,-42.22,142.39,-42.41,141.23,-42.59,139.97,-42.72,138.72,-42.85,137.37,-42.93,136.02,-43,134.6,-43,131.45,-43,127.85,-42.64,124.25,-42.27,120.2,-41.45,116.15,-40.62,111.65,-39.29,107.15,-37.95,102.2,-36,100.4,-40,100.399,-39.998,116,29.4,113.52,28.35,110.44,27.5,107.36,26.65,104.07,26.05,100.79,25.45,97.52,25.13,94.25,24.8,91.4,24.8,85.77,24.8,80.73,26.05,75.68,27.29,71.87,29.53,68.07,31.76,65.83,34.84,63.6,37.93,63.6,41.6,63.6,45.73,65.42,48.9,67.25,52.07,70.85,54.23,74.45,56.38,79.8,57.49,85.15,58.6,92.2,58.6,98.87,58.6,103.55,57.56,108.23,56.52,111.17,54.63,114.12,52.73,115.46,50.08,116.8,47.43,116.8,44.2,116.8,42.33,116.73,40.2,116.66,38.08,116.55,36.05,116.44,34.03,116.29,32.28,116.15,30.53,116,29.4,115.999,29.401] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [197.4,74,227.63,55.17,243.88,33.75,260.13,12.33,267.58,-10.37,275.02,-33.08,276.24,-56.41,277.45,-79.75,277.6,-102.4,300.2,-100.4,300.05,-99.42,299.65,-98.63,299.24,-97.85,298.33,-97.25,297.41,-96.65,295.84,-96.23,294.28,-95.82,291.8,-95.6,293.68,-72.8,298.71,-50.48,303.75,-28.16,314.1,-7.5,324.45,13.16,341.19,31.58,357.93,50,383.2,65,382.6,67.2,379.97,67.42,377.77,68.07,375.56,68.71,373.77,69.95,371.99,71.19,370.65,73.11,369.3,75.03,368.4,77.8,348.75,64,335.13,47.35,321.5,30.7,312.5,12.25,303.5,-6.2,298.43,-25.92,293.35,-45.65,290.8,-65.6,290.6,-65.6,289.4,-46.62,285.59,-27.39,281.77,-8.16,272.08,10.25,262.38,28.66,245.18,45.72,227.98,62.78,200,77.4,197.4,74,197.402,74] ) );
    shape.graphics.endFill();

    return shape;
  },
  "いるはずと" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-450.61,-76.2,-450,-77.1,-449.2,-77.74,-448.4,-78.39,-447.48,-78.8,-446.56,-79.21,-445.57,-79.4,-444.58,-79.6,-443.61,-79.6,-439.41,-79.6,-435.35,-77.91,-431.29,-76.23,-428.11,-73.47,-424.92,-70.72,-422.96,-67.19,-421,-63.67,-421,-60,-421,-58.95,-421.3,-57.93,-421.6,-56.92,-422.05,-55.92,-422.5,-54.93,-423.03,-53.95,-423.56,-52.97,-424,-52,-426.25,-45.62,-427.47,-38.54,-428.69,-31.45,-429.25,-25.02,-429.82,-18.59,-429.91,-13.49,-430,-8.4,-430,-6,-430,3.9,-427.68,11.8,-425.35,19.69,-422.18,25.2,-419.01,30.71,-415.75,33.66,-412.48,36.6,-410.61,36.6,-409.56,36.6,-408.65,36.15,-407.75,35.69,-406.71,34.63,-405.66,33.56,-404.31,31.79,-402.96,30.03,-401,27.4,-399.13,24.85,-396.09,20.14,-393.04,15.43,-389.4,9.53,-385.77,3.62,-381.82,-3,-377.88,-9.62,-374.2,-16,-370,-14.4,-373.15,-7.95,-377.05,-0.22,-380.94,7.5,-384.63,15,-388.32,22.5,-391.35,29.03,-394.38,35.55,-395.81,39.6,-395.95,40.05,-396.07,40.47,-396.18,40.88,-396.25,41.28,-396.33,41.67,-396.37,42.05,-396.41,42.43,-396.41,42.8,-396.41,43.33,-396.33,43.81,-396.26,44.29,-396.13,44.7,-396,45.11,-395.81,45.44,-395.63,45.78,-395.41,46,-394.58,46.83,-393.88,47.84,-393.19,48.84,-392.68,49.88,-392.17,50.91,-391.89,51.88,-391.61,52.85,-391.61,53.6,-391.61,54.88,-392.24,55.72,-392.87,56.57,-393.98,57.08,-395.09,57.58,-396.58,57.79,-398.08,58,-399.81,58,-401.23,58,-403.56,57.31,-405.9,56.61,-408.58,55.3,-411.26,53.99,-414.01,52.09,-416.75,50.2,-419,47.8,-424.78,41.95,-428.78,35.1,-432.79,28.26,-435.28,20.93,-437.77,13.6,-438.89,6.04,-440,-1.52,-440,-8.8,-440,-14.35,-439.77,-20.82,-439.54,-27.29,-439.2,-33.72,-438.87,-40.15,-438.49,-46.06,-438.11,-51.97,-437.81,-56.4,-437.81,-58.4,-437.81,-61.62,-438.4,-64.6,-438.99,-67.57,-440.43,-69.9,-441.87,-72.22,-444.3,-73.7,-446.73,-75.17,-450.41,-75.4,-450.61,-76.2,-450.605,-76.198,-332.61,-65.6,-319.03,-62.6,-308.93,-55.76,-298.83,-48.92,-292.13,-40.15,-285.44,-31.37,-282.12,-21.61,-278.81,-11.85,-278.81,-3,-278.81,-0.07,-279.25,2.67,-279.68,5.41,-280.66,7.53,-281.63,9.64,-283.2,10.92,-284.76,12.2,-287.01,12.2,-288.28,12.2,-289.44,11.67,-290.6,11.14,-291.48,10.05,-292.36,8.96,-292.89,7.31,-293.41,5.65,-293.41,3.4,-293.78,-7.4,-296.55,-17.64,-299.33,-27.89,-304.48,-36.55,-309.64,-45.21,-317.17,-51.78,-324.71,-58.35,-334.61,-61.8,-332.61,-65.6,-332.607,-65.598] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [-209,-12.2,-203.16,-15.5,-196.82,-18.26,-190.48,-21.01,-184.11,-23,-177.73,-24.99,-171.54,-26.09,-165.36,-27.2,-159.81,-27.2,-145.03,-27.2,-135.06,-23.42,-125.09,-19.64,-119.03,-13.32,-112.98,-7.01,-110.39,1.23,-107.81,9.47,-107.81,18.4,-107.81,28.67,-112.18,37.62,-116.54,46.56,-124.91,53.17,-133.27,59.79,-145.44,63.6,-157.61,67.4,-173.21,67.4,-182.28,67.4,-189.73,65.37,-197.17,63.34,-202.48,59.87,-207.79,56.41,-210.7,51.79,-213.6,47.17,-213.6,42,-213.6,37.27,-211.57,33.03,-209.54,28.78,-205.73,25.58,-201.92,22.37,-196.48,20.49,-191.03,18.6,-184.2,18.6,-177.16,18.6,-170.43,21.19,-163.71,23.77,-158.46,28.03,-153.21,32.28,-150.01,37.75,-146.81,43.23,-146.81,49,-146.81,49.6,-146.88,50.16,-146.95,50.71,-147.08,51.2,-147.21,51.69,-147.4,52.09,-147.58,52.5,-147.81,52.8,-142.18,50.92,-137.45,47.33,-132.71,43.74,-129.28,39.08,-125.85,34.41,-123.93,28.98,-122.01,23.55,-122.01,18,-122.01,9.53,-124.14,2.4,-126.27,-4.72,-130.96,-9.87,-135.64,-15.03,-143.1,-17.91,-150.56,-20.8,-161.21,-20.8,-166.31,-20.8,-175.3,-18.96,-184.29,-17.12,-194.61,-12.52,-204.92,-7.93,-215.26,-0.13,-225.6,7.68,-233.4,19.6,-234.38,21.1,-235.41,22.69,-236.45,24.29,-237.63,25.6,-238.81,26.91,-240.18,27.76,-241.55,28.6,-243.2,28.6,-244.63,28.6,-245.87,27.77,-247.11,26.93,-248.03,25.68,-248.95,24.42,-249.48,22.95,-250,21.48,-250,20.2,-250,17.8,-248.89,15.57,-247.77,13.34,-246.18,11.38,-244.59,9.41,-242.83,7.74,-241.08,6.08,-239.81,4.8,-233.58,-1.35,-223.34,-11.58,-213.1,-21.81,-201.53,-33.4,-189.96,-44.98,-178.41,-56.57,-166.86,-68.15,-158.01,-77,-157.41,-77.52,-156.99,-77.97,-156.57,-78.42,-156.31,-78.8,-156.04,-79.17,-155.92,-79.47,-155.81,-79.77,-155.81,-80,-155.81,-80.3,-155.95,-80.49,-156.09,-80.68,-156.36,-80.8,-156.62,-80.91,-156.99,-80.95,-157.36,-81,-157.81,-81,-159.16,-81,-165.21,-79.93,-171.26,-78.85,-178.78,-77.22,-186.3,-75.59,-193.66,-73.66,-201.03,-71.72,-205,-70,-206.81,-69.17,-207.91,-68.38,-209,-67.59,-209.9,-66.97,-210.8,-66.35,-211.75,-65.98,-212.7,-65.6,-214.2,-65.6,-217.58,-65.6,-220.75,-67.26,-223.92,-68.92,-226.38,-71.55,-228.84,-74.17,-230.32,-77.41,-231.8,-80.65,-231.8,-83.8,-231.8,-84.85,-231.58,-86.05,-231.36,-87.25,-230.78,-88.47,-230.2,-89.69,-229.19,-90.86,-228.18,-92.02,-226.6,-93,-225.6,-92.4,-225.83,-90,-225.16,-87.95,-224.49,-85.9,-223.08,-84.4,-221.67,-82.9,-219.61,-82.05,-217.55,-81.2,-215,-81.2,-210.35,-81.2,-202.37,-82.05,-194.38,-82.9,-186.06,-84.12,-177.73,-85.34,-170.57,-86.68,-163.41,-88.02,-160.41,-89,-159.13,-89.45,-158,-90.38,-156.87,-91.31,-155.86,-92.25,-154.84,-93.18,-153.94,-93.89,-153.03,-94.6,-152.21,-94.6,-149.21,-94.6,-145.99,-93.06,-142.77,-91.52,-140.11,-89.35,-137.44,-87.17,-135.72,-84.81,-134.01,-82.45,-134.01,-80.8,-134.01,-78.92,-135.06,-77.94,-136.11,-76.97,-137.91,-76.12,-139.71,-75.28,-142.11,-74.19,-144.51,-73.1,-147.21,-71,-155.61,-64.47,-164.39,-56.79,-173.17,-49.1,-181.46,-41.32,-189.74,-33.54,-197.1,-26.19,-204.46,-18.85,-210.01,-13,-209,-12.2,-209.005,-12.199,-172.61,57,-170.81,57,-168.91,56.92,-167.02,56.84,-165.11,56.67,-163.19,56.51,-161.3,56.24,-159.41,55.98,-157.61,55.6,-157.91,55.23,-158.2,54.84,-158.49,54.45,-158.73,54,-158.97,53.55,-159.15,53.01,-159.33,52.48,-159.41,51.8,-159.86,46.63,-162.26,41.88,-164.66,37.14,-168.41,33.53,-172.16,29.91,-176.96,27.75,-181.76,25.6,-187.01,25.6,-190.76,25.6,-194.04,26.65,-197.32,27.69,-199.76,29.63,-202.19,31.56,-203.6,34.29,-205.01,37.03,-205.01,40.4,-205.01,45.43,-202.02,48.65,-199.04,51.87,-194.36,53.73,-189.67,55.58,-183.91,56.29,-178.16,57,-172.61,57,-172.606,57] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [-62,-88.2,-61.4,-89.02,-60.41,-89.66,-59.43,-90.29,-58.3,-90.72,-57.18,-91.15,-56.04,-91.38,-54.9,-91.6,-54,-91.6,-51.15,-91.6,-47.83,-89.98,-44.5,-88.35,-41.65,-85.67,-38.8,-82.99,-36.9,-79.53,-35,-76.07,-35,-72.4,-35,-70.75,-35.44,-69.52,-35.87,-68.29,-36.53,-67.22,-37.18,-66.15,-37.95,-65.11,-38.73,-64.07,-39.4,-62.8,-43.3,-55.45,-46.6,-46.93,-49.9,-38.42,-52.3,-29.05,-54.7,-19.67,-56.05,-9.59,-57.4,0.5,-57.4,11,-57.4,15.95,-56.89,20.13,-56.37,24.31,-55.53,27.35,-54.68,30.39,-53.6,32.1,-52.53,33.8,-51.4,33.8,-50.35,33.8,-47.38,28.96,-44.41,24.13,-40.85,17.45,-37.29,10.78,-33.79,3.76,-30.3,-3.25,-28.2,-7.6,-24,-6,-27.38,2.4,-30.74,10.75,-34.09,19.09,-36.78,26.1,-39.46,33.11,-41.13,38.16,-42.8,43.2,-42.8,45,-42.8,46.5,-42.52,47.83,-42.24,49.16,-41.9,50.55,-41.56,51.94,-41.28,53.5,-41,55.05,-41,57,-41,58.5,-41.33,59.88,-41.66,61.25,-42.3,62.3,-42.94,63.35,-43.87,63.98,-44.8,64.6,-46,64.6,-49.3,64.6,-52.99,61.21,-56.69,57.82,-59.8,51.28,-62.91,44.73,-64.96,35.16,-67,25.58,-67,13.2,-67,4.65,-65.99,-4.33,-64.99,-13.32,-63.45,-21.92,-61.91,-30.53,-60.08,-38.35,-58.25,-46.17,-56.6,-52.4,-55.78,-55.4,-55.02,-58.33,-54.26,-61.27,-53.68,-64.05,-53.09,-66.82,-52.75,-69.38,-52.4,-71.95,-52.4,-74.2,-52.4,-76.67,-52.8,-78.93,-53.2,-81.2,-54.25,-83,-55.3,-84.8,-57.13,-86.01,-58.95,-87.22,-61.8,-87.6,-62,-88.2,-62.001,-88.197,25.6,-89.8,26.05,-91.45,27.07,-92.81,28.1,-94.17,29.6,-95.15,31.1,-96.12,33.02,-96.66,34.95,-97.2,37.2,-97.2,40.72,-97.2,44.26,-96.2,47.79,-95.21,50.62,-93.6,53.45,-91.98,55.22,-89.94,57,-87.9,57,-85.8,57,-84.75,56.73,-83.83,56.46,-82.92,56.07,-82.07,55.68,-81.23,55.22,-80.43,54.77,-79.62,54.4,-78.8,53.95,-77.97,53.7,-76.39,53.45,-74.82,53.32,-72.77,53.19,-70.73,53.13,-68.36,53.07,-66,53,-63.6,52.92,-61.8,52.81,-59.97,52.71,-58.13,52.6,-56.3,52.48,-54.46,52.38,-52.63,52.27,-50.8,52.2,-49,59.02,-50.05,63.06,-51.18,67.09,-52.32,69.32,-53.57,71.55,-54.83,72.47,-56.23,73.4,-57.62,74,-59.2,77.9,-58.9,81.16,-58.41,84.43,-57.92,86.8,-57.07,89.16,-56.23,90.48,-54.95,91.8,-53.67,91.8,-51.8,91.8,-50,90.88,-48.76,89.97,-47.53,88.1,-46.57,86.22,-45.62,83.36,-44.79,80.5,-43.97,76.6,-43,74.65,-42.47,71.91,-41.89,69.18,-41.3,65.97,-40.72,62.76,-40.14,59.24,-39.59,55.72,-39.05,52.2,-38.6,52.2,-35.82,52.26,-33.18,52.32,-30.53,52.4,-28.07,52.47,-25.62,52.53,-23.38,52.6,-21.15,52.6,-19.2,52.6,-12.07,52.87,-6.11,53.15,-0.15,53.62,4.8,54.09,9.75,54.71,13.76,55.32,17.78,56,21,60.87,23.03,67.17,26.24,73.46,29.45,79.07,33.5,84.68,37.55,88.54,42.26,92.4,46.98,92.4,52,92.4,53.28,91.91,54.4,91.43,55.53,90.62,56.38,89.81,57.22,88.77,57.71,87.72,58.2,86.6,58.2,85.7,58.2,84.72,57.85,83.75,57.51,82.7,56.78,81.65,56.05,80.52,54.91,79.4,53.78,78.2,52.2,76.25,49.73,73.7,47.17,71.16,44.61,68.35,42.25,65.53,39.89,62.61,37.86,59.7,35.83,57,34.4,57.07,35.53,57.11,36.93,57.15,38.33,57.17,39.75,57.19,41.18,57.19,42.5,57.2,43.83,57.2,44.8,57.05,49.9,55.06,53.85,53.07,57.8,49.25,60.5,45.42,63.2,39.76,64.6,34.1,66,26.6,66,17.67,66,10.56,64.07,3.44,62.13,-1.53,58.63,-6.5,55.12,-9.15,50.22,-11.8,45.33,-11.8,39.4,-11.8,33.78,-9.01,29.32,-6.22,24.87,-1.3,21.78,3.61,18.68,10.3,17.04,17,15.4,24.8,15.4,27.12,15.4,29.59,15.55,32.07,15.7,34.52,15.98,36.98,16.26,39.34,16.67,41.7,17.08,43.8,17.6,43.35,13.63,42.92,7.18,42.48,0.74,42.15,-6.8,41.81,-14.34,41.6,-22.28,41.4,-30.22,41.4,-37.2,37.87,-36.67,34.42,-36.29,30.97,-35.92,27.72,-35.67,24.48,-35.43,21.51,-35.31,18.55,-35.2,16,-35.2,12.32,-35.2,8.64,-35.93,4.96,-36.67,1.55,-38.22,-1.86,-39.78,-4.87,-42.2,-7.88,-44.62,-10.2,-48,-8,-51.2,-5,-48.8,-2.12,-47.43,0.77,-46.07,3.52,-45.4,6.28,-44.72,8.9,-44.56,11.52,-44.4,14,-44.4,17.07,-44.4,20.53,-44.55,23.98,-44.7,27.52,-45,31.07,-45.3,34.56,-45.75,38.05,-46.2,41.2,-46.8,41.2,-64.8,41.2,-71.55,40.88,-76.23,40.57,-80.92,39.42,-83.85,38.28,-86.77,36.05,-88.08,33.82,-89.4,30,-89.4,29.62,-89.4,29.18,-89.36,28.74,-89.33,28.25,-89.27,27.76,-89.22,27.24,-89.14,26.72,-89.07,26.2,-89,25.6,-89.8,25.597,-89.797,44.6,27.8,42.05,26.68,39.41,25.79,36.77,24.89,34.15,24.28,31.52,23.66,28.96,23.33,26.4,23,24,23,18.07,23,12.96,24.07,7.84,25.14,4.07,27.2,0.3,29.26,-1.85,32.28,-4,35.3,-4,39.2,-4,43.25,-1.93,46.23,0.15,49.2,3.9,51.15,7.65,53.1,12.87,54.05,18.1,55,24.4,55,30.1,55,34,53.98,37.9,52.96,40.3,50.73,42.7,48.49,43.75,44.96,44.8,41.43,44.8,36.4,44.8,35.43,44.79,34.44,44.79,33.45,44.77,32.4,44.75,31.35,44.71,30.21,44.67,29.08,44.6,27.8,44.597,27.801] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [193.6,-95.8,194.35,-97.45,195.45,-98.87,196.56,-100.3,198.07,-101.35,199.59,-102.4,201.56,-103,203.52,-103.6,206,-103.6,209.75,-103.6,213.47,-102.63,217.19,-101.67,220.17,-100.1,223.16,-98.52,225.04,-96.51,226.92,-94.5,227,-92.4,227,-91.12,226.68,-90.11,226.36,-89.1,225.92,-88.22,225.49,-87.34,225.06,-86.52,224.62,-85.7,224.4,-84.8,224.1,-83.9,223.91,-82.38,223.71,-80.86,223.6,-78.65,223.49,-76.43,223.44,-73.49,223.4,-70.55,223.4,-66.8,228.27,-67.1,233.07,-67.39,237.87,-67.68,242.15,-67.92,246.42,-68.17,249.95,-68.34,253.47,-68.52,255.8,-68.6,258.95,-68.75,261.39,-69.01,263.82,-69.27,265.7,-69.77,267.57,-70.28,268.96,-71.1,270.35,-71.92,271.4,-73.2,277.17,-71.62,281.39,-70.27,285.62,-68.92,288.37,-67.47,291.13,-66.03,292.46,-64.34,293.8,-62.65,293.8,-60.4,293.8,-59.57,293.26,-58.97,292.72,-58.37,291.87,-57.97,291.03,-57.58,290,-57.39,288.97,-57.2,288,-57.2,286.12,-57.2,283.57,-57.58,281.02,-57.96,277.47,-58.45,273.93,-58.93,269.24,-59.39,264.55,-59.85,258.4,-60,256.82,-60.07,255.14,-60.11,253.47,-60.15,251.72,-60.17,249.98,-60.19,248.19,-60.19,246.4,-60.2,244.6,-60.2,241.97,-60.2,239.29,-60.16,236.61,-60.12,233.95,-60.05,231.29,-59.97,228.68,-59.86,226.07,-59.75,223.6,-59.6,223.6,-54.57,223.64,-49.27,223.67,-43.96,223.75,-39.05,223.82,-34.14,223.94,-29.95,224.05,-25.77,224.2,-23,225.55,-20.75,226.65,-17.98,227.76,-15.2,228.55,-11.62,229.34,-8.04,229.77,-3.51,230.2,1.03,230.2,6.8,230.2,18.58,226.86,28.92,223.52,39.26,216.37,47.85,209.23,56.44,198.05,63.11,186.87,69.78,171.2,74.2,168.8,70.2,180.27,65.78,188.95,59.86,197.62,53.94,203.55,47,209.47,40.06,212.67,32.34,215.88,24.63,216.4,16.6,214.75,19.15,212.4,21.16,210.05,23.16,207.05,24.55,204.05,25.94,200.43,26.67,196.8,27.4,192.6,27.4,185.92,27.4,180.31,25,174.69,22.61,170.63,18.43,166.56,14.24,164.28,8.59,162,2.93,162,-3.6,162,-10.8,164.57,-16.95,167.14,-23.1,171.62,-27.6,176.11,-32.1,182.17,-34.65,188.22,-37.2,195.2,-37.2,197.75,-37.2,200.23,-36.86,202.72,-36.52,205.02,-35.82,207.33,-35.13,209.4,-34.08,211.47,-33.02,213.2,-31.6,213.2,-35.5,213.04,-39.25,212.88,-43.01,212.67,-46.47,212.47,-49.94,212.27,-53.06,212.07,-56.17,212,-58.8,207.27,-58.5,200.49,-57.84,193.7,-57.17,186.65,-56.35,179.6,-55.52,173.19,-54.64,166.78,-53.75,162.8,-53,160.93,-52.7,159.07,-52.27,157.21,-51.84,155.45,-51.35,153.69,-50.86,152.06,-50.36,150.43,-49.85,149,-49.4,147.2,-48.8,146.03,-48.16,144.86,-47.52,143.83,-47,142.79,-46.47,141.66,-46.14,140.53,-45.8,138.8,-45.8,136.03,-45.87,132.8,-47.6,129.58,-49.32,126.83,-51.95,124.07,-54.57,122.24,-57.72,120.4,-60.87,120.4,-63.8,120.4,-65.07,120.65,-66.2,120.9,-67.32,121.35,-68.3,121.8,-69.27,122.43,-70.1,123.05,-70.92,123.8,-71.6,125,-71.6,125.15,-70.47,125.78,-68.49,126.41,-66.51,128.23,-64.57,130.04,-62.64,133.41,-61.22,136.77,-59.8,142.4,-59.8,146.07,-59.8,155.8,-60.59,165.52,-61.39,176.55,-62.4,187.57,-63.41,197.52,-64.36,207.47,-65.3,211.6,-65.6,211.3,-74.75,210.93,-80.52,210.57,-86.29,209.42,-89.55,208.28,-92.81,206,-94.01,203.72,-95.2,199.6,-95.2,198.92,-95.2,198.25,-95.16,197.57,-95.13,196.9,-95.07,196.22,-95.02,195.55,-94.95,194.87,-94.87,194.2,-94.8,193.6,-95.8,193.6,-95.797,215.8,-9.8,215.8,-12.95,214.52,-16.47,213.24,-19.99,210.65,-22.95,208.06,-25.91,204.16,-27.86,200.25,-29.8,195,-29.8,190.72,-29.8,186.85,-28.16,182.97,-26.52,180.02,-23.3,177.08,-20.07,175.34,-15.29,173.6,-10.5,173.6,-4.2,173.6,1.05,175.46,5.14,177.32,9.24,180.25,12.05,183.17,14.86,186.76,16.33,190.35,17.8,193.8,17.8,200.32,17.8,204.58,15.85,208.83,13.9,211.32,10.3,213.82,6.7,214.81,1.6,215.8,-3.5,215.8,-9.8,215.8,-9.799,244,-109.2,252.32,-106.57,257.83,-103.44,263.34,-100.3,266.62,-97.17,269.91,-94.04,271.25,-91.17,272.6,-88.3,272.6,-86.2,272.6,-84.92,272.13,-83.79,271.65,-82.67,270.9,-81.82,270.15,-80.98,269.23,-80.49,268.3,-80,267.4,-80,266.05,-80,265.08,-80.33,264.11,-80.67,263.38,-81.35,262.64,-82.02,262.08,-83.03,261.53,-84.05,261,-85.4,260.03,-87.8,258.33,-90.5,256.64,-93.21,254.23,-95.95,251.81,-98.68,248.65,-101.32,245.5,-103.95,241.6,-106.2,244,-109.2,244,-109.197,270.2,-113.2,279.12,-110.2,284.86,-106.95,290.61,-103.71,293.92,-100.6,297.24,-97.48,298.52,-94.69,299.8,-91.9,299.8,-89.8,299.8,-88.6,299.36,-87.51,298.91,-86.42,298.2,-85.6,297.49,-84.77,296.59,-84.28,295.7,-83.8,294.8,-83.8,293.45,-83.8,292.48,-84.1,291.51,-84.41,290.77,-85.05,290.04,-85.68,289.48,-86.67,288.92,-87.65,288.4,-89,287.35,-91.55,285.47,-94.33,283.58,-97.12,280.98,-99.87,278.37,-102.63,275.1,-105.23,271.83,-107.82,268,-110,270.2,-113.2,270.199,-113.197] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [408.8,-57.2,409.33,-58.25,410.33,-59.16,411.34,-60.07,412.65,-60.75,413.97,-61.42,415.5,-61.81,417.03,-62.2,418.6,-62.2,421.83,-62.2,425.32,-60.5,428.82,-58.8,431.73,-56.25,434.63,-53.7,436.52,-50.72,438.4,-47.75,438.4,-45.2,438.4,-43.25,437.46,-41.78,436.51,-40.31,434.73,-39.15,432.95,-37.99,430.39,-37.04,427.83,-36.1,424.6,-35.2,407.95,-30.4,390.81,-23.4,373.67,-16.4,359.75,-7.87,345.84,0.66,337.02,10.39,328.21,20.13,328.21,30.4,328.21,38.73,332.23,43.52,336.26,48.31,343.16,50.73,350.06,53.14,359.25,53.77,368.46,54.4,378.81,54.4,388.03,54.4,395.79,53.85,403.54,53.29,409.5,52.38,415.47,51.46,419.47,50.27,423.48,49.08,425.2,47.8,429.18,48.18,432.8,48.58,436.42,48.98,439.18,49.83,441.93,50.67,443.57,52.16,445.2,53.65,445.2,56.2,445.2,57.7,443.83,58.81,442.46,59.93,440.08,60.75,437.7,61.58,434.49,62.16,431.28,62.75,427.6,63.2,424.08,63.65,419.17,64.18,414.27,64.7,408.15,65.15,402.04,65.6,394.81,65.9,387.58,66.2,379.4,66.2,364.18,66.2,352.71,64.34,341.25,62.47,333.58,58.33,325.91,54.18,322.06,47.55,318.21,40.93,318.21,31.4,318.21,24.88,321.57,18.19,324.94,11.51,330.76,5.1,336.57,-1.31,344.36,-7.24,352.16,-13.17,361.01,-18.2,356.36,-20.97,353.84,-24.84,351.32,-28.71,350.16,-34.3,348.99,-39.89,348.8,-47.5,348.61,-55.12,348.61,-65.4,348.61,-66.15,348.67,-68.15,348.73,-70.15,348.81,-72.42,348.88,-74.69,348.94,-76.73,349.01,-78.77,349.01,-79.6,349.01,-81.17,348.84,-83.12,348.68,-85.07,347.71,-86.77,346.73,-88.48,344.62,-89.64,342.51,-90.8,338.61,-90.8,338.16,-90.8,337.67,-90.76,337.18,-90.73,336.66,-90.67,336.13,-90.62,335.57,-90.54,335.01,-90.47,334.41,-90.4,334.01,-91.6,334.68,-93.02,335.89,-94.36,337.11,-95.69,338.61,-96.72,340.11,-97.75,341.77,-98.38,343.43,-99,345.01,-99,348.83,-99,352.62,-97.97,356.41,-96.95,359.43,-95.15,362.45,-93.35,364.33,-90.9,366.21,-88.45,366.21,-85.6,366.21,-84.62,365.66,-83.39,365.12,-82.16,364.43,-80.67,363.74,-79.19,363.08,-77.47,362.43,-75.75,362.21,-73.8,361.83,-70.95,361.56,-67.93,361.3,-64.92,361.13,-61.82,360.96,-58.73,360.88,-55.6,360.81,-52.47,360.81,-49.4,360.81,-47.9,360.81,-46.44,360.81,-44.97,360.83,-43.55,360.85,-42.12,360.89,-40.74,360.93,-39.35,361.01,-38,361.16,-35.37,362.08,-32.96,363.01,-30.56,364.38,-28.62,365.75,-26.69,367.39,-25.37,369.03,-24.05,370.61,-23.6,374.43,-25.63,379.36,-28.09,384.29,-30.56,389.63,-33.15,394.97,-35.74,400.39,-38.28,405.81,-40.82,410.61,-43,412.86,-43.97,414.57,-44.95,416.29,-45.93,417.46,-46.92,418.62,-47.92,419.21,-48.93,419.81,-49.95,419.81,-51,419.81,-52.05,418.97,-53.14,418.14,-54.22,416.73,-55.05,415.32,-55.87,413.48,-56.29,411.63,-56.7,409.61,-56.4,408.8,-57.2,408.803,-57.198] ) );
    shape.graphics.endFill();

    return shape;
  },
  "信じる" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,2,1,2,3,3,3,3,2,2,2,2,2,1,2,3,3,3,3,2,2,2,2,2,1,2,2,2,2,3,3,3,3,2,2,1,2,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,1,3,3,3,3,2,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [-260.2,10.2,-253.9,1.57,-247.51,-10.02,-241.12,-21.62,-235.18,-35.05,-229.23,-48.47,-224,-63.15,-218.78,-77.82,-214.8,-92.6,-194,-86,-194.3,-85.17,-194.82,-84.51,-195.34,-83.85,-196.23,-83.4,-197.11,-82.95,-198.42,-82.74,-199.73,-82.52,-201.6,-82.6,-203.63,-77.05,-205.83,-71.59,-208.04,-66.12,-210.4,-60.8,-212.76,-55.47,-215.27,-50.31,-217.78,-45.15,-220.4,-40.2,-213,-37.4,-213.23,-36.73,-213.72,-36.13,-214.21,-35.54,-214.98,-35.08,-215.74,-34.61,-216.8,-34.28,-217.85,-33.95,-219.2,-33.8,-219.2,88.2,-219.28,88.57,-220.24,89.31,-221.2,90.04,-222.7,90.77,-224.2,91.5,-226.06,92.05,-227.93,92.6,-229.8,92.6,-232.2,92.6,-232.2,-19.6,-235.13,-15.03,-238.16,-10.72,-241.19,-6.42,-244.33,-2.43,-247.46,1.57,-250.68,5.23,-253.9,8.9,-257.2,12.2,-260.2,10.2,-260.2,10.2,-90.2,-62.4,-72.6,-49.8,-73.2,-48.67,-73.99,-47.88,-74.78,-47.08,-75.9,-46.57,-77.03,-46.07,-78.56,-45.83,-80.1,-45.6,-82.2,-45.6,-203,-45.6,-204.4,-50.4,-99.4,-50.4,-90.2,-62.4,-90.202,-62.399,-105.8,-34.6,-88.6,-22.4,-89.2,-21.27,-89.99,-20.48,-90.77,-19.68,-91.88,-19.17,-92.98,-18.67,-94.48,-18.43,-95.98,-18.2,-98,-18.2,-190.4,-18.2,-191.6,-23,-114.6,-23,-105.8,-34.6,-105.802,-34.599,-190.4,9.2,-191.6,4.4,-114.6,4.4,-105.8,-7.2,-88.6,5,-89.2,6.12,-89.99,6.92,-90.77,7.72,-91.88,8.22,-92.98,8.73,-94.48,8.97,-95.98,9.2,-98,9.2,-190.4,9.2,-190.401,9.2,-107.2,32,-101.2,24,-84.2,36.4,-84.65,36.92,-85.45,37.47,-86.25,38.01,-87.3,38.5,-88.35,38.99,-89.6,39.38,-90.85,39.77,-92.2,40,-92.2,86.4,-92.2,86.55,-92.97,87.25,-93.73,87.96,-95.33,88.75,-96.92,89.54,-99.37,90.17,-101.83,90.8,-105.2,90.8,-105.2,78.8,-177.6,78.8,-177.6,87.8,-177.6,87.87,-178.05,88.6,-178.51,89.33,-179.88,90.17,-181.24,91.02,-183.76,91.71,-186.28,92.4,-190.4,92.4,-190.4,25.6,-176.4,32,-107.2,32,-107.202,32,-91.2,-78.8,-91.8,-77.67,-92.59,-76.88,-93.37,-76.08,-94.48,-75.57,-95.58,-75.07,-97.08,-74.83,-98.58,-74.6,-100.6,-74.6,-187.8,-74.6,-189,-79.4,-117.6,-79.4,-108.4,-91.2,-91.2,-78.8,-91.202,-78.799,-177.6,74,-105.2,74,-105.2,36.8,-177.6,36.8,-177.6,74,-177.601,73.999] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-43.4,-74.6,-42.72,-76.32,-41.37,-77.73,-40.01,-79.13,-38.25,-80.12,-36.49,-81.12,-34.46,-81.66,-32.42,-82.2,-30.4,-82.2,-26.95,-82.2,-23.05,-81.2,-19.14,-80.2,-15.82,-78.4,-12.51,-76.6,-10.29,-74.1,-8.07,-71.6,-8,-68.6,-8,-66.87,-8.66,-65.62,-9.32,-64.36,-10.3,-62.6,-11.27,-60.84,-12.39,-58.08,-13.5,-55.32,-14.4,-50.6,-15.45,-44.52,-16.52,-34.56,-17.6,-24.6,-18.5,-13.2,-19.4,-1.8,-20.02,9.81,-20.65,21.42,-20.8,30.8,-20.8,42.2,-18.11,49.37,-15.43,56.55,-10.42,60.6,-5.42,64.65,1.73,66.12,8.88,67.6,17.8,67.6,28.97,67.6,39.31,64.65,49.65,61.69,58.95,55.67,68.25,49.66,76.41,40.52,84.57,31.38,91.4,19,95.6,21.2,89.37,36.87,81.01,48.08,72.66,59.29,62.62,66.47,52.59,73.66,41.12,77.03,29.65,80.4,17.2,80.4,7.15,80.4,-1.86,78.18,-10.86,75.96,-17.65,70.43,-24.44,64.89,-28.42,55.51,-32.4,46.13,-32.4,31.8,-32.4,21.75,-31.9,9.31,-31.4,-3.12,-30.65,-16.1,-29.9,-29.07,-29.02,-41.66,-28.15,-54.25,-27.4,-64.6,-27.4,-65.8,-27.4,-66.62,-27.63,-68.04,-27.86,-69.45,-28.8,-70.82,-29.74,-72.19,-31.62,-73.19,-33.5,-74.2,-36.8,-74.2,-37.55,-74.2,-38.36,-74.16,-39.16,-74.13,-39.95,-74.07,-40.74,-74.02,-41.47,-73.94,-42.2,-73.87,-42.8,-73.8,-43.4,-74.6,-43.399,-74.599,32.2,-59,41.2,-55.85,47.01,-52.4,52.83,-48.95,56.2,-45.65,59.58,-42.35,60.89,-39.42,62.2,-36.5,62.2,-34.4,62.2,-33.05,61.84,-31.88,61.49,-30.71,60.85,-29.85,60.21,-28.99,59.33,-28.49,58.45,-28,57.4,-28,56.2,-28,55.18,-28.34,54.17,-28.68,53.33,-29.37,52.48,-30.07,51.8,-31.12,51.13,-32.17,50.6,-33.6,49.7,-35.85,47.77,-38.72,45.84,-41.6,43.13,-44.6,40.41,-47.6,37.02,-50.47,33.63,-53.35,29.8,-55.6,32.2,-59,32.2,-58.999,54.8,-73.8,63.8,-70.65,69.61,-67.2,75.42,-63.74,78.8,-60.42,82.17,-57.11,83.49,-54.14,84.8,-51.17,84.8,-49,84.8,-47.72,84.47,-46.6,84.14,-45.47,83.52,-44.62,82.91,-43.78,82.01,-43.29,81.12,-42.8,80,-42.8,78.87,-42.8,77.9,-43.14,76.92,-43.47,76.1,-44.15,75.27,-44.82,74.6,-45.84,73.92,-46.85,73.4,-48.2,72.5,-50.52,70.57,-53.41,68.64,-56.29,65.92,-59.27,63.21,-62.26,59.82,-65.1,56.42,-67.95,52.6,-70.2,54.8,-73.8,54.799,-73.799] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [159,3,164.85,-0.3,171.19,-3.06,177.53,-5.81,183.9,-7.8,190.28,-9.79,196.46,-10.89,202.65,-12,208.2,-12,222.97,-12,232.95,-8.22,242.92,-4.44,248.97,1.88,255.03,8.19,257.62,16.43,260.2,24.68,260.2,33.6,260.2,43.87,255.83,52.82,251.46,61.76,243.1,68.37,234.74,74.99,222.57,78.8,210.4,82.6,194.8,82.6,185.73,82.6,178.28,80.57,170.83,78.54,165.53,75.07,160.22,71.61,157.31,66.99,154.4,62.37,154.4,57.2,154.4,52.48,156.44,48.23,158.47,43.98,162.28,40.78,166.08,37.57,171.53,35.69,176.98,33.8,183.8,33.8,190.85,33.8,197.58,36.39,204.3,38.97,209.55,43.23,214.8,47.48,218,52.95,221.2,58.43,221.2,64.2,221.2,64.8,221.13,65.36,221.06,65.91,220.93,66.4,220.79,66.89,220.61,67.29,220.43,67.7,220.2,68,225.83,66.13,230.56,62.53,235.29,58.94,238.73,54.28,242.16,49.61,244.08,44.18,246,38.75,246,33.2,246,24.73,243.87,17.6,241.74,10.48,237.05,5.33,232.36,0.17,224.91,-2.71,217.45,-5.6,206.8,-5.6,201.7,-5.6,192.71,-3.76,183.71,-1.92,173.4,2.68,163.09,7.27,152.75,15.07,142.4,22.88,134.6,34.8,133.63,36.3,132.59,37.89,131.56,39.49,130.38,40.8,129.2,42.11,127.82,42.96,126.45,43.8,124.8,43.8,123.38,43.8,122.14,42.97,120.9,42.13,119.98,40.88,119.06,39.62,118.53,38.15,118,36.68,118,35.4,118,33,119.12,30.77,120.23,28.54,121.83,26.58,123.42,24.61,125.17,22.94,126.93,21.28,128.2,20,134.43,13.85,144.67,3.62,154.91,-6.61,166.48,-18.2,178.05,-29.78,189.6,-41.37,201.15,-52.95,210,-61.8,210.6,-62.32,211.02,-62.77,211.44,-63.22,211.7,-63.6,211.96,-63.97,212.08,-64.27,212.2,-64.57,212.2,-64.8,212.2,-65.1,212.06,-65.29,211.91,-65.48,211.65,-65.6,211.39,-65.71,211.02,-65.75,210.65,-65.8,210.2,-65.8,208.85,-65.8,202.8,-64.73,196.75,-63.65,189.23,-62.02,181.71,-60.39,174.34,-58.46,166.98,-56.52,163,-54.8,161.2,-53.97,160.1,-53.18,159,-52.39,158.1,-51.77,157.2,-51.15,156.25,-50.78,155.3,-50.4,153.8,-50.4,150.43,-50.4,147.26,-52.06,144.08,-53.72,141.63,-56.35,139.17,-58.97,137.69,-62.21,136.2,-65.45,136.2,-68.6,136.2,-69.65,136.42,-70.85,136.65,-72.05,137.23,-73.27,137.81,-74.49,138.82,-75.66,139.83,-76.82,141.4,-77.8,142.4,-77.2,142.18,-74.8,142.85,-72.75,143.52,-70.7,144.93,-69.2,146.33,-67.7,148.39,-66.85,150.45,-66,153,-66,157.65,-66,165.64,-66.85,173.63,-67.7,181.95,-68.92,190.28,-70.14,197.44,-71.48,204.6,-72.82,207.6,-73.8,208.88,-74.25,210.01,-75.18,211.14,-76.11,212.15,-77.05,213.16,-77.98,214.07,-78.69,214.98,-79.4,215.8,-79.4,218.8,-79.4,222.02,-77.86,225.24,-76.32,227.9,-74.15,230.56,-71.97,232.28,-69.61,234,-67.25,234,-65.6,234,-63.72,232.95,-62.74,231.9,-61.77,230.1,-60.92,228.3,-60.08,225.9,-58.99,223.5,-57.9,220.8,-55.8,212.4,-49.27,203.62,-41.59,194.84,-33.9,186.55,-26.12,178.26,-18.34,170.91,-11,163.55,-3.65,158,2.2,159,3,159.001,3,195.4,72.2,197.2,72.2,199.09,72.12,200.99,72.04,202.9,71.87,204.81,71.71,206.71,71.44,208.6,71.17,210.4,70.8,210.1,70.42,209.81,70.04,209.52,69.65,209.28,69.2,209.03,68.75,208.85,68.21,208.68,67.67,208.6,67,208.15,61.82,205.75,57.08,203.35,52.34,199.6,48.72,195.85,45.11,191.05,42.95,186.25,40.8,181,40.8,177.25,40.8,173.97,41.85,170.69,42.89,168.25,44.82,165.81,46.76,164.41,49.49,163,52.22,163,55.6,163,60.62,165.98,63.85,168.96,67.07,173.65,68.92,178.34,70.78,184.09,71.49,189.85,72.2,195.4,72.2,195.401,72.199] ) );
    shape.graphics.endFill();

    return shape;
  },
  "のならば" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [-254.3,-126.2,-233.6,-129.05,-219.2,-135.72,-204.8,-142.39,-195.8,-151.65,-186.8,-160.91,-182.75,-172.16,-178.7,-183.4,-178.7,-195.4,-178.7,-209.05,-182.06,-221.26,-185.43,-233.46,-192.85,-242.65,-200.28,-251.84,-212.11,-257.22,-223.95,-262.6,-240.9,-262.6,-242.33,-262.6,-244.46,-262.46,-246.59,-262.31,-248.95,-262.05,-251.31,-261.79,-253.67,-261.42,-256.03,-261.05,-257.9,-260.6,-256.1,-259.32,-254.69,-257.25,-253.28,-255.17,-252.3,-252.55,-251.33,-249.92,-250.81,-246.87,-250.3,-243.82,-250.3,-240.6,-250.3,-226.8,-254.86,-209.7,-259.42,-192.6,-267.13,-177.6,-274.83,-162.6,-284.98,-152.4,-295.13,-142.2,-306.3,-142.2,-311.63,-142.2,-316.07,-145.22,-320.52,-148.23,-323.73,-153.73,-326.93,-159.22,-328.72,-166.92,-330.5,-174.63,-330.5,-184,-330.5,-201.32,-323.77,-216.68,-317.04,-232.03,-305,-243.52,-292.96,-255.02,-276.33,-261.71,-259.7,-268.4,-239.9,-268.4,-221.45,-268.4,-207.3,-262.94,-193.15,-257.48,-183.55,-247.67,-173.95,-237.87,-169.03,-224.27,-164.1,-210.67,-164.1,-194.4,-164.1,-180.37,-168.98,-168,-173.85,-155.63,-184.5,-145.97,-195.15,-136.32,-212.03,-129.91,-228.9,-123.5,-252.9,-121.4,-254.3,-126.2,-254.301,-126.201,-263.3,-259.4,-274.7,-256.62,-284.75,-249.99,-294.8,-243.35,-302.3,-233.6,-309.8,-223.85,-314.15,-211.36,-318.5,-198.88,-318.5,-184.4,-318.5,-178.55,-317.62,-173.41,-316.74,-168.28,-315.08,-164.45,-313.41,-160.63,-310.99,-158.41,-308.57,-156.2,-305.5,-156.2,-296.95,-156.2,-288.79,-165.65,-280.63,-175.1,-274.25,-188.9,-267.88,-202.7,-263.99,-218.3,-260.1,-233.9,-260.1,-246.2,-260.1,-248.22,-260.38,-250.29,-260.65,-252.35,-261.1,-254.15,-261.55,-255.95,-262.13,-257.34,-262.7,-258.72,-263.3,-259.4,-263.301,-259.399] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [199.1,-277.6,199.85,-279.25,201.21,-280.61,202.58,-281.97,204.3,-282.95,206.03,-283.92,207.99,-284.46,209.95,-285,211.9,-285,215.5,-285,219.08,-284.14,222.65,-283.29,225.5,-281.9,228.35,-280.51,230.13,-278.76,231.9,-277,231.9,-275.2,231.9,-273.4,231.27,-272.31,230.65,-271.22,229.73,-269.95,228.81,-268.67,227.77,-266.76,226.73,-264.85,225.9,-261.4,225.6,-259.9,225.08,-258.15,224.55,-256.39,223.95,-254.57,223.35,-252.76,222.75,-250.96,222.15,-249.17,221.7,-247.6,226.58,-248.5,232.28,-249.94,237.99,-251.38,243.05,-253.42,248.11,-255.47,251.8,-258.15,255.48,-260.82,256.3,-264.2,263.2,-264.42,267.44,-264.06,271.68,-263.7,274,-262.95,276.33,-262.2,277.11,-261.16,277.9,-260.12,277.9,-259,277.9,-257.42,277.11,-256.17,276.33,-254.92,274.6,-253.77,272.88,-252.63,270.14,-251.49,267.4,-250.35,263.5,-249,259.68,-247.65,254.14,-246.04,248.61,-244.42,242.48,-242.85,236.35,-241.27,230.17,-239.89,224,-238.5,218.9,-237.6,215.75,-227.62,210.97,-215.74,206.19,-203.86,200.75,-192.17,195.32,-180.49,189.71,-170.07,184.1,-159.65,179.3,-152.6,178.63,-151.7,177.82,-150.87,177.02,-150.04,176.18,-149.4,175.33,-148.76,174.49,-148.38,173.65,-148,172.9,-148,172.23,-148,171.14,-148.39,170.06,-148.77,169.03,-149.75,168,-150.72,167.25,-152.39,166.5,-154.05,166.5,-156.6,166.5,-157.72,166.67,-159.06,166.84,-160.39,167.25,-161.7,167.67,-163.01,168.36,-164.19,169.05,-165.37,170.1,-166.2,174.9,-170.17,180.42,-177.97,185.94,-185.77,191.15,-195.45,196.36,-205.12,200.76,-215.7,205.15,-226.27,207.7,-235.8,205.3,-235.5,202.9,-235.24,200.49,-234.98,198.35,-234.77,196.21,-234.57,194.48,-234.42,192.75,-234.27,191.7,-234.2,188.18,-234.2,185.09,-234.54,182,-234.89,179.45,-235.6,176.9,-236.31,174.94,-237.41,172.98,-238.5,171.7,-240,170.95,-240.67,170.16,-241.72,169.38,-242.76,168.7,-244,168.03,-245.24,167.54,-246.58,167.05,-247.92,166.9,-249.2,169.5,-251.6,171,-249.12,172.8,-247.47,174.59,-245.82,176.8,-244.82,179.01,-243.83,181.71,-243.41,184.4,-243,187.7,-243,189.73,-243,192.44,-243.14,195.15,-243.29,198.15,-243.55,201.15,-243.81,204.24,-244.18,207.33,-244.55,210.1,-245,211,-248.82,211.71,-252.11,212.41,-255.41,212.9,-258.27,213.39,-261.14,213.64,-263.65,213.9,-266.15,213.9,-268.4,213.9,-270.2,213.65,-271.74,213.39,-273.27,212.48,-274.4,211.56,-275.52,209.77,-276.16,207.98,-276.8,204.9,-276.8,204.38,-276.8,203.81,-276.76,203.24,-276.72,202.63,-276.65,202.01,-276.57,201.33,-276.46,200.65,-276.35,199.9,-276.2,199.1,-277.6,199.102,-277.599,256.7,-223.2,262.93,-226.57,268.5,-228.81,274.08,-231.04,279.13,-232.37,284.17,-233.71,288.73,-234.25,293.3,-234.8,297.5,-234.8,304.7,-234.8,310.76,-233.66,316.81,-232.52,321.2,-230.5,325.59,-228.47,328.04,-225.69,330.5,-222.9,330.5,-219.6,330.5,-218.77,330.11,-218.2,329.72,-217.63,329.05,-217.27,328.38,-216.92,327.46,-216.76,326.55,-216.6,325.5,-216.6,324.68,-216.6,323.83,-216.67,322.98,-216.74,322.18,-216.87,321.37,-217.01,320.63,-217.19,319.9,-217.37,319.3,-217.6,318.32,-218.05,316.95,-218.39,315.57,-218.72,313.98,-218.95,312.38,-219.17,310.67,-219.29,308.95,-219.4,307.3,-219.4,306.55,-219.4,305.84,-219.39,305.13,-219.39,304.45,-219.35,303.78,-219.31,303.14,-219.23,302.5,-219.15,301.9,-219,294.1,-217.2,289.59,-214.45,285.09,-211.7,282.8,-208.1,280.51,-204.5,279.91,-200.1,279.3,-195.7,279.3,-190.6,279.3,-187,279.38,-184.37,279.71,-181.67,280.04,-178.97,280.48,-176.35,280.91,-173.72,281.35,-171.25,281.8,-168.77,282.1,-166.6,282.25,-166,282.4,-165.21,282.54,-164.42,282.68,-163.6,282.81,-162.77,282.92,-161.99,283.03,-161.2,283.1,-160.6,287.83,-158.95,292.62,-157.01,297.42,-155.07,301.98,-152.87,306.53,-150.68,310.69,-148.25,314.85,-145.83,318.3,-143.2,320.85,-141.25,322.51,-139.32,324.18,-137.39,325.15,-135.55,326.13,-133.71,326.51,-132.01,326.9,-130.3,326.9,-128.8,326.83,-127.6,326.11,-126.64,325.39,-125.68,324.3,-125,323.21,-124.33,321.89,-123.96,320.58,-123.6,319.3,-123.6,318.02,-123.6,315.63,-126.1,313.24,-128.61,309.15,-132.37,305.06,-136.14,298.99,-140.56,292.93,-144.97,284.3,-148.8,284.38,-147.97,284.45,-146.94,284.52,-145.91,284.57,-144.72,284.63,-143.54,284.67,-142.25,284.7,-140.95,284.7,-139.6,284.7,-138.77,284.7,-137.99,284.69,-137.2,284.67,-136.45,284.66,-135.7,284.62,-134.99,284.57,-134.27,284.5,-133.6,284.13,-129.7,281.95,-126.15,279.78,-122.6,275.5,-119.9,271.23,-117.2,264.7,-115.6,258.18,-114,249.1,-114,240.63,-114,233.63,-115.96,226.63,-117.92,221.63,-121.42,216.62,-124.93,213.86,-129.78,211.1,-134.62,211.1,-140.4,211.1,-146.1,214.18,-150.75,217.26,-155.4,222.55,-158.7,227.84,-162,234.89,-163.8,241.95,-165.6,249.9,-165.6,252.23,-165.6,255.1,-165.39,257.98,-165.18,260.93,-164.82,263.87,-164.47,266.64,-163.99,269.4,-163.52,271.5,-163,271.43,-164.35,271.07,-167.86,270.72,-171.37,270.33,-175.35,269.93,-179.32,269.62,-182.91,269.3,-186.5,269.3,-188,269.3,-194.15,270.61,-199.53,271.92,-204.92,275.43,-209.47,278.93,-214.03,285.08,-217.73,291.23,-221.42,300.9,-224.2,300.9,-225.2,299.85,-225.42,298.69,-225.61,297.53,-225.79,296.28,-225.92,295.02,-226.05,293.67,-226.13,292.33,-226.2,290.9,-226.2,287.75,-226.2,284.15,-225.83,280.55,-225.47,276.5,-224.65,272.45,-223.82,267.95,-222.48,263.45,-221.15,258.5,-219.2,256.7,-223.2,256.701,-223.199,272.3,-153.8,269.83,-154.85,266.74,-155.7,263.66,-156.55,260.38,-157.15,257.09,-157.75,253.82,-158.07,250.55,-158.4,247.7,-158.4,242.08,-158.4,237.03,-157.15,231.98,-155.91,228.18,-153.68,224.37,-151.44,222.14,-148.36,219.9,-145.28,219.9,-141.6,219.9,-137.47,221.73,-134.3,223.55,-131.13,227.15,-128.97,230.75,-126.82,236.1,-125.71,241.45,-124.6,248.5,-124.6,255.18,-124.6,259.85,-125.64,264.53,-126.68,267.48,-128.57,270.42,-130.47,271.76,-133.12,273.1,-135.77,273.1,-139,273.1,-140.87,273.03,-143,272.96,-145.12,272.85,-147.15,272.74,-149.17,272.59,-150.92,272.45,-152.68,272.3,-153.8,272.301,-153.8] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-287.1,280.2,-264.68,278.92,-247.4,275.81,-230.13,272.69,-218.38,267.27,-206.62,261.86,-200.56,253.9,-194.5,245.95,-194.5,235,-194.5,226.15,-196.89,220.04,-199.28,213.94,-203.73,210.15,-208.17,206.36,-214.5,204.68,-220.83,203,-228.7,203,-235.45,203,-242.9,204.89,-250.34,206.77,-258.1,210.58,-265.86,214.38,-273.76,220.13,-281.65,225.88,-289.3,233.6,-290.43,234.73,-291.29,236.09,-292.16,237.44,-293.08,238.63,-293.99,239.81,-295.12,240.6,-296.25,241.4,-297.9,241.4,-300.83,241.4,-303.41,240.17,-305.99,238.94,-307.93,237.1,-309.86,235.26,-310.98,233.13,-312.1,231,-312.1,229.2,-312.1,228,-311.83,227.12,-311.55,226.24,-311.1,225.45,-310.65,224.66,-310.08,223.86,-309.5,223.05,-308.9,222,-308.08,220.65,-307.34,218.88,-306.6,217.11,-306,215.05,-305.4,212.99,-304.96,210.7,-304.53,208.4,-304.3,206,-304.08,203.75,-303.77,200.81,-303.46,197.86,-303.18,194.58,-302.89,191.3,-302.7,187.86,-302.5,184.43,-302.5,181.2,-302.5,179.55,-302.58,177.96,-302.65,176.36,-302.8,174.9,-302.95,173.44,-303.18,172.15,-303.4,170.85,-303.7,169.8,-303.85,169.28,-303.96,168.75,-304.08,168.22,-304.15,167.68,-304.23,167.13,-304.26,166.57,-304.3,166,-304.3,165.4,-304.3,163.45,-303.73,161.44,-303.16,159.43,-301.83,157.4,-300.49,155.38,-298.31,153.37,-296.13,151.35,-292.9,149.4,-290.2,147.6,-285.89,145.77,-281.58,143.93,-276.7,142.38,-271.83,140.82,-266.91,139.7,-262,138.58,-258.1,138.2,-258.3,138,-264.9,137.48,-270.43,135.87,-275.95,134.25,-280.3,131.55,-284.65,128.85,-287.78,125.07,-290.9,121.28,-292.7,116.4,-288.3,113.8,-284.85,119.28,-279.82,122.24,-274.78,125.21,-268.28,126.58,-261.77,127.95,-253.85,128.18,-245.93,128.4,-236.7,128.4,-232.5,128.4,-228.76,129.51,-225.01,130.62,-222.18,132.45,-219.35,134.29,-217.66,136.67,-215.98,139.05,-215.9,141.6,-215.9,143.1,-216.66,144.13,-217.41,145.17,-218.63,145.8,-219.85,146.44,-221.39,146.72,-222.93,147,-224.5,147,-225.4,147,-226.86,146.59,-228.31,146.17,-229.98,145.63,-231.65,145.08,-233.36,144.56,-235.08,144.03,-236.5,143.8,-238,143.58,-239.5,143.42,-241,143.27,-242.5,143.18,-244,143.08,-245.5,143.04,-247,143,-248.5,143,-253.9,143,-259.19,143.61,-264.48,144.22,-269.38,145.3,-274.27,146.39,-278.62,147.9,-282.98,149.4,-286.5,151.2,-288.68,152.25,-290.48,153.34,-292.28,154.42,-293.58,155.68,-294.87,156.93,-295.59,158.43,-296.3,159.93,-296.3,161.8,-296.3,162.7,-296.05,163.65,-295.81,164.6,-295.38,165.5,-294.94,166.4,-294.36,167.2,-293.78,168,-293.1,168.6,-292.43,169.2,-291.84,170.17,-291.26,171.13,-290.83,172.25,-290.39,173.38,-290.15,174.56,-289.9,175.75,-289.9,176.8,-289.9,178.83,-290.27,181.45,-290.63,184.07,-291.18,187.58,-291.72,191.08,-292.35,195.62,-292.98,200.15,-293.5,206,-293.73,208.63,-294.03,210.89,-294.33,213.15,-294.73,215.1,-295.12,217.05,-295.61,218.71,-296.1,220.38,-296.7,221.8,-296.78,221.95,-296.82,222.07,-296.86,222.19,-296.88,222.3,-296.89,222.41,-296.9,222.53,-296.9,222.65,-296.9,222.8,-296.9,223.03,-296.83,223.21,-296.76,223.4,-296.63,223.53,-296.49,223.66,-296.31,223.73,-296.13,223.8,-295.9,223.8,-295.38,223.8,-294.72,223.75,-294.06,223.69,-293.33,223.5,-292.59,223.31,-291.82,222.96,-291.05,222.6,-290.3,222,-283.18,216.9,-275.17,212.17,-267.17,207.44,-258.98,203.8,-250.78,200.16,-242.74,197.98,-234.7,195.8,-227.5,195.8,-216.7,195.8,-207.98,198.17,-199.25,200.53,-193.1,205.43,-186.95,210.32,-183.63,217.82,-180.3,225.33,-180.3,235.6,-180.3,249.18,-187.28,258.42,-194.25,267.67,-207.75,273.43,-221.25,279.18,-241.05,281.87,-260.85,284.55,-286.5,285,-287.1,280.2,-287.101,280.199] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [156.9,128.6,157.5,127.85,158.49,127.23,159.48,126.6,160.6,126.15,161.73,125.7,162.86,125.45,164,125.2,164.9,125.2,167.75,125.2,171.08,126.82,174.4,128.45,177.25,131.13,180.1,133.81,182,137.27,183.9,140.73,183.9,144.4,183.9,146.13,183.47,147.39,183.03,148.66,182.38,149.73,181.72,150.8,180.95,151.8,180.18,152.8,179.5,154,175.6,161.35,172.3,169.89,169,178.43,166.6,187.83,164.2,197.22,162.85,207.3,161.5,217.38,161.5,227.8,161.5,232.75,162.02,236.96,162.53,241.18,163.38,244.25,164.22,247.33,165.3,249.06,166.38,250.8,167.5,250.8,168.55,250.8,171.52,245.93,174.49,241.06,178.05,234.35,181.61,227.64,185.11,220.59,188.6,213.55,190.7,209.2,194.9,211,191.53,219.33,188.17,227.66,184.81,235.99,182.13,243,179.44,250.01,177.77,255.04,176.1,260.07,176.1,261.8,176.1,263.3,176.38,264.63,176.66,265.96,177,267.35,177.34,268.74,177.62,270.29,177.9,271.85,177.9,273.8,177.9,275.3,177.57,276.68,177.24,278.05,176.6,279.1,175.96,280.15,175.03,280.77,174.1,281.4,172.9,281.4,169.6,281.4,165.91,278.01,162.21,274.62,159.1,268.08,155.99,261.53,153.94,251.95,151.9,242.38,151.9,230,151.9,221.45,152.91,212.5,153.91,203.55,155.45,194.98,156.99,186.41,158.82,178.62,160.65,170.83,162.3,164.6,163.13,161.6,163.88,158.63,164.64,155.67,165.22,152.85,165.81,150.04,166.15,147.45,166.5,144.85,166.5,142.6,166.5,140.13,166.1,137.9,165.7,135.67,164.65,133.9,163.6,132.14,161.77,130.96,159.95,129.78,157.1,129.4,156.9,128.6,156.901,128.601,269.7,168.2,276.6,167.08,280.67,165.88,284.74,164.68,286.97,163.4,289.21,162.13,290.09,160.78,290.97,159.43,291.5,158,295.4,158.23,298.67,158.68,301.94,159.13,304.3,159.98,306.66,160.82,307.98,162.14,309.3,163.45,309.3,165.4,309.3,167.13,308.39,168.32,307.47,169.52,305.6,170.48,303.72,171.43,300.86,172.29,298,173.15,294.1,174.2,292.07,174.73,289.33,175.31,286.59,175.89,283.4,176.45,280.21,177.01,276.72,177.52,273.22,178.03,269.7,178.4,269.7,189.8,269.86,198.3,270.02,206.8,270.4,213.4,270.77,220,271.39,225.2,272,230.4,272.9,235.2,273.5,238,277.1,239.43,283.24,242.48,289.37,245.53,295.3,249.65,301.22,253.78,305.56,258.7,309.9,263.63,309.9,268.8,309.9,270.07,309.41,271.23,308.92,272.39,308.1,273.27,307.27,274.16,306.19,274.68,305.1,275.2,303.9,275.2,303,275.2,302.05,274.82,301.11,274.44,300.1,273.67,299.09,272.91,297.99,271.74,296.9,270.57,295.7,269,293.75,266.6,291.2,264.08,288.66,261.56,285.85,259.2,283.04,256.84,280.12,254.77,277.2,252.7,274.5,251.2,274.87,256.45,274.61,262.07,274.35,267.7,271.52,272.35,268.69,277,262.32,280,255.95,283,244.1,283,235.17,283,228.06,281.04,220.94,279.07,215.97,275.55,211.01,272.03,208.35,267.14,205.7,262.25,205.7,256.4,205.7,250.77,208.49,246.32,211.28,241.87,216.17,238.77,221.07,235.68,227.72,234.04,234.37,232.4,242.1,232.4,244.5,232.4,247.01,232.55,249.52,232.69,251.97,232.97,254.43,233.26,256.75,233.67,259.07,234.07,261.1,234.6,260.8,231.37,260.51,227.85,260.22,224.32,260,220.5,259.77,216.67,259.64,212.55,259.5,208.42,259.5,204,259.5,201.97,259.4,199.38,259.31,196.78,259.17,193.72,259.04,190.67,258.91,187.21,258.77,183.75,258.7,180,255.25,180.45,251.84,180.79,248.42,181.12,245.2,181.35,241.97,181.57,239.01,181.69,236.05,181.8,233.5,181.8,229.82,181.8,226.14,181.1,222.46,180.39,219.05,178.88,215.64,177.36,212.63,174.97,209.62,172.57,207.3,169.2,209.3,166,212.3,168.32,215.19,169.68,218.07,171.03,220.85,171.73,223.62,172.42,226.29,172.61,228.95,172.8,231.5,172.8,234.5,172.8,237.94,172.65,241.39,172.5,244.95,172.2,248.51,171.9,252.03,171.45,255.55,171,258.7,170.4,258.7,169.43,258.7,166.85,258.69,164.28,258.67,161.35,258.66,158.43,258.61,155.78,258.57,153.13,258.5,152,258.42,145.18,258.19,140.51,257.95,135.85,256.9,132.98,255.85,130.11,253.66,128.86,251.47,127.6,247.5,127.6,247.05,127.6,246.6,127.61,246.14,127.61,245.67,127.63,245.21,127.65,244.71,127.69,244.22,127.73,243.7,127.8,242.9,127,243.42,125.35,244.49,123.99,245.56,122.63,247.07,121.65,248.59,120.68,250.52,120.14,252.45,119.6,254.7,119.6,258.22,119.6,261.76,120.6,265.29,121.59,268.12,123.2,270.96,124.81,272.73,126.86,274.5,128.9,274.5,131,274.5,132.05,274.23,133,273.97,133.95,273.57,134.83,273.18,135.71,272.73,136.54,272.27,137.38,271.9,138.2,271.45,139.03,271.2,140.6,270.96,142.18,270.82,144.2,270.69,146.23,270.63,148.55,270.57,150.88,270.5,153.2,269.7,168.2,269.699,168.201,262.1,244.8,259.55,243.6,256.91,242.7,254.27,241.8,251.65,241.2,249.02,240.6,246.46,240.3,243.9,240,241.5,240,235.5,240,230.37,241.04,225.25,242.07,221.5,244.1,217.75,246.12,215.62,249.11,213.5,252.1,213.5,256,213.5,260.05,215.57,263.06,217.65,266.06,221.4,268.05,225.15,270.04,230.37,271.02,235.6,272,241.9,272,247.6,272,251.5,270.95,255.4,269.89,257.8,267.62,260.2,265.36,261.25,261.79,262.3,258.22,262.3,253.2,262.3,252.3,262.3,251.32,262.29,250.35,262.27,249.3,262.26,248.25,262.21,247.12,262.17,246,262.1,244.8,262.099,244.799,280.5,110.2,285.67,112.3,290.07,115.51,294.47,118.71,297.67,122.35,300.88,125.99,302.69,129.72,304.5,133.45,304.5,136.6,304.5,137.95,304.25,139.34,304,140.73,303.4,141.85,302.8,142.98,301.8,143.69,300.8,144.4,299.3,144.4,298.25,144.4,297.32,144.06,296.39,143.71,295.6,143,294.81,142.29,294.18,141.19,293.55,140.1,293.1,138.6,292.42,135.83,291.22,132.56,290.02,129.29,288.15,125.95,286.27,122.61,283.65,119.42,281.02,116.23,277.5,113.6,280.5,110.2,280.499,110.202,303.9,103.4,308.77,105.35,313.1,108.54,317.43,111.73,320.67,115.4,323.92,119.08,325.81,122.86,327.7,126.65,327.7,129.8,327.7,131.15,327.48,132.54,327.25,133.93,326.67,135.05,326.09,136.18,325.08,136.89,324.07,137.6,322.5,137.6,321.52,137.6,320.67,137.29,319.81,136.98,319.1,136.3,318.39,135.63,317.83,134.56,317.27,133.5,316.9,132,316.45,129.6,315.05,126.18,313.65,122.76,311.55,119.18,309.45,115.6,306.77,112.29,304.1,108.98,301.1,106.8,303.9,103.4,303.898,103.402] ) );
    shape.graphics.endFill();

    return shape;
  },
  "このままで" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [-399.4,-27.4,-403.75,-22.9,-407.17,-18.05,-410.59,-13.2,-412.95,-8.25,-415.32,-3.3,-416.56,1.63,-417.8,6.55,-417.8,11.2,-417.8,18.03,-415,24,-412.2,29.98,-406.18,34.43,-400.16,38.87,-390.72,41.44,-381.28,44,-368,44,-358.63,44,-350.82,43.56,-343,43.12,-337,42.28,-331,41.43,-326.94,40.2,-322.88,38.98,-321,37.4,-316.13,38.08,-312.43,39.03,-308.72,39.98,-306.23,41.25,-303.74,42.53,-302.47,44.15,-301.21,45.78,-301.21,47.8,-301.21,50.73,-305.87,52.5,-310.54,54.27,-319.03,55.23,-327.52,56.18,-339.43,56.49,-351.33,56.8,-365.8,56.8,-384.78,56.8,-396.71,52.73,-408.65,48.66,-415.38,42.7,-422.11,36.74,-424.56,29.97,-427,23.2,-427,17.8,-427,12.48,-425.97,6.81,-424.93,1.15,-422.18,-4.85,-419.42,-10.85,-414.6,-17.19,-409.78,-23.52,-402.2,-30.2,-399.4,-27.4,-399.403,-27.398,-346.6,-67.8,-353.13,-66.82,-360.31,-65.45,-367.49,-64.08,-374.35,-62.82,-381.22,-61.57,-387.27,-60.68,-393.33,-59.8,-397.6,-59.8,-402.25,-59.8,-405.99,-61.47,-409.73,-63.14,-412.35,-65.65,-414.98,-68.16,-416.39,-71.1,-417.8,-74.05,-417.8,-76.6,-417.8,-77.27,-417.66,-78,-417.52,-78.73,-417.28,-79.42,-417.04,-80.12,-416.71,-80.73,-416.38,-81.35,-416,-81.8,-414.6,-81.6,-414.3,-80.1,-413.03,-78.35,-411.75,-76.6,-409.2,-75.1,-406.65,-73.6,-402.68,-72.6,-398.7,-71.6,-393,-71.6,-387.08,-71.6,-378.27,-72.62,-369.47,-73.65,-360.95,-75.15,-352.44,-76.65,-345.81,-78.35,-339.18,-80.05,-337.6,-81.4,-331.3,-80.5,-327.36,-79.05,-323.42,-77.6,-321.2,-75.82,-318.99,-74.04,-318.2,-72.03,-317.4,-70.02,-317.4,-68,-317.4,-66.8,-318.36,-65.86,-319.32,-64.92,-320.85,-64.25,-322.39,-63.57,-324.32,-63.16,-326.25,-62.75,-328.2,-62.6,-333.08,-62.37,-339.94,-60.21,-346.79,-58.04,-354.25,-54.87,-361.72,-51.7,-369.1,-48,-376.48,-44.3,-382.4,-41,-385,-44,-381.55,-46.7,-376.58,-49.81,-371.6,-52.92,-366.33,-56,-361.06,-59.07,-356.12,-61.89,-351.18,-64.7,-347.81,-66.8,-346.6,-67.8,-346.604,-67.798] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [-193.6,57,-172.9,54.15,-158.5,47.48,-144.1,40.81,-135.1,31.55,-126.1,22.29,-122.05,11.04,-118,-0.2,-118,-12.2,-118,-25.85,-121.37,-38.05,-124.73,-50.26,-132.15,-59.45,-139.58,-68.64,-151.42,-74.02,-163.25,-79.4,-180.2,-79.4,-181.63,-79.4,-183.76,-79.25,-185.89,-79.11,-188.25,-78.85,-190.62,-78.59,-192.97,-78.22,-195.33,-77.85,-197.2,-77.4,-195.4,-76.12,-193.99,-74.05,-192.58,-71.97,-191.6,-69.35,-190.63,-66.72,-190.12,-63.67,-189.6,-60.62,-189.6,-57.4,-189.6,-43.6,-194.16,-26.5,-198.72,-9.4,-206.43,5.6,-214.13,20.6,-224.28,30.8,-234.43,41,-245.6,41,-250.93,41,-255.37,37.98,-259.82,34.97,-263.03,29.48,-266.23,23.98,-268.02,16.28,-269.8,8.58,-269.8,-0.8,-269.8,-18.12,-263.07,-33.48,-256.34,-48.83,-244.3,-60.32,-232.27,-71.82,-215.63,-78.51,-199,-85.2,-179.2,-85.2,-160.75,-85.2,-146.6,-79.74,-132.45,-74.28,-122.85,-64.47,-113.25,-54.67,-108.33,-41.07,-103.4,-27.47,-103.4,-11.2,-103.4,2.83,-108.28,15.2,-113.15,27.57,-123.8,37.23,-134.45,46.88,-151.33,53.29,-168.2,59.7,-192.2,61.8,-193.6,57,-193.603,57,-202.6,-76.2,-214,-73.42,-224.05,-66.79,-234.1,-60.15,-241.6,-50.4,-249.1,-40.65,-253.45,-28.16,-257.8,-15.67,-257.8,-1.2,-257.8,4.65,-256.92,9.79,-256.04,14.93,-254.38,18.75,-252.71,22.58,-250.29,24.79,-247.88,27,-244.8,27,-236.25,27,-228.09,17.55,-219.93,8.1,-213.55,-5.7,-207.18,-19.5,-203.29,-35.1,-199.4,-50.7,-199.4,-63,-199.4,-65.02,-199.68,-67.09,-199.95,-69.15,-200.4,-70.95,-200.85,-72.75,-201.43,-74.14,-202,-75.52,-202.6,-76.2,-202.602,-76.198] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [-23.8,-94.8,-23.28,-96.22,-22.15,-97.59,-21.03,-98.95,-19.48,-100.02,-17.92,-101.09,-16.01,-101.74,-14.1,-102.4,-12,-102.4,-7.8,-102.4,-3.81,-101.49,0.19,-100.59,3.3,-99.07,6.41,-97.55,8.31,-95.56,10.2,-93.57,10.2,-91.4,10.2,-90.27,9.69,-89.4,9.17,-88.52,8.5,-87.55,7.82,-86.57,7.16,-85.32,6.5,-84.07,6.2,-82.2,6.05,-81.22,5.96,-79.88,5.87,-78.55,5.8,-76.9,5.72,-75.25,5.64,-73.31,5.55,-71.37,5.4,-69.2,10.43,-69.65,15.24,-70.3,20.06,-70.95,24.3,-71.7,28.54,-72.45,32.01,-73.25,35.47,-74.05,37.8,-74.8,40.42,-75.62,42.17,-76.3,43.91,-76.97,45,-77.65,46.09,-78.32,46.63,-79.07,47.17,-79.82,47.4,-80.8,49.4,-81.4,51.95,-80.65,55.3,-80.33,58.65,-80.02,61.65,-79.47,64.65,-78.93,66.72,-77.83,68.8,-76.72,68.8,-74.4,68.8,-72.67,67.42,-71.45,66.04,-70.23,63.62,-69.27,61.21,-68.32,57.91,-67.51,54.62,-66.7,50.8,-65.8,46.75,-64.9,40.69,-63.93,34.63,-62.96,28.12,-62.1,21.62,-61.23,15.45,-60.57,9.28,-59.9,5,-59.6,4.93,-57.57,4.88,-55.4,4.84,-53.23,4.83,-50.92,4.81,-48.62,4.8,-46.18,4.8,-43.75,4.8,-41.2,4.8,-39.17,4.8,-37.09,4.81,-35,4.83,-32.92,4.84,-30.84,4.88,-28.79,4.93,-26.75,5,-24.8,6.73,-24.87,12.66,-25.37,18.59,-25.87,25.02,-26.82,31.46,-27.78,36.53,-29.21,41.6,-30.65,41.6,-32.6,41.6,-32.97,41.45,-33.41,41.3,-33.85,41,-34.32,40.7,-34.79,40.25,-35.27,39.8,-35.75,39.2,-36.2,41.8,-38.4,43.37,-37.35,44.45,-36.59,45.52,-35.84,46.5,-35.35,47.47,-34.86,48.55,-34.63,49.62,-34.4,51.2,-34.4,53.07,-34.32,55.18,-34.14,57.29,-33.95,59.07,-33.5,60.86,-33.05,62.03,-32.26,63.2,-31.47,63.2,-30.2,63.2,-28.17,62.36,-26.79,61.52,-25.4,59.65,-24.37,57.77,-23.34,54.76,-22.52,51.75,-21.7,47.4,-20.8,43.95,-20.05,39.15,-19.34,34.35,-18.64,28.8,-18,23.25,-17.36,17.25,-16.8,11.25,-16.25,5.4,-15.8,5.55,-11,5.77,-6.54,5.99,-2.09,6.28,1.83,6.56,5.75,6.89,9.04,7.23,12.33,7.6,14.8,8.2,21,15.85,22.88,23.18,25.48,30.51,28.08,36.97,31.03,43.44,33.97,48.78,37.06,54.12,40.15,57.8,43,59.97,44.65,61.5,46.24,63.02,47.84,63.97,49.45,64.93,51.06,65.36,52.73,65.8,54.4,65.8,56.2,65.8,57.4,65.37,58.46,64.95,59.51,64.2,60.3,63.45,61.09,62.42,61.54,61.4,62,60.2,62,59.07,62,57.76,61.79,56.44,61.58,54.92,60.9,53.41,60.23,51.68,58.96,49.95,57.7,48,55.6,44.77,52.08,40.7,48.79,36.62,45.51,31.75,42.55,26.87,39.59,21.22,36.98,15.58,34.38,9.2,32.2,9.28,33.63,9.35,35.17,9.42,36.71,9.48,38.23,9.53,39.74,9.57,41.17,9.6,42.6,9.6,43.8,9.6,50.18,7.5,54.85,5.41,59.52,0.93,62.58,-3.56,65.63,-10.57,67.12,-17.57,68.6,-27.4,68.6,-37.45,68.6,-45.14,66.44,-52.84,64.28,-58.05,60.6,-63.26,56.93,-65.93,52.06,-68.6,47.2,-68.6,41.8,-68.6,35.8,-64.96,31.18,-61.33,26.55,-55.25,23.4,-49.18,20.25,-41.26,18.63,-33.35,17,-24.8,17,-22.25,17,-19.52,17.14,-16.78,17.29,-14.03,17.55,-11.27,17.81,-8.57,18.18,-5.88,18.55,-3.4,19,-3.4,17.2,-3.72,12.42,-4.03,7.64,-4.43,2.23,-4.82,-3.19,-5.17,-8.08,-5.53,-12.97,-5.6,-15,-8.6,-14.7,-12.28,-14.47,-15.96,-14.25,-19.9,-14.1,-23.84,-13.95,-27.82,-13.87,-31.8,-13.8,-35.4,-13.8,-43.2,-13.8,-48.64,-14.87,-54.09,-15.95,-57.5,-17.9,-60.91,-19.85,-62.46,-22.57,-64,-25.3,-64,-28.6,-64,-30.92,-62.54,-33.42,-61.09,-35.91,-58.5,-38.35,-55.91,-40.79,-52.36,-43.06,-48.8,-45.32,-44.6,-47.2,-42.6,-44.4,-46.28,-42.67,-48.95,-40.83,-51.63,-38.99,-53.38,-37.15,-55.12,-35.31,-55.96,-33.54,-56.8,-31.77,-56.8,-30.2,-56.8,-28.1,-55.5,-26.56,-54.19,-25.01,-51.63,-24,-49.06,-22.99,-45.24,-22.49,-41.43,-22,-36.4,-22,-32.88,-22,-28.75,-22.14,-24.63,-22.27,-20.5,-22.5,-16.38,-22.72,-12.55,-23.01,-8.73,-23.3,-5.8,-23.6,-5.95,-27.95,-6.07,-32.45,-6.18,-36.94,-6.28,-41.42,-6.37,-45.9,-6.45,-50.29,-6.53,-54.67,-6.6,-58.8,-10.73,-58.57,-15.58,-58.33,-20.43,-58.08,-25.15,-57.87,-29.88,-57.67,-34.05,-57.53,-38.23,-57.4,-41,-57.4,-47.75,-57.4,-52.96,-58.17,-58.16,-58.94,-62.25,-60.72,-66.34,-62.5,-69.52,-65.41,-72.7,-68.32,-75.4,-72.6,-72.8,-75.8,-70.4,-73.25,-67.21,-71.46,-64.02,-69.67,-60.35,-68.55,-56.67,-67.42,-52.66,-66.91,-48.65,-66.4,-44.6,-66.4,-41.08,-66.4,-36.02,-66.51,-30.97,-66.62,-25.63,-66.82,-20.28,-67.03,-15.27,-67.33,-10.25,-67.62,-6.8,-68,-6.8,-69.42,-6.83,-70.96,-6.86,-72.5,-6.9,-74.02,-6.94,-75.54,-6.97,-76.97,-7,-78.4,-7,-79.6,-7.08,-83.35,-7.31,-86.1,-7.55,-88.85,-8.6,-90.65,-9.65,-92.45,-11.84,-93.32,-14.03,-94.2,-18,-94.2,-18.6,-94.2,-19.2,-94.16,-19.81,-94.12,-20.43,-94.05,-21.04,-93.97,-21.68,-93.86,-22.33,-93.75,-23,-93.6,-23.8,-94.8,-23.8,-94.797,-3,28.2,-5.93,27.38,-9,26.68,-12.08,25.98,-15.15,25.48,-18.23,24.97,-21.23,24.69,-24.23,24.4,-27,24.4,-34.58,24.4,-40.71,25.62,-46.84,26.83,-51.18,29.03,-55.51,31.22,-57.85,34.27,-60.2,37.33,-60.2,41,-60.2,45.28,-57.82,48.44,-55.44,51.59,-51.2,53.68,-46.96,55.76,-41.13,56.78,-35.3,57.8,-28.4,57.8,-21.58,57.8,-16.73,56.89,-11.88,55.98,-8.8,53.98,-5.73,51.97,-4.33,48.77,-2.92,45.58,-3,41,-3,40.33,-2.97,38.52,-2.94,36.72,-2.92,34.68,-2.91,32.63,-2.92,30.79,-2.92,28.95,-3,28.2,-3,28.201] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [152.2,-94.8,152.73,-96.22,153.85,-97.59,154.97,-98.95,156.53,-100.02,158.08,-101.09,159.99,-101.74,161.9,-102.4,164,-102.4,168.2,-102.4,172.19,-101.49,176.19,-100.59,179.3,-99.07,182.41,-97.55,184.31,-95.56,186.2,-93.57,186.2,-91.4,186.2,-90.27,185.69,-89.4,185.18,-88.52,184.5,-87.55,183.83,-86.57,183.16,-85.32,182.5,-84.07,182.2,-82.2,182.05,-81.22,181.96,-79.88,181.88,-78.55,181.8,-76.9,181.73,-75.25,181.64,-73.31,181.55,-71.37,181.4,-69.2,186.43,-69.65,191.24,-70.3,196.06,-70.95,200.3,-71.7,204.54,-72.45,208.01,-73.25,211.48,-74.05,213.8,-74.8,216.42,-75.62,218.17,-76.3,219.91,-76.97,221,-77.65,222.09,-78.32,222.63,-79.07,223.17,-79.82,223.4,-80.8,225.4,-81.4,227.95,-80.65,231.3,-80.33,234.65,-80.02,237.65,-79.47,240.65,-78.93,242.72,-77.83,244.8,-76.72,244.8,-74.4,244.8,-72.67,243.42,-71.45,242.04,-70.23,239.62,-69.27,237.21,-68.32,233.92,-67.51,230.62,-66.7,226.8,-65.8,222.75,-64.9,216.69,-63.93,210.63,-62.96,204.13,-62.1,197.62,-61.23,191.45,-60.57,185.28,-59.9,181,-59.6,180.93,-57.57,180.89,-55.4,180.84,-53.23,180.83,-50.92,180.81,-48.62,180.8,-46.18,180.8,-43.75,180.8,-41.2,180.8,-39.17,180.8,-37.09,180.81,-35,180.83,-32.92,180.84,-30.84,180.89,-28.79,180.93,-26.75,181,-24.8,182.73,-24.87,188.66,-25.37,194.59,-25.87,201.03,-26.82,207.46,-27.78,212.53,-29.21,217.6,-30.65,217.6,-32.6,217.6,-32.97,217.45,-33.41,217.3,-33.85,217,-34.32,216.7,-34.79,216.25,-35.27,215.8,-35.75,215.2,-36.2,217.8,-38.4,219.37,-37.35,220.45,-36.59,221.52,-35.84,222.5,-35.35,223.47,-34.86,224.55,-34.63,225.62,-34.4,227.2,-34.4,229.07,-34.32,231.18,-34.14,233.29,-33.95,235.07,-33.5,236.86,-33.05,238.03,-32.26,239.2,-31.47,239.2,-30.2,239.2,-28.17,238.36,-26.79,237.53,-25.4,235.65,-24.37,233.78,-23.34,230.76,-22.52,227.75,-21.7,223.4,-20.8,219.95,-20.05,215.15,-19.34,210.35,-18.64,204.8,-18,199.25,-17.36,193.25,-16.8,187.25,-16.25,181.4,-15.8,181.55,-11,181.77,-6.54,181.99,-2.09,182.28,1.83,182.56,5.75,182.89,9.04,183.23,12.33,183.6,14.8,184.2,21,191.85,22.88,199.18,25.48,206.51,28.08,212.98,31.03,219.44,33.97,224.78,37.06,230.12,40.15,233.8,43,235.97,44.65,237.5,46.24,239.02,47.84,239.97,49.45,240.93,51.06,241.37,52.73,241.8,54.4,241.8,56.2,241.8,57.4,241.37,58.46,240.95,59.51,240.2,60.3,239.45,61.09,238.42,61.54,237.4,62,236.2,62,235.07,62,233.76,61.79,232.44,61.58,230.92,60.9,229.41,60.23,227.68,58.96,225.95,57.7,224,55.6,220.77,52.08,216.7,48.79,212.63,45.51,207.75,42.55,202.88,39.59,197.23,36.98,191.58,34.38,185.2,32.2,185.28,33.63,185.35,35.17,185.42,36.71,185.48,38.23,185.53,39.74,185.57,41.17,185.6,42.6,185.6,43.8,185.6,50.18,183.5,54.85,181.41,59.52,176.93,62.58,172.44,65.63,165.44,67.12,158.43,68.6,148.6,68.6,138.55,68.6,130.86,66.44,123.16,64.28,117.95,60.6,112.74,56.93,110.07,52.06,107.4,47.2,107.4,41.8,107.4,35.8,111.04,31.18,114.68,26.55,120.75,23.4,126.83,20.25,134.74,18.63,142.65,17,151.2,17,153.75,17,156.49,17.14,159.22,17.29,161.98,17.55,164.73,17.81,167.43,18.18,170.13,18.55,172.6,19,172.6,17.2,172.29,12.42,171.97,7.64,171.58,2.23,171.18,-3.19,170.83,-8.08,170.48,-12.97,170.4,-15,167.4,-14.7,163.72,-14.47,160.04,-14.25,156.1,-14.1,152.16,-13.95,148.18,-13.87,144.2,-13.8,140.6,-13.8,132.8,-13.8,127.36,-14.87,121.91,-15.95,118.5,-17.9,115.09,-19.85,113.55,-22.57,112,-25.3,112,-28.6,112,-30.92,113.46,-33.42,114.91,-35.91,117.5,-38.35,120.09,-40.79,123.65,-43.06,127.2,-45.32,131.4,-47.2,133.4,-44.4,129.73,-42.67,127.05,-40.83,124.37,-38.99,122.63,-37.15,120.88,-35.31,120.04,-33.54,119.2,-31.77,119.2,-30.2,119.2,-28.1,120.5,-26.56,121.81,-25.01,124.38,-24,126.94,-22.99,130.76,-22.49,134.58,-22,139.6,-22,143.13,-22,147.25,-22.14,151.38,-22.27,155.5,-22.5,159.63,-22.72,163.45,-23.01,167.28,-23.3,170.2,-23.6,170.05,-27.95,169.94,-32.45,169.82,-36.94,169.73,-41.42,169.63,-45.9,169.55,-50.29,169.48,-54.67,169.4,-58.8,165.28,-58.57,160.43,-58.33,155.58,-58.08,150.85,-57.87,146.13,-57.67,141.95,-57.53,137.78,-57.4,135,-57.4,128.25,-57.4,123.05,-58.17,117.84,-58.94,113.75,-60.72,109.66,-62.5,106.48,-65.41,103.3,-68.32,100.6,-72.6,103.2,-75.8,105.6,-73.25,108.79,-71.46,111.98,-69.67,115.65,-68.55,119.33,-67.42,123.34,-66.91,127.35,-66.4,131.4,-66.4,134.93,-66.4,139.98,-66.51,145.03,-66.62,150.38,-66.82,155.72,-67.03,160.74,-67.33,165.75,-67.62,169.2,-68,169.2,-69.42,169.17,-70.96,169.14,-72.5,169.1,-74.02,169.06,-75.54,169.03,-76.97,169,-78.4,169,-79.6,168.93,-83.35,168.69,-86.1,168.45,-88.85,167.4,-90.65,166.35,-92.45,164.16,-93.32,161.98,-94.2,158,-94.2,157.4,-94.2,156.8,-94.16,156.2,-94.12,155.58,-94.05,154.96,-93.97,154.32,-93.86,153.68,-93.75,153,-93.6,152.2,-94.8,152.201,-94.797,173,28.2,170.07,27.38,167,26.68,163.92,25.98,160.85,25.48,157.78,24.97,154.78,24.69,151.78,24.4,149,24.4,141.43,24.4,135.29,25.62,129.16,26.83,124.83,29.03,120.49,31.22,118.15,34.27,115.8,37.33,115.8,41,115.8,45.28,118.18,48.44,120.56,51.59,124.8,53.68,129.04,55.76,134.87,56.78,140.7,57.8,147.6,57.8,154.42,57.8,159.27,56.89,164.12,55.98,167.2,53.98,170.27,51.97,171.67,48.77,173.07,45.58,173,41,173,40.33,173.03,38.52,173.06,36.72,173.08,34.68,173.09,32.63,173.08,30.79,173.08,28.95,173,28.2,173,28.201] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [276,-77.4,276.38,-75,277.57,-73.04,278.76,-71.08,280.58,-69.7,282.4,-68.31,284.75,-67.55,287.1,-66.8,289.8,-66.8,291.08,-66.8,293,-66.94,294.93,-67.08,297.1,-67.35,299.28,-67.61,301.5,-67.98,303.73,-68.35,305.6,-68.8,311.53,-70,322.69,-72.04,333.86,-74.08,346.93,-76.27,360,-78.47,373.3,-80.47,386.6,-82.47,396.8,-83.6,399.05,-83.9,401.15,-84.4,403.25,-84.91,405.03,-85.55,406.81,-86.18,408.19,-86.92,409.58,-87.65,410.4,-88.4,416.63,-87.2,421,-85.89,425.37,-84.58,428.13,-83.02,430.88,-81.47,432.14,-79.59,433.4,-77.72,433.4,-75.4,433.4,-74.2,432.76,-73.42,432.12,-72.65,430.95,-72.2,429.79,-71.75,428.17,-71.57,426.55,-71.4,424.6,-71.4,422.95,-71.4,421.14,-71.49,419.32,-71.58,417.43,-71.7,415.53,-71.81,413.61,-71.9,411.68,-72,409.8,-72,401.78,-72,393.05,-68.48,384.32,-64.95,376.25,-59.42,368.19,-53.89,361.49,-47.11,354.78,-40.32,350.8,-33.8,348.33,-30.05,346.18,-25.06,344.02,-20.08,342.43,-14.32,340.84,-8.57,339.92,-2.27,339,4.03,339,10.4,339,21.05,342.08,28.09,345.15,35.13,350.53,39.55,355.91,43.98,363.22,46.29,370.53,48.6,379,49.8,381.1,50.1,383.38,50.16,385.65,50.21,387.73,50.25,389.81,50.29,391.52,50.42,393.23,50.55,394.2,51,396.75,52.05,398.54,53.28,400.33,54.51,401.45,55.88,402.58,57.24,403.09,58.73,403.6,60.23,403.6,61.8,403.6,63.08,403.01,63.98,402.42,64.89,401.28,65.47,400.14,66.06,398.46,66.33,396.78,66.6,394.6,66.6,393.93,66.6,393.22,66.57,392.5,66.53,391.75,66.47,391,66.42,390.22,66.35,389.43,66.27,388.6,66.2,370.3,64.1,358.42,59.88,346.54,55.66,339.6,48.93,332.67,42.19,329.94,32.76,327.21,23.33,327.21,10.8,327.21,-3.6,332.12,-16.37,337.04,-29.15,345.1,-39.95,353.17,-50.75,363.49,-59.4,373.8,-68.05,384.6,-74.2,384.4,-74.8,375.63,-73.9,362.72,-71.63,349.82,-69.37,337.11,-66.42,324.39,-63.48,314.04,-60.2,303.68,-56.92,300.01,-54,298.96,-53.32,297.95,-52.68,296.94,-52.03,295.86,-51.52,294.77,-51.02,293.54,-50.71,292.31,-50.4,290.81,-50.4,287.58,-50.4,284.15,-52.21,280.71,-54.02,277.88,-56.77,275.05,-59.53,273.23,-62.8,271.41,-66.07,271.41,-69,271.41,-70.42,271.63,-71.75,271.85,-73.07,272.28,-74.2,272.71,-75.32,273.35,-76.2,273.98,-77.07,274.81,-77.6,276,-77.4,276.004,-77.397,389.4,-38.4,398.25,-35.32,404.02,-31.97,409.78,-28.62,413.15,-25.4,416.53,-22.17,417.86,-19.27,419.2,-16.37,419.2,-14.2,419.2,-12.92,418.79,-11.83,418.38,-10.73,417.7,-9.92,417.03,-9.12,416.16,-8.66,415.3,-8.2,414.4,-8.2,413.13,-8.2,412.16,-8.56,411.2,-8.93,410.45,-9.62,409.7,-10.32,409.11,-11.32,408.53,-12.32,408,-13.6,406.95,-16,405.06,-18.86,403.17,-21.72,400.53,-24.65,397.88,-27.57,394.53,-30.36,391.18,-33.15,387.2,-35.4,389.4,-38.4,389.403,-38.398,410,-55.6,418.85,-52.52,424.58,-49.14,430.31,-45.76,433.65,-42.5,436.99,-39.24,438.3,-36.3,439.6,-33.37,439.6,-31.2,439.6,-29.92,439.22,-28.86,438.84,-27.79,438.2,-27.02,437.56,-26.25,436.73,-25.83,435.9,-25.4,435,-25.4,433.65,-25.4,432.68,-25.76,431.7,-26.13,430.95,-26.82,430.2,-27.52,429.6,-28.52,429,-29.52,428.4,-30.8,427.43,-33.2,425.55,-36.03,423.66,-38.86,421,-41.75,418.34,-44.64,414.96,-47.39,411.58,-50.15,407.6,-52.4,410,-55.6,410.002,-55.598] ) );
    shape.graphics.endFill();

    return shape;
  },
  "いたくない" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-449.6,-76.2,-449,-77.1,-448.2,-77.74,-447.4,-78.39,-446.48,-78.8,-445.56,-79.21,-444.57,-79.4,-443.58,-79.6,-442.6,-79.6,-438.4,-79.6,-434.35,-77.91,-430.29,-76.23,-427.1,-73.47,-423.91,-70.72,-421.96,-67.19,-420,-63.67,-420,-60,-420,-58.95,-420.3,-57.93,-420.6,-56.92,-421.05,-55.92,-421.5,-54.93,-422.03,-53.95,-422.55,-52.97,-423,-52,-425.25,-45.62,-426.47,-38.54,-427.69,-31.45,-428.25,-25.02,-428.81,-18.59,-428.91,-13.49,-429,-8.4,-429,-6,-429,3.9,-426.67,11.8,-424.35,19.69,-421.18,25.2,-418.01,30.71,-414.74,33.66,-411.48,36.6,-409.6,36.6,-408.55,36.6,-407.65,36.15,-406.75,35.69,-405.7,34.63,-404.65,33.56,-403.3,31.79,-401.95,30.03,-400,27.4,-398.13,24.85,-395.08,20.14,-392.04,15.43,-388.4,9.53,-384.76,3.62,-380.82,-3,-376.88,-9.62,-373.2,-16,-369,-14.4,-372.15,-7.95,-376.04,-0.22,-379.93,7.5,-383.63,15,-387.32,22.5,-390.35,29.03,-393.38,35.55,-394.8,39.6,-394.95,40.05,-395.06,40.47,-395.18,40.88,-395.25,41.28,-395.33,41.67,-395.36,42.05,-395.4,42.43,-395.4,42.8,-395.4,43.33,-395.33,43.81,-395.26,44.29,-395.13,44.7,-395,45.11,-394.81,45.44,-394.63,45.78,-394.4,46,-393.58,46.83,-392.88,47.84,-392.18,48.84,-391.68,49.88,-391.17,50.91,-390.89,51.88,-390.6,52.85,-390.6,53.6,-390.6,54.88,-391.24,55.72,-391.87,56.57,-392.98,57.08,-394.08,57.58,-395.58,57.79,-397.08,58,-398.8,58,-400.23,58,-402.56,57.31,-404.9,56.61,-407.58,55.3,-410.26,53.99,-413.01,52.09,-415.75,50.2,-418,47.8,-423.78,41.95,-427.78,35.1,-431.78,28.26,-434.28,20.93,-436.77,13.6,-437.89,6.04,-439,-1.52,-439,-8.8,-439,-14.35,-438.77,-20.82,-438.54,-27.29,-438.2,-33.72,-437.86,-40.15,-437.48,-46.06,-437.1,-51.97,-436.8,-56.4,-436.8,-58.4,-436.8,-61.62,-437.39,-64.6,-437.98,-67.57,-439.43,-69.9,-440.87,-72.22,-443.3,-73.7,-445.73,-75.17,-449.4,-75.4,-449.6,-76.2,-449.602,-76.198,-331.6,-65.6,-318.03,-62.6,-307.93,-55.76,-297.82,-48.92,-291.13,-40.15,-284.44,-31.37,-281.12,-21.61,-277.81,-11.85,-277.81,-3,-277.81,-0.07,-278.24,2.67,-278.68,5.41,-279.65,7.53,-280.63,9.64,-282.19,10.92,-283.75,12.2,-286,12.2,-287.28,12.2,-288.44,11.67,-289.6,11.14,-290.48,10.05,-291.36,8.96,-291.88,7.31,-292.4,5.65,-292.4,3.4,-292.78,-7.4,-295.55,-17.64,-298.32,-27.89,-303.48,-36.55,-308.64,-45.21,-316.17,-51.78,-323.7,-58.35,-333.6,-61.8,-331.6,-65.6,-331.604,-65.598] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-246.2,-62.4,-244.93,-60.3,-243.46,-58.69,-241.99,-57.09,-240.15,-56,-238.31,-54.91,-236.02,-54.35,-233.73,-53.8,-230.8,-53.8,-228.18,-53.8,-225.03,-54.04,-221.88,-54.29,-218.68,-54.7,-215.47,-55.11,-212.44,-55.65,-209.4,-56.2,-207,-56.8,-206.85,-57.32,-206.3,-59.85,-205.75,-62.39,-205.15,-65.95,-204.55,-69.51,-204.08,-73.62,-203.6,-77.72,-203.6,-81.4,-203.6,-84.25,-204.05,-86.17,-204.5,-88.09,-205.4,-89.25,-206.3,-90.41,-207.65,-90.9,-209,-91.4,-210.8,-91.4,-211.78,-91.4,-212.72,-91.38,-213.67,-91.37,-214.63,-91.27,-215.58,-91.18,-216.57,-90.98,-217.55,-90.77,-218.6,-90.4,-219.4,-91.8,-218.8,-93.15,-217.89,-94.57,-216.97,-95.99,-215.38,-97.15,-213.78,-98.31,-211.33,-99.05,-208.88,-99.8,-205.2,-99.8,-202.13,-99.8,-198.56,-99.01,-194.98,-98.22,-191.93,-96.77,-188.87,-95.33,-186.84,-93.3,-184.8,-91.27,-184.8,-88.8,-184.8,-87.37,-185.17,-86.43,-185.54,-85.48,-186.1,-84.67,-186.67,-83.87,-187.33,-83.03,-188,-82.2,-188.6,-81,-189.2,-79.8,-189.77,-78.19,-190.33,-76.58,-191.03,-74.12,-191.72,-71.67,-192.62,-68.14,-193.53,-64.62,-194.8,-59.6,-187.75,-61.32,-182.07,-63.26,-176.38,-65.19,-172.1,-67.42,-167.83,-69.65,-164.99,-72.23,-162.15,-74.8,-160.8,-77.8,-159,-78,-156.23,-77.85,-153.01,-77.67,-149.78,-77.5,-147.03,-76.9,-144.27,-76.3,-142.44,-75.07,-140.6,-73.85,-140.6,-71.6,-140.6,-69.72,-141.9,-68.18,-143.2,-66.63,-145.6,-65.22,-148,-63.82,-151.4,-62.46,-154.8,-61.1,-159,-59.6,-163.58,-57.95,-168.6,-56.39,-173.62,-54.84,-178.63,-53.45,-183.63,-52.06,-188.39,-50.88,-193.15,-49.7,-197.2,-48.8,-199.68,-39.42,-203.45,-26.92,-207.22,-14.41,-211.15,-2,-215.09,10.41,-218.63,21.12,-222.18,31.83,-224.2,37.6,-227.13,46.37,-229.14,52.07,-231.16,57.76,-232.98,61.07,-234.8,64.39,-236.77,65.7,-238.75,67,-241.6,67,-242.88,67,-243.76,66.56,-244.63,66.12,-245.18,65.12,-245.72,64.13,-245.96,62.53,-246.2,60.92,-246.2,58.6,-246.2,57.55,-246.17,56.35,-246.13,55.14,-246.05,53.77,-245.98,52.41,-245.87,50.86,-245.75,49.32,-245.6,47.6,-242.6,43.55,-240.05,39.33,-237.49,35.12,-235.35,30.97,-233.22,26.83,-231.48,22.88,-229.75,18.92,-228.4,15.4,-226.38,10.15,-223.6,2.25,-220.82,-5.64,-218.03,-14.33,-215.23,-23.01,-212.79,-31.54,-210.35,-40.08,-209,-46.6,-212,-46,-214.77,-45.55,-217.54,-45.1,-220.05,-44.8,-222.57,-44.5,-224.81,-44.35,-227.05,-44.2,-229,-44.2,-234.63,-44.2,-238.39,-45.84,-242.16,-47.48,-244.43,-49.95,-246.7,-52.43,-247.65,-55.34,-248.6,-58.25,-248.6,-60.8,-246.2,-62.4,-246.202,-62.398,-160.4,6.6,-161.83,9.08,-163.04,11.68,-164.25,14.28,-165.13,16.93,-166.01,19.57,-166.51,22.21,-167,24.85,-167,27.4,-167,35.73,-162.8,40.24,-158.59,44.74,-152.25,46.83,-145.92,48.91,-138.49,49.25,-131.05,49.6,-124.6,49.6,-122.35,49.6,-120.38,49.56,-118.41,49.52,-116.63,49.43,-114.85,49.33,-113.21,49.18,-111.58,49.03,-110,48.8,-108.5,48.73,-107.14,48.5,-105.77,48.27,-104.6,48.03,-103.44,47.78,-102.52,47.59,-101.6,47.4,-101,47.4,-98.6,47.4,-96.15,48.07,-93.69,48.73,-91.7,49.88,-89.72,51.02,-88.46,52.55,-87.2,54.08,-87.2,55.8,-87.2,57.98,-89.03,59.31,-90.86,60.64,-94.33,61.38,-97.8,62.11,-102.81,62.35,-107.83,62.6,-114.2,62.6,-127.48,62.6,-138.48,61.44,-149.49,60.29,-157.38,56.95,-165.27,53.61,-169.64,47.58,-174,41.55,-174,31.8,-174,28.58,-173.36,25.19,-172.72,21.81,-171.4,18.38,-170.09,14.95,-168.1,11.52,-166.1,8.1,-163.4,4.8,-160.4,6.6,-160.404,6.601,-145,-13.2,-142.15,-15.6,-138.91,-18.09,-135.66,-20.59,-132.38,-22.95,-129.1,-25.31,-125.96,-27.43,-122.83,-29.55,-120.2,-31.2,-125.75,-31.5,-131.23,-31.13,-136.7,-30.76,-142.23,-29.57,-147.76,-28.39,-153.42,-26.33,-159.08,-24.27,-165,-21.2,-167.4,-24.2,-161.25,-29.3,-154.66,-32.78,-148.06,-36.26,-141.18,-38.4,-134.3,-40.54,-127.21,-41.47,-120.13,-42.4,-113,-42.4,-108.58,-42.4,-104.71,-41.54,-100.85,-40.69,-97.98,-39.3,-95.11,-37.91,-93.46,-36.16,-91.8,-34.4,-91.8,-32.6,-91.8,-31.32,-92.16,-30.54,-92.52,-29.76,-93.15,-29.32,-93.79,-28.89,-94.67,-28.75,-95.55,-28.6,-96.6,-28.6,-97.28,-28.6,-98.02,-28.63,-98.76,-28.66,-99.53,-28.7,-100.3,-28.74,-101.08,-28.77,-101.85,-28.8,-102.6,-28.8,-106.8,-28.8,-111.57,-27.28,-116.34,-25.76,-121.38,-23.22,-126.42,-20.69,-131.6,-17.41,-136.78,-14.12,-141.8,-10.6,-145,-13.2,-145.004,-13.199] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [0.6,-97.4,1.5,-98.82,2.58,-99.88,3.66,-100.93,4.9,-101.62,6.14,-102.32,7.52,-102.66,8.9,-103,10.4,-103,14.45,-103,19.05,-101.59,23.65,-100.18,27.55,-97.87,31.45,-95.57,34.02,-92.62,36.6,-89.67,36.6,-86.6,36.6,-85.17,35.6,-84.19,34.59,-83.2,32.93,-82.3,31.26,-81.4,29.09,-80.41,26.93,-79.42,24.6,-78,18.3,-74.1,9.38,-67.63,0.45,-61.15,-8.55,-54.12,-17.55,-47.09,-25.35,-40.51,-33.15,-33.92,-37.2,-29.8,-38.47,-28.52,-39.51,-26.99,-40.54,-25.45,-41.27,-23.8,-42.01,-22.15,-42.4,-20.46,-42.8,-18.77,-42.8,-17.2,-42.8,-15.4,-41.81,-13.67,-40.83,-11.94,-38.82,-10.1,-36.82,-8.26,-33.77,-6.23,-30.72,-4.2,-26.6,-1.8,-10.1,7.65,2.93,17.51,15.96,27.36,25,36.25,34.04,45.14,38.82,52.37,43.6,59.6,43.6,63.8,43.6,65.75,43.06,67.49,42.52,69.24,41.52,70.55,40.53,71.86,39.13,72.63,37.72,73.4,36,73.4,34.8,73.4,33.41,72.62,32.02,71.84,30.57,70.47,29.13,69.11,27.7,67.24,26.27,65.37,25,63.2,20.95,56.3,14.65,48.29,8.36,40.29,0.28,32.15,-7.81,24.01,-17.44,16.23,-27.07,8.45,-37.8,2,-41.02,-0.02,-43.58,-2.15,-46.14,-4.28,-47.92,-6.62,-49.71,-8.97,-50.65,-11.58,-51.6,-14.2,-51.6,-17.2,-51.6,-19.52,-51.05,-21.83,-50.5,-24.14,-49.45,-26.35,-48.4,-28.56,-46.87,-30.64,-45.35,-32.72,-43.4,-34.6,-39.12,-39.02,-32.66,-45.1,-26.19,-51.18,-19.1,-57.57,-12.01,-63.97,-5.09,-70.01,1.83,-76.05,7,-80.4,8.5,-81.67,9.72,-83.06,10.94,-84.45,11.8,-85.8,12.66,-87.15,13.13,-88.38,13.6,-89.62,13.6,-90.6,13.6,-92.32,12.26,-93.53,10.91,-94.74,9,-95.47,7.09,-96.2,4.99,-96.48,2.9,-96.75,1.4,-96.6,0.6,-97.4,0.6,-97.397] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [115.8,-94.4,116.55,-96.05,117.91,-97.41,119.27,-98.77,121,-99.75,122.72,-100.72,124.69,-101.26,126.65,-101.8,128.6,-101.8,132.2,-101.8,135.77,-100.94,139.35,-100.08,142.2,-98.7,145.05,-97.31,146.82,-95.55,148.6,-93.8,148.6,-92,148.6,-90.2,147.97,-89.11,147.34,-88.02,146.42,-86.75,145.51,-85.47,144.47,-83.56,143.42,-81.65,142.6,-78.2,142.3,-76.7,141.77,-74.94,141.25,-73.19,140.65,-71.37,140.05,-69.55,139.45,-67.76,138.85,-65.97,138.4,-64.4,143.28,-65.3,148.98,-66.74,154.69,-68.18,159.75,-70.22,164.81,-72.27,168.49,-74.94,172.17,-77.62,173,-81,179.9,-81.22,184.14,-80.86,188.37,-80.5,190.7,-79.75,193.02,-79,193.81,-77.96,194.6,-76.92,194.6,-75.8,194.6,-74.22,193.81,-72.97,193.03,-71.72,191.3,-70.57,189.57,-69.43,186.84,-68.29,184.1,-67.15,180.2,-65.8,176.38,-64.45,170.84,-62.83,165.31,-61.22,159.18,-59.65,153.04,-58.07,146.87,-56.68,140.7,-55.3,135.6,-54.4,132.45,-44.42,127.67,-32.54,122.89,-20.65,117.45,-8.97,112.01,2.71,106.41,13.13,100.8,23.55,96,30.6,95.33,31.5,94.52,32.33,93.72,33.16,92.88,33.8,92.03,34.44,91.19,34.82,90.35,35.2,89.6,35.2,88.93,35.2,87.84,34.81,86.76,34.43,85.73,33.45,84.69,32.48,83.95,30.81,83.2,29.15,83.2,26.6,83.2,25.48,83.37,24.15,83.54,22.81,83.95,21.5,84.36,20.19,85.06,19.01,85.75,17.83,86.8,17,91.6,13.03,97.12,5.23,102.64,-2.57,107.85,-12.25,113.06,-21.92,117.46,-32.5,121.85,-43.07,124.4,-52.6,122,-52.3,119.59,-52.04,117.19,-51.78,115.05,-51.57,112.91,-51.37,111.18,-51.22,109.45,-51.07,108.4,-51,104.87,-51,101.79,-51.34,98.7,-51.68,96.15,-52.4,93.6,-53.11,91.64,-54.2,89.67,-55.3,88.4,-56.8,87.65,-57.47,86.86,-58.52,86.07,-59.56,85.4,-60.8,84.72,-62.03,84.24,-63.38,83.75,-64.72,83.6,-66,86.2,-68.4,87.7,-65.92,89.49,-64.27,91.29,-62.62,93.5,-61.62,95.71,-60.63,98.41,-60.21,101.1,-59.8,104.4,-59.8,106.42,-59.8,109.14,-59.94,111.85,-60.08,114.85,-60.35,117.85,-60.61,120.94,-60.98,124.02,-61.35,126.8,-61.8,127.7,-65.62,128.41,-68.91,129.11,-72.2,129.6,-75.07,130.09,-77.94,130.34,-80.44,130.6,-82.95,130.6,-85.2,130.6,-87,130.35,-88.53,130.09,-90.07,129.17,-91.2,128.26,-92.32,126.46,-92.96,124.67,-93.6,121.6,-93.6,121.07,-93.6,120.51,-93.56,119.94,-93.52,119.32,-93.45,118.71,-93.37,118.03,-93.26,117.35,-93.15,116.6,-93,115.8,-94.4,115.8,-94.397,173.4,-40,179.62,-43.37,185.2,-45.61,190.78,-47.84,195.82,-49.17,200.87,-50.5,205.43,-51.05,210,-51.6,214.2,-51.6,221.4,-51.6,227.45,-50.46,233.51,-49.32,237.9,-47.3,242.29,-45.27,244.74,-42.49,247.2,-39.7,247.2,-36.4,247.2,-35.57,246.81,-35,246.42,-34.43,245.75,-34.07,245.07,-33.72,244.16,-33.56,243.25,-33.4,242.2,-33.4,241.37,-33.4,240.53,-33.47,239.68,-33.54,238.87,-33.67,238.07,-33.8,237.33,-33.99,236.6,-34.17,236,-34.4,235.02,-34.85,233.64,-35.19,232.27,-35.52,230.67,-35.75,229.08,-35.97,227.36,-36.09,225.65,-36.2,224,-36.2,223.25,-36.2,222.54,-36.19,221.82,-36.19,221.15,-36.15,220.47,-36.11,219.84,-36.03,219.2,-35.95,218.6,-35.8,210.8,-34,206.29,-31.25,201.79,-28.5,199.5,-24.9,197.21,-21.3,196.6,-16.9,196,-12.5,196,-7.4,196,-3.8,196.07,-1.17,196.41,1.53,196.74,4.23,197.17,6.85,197.6,9.48,198.05,11.95,198.5,14.43,198.8,16.6,198.95,17.2,199.09,17.99,199.24,18.78,199.37,19.6,199.5,20.43,199.61,21.21,199.72,22,199.8,22.6,204.52,24.25,209.32,26.19,214.12,28.13,218.67,30.33,223.23,32.52,227.39,34.95,231.55,37.38,235,40,237.55,41.95,239.21,43.88,240.87,45.81,241.85,47.65,242.82,49.49,243.21,51.19,243.6,52.9,243.6,54.4,243.52,55.6,242.8,56.56,242.09,57.53,241,58.2,239.91,58.88,238.59,59.24,237.27,59.6,236,59.6,234.72,59.6,232.33,57.1,229.94,54.59,225.85,50.83,221.76,47.06,215.69,42.64,209.62,38.23,201,34.4,201.07,35.23,201.14,36.26,201.22,37.3,201.27,38.48,201.33,39.66,201.36,40.96,201.4,42.25,201.4,43.6,201.4,44.43,201.39,45.21,201.39,46,201.37,46.75,201.35,47.5,201.31,48.21,201.27,48.93,201.2,49.6,200.82,53.5,198.65,57.05,196.47,60.6,192.2,63.3,187.92,66,181.4,67.6,174.87,69.2,165.8,69.2,157.32,69.2,150.33,67.24,143.33,65.28,138.32,61.78,133.32,58.27,130.56,53.42,127.8,48.58,127.8,42.8,127.8,37.1,130.88,32.45,133.96,27.8,139.25,24.5,144.54,21.2,151.59,19.4,158.65,17.6,166.6,17.6,168.92,17.6,171.8,17.81,174.68,18.02,177.62,18.38,180.57,18.73,183.33,19.21,186.1,19.68,188.2,20.2,188.12,18.85,187.77,15.34,187.42,11.83,187.02,7.85,186.63,3.88,186.31,0.29,186,-3.3,186,-4.8,186,-10.95,187.31,-16.33,188.62,-21.71,192.12,-26.27,195.63,-30.83,201.78,-34.52,207.92,-38.22,217.6,-41,217.6,-42,216.55,-42.22,215.39,-42.41,214.23,-42.59,212.97,-42.72,211.72,-42.85,210.37,-42.92,209.02,-43,207.6,-43,204.45,-43,200.85,-42.63,197.25,-42.27,193.2,-41.45,189.15,-40.62,184.65,-39.28,180.15,-37.95,175.2,-36,173.4,-40,173.399,-39.998,189,29.4,186.52,28.35,183.44,27.5,180.36,26.65,177.07,26.05,173.79,25.45,170.52,25.13,167.25,24.8,164.4,24.8,158.77,24.8,153.73,26.05,148.68,27.29,144.87,29.53,141.07,31.76,138.83,34.84,136.6,37.93,136.6,41.6,136.6,45.73,138.42,48.9,140.25,52.07,143.85,54.23,147.45,56.38,152.8,57.49,158.15,58.6,165.2,58.6,171.87,58.6,176.55,57.56,181.23,56.52,184.17,54.63,187.12,52.73,188.46,50.08,189.8,47.43,189.8,44.2,189.8,42.33,189.73,40.2,189.66,38.08,189.55,36.05,189.44,34.03,189.29,32.28,189.15,30.53,189,29.4,188.999,29.401] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [276.4,-76.2,277,-77.1,277.81,-77.74,278.61,-78.39,279.53,-78.8,280.45,-79.21,281.44,-79.4,282.43,-79.6,283.4,-79.6,287.6,-79.6,291.66,-77.91,295.71,-76.23,298.9,-73.47,302.09,-70.72,304.05,-67.19,306,-63.67,306,-60,306,-58.95,305.7,-57.93,305.4,-56.92,304.95,-55.92,304.5,-54.93,303.98,-53.95,303.45,-52.97,303,-52,300.75,-45.62,299.53,-38.54,298.31,-31.45,297.75,-25.02,297.19,-18.59,297.1,-13.49,297,-8.4,297,-6,297,3.9,299.33,11.8,301.66,19.69,304.83,25.2,308,30.71,311.26,33.66,314.53,36.6,316.4,36.6,317.45,36.6,318.35,36.15,319.25,35.69,320.3,34.63,321.35,33.56,322.7,31.79,324.05,30.03,326,27.4,327.88,24.85,330.92,20.14,333.96,15.43,337.6,9.53,341.24,3.62,345.18,-3,349.13,-9.62,352.8,-16,357,-14.4,353.85,-7.95,349.96,-0.22,346.07,7.5,342.38,15,338.68,22.5,335.66,29.03,332.63,35.55,331.2,39.6,331.05,40.05,330.94,40.47,330.83,40.88,330.75,41.28,330.68,41.67,330.64,42.05,330.6,42.43,330.6,42.8,330.6,43.33,330.67,43.81,330.75,44.29,330.88,44.7,331.01,45.11,331.19,45.44,331.38,45.78,331.6,46,332.43,46.83,333.12,47.84,333.82,48.84,334.33,49.88,334.83,50.91,335.12,51.88,335.4,52.85,335.4,53.6,335.4,54.88,334.77,55.72,334.13,56.57,333.03,57.08,331.92,57.58,330.42,57.79,328.93,58,327.2,58,325.78,58,323.44,57.31,321.11,56.61,318.43,55.3,315.75,53.99,313,52.09,310.25,50.2,308,47.8,302.23,41.95,298.22,35.1,294.22,28.26,291.73,20.93,289.23,13.6,288.12,6.04,287,-1.52,287,-8.8,287,-14.35,287.23,-20.82,287.46,-27.29,287.8,-33.72,288.14,-40.15,288.52,-46.06,288.9,-51.97,289.2,-56.4,289.2,-58.4,289.2,-61.62,288.61,-64.6,288.02,-67.57,286.58,-69.9,285.13,-72.22,282.71,-73.7,280.28,-75.17,276.6,-75.4,276.4,-76.2,276.402,-76.198,394.4,-65.6,407.97,-62.6,418.08,-55.76,428.18,-48.92,434.87,-40.15,441.57,-31.37,444.88,-21.61,448.2,-11.85,448.2,-3,448.2,-0.07,447.76,2.67,447.32,5.41,446.35,7.53,445.37,9.64,443.81,10.92,442.25,12.2,440,12.2,438.72,12.2,437.56,11.67,436.41,11.14,435.52,10.05,434.64,8.96,434.12,7.31,433.6,5.65,433.6,3.4,433.22,-7.4,430.45,-17.64,427.68,-27.89,422.52,-36.55,417.37,-45.21,409.83,-51.78,402.3,-58.35,392.4,-61.8,394.4,-65.6,394.4,-65.598] ) );
    shape.graphics.endFill();

    return shape;
  },
  "こんなのは" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [-422.4,-27.4,-426.75,-22.9,-430.17,-18.05,-433.59,-13.2,-435.95,-8.25,-438.32,-3.3,-439.56,1.63,-440.8,6.55,-440.8,11.2,-440.8,18.03,-438,24,-435.2,29.98,-429.18,34.43,-423.16,38.87,-413.72,41.44,-404.28,44,-391,44,-381.63,44,-373.82,43.56,-366,43.12,-360,42.28,-354,41.43,-349.94,40.2,-345.88,38.98,-344,37.4,-339.13,38.08,-335.43,39.03,-331.72,39.98,-329.23,41.25,-326.74,42.53,-325.47,44.15,-324.21,45.78,-324.21,47.8,-324.21,50.73,-328.87,52.5,-333.54,54.27,-342.03,55.23,-350.52,56.18,-362.43,56.49,-374.33,56.8,-388.81,56.8,-407.78,56.8,-419.71,52.73,-431.65,48.66,-438.38,42.7,-445.11,36.74,-447.56,29.97,-450,23.2,-450,17.8,-450,12.48,-448.97,6.81,-447.94,1.15,-445.18,-4.85,-442.42,-10.85,-437.6,-17.19,-432.78,-23.52,-425.2,-30.2,-422.4,-27.4,-422.404,-27.398,-369.61,-67.8,-376.13,-66.82,-383.31,-65.45,-390.49,-64.08,-397.36,-62.82,-404.22,-61.57,-410.27,-60.68,-416.33,-59.8,-420.61,-59.8,-425.25,-59.8,-428.99,-61.47,-432.73,-63.14,-435.36,-65.65,-437.98,-68.16,-439.39,-71.1,-440.81,-74.05,-440.81,-76.6,-440.81,-77.27,-440.66,-78,-440.52,-78.73,-440.28,-79.42,-440.04,-80.12,-439.71,-80.73,-439.38,-81.35,-439,-81.8,-437.61,-81.6,-437.31,-80.1,-436.03,-78.35,-434.75,-76.6,-432.21,-75.1,-429.66,-73.6,-425.68,-72.6,-421.71,-71.6,-416,-71.6,-410.08,-71.6,-401.27,-72.62,-392.47,-73.65,-383.96,-75.15,-375.44,-76.65,-368.81,-78.35,-362.18,-80.05,-360.61,-81.4,-354.31,-80.5,-350.36,-79.05,-346.42,-77.6,-344.21,-75.82,-341.99,-74.04,-341.2,-72.03,-340.41,-70.02,-340.41,-68,-340.41,-66.8,-341.36,-65.86,-342.32,-64.92,-343.86,-64.25,-345.39,-63.57,-347.32,-63.16,-349.26,-62.75,-351.21,-62.6,-356.08,-62.37,-362.94,-60.21,-369.79,-58.04,-377.26,-54.87,-384.72,-51.7,-392.1,-48,-399.48,-44.3,-405.41,-41,-408.01,-44,-404.56,-46.7,-399.58,-49.81,-394.6,-52.92,-389.33,-56,-384.06,-59.07,-379.12,-61.89,-374.18,-64.7,-370.81,-66.8,-369.61,-67.8,-369.605,-67.798] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-265.8,8,-261.53,2.9,-256.32,-1.99,-251.11,-6.87,-245.28,-10.7,-239.45,-14.52,-233.15,-16.86,-226.85,-19.2,-220.4,-19.2,-215.45,-19.2,-210.77,-17.7,-206.09,-16.19,-202.45,-12.72,-198.82,-9.26,-196.61,-3.59,-194.4,2.08,-194.4,10.4,-194.4,13.63,-194.53,16.88,-194.65,20.13,-194.8,23.23,-194.95,26.32,-195.08,29.16,-195.2,32,-195.2,34.4,-195.2,39.28,-193.53,42.79,-191.85,46.31,-189,48.58,-186.15,50.84,-182.38,51.92,-178.6,53,-174.4,53,-165.48,53,-158.07,49.76,-150.67,46.53,-144.55,40.3,-138.44,34.08,-133.51,24.99,-128.58,15.9,-124.61,4.2,-120.81,5.4,-124.03,20.25,-129.02,31.58,-134.02,42.9,-140.8,50.55,-147.59,58.2,-156.18,62.1,-164.78,66,-175.2,66,-183.08,66,-189.22,64.06,-195.36,62.13,-199.58,58.3,-203.8,54.48,-206,48.79,-208.2,43.1,-208.2,35.6,-208.2,32.98,-208.08,29.81,-207.95,26.65,-207.8,23.5,-207.65,20.35,-207.53,17.49,-207.4,14.63,-207.4,12.6,-207.4,5.18,-208.11,0.28,-208.82,-4.62,-210.68,-7.52,-212.53,-10.43,-215.76,-11.61,-218.98,-12.8,-224,-12.8,-229.1,-12.8,-234.97,-9.9,-240.85,-7,-246.68,-2.07,-252.51,2.86,-257.89,9.39,-263.28,15.93,-267.4,23.2,-269.88,27.48,-271.79,32.27,-273.7,37.06,-275.2,41.75,-276.7,46.44,-277.86,50.71,-279.03,54.98,-280,58.2,-280.68,60.53,-281.55,62.07,-282.42,63.61,-283.53,64.53,-284.63,65.44,-285.99,65.82,-287.35,66.2,-289,66.2,-290.13,66.2,-291.49,65.57,-292.85,64.94,-294.03,63.73,-295.21,62.51,-296.01,60.72,-296.8,58.93,-296.8,56.6,-296.8,54.58,-296.37,52.74,-295.94,50.91,-295.3,49.3,-294.66,47.69,-293.93,46.31,-293.2,44.93,-292.6,43.8,-291.18,41.48,-289.09,36.83,-287.01,32.18,-284.33,25.83,-281.65,19.47,-278.4,11.71,-275.15,3.95,-271.4,-4.6,-266.9,-14.8,-261.52,-26.34,-256.13,-37.87,-251.28,-48.3,-246.42,-58.72,-242.8,-66.81,-239.18,-74.9,-238.2,-78.2,-237.9,-79.02,-237.71,-79.77,-237.52,-80.52,-237.4,-81.2,-237.29,-81.87,-237.25,-82.47,-237.2,-83.07,-237.2,-83.6,-237.2,-86.3,-238.76,-87.73,-240.32,-89.15,-242.45,-89.77,-244.59,-90.39,-246.82,-90.43,-249.05,-90.47,-250.4,-90.4,-250.8,-91,-250.13,-92.42,-248.93,-93.7,-247.74,-94.97,-246.2,-95.95,-244.67,-96.92,-242.87,-97.52,-241.08,-98.12,-239.2,-98.2,-235.3,-98.12,-231.32,-97.13,-227.33,-96.13,-224.1,-94.3,-220.88,-92.46,-218.84,-89.82,-216.8,-87.17,-216.8,-83.8,-216.8,-82.3,-217.72,-81.03,-218.63,-79.77,-220.08,-78.32,-221.52,-76.88,-223.3,-75.05,-225.08,-73.22,-226.8,-70.6,-231.98,-62.42,-237.57,-52.22,-243.17,-42.02,-248.48,-31.42,-253.78,-20.83,-258.44,-10.66,-263.1,-0.5,-266.4,7.6,-265.8,8,-265.802,8.001] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [-67.2,-94.4,-66.45,-96.05,-65.09,-97.41,-63.73,-98.77,-62,-99.75,-60.28,-100.72,-58.31,-101.26,-56.35,-101.8,-54.4,-101.8,-50.8,-101.8,-47.23,-100.94,-43.65,-100.08,-40.8,-98.7,-37.95,-97.31,-36.18,-95.55,-34.4,-93.8,-34.4,-92,-34.4,-90.2,-35.03,-89.11,-35.66,-88.02,-36.58,-86.75,-37.5,-85.47,-38.54,-83.56,-39.58,-81.65,-40.4,-78.2,-40.7,-76.7,-41.23,-74.94,-41.75,-73.19,-42.35,-71.37,-42.95,-69.55,-43.55,-67.76,-44.15,-65.97,-44.6,-64.4,-39.73,-65.3,-34.02,-66.74,-28.31,-68.18,-23.25,-70.22,-18.19,-72.27,-14.51,-74.94,-10.83,-77.62,-10,-81,-3.1,-81.22,1.14,-80.86,5.37,-80.5,7.7,-79.75,10.02,-79,10.81,-77.96,11.6,-76.92,11.6,-75.8,11.6,-74.22,10.81,-72.97,10.02,-71.72,8.3,-70.57,6.57,-69.43,3.84,-68.29,1.1,-67.15,-2.8,-65.8,-6.63,-64.45,-12.16,-62.83,-17.7,-61.22,-23.83,-59.65,-29.96,-58.07,-36.13,-56.68,-42.3,-55.3,-47.4,-54.4,-50.55,-44.42,-55.33,-32.54,-60.11,-20.65,-65.55,-8.97,-70.99,2.71,-76.59,13.13,-82.2,23.55,-87,30.6,-87.68,31.5,-88.48,32.33,-89.28,33.16,-90.13,33.8,-90.97,34.44,-91.81,34.82,-92.65,35.2,-93.4,35.2,-94.08,35.2,-95.16,34.81,-96.24,34.43,-97.28,33.45,-98.31,32.48,-99.05,30.81,-99.8,29.15,-99.8,26.6,-99.8,25.48,-99.63,24.15,-99.46,22.81,-99.05,21.5,-98.64,20.19,-97.94,19.01,-97.25,17.83,-96.2,17,-91.4,13.03,-85.88,5.23,-80.36,-2.57,-75.15,-12.25,-69.94,-21.92,-65.55,-32.5,-61.15,-43.07,-58.6,-52.6,-61,-52.3,-63.41,-52.04,-65.81,-51.78,-67.95,-51.57,-70.09,-51.37,-71.82,-51.22,-73.55,-51.07,-74.6,-51,-78.13,-51,-81.21,-51.34,-84.3,-51.68,-86.85,-52.4,-89.4,-53.11,-91.36,-54.2,-93.33,-55.3,-94.6,-56.8,-95.35,-57.47,-96.14,-58.52,-96.93,-59.56,-97.6,-60.8,-98.28,-62.03,-98.76,-63.38,-99.25,-64.72,-99.4,-66,-96.8,-68.4,-95.3,-65.92,-93.51,-64.27,-91.71,-62.62,-89.5,-61.62,-87.29,-60.63,-84.6,-60.21,-81.9,-59.8,-78.6,-59.8,-76.58,-59.8,-73.86,-59.94,-71.15,-60.08,-68.15,-60.35,-65.15,-60.61,-62.06,-60.98,-58.98,-61.35,-56.2,-61.8,-55.3,-65.62,-54.6,-68.91,-53.89,-72.2,-53.4,-75.07,-52.92,-77.94,-52.66,-80.44,-52.4,-82.95,-52.4,-85.2,-52.4,-87,-52.66,-88.53,-52.91,-90.07,-53.83,-91.2,-54.75,-92.32,-56.54,-92.96,-58.33,-93.6,-61.4,-93.6,-61.93,-93.6,-62.49,-93.56,-63.06,-93.52,-63.68,-93.45,-64.3,-93.37,-64.97,-93.26,-65.65,-93.15,-66.4,-93,-67.2,-94.4,-67.202,-94.397,-9.6,-40,-3.38,-43.37,2.2,-45.61,7.78,-47.84,12.82,-49.17,17.87,-50.5,22.43,-51.05,27,-51.6,31.2,-51.6,38.4,-51.6,44.45,-50.46,50.51,-49.32,54.9,-47.3,59.28,-45.27,61.74,-42.49,64.2,-39.7,64.2,-36.4,64.2,-35.57,63.81,-35,63.42,-34.43,62.75,-34.07,62.07,-33.72,61.16,-33.56,60.25,-33.4,59.2,-33.4,58.37,-33.4,57.52,-33.47,56.68,-33.54,55.87,-33.67,55.06,-33.8,54.33,-33.99,53.6,-34.17,53,-34.4,52.02,-34.85,50.64,-35.19,49.26,-35.52,47.67,-35.75,46.08,-35.97,44.36,-36.09,42.65,-36.2,41,-36.2,40.25,-36.2,39.53,-36.19,38.82,-36.19,38.15,-36.15,37.47,-36.11,36.83,-36.03,36.2,-35.95,35.6,-35.8,27.8,-34,23.29,-31.25,18.78,-28.5,16.5,-24.9,14.21,-21.3,13.6,-16.9,13,-12.5,13,-7.4,13,-3.8,13.07,-1.17,13.41,1.53,13.74,4.23,14.17,6.85,14.6,9.48,15.05,11.95,15.5,14.43,15.8,16.6,15.95,17.2,16.09,17.99,16.24,18.78,16.37,19.6,16.5,20.43,16.61,21.21,16.72,22,16.8,22.6,21.52,24.25,26.32,26.19,31.11,28.13,35.67,30.33,40.23,32.52,44.39,34.95,48.55,37.38,52,40,54.55,41.95,56.21,43.88,57.87,45.81,58.85,47.65,59.82,49.49,60.21,51.19,60.6,52.9,60.6,54.4,60.52,55.6,59.8,56.56,59.08,57.53,58,58.2,56.91,58.88,55.59,59.24,54.27,59.6,53,59.6,51.72,59.6,49.33,57.1,46.93,54.59,42.85,50.83,38.76,47.06,32.69,42.64,26.62,38.23,18,34.4,18.07,35.23,18.14,36.26,18.21,37.3,18.27,38.48,18.33,39.66,18.36,40.96,18.4,42.25,18.4,43.6,18.4,44.43,18.39,45.21,18.39,46,18.37,46.75,18.35,47.5,18.31,48.21,18.27,48.93,18.2,49.6,17.82,53.5,15.65,57.05,13.47,60.6,9.2,63.3,4.92,66,-1.6,67.6,-8.13,69.2,-17.2,69.2,-25.68,69.2,-32.67,67.24,-39.67,65.28,-44.68,61.78,-49.68,58.27,-52.44,53.42,-55.2,48.58,-55.2,42.8,-55.2,37.1,-52.12,32.45,-49.04,27.8,-43.75,24.5,-38.47,21.2,-31.41,19.4,-24.35,17.6,-16.4,17.6,-14.08,17.6,-11.2,17.81,-8.32,18.02,-5.38,18.38,-2.43,18.73,0.33,19.21,3.1,19.68,5.2,20.2,5.12,18.85,4.77,15.34,4.42,11.83,4.02,7.85,3.63,3.88,3.31,0.29,3,-3.3,3,-4.8,3,-10.95,4.31,-16.33,5.62,-21.71,9.12,-26.27,12.63,-30.83,18.78,-34.52,24.92,-38.22,34.6,-41,34.6,-42,33.55,-42.22,32.39,-42.41,31.23,-42.59,29.97,-42.72,28.72,-42.85,27.37,-42.92,26.02,-43,24.6,-43,21.45,-43,17.85,-42.63,14.25,-42.27,10.2,-41.45,6.15,-40.62,1.65,-39.28,-2.85,-37.95,-7.8,-36,-9.6,-40,-9.603,-39.998,6,29.4,3.52,28.35,0.44,27.5,-2.65,26.65,-5.93,26.05,-9.21,25.45,-12.48,25.13,-15.75,24.8,-18.6,24.8,-24.23,24.8,-29.27,26.05,-34.32,27.29,-38.13,29.53,-41.93,31.76,-44.17,34.84,-46.4,37.93,-46.4,41.6,-46.4,45.73,-44.58,48.9,-42.75,52.07,-39.15,54.23,-35.55,56.38,-30.2,57.49,-24.85,58.6,-17.8,58.6,-11.13,58.6,-6.45,57.56,-1.77,56.52,1.17,54.63,4.12,52.73,5.46,50.08,6.8,47.43,6.8,44.2,6.8,42.33,6.73,40.2,6.66,38.08,6.55,36.05,6.43,34.03,6.29,32.28,6.15,30.53,6,29.4,5.997,29.401] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [171.4,57,192.1,54.15,206.5,47.48,220.9,40.81,229.9,31.55,238.9,22.29,242.95,11.04,247,-0.2,247,-12.2,247,-25.85,243.64,-38.05,240.27,-50.26,232.85,-59.45,225.42,-68.64,213.59,-74.02,201.75,-79.4,184.8,-79.4,183.37,-79.4,181.24,-79.25,179.11,-79.11,176.75,-78.85,174.39,-78.59,172.03,-78.22,169.67,-77.85,167.8,-77.4,169.6,-76.12,171.01,-74.05,172.42,-71.97,173.4,-69.35,174.37,-66.72,174.89,-63.67,175.4,-60.62,175.4,-57.4,175.4,-43.6,170.84,-26.5,166.28,-9.4,158.57,5.6,150.87,20.6,140.72,30.8,130.57,41,119.4,41,114.08,41,109.63,37.98,105.18,34.97,101.97,29.48,98.77,23.98,96.98,16.28,95.2,8.58,95.2,-0.8,95.2,-18.12,101.93,-33.48,108.66,-48.83,120.7,-60.32,132.74,-71.82,149.37,-78.51,166,-85.2,185.8,-85.2,204.25,-85.2,218.4,-79.74,232.55,-74.28,242.15,-64.47,251.75,-54.67,256.67,-41.07,261.6,-27.47,261.6,-11.2,261.6,2.83,256.72,15.2,251.85,27.57,241.2,37.23,230.55,46.88,213.67,53.29,196.8,59.7,172.8,61.8,171.4,57,171.399,57,162.4,-76.2,151,-73.42,140.95,-66.79,130.9,-60.15,123.4,-50.4,115.9,-40.65,111.55,-28.16,107.2,-15.67,107.2,-1.2,107.2,4.65,108.08,9.79,108.96,14.93,110.63,18.75,112.29,22.58,114.71,24.79,117.13,27,120.2,27,128.75,27,136.91,17.55,145.08,8.1,151.45,-5.7,157.83,-19.5,161.71,-35.1,165.6,-50.7,165.6,-63,165.6,-65.02,165.33,-67.09,165.05,-69.15,164.6,-70.95,164.15,-72.75,163.57,-74.14,163,-75.52,162.4,-76.2,162.4,-76.198] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [300,-88.2,300.6,-89.02,301.59,-89.66,302.58,-90.29,303.7,-90.72,304.83,-91.15,305.97,-91.38,307.1,-91.6,308,-91.6,310.85,-91.6,314.18,-89.98,317.5,-88.35,320.35,-85.67,323.2,-82.99,325.1,-79.53,327,-76.07,327,-72.4,327,-70.75,326.57,-69.52,326.13,-68.29,325.48,-67.22,324.82,-66.15,324.05,-65.11,323.28,-64.07,322.6,-62.8,318.7,-55.45,315.4,-46.93,312.1,-38.42,309.7,-29.05,307.3,-19.67,305.95,-9.59,304.6,0.5,304.6,11,304.6,15.95,305.12,20.13,305.63,24.31,306.48,27.35,307.32,30.39,308.4,32.1,309.48,33.8,310.6,33.8,311.65,33.8,314.62,28.96,317.59,24.13,321.15,17.45,324.72,10.78,328.21,3.76,331.7,-3.25,333.8,-7.6,338,-6,334.63,2.4,331.27,10.75,327.91,19.09,325.23,26.1,322.55,33.11,320.87,38.16,319.2,43.2,319.2,45,319.2,46.5,319.48,47.83,319.77,49.16,320.1,50.55,320.44,51.94,320.72,53.5,321,55.05,321,57,321,58.5,320.67,59.88,320.34,61.25,319.7,62.3,319.07,63.35,318.13,63.98,317.2,64.6,316,64.6,312.7,64.6,309.01,61.21,305.32,57.82,302.2,51.28,299.09,44.73,297.05,35.16,295,25.58,295,13.2,295,4.65,296.01,-4.33,297.02,-13.32,298.55,-21.92,300.09,-30.53,301.92,-38.35,303.75,-46.17,305.4,-52.4,306.23,-55.4,306.99,-58.33,307.75,-61.27,308.33,-64.05,308.91,-66.82,309.26,-69.38,309.6,-71.95,309.6,-74.2,309.6,-76.67,309.2,-78.93,308.8,-81.2,307.75,-83,306.7,-84.8,304.88,-86.01,303.05,-87.22,300.2,-87.6,300,-88.2,300.003,-88.197,387.6,-89.8,388.05,-91.45,389.08,-92.81,390.1,-94.17,391.6,-95.15,393.1,-96.12,395.03,-96.66,396.95,-97.2,399.2,-97.2,402.73,-97.2,406.26,-96.2,409.8,-95.21,412.63,-93.6,415.46,-91.98,417.23,-89.94,419,-87.9,419,-85.8,419,-84.75,418.74,-83.83,418.47,-82.92,418.08,-82.07,417.68,-81.23,417.23,-80.43,416.78,-79.62,416.4,-78.8,415.95,-77.97,415.7,-76.39,415.46,-74.82,415.33,-72.77,415.19,-70.73,415.14,-68.36,415.08,-66,415,-63.6,414.93,-61.8,414.82,-59.97,414.71,-58.13,414.6,-56.3,414.49,-54.46,414.38,-52.63,414.28,-50.8,414.2,-49,421.03,-50.05,425.06,-51.18,429.09,-52.32,431.33,-53.57,433.56,-54.83,434.48,-56.23,435.4,-57.62,436,-59.2,439.9,-58.9,443.17,-58.41,446.44,-57.92,448.8,-57.07,451.16,-56.23,452.48,-54.95,453.8,-53.67,453.8,-51.8,453.8,-50,452.89,-48.76,451.98,-47.53,450.1,-46.57,448.23,-45.62,445.36,-44.79,442.5,-43.97,438.6,-43,436.65,-42.47,433.92,-41.89,431.18,-41.3,427.98,-40.72,424.77,-40.14,421.25,-39.59,417.73,-39.05,414.2,-38.6,414.2,-35.82,414.26,-33.18,414.33,-30.53,414.4,-28.07,414.48,-25.62,414.54,-23.38,414.6,-21.15,414.6,-19.2,414.6,-12.07,414.88,-6.11,415.16,-0.15,415.63,4.8,416.09,9.75,416.71,13.76,417.33,17.78,418,21,422.88,23.03,429.17,26.24,435.47,29.45,441.08,33.5,446.68,37.55,450.54,42.26,454.4,46.98,454.4,52,454.4,53.28,453.92,54.41,453.43,55.53,452.63,56.38,451.82,57.22,450.77,57.71,449.73,58.2,448.6,58.2,447.7,58.2,446.73,57.86,445.75,57.51,444.7,56.78,443.65,56.05,442.53,54.91,441.4,53.78,440.2,52.2,438.25,49.73,435.71,47.17,433.16,44.61,430.35,42.25,427.54,39.89,424.62,37.86,421.7,35.83,419,34.4,419.08,35.53,419.12,36.93,419.16,38.33,419.18,39.75,419.19,41.18,419.2,42.5,419.2,43.83,419.2,44.8,419.05,49.9,417.06,53.85,415.08,57.8,411.25,60.5,407.43,63.2,401.76,64.6,396.1,66,388.6,66,379.68,66,372.56,64.07,365.45,62.13,360.48,58.63,355.51,55.12,352.86,50.22,350.2,45.33,350.2,39.4,350.2,33.78,353,29.32,355.79,24.87,360.7,21.78,365.61,18.68,372.31,17.04,379,15.4,386.8,15.4,389.13,15.4,391.6,15.55,394.07,15.7,396.53,15.98,398.98,16.26,401.34,16.67,403.7,17.08,405.8,17.6,405.35,13.63,404.92,7.18,404.49,0.74,404.15,-6.8,403.81,-14.34,403.61,-22.28,403.4,-30.22,403.4,-37.2,399.88,-36.67,396.42,-36.29,392.97,-35.92,389.73,-35.67,386.48,-35.43,383.52,-35.31,380.55,-35.2,378,-35.2,374.33,-35.2,370.65,-35.93,366.97,-36.67,363.55,-38.22,360.14,-39.78,357.13,-42.2,354.13,-44.62,351.8,-48,354,-51.2,357,-48.8,359.89,-47.43,362.77,-46.07,365.53,-45.4,368.28,-44.72,370.91,-44.56,373.53,-44.4,376,-44.4,379.08,-44.4,382.53,-44.55,385.98,-44.7,389.53,-45,393.07,-45.3,396.56,-45.75,400.05,-46.2,403.2,-46.8,403.2,-64.8,403.2,-71.55,402.89,-76.23,402.57,-80.92,401.43,-83.85,400.28,-86.77,398.06,-88.08,395.83,-89.4,392,-89.4,391.63,-89.4,391.18,-89.36,390.74,-89.33,390.25,-89.27,389.77,-89.22,389.25,-89.14,388.73,-89.07,388.2,-89,387.6,-89.8,387.602,-89.797,406.6,27.8,404.05,26.68,401.41,25.79,398.78,24.89,396.15,24.28,393.53,23.66,390.96,23.33,388.4,23,386,23,380.08,23,374.96,24.07,369.85,25.14,366.08,27.2,362.31,29.26,360.16,32.28,358,35.3,358,39.2,358,43.25,360.08,46.23,362.15,49.2,365.9,51.15,369.65,53.1,374.88,54.05,380.1,55,386.4,55,392.1,55,396,53.98,399.9,52.96,402.3,50.73,404.7,48.49,405.75,44.96,406.8,41.43,406.8,36.4,406.8,35.43,406.8,34.44,406.79,33.45,406.78,32.4,406.76,31.35,406.72,30.21,406.68,29.08,406.6,27.8,406.602,27.801] ) );
    shape.graphics.endFill();

    return shape;
  },
  "違うはず" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,2,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,1,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,1,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,3,3,3,3,2,2,2] ), $.toNumberVector( [-315,-17.4,-315.53,-16.87,-316.37,-16.33,-317.2,-15.78,-318.4,-15.27,-319.6,-14.77,-321.19,-14.33,-322.78,-13.9,-324.8,-13.6,-324.8,41,-319.4,47.08,-313.46,50.77,-307.52,54.47,-299.93,56.47,-292.34,58.48,-282.53,59.14,-272.73,59.8,-259.61,59.8,-250.46,59.8,-240.05,59.76,-229.64,59.72,-218.96,59.63,-208.27,59.53,-197.79,59.38,-187.31,59.22,-178.01,59,-178.01,61.8,-180.18,62.17,-181.9,63.04,-183.62,63.9,-184.88,65.25,-186.14,66.6,-186.92,68.44,-187.71,70.27,-188.01,72.6,-259.41,72.6,-273.28,72.6,-283.65,71.49,-294.01,70.39,-301.98,67.35,-309.95,64.31,-316.08,58.93,-322.2,53.55,-327.6,45,-330.38,48.3,-333.81,52.03,-337.24,55.77,-340.78,59.42,-344.32,63.08,-347.71,66.4,-351.1,69.72,-353.8,72.2,-353.65,73.17,-353.73,73.91,-353.8,74.64,-354.08,75.2,-354.36,75.76,-354.84,76.19,-355.33,76.62,-356,77,-365.4,60.8,-362.85,59.6,-359.59,57.85,-356.33,56.11,-352.65,54.02,-348.98,51.94,-345.04,49.63,-341.11,47.32,-337.2,45,-337.2,-16.4,-363.6,-16.4,-364.6,-21.4,-340,-21.4,-332.2,-31.8,-315,-17.4,-315.004,-17.398,-359.2,-101.8,-349.15,-98.5,-342.37,-94.44,-335.58,-90.39,-331.45,-86.17,-327.33,-81.95,-325.57,-77.86,-323.8,-73.77,-323.8,-70.4,-323.8,-68.3,-324.37,-66.57,-324.94,-64.84,-325.93,-63.6,-326.92,-62.36,-328.28,-61.68,-329.63,-61,-331.2,-61,-331.88,-61,-332.59,-61.12,-333.3,-61.24,-334.03,-61.52,-334.76,-61.8,-335.51,-62.26,-336.25,-62.72,-337,-63.4,-337.83,-68.05,-340.19,-73.14,-342.55,-78.23,-345.83,-83.12,-349.11,-88.02,-353.01,-92.39,-356.9,-96.77,-360.8,-100,-359.2,-101.8,-359.203,-101.797,-231.41,50,-231.41,50.52,-232.35,51.25,-233.3,51.97,-234.78,52.63,-236.26,53.28,-238.07,53.74,-239.88,54.2,-241.6,54.2,-244,54.2,-244,33.4,-315.8,33.4,-317,28.6,-290.8,28.6,-290.8,7.4,-309.8,7.4,-311.2,2.6,-244,2.6,-244,-11.2,-224.8,-9.8,-224.95,-8.9,-225.33,-8.21,-225.7,-7.53,-226.45,-7.02,-227.2,-6.52,-228.4,-6.17,-229.6,-5.82,-231.4,-5.6,-231.4,2.6,-209.4,2.6,-201.4,-7.6,-186,3.2,-186.6,4.33,-187.36,5.12,-188.11,5.92,-189.18,6.43,-190.25,6.93,-191.71,7.17,-193.18,7.4,-195.2,7.4,-231.4,7.4,-231.4,28.6,-204.4,28.6,-195.4,17.2,-178.6,29,-179.2,30.2,-179.99,31.04,-180.77,31.88,-181.88,32.4,-182.99,32.93,-184.48,33.16,-185.98,33.4,-188,33.4,-231.4,33.4,-231.4,50,-231.405,50,-316.2,-64.6,-277,-64.6,-276.4,-66.62,-275.74,-68.93,-275.07,-71.24,-274.35,-73.75,-273.64,-76.26,-272.9,-78.94,-272.15,-81.62,-271.4,-84.4,-302.4,-84.4,-304,-89.2,-270.21,-89.2,-265.01,-108.6,-246.41,-105.4,-246.63,-104.42,-247.14,-103.7,-247.65,-102.99,-248.53,-102.5,-249.41,-102.01,-250.71,-101.74,-252.01,-101.47,-253.81,-101.4,-257.41,-89.2,-222.81,-89.2,-216.81,-96.6,-199.81,-85,-200.33,-84.4,-201.21,-83.81,-202.08,-83.22,-203.21,-82.7,-204.33,-82.17,-205.66,-81.74,-206.98,-81.3,-208.41,-81,-208.41,-64.6,-202.01,-64.6,-194.21,-74.8,-179.21,-64,-179.73,-62.87,-180.44,-62.08,-181.16,-61.28,-182.21,-60.77,-183.26,-60.27,-184.72,-60.03,-186.18,-59.8,-188.21,-59.8,-314.8,-59.8,-316.2,-64.6,-316.204,-64.598,-205.6,-13.4,-205.68,-12.95,-206.79,-12.27,-207.89,-11.59,-209.5,-10.95,-211.12,-10.31,-212.97,-9.85,-214.83,-9.4,-216.41,-9.4,-218.41,-9.4,-218.41,-15,-287.6,-15,-287.6,-12.2,-287.6,-12.12,-288.05,-11.49,-288.5,-10.85,-289.85,-10.12,-291.2,-9.39,-293.68,-8.79,-296.15,-8.2,-300.2,-8.2,-300.2,-50.8,-286.4,-44.8,-220.2,-44.8,-214.4,-52,-198,-40.6,-198.45,-40.07,-199.22,-39.53,-199.99,-38.98,-200.98,-38.5,-201.97,-38.01,-203.15,-37.62,-204.33,-37.22,-205.6,-37,-205.6,-13.4,-205.605,-13.398,-287.6,-19.8,-218.4,-19.8,-218.4,-40,-287.6,-40,-287.6,-19.8,-287.604,-19.798,-278.4,28.6,-244,28.6,-244,7.4,-278.4,7.4,-278.4,28.6,-278.404,28.601,-220.81,-84.4,-258.81,-84.4,-259.56,-81.77,-260.34,-79.14,-261.12,-76.5,-261.9,-73.97,-262.69,-71.44,-263.47,-69.07,-264.25,-66.7,-265,-64.6,-220.81,-64.6,-220.81,-84.4,-220.805,-84.397] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-143.4,-42.2,-144,-41.22,-144.42,-40.32,-144.84,-39.42,-145.1,-38.6,-145.36,-37.77,-145.48,-37.02,-145.6,-36.27,-145.6,-35.6,-145.6,-34.1,-145.03,-32.91,-144.45,-31.72,-143.4,-30.9,-142.35,-30.07,-140.88,-29.64,-139.4,-29.2,-137.6,-29.2,-133.78,-29.2,-127.72,-31.95,-121.67,-34.7,-114.08,-38,-106.48,-41.3,-97.69,-44.05,-88.9,-46.8,-79.6,-46.8,-68.43,-46.8,-61.44,-43.21,-54.45,-39.62,-50.53,-33.52,-46.61,-27.43,-45.21,-19.38,-43.8,-11.32,-43.8,-2.4,-43.8,10.13,-48.75,21.94,-53.7,33.76,-63.6,43.85,-73.5,53.94,-88.35,61.78,-103.2,69.63,-123,74.2,-125.4,70,-108.23,64.15,-95.74,55.87,-83.25,47.58,-75.13,37.93,-67.01,28.27,-63.11,17.77,-59.2,7.28,-59.2,-3,-59.2,-10.42,-59.88,-17.01,-60.56,-23.59,-62.83,-28.52,-65.1,-33.46,-69.41,-36.33,-73.73,-39.2,-81,-39.2,-86.1,-39.2,-91.41,-37.75,-96.73,-36.31,-102.05,-33.77,-107.38,-31.24,-112.61,-27.81,-117.85,-24.37,-122.8,-20.4,-124.75,-18.9,-126.34,-17.4,-127.93,-15.9,-129.5,-14.7,-131.08,-13.5,-132.81,-12.75,-134.55,-12,-136.8,-12,-139.73,-12,-142.81,-13.49,-145.89,-14.97,-148.43,-17.45,-150.96,-19.92,-152.58,-23.14,-154.2,-26.35,-154.2,-29.8,-154.2,-32.05,-153.49,-34.15,-152.78,-36.26,-151.65,-38.07,-150.53,-39.89,-149.14,-41.36,-147.75,-42.82,-146.4,-43.8,-143.4,-42.2,-143.401,-42.198,-114.8,-68.6,-111.65,-70.32,-107.35,-72.62,-103.06,-74.91,-99.03,-77.05,-94.99,-79.19,-91.94,-80.8,-88.88,-82.42,-88.2,-82.8,-88.05,-82.95,-87.91,-83.09,-87.76,-83.24,-87.65,-83.37,-87.54,-83.5,-87.47,-83.61,-87.4,-83.72,-87.4,-83.8,-87.4,-83.95,-87.51,-84.06,-87.61,-84.17,-87.8,-84.25,-87.99,-84.32,-88.24,-84.36,-88.5,-84.4,-88.8,-84.4,-97.28,-84.4,-104.17,-84.81,-111.06,-85.23,-116.5,-86.97,-121.94,-88.72,-125.98,-92.24,-130.03,-95.77,-132.8,-102,-129.6,-104.8,-127.95,-102.25,-125.6,-100.49,-123.26,-98.74,-119.98,-97.65,-116.69,-96.56,-112.36,-96.08,-108.03,-95.6,-102.4,-95.6,-100,-95.6,-97.59,-95.66,-95.18,-95.72,-92.88,-95.8,-90.57,-95.87,-88.42,-95.94,-86.28,-96,-84.4,-96,-79.83,-95.92,-75.78,-94.99,-71.74,-94.05,-68.73,-92.4,-65.71,-90.75,-63.95,-88.46,-62.2,-86.17,-62.2,-83.4,-62.2,-81.52,-63.55,-80.44,-64.91,-79.35,-67.03,-78.75,-69.14,-78.15,-71.73,-77.89,-74.33,-77.62,-76.8,-77.4,-78.98,-77.25,-82.64,-76.25,-86.31,-75.25,-91,-73.6,-95.69,-71.95,-101.16,-69.75,-106.63,-67.55,-112.4,-65,-114.8,-68.6,-114.801,-68.598] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [4,-88.2,4.6,-89.02,5.59,-89.66,6.57,-90.29,7.7,-90.72,8.82,-91.15,9.96,-91.38,11.1,-91.6,12,-91.6,14.85,-91.6,18.18,-89.98,21.5,-88.35,24.35,-85.67,27.2,-82.99,29.1,-79.53,31,-76.07,31,-72.4,31,-70.75,30.57,-69.52,30.13,-68.29,29.48,-67.22,28.82,-66.15,28.05,-65.11,27.27,-64.07,26.6,-62.8,22.7,-55.45,19.4,-46.93,16.1,-38.42,13.7,-29.05,11.3,-19.67,9.95,-9.59,8.6,0.5,8.6,11,8.6,15.95,9.12,20.13,9.63,24.31,10.48,27.35,11.32,30.39,12.4,32.1,13.48,33.8,14.6,33.8,15.65,33.8,18.62,28.96,21.59,24.13,25.15,17.45,28.71,10.78,32.21,3.76,35.7,-3.25,37.8,-7.6,42,-6,38.63,2.4,35.27,10.75,31.91,19.09,29.22,26.1,26.54,33.11,24.87,38.16,23.2,43.2,23.2,45,23.2,46.5,23.48,47.83,23.76,49.16,24.1,50.55,24.44,51.94,24.72,53.5,25,55.05,25,57,25,58.5,24.67,59.88,24.34,61.25,23.7,62.3,23.06,63.35,22.13,63.98,21.2,64.6,20,64.6,16.7,64.6,13.01,61.21,9.31,57.82,6.2,51.28,3.09,44.73,1.04,35.16,-1,25.58,-1,13.2,-1,4.65,0.01,-4.33,1.01,-13.32,2.55,-21.92,4.09,-30.53,5.92,-38.35,7.75,-46.17,9.4,-52.4,10.23,-55.4,10.98,-58.33,11.74,-61.27,12.33,-64.05,12.91,-66.82,13.25,-69.38,13.6,-71.95,13.6,-74.2,13.6,-76.67,13.2,-78.93,12.8,-81.2,11.75,-83,10.7,-84.8,8.88,-86.01,7.05,-87.22,4.2,-87.6,4,-88.2,4,-88.197,91.6,-89.8,92.05,-91.45,93.07,-92.81,94.1,-94.17,95.6,-95.15,97.1,-96.12,99.02,-96.66,100.95,-97.2,103.2,-97.2,106.72,-97.2,110.26,-96.2,113.79,-95.21,116.62,-93.6,119.45,-91.98,121.23,-89.94,123,-87.9,123,-85.8,123,-84.75,122.73,-83.83,122.47,-82.92,122.07,-82.07,121.68,-81.23,121.23,-80.43,120.77,-79.62,120.4,-78.8,119.95,-77.97,119.7,-76.39,119.45,-74.82,119.32,-72.77,119.19,-70.73,119.13,-68.36,119.07,-66,119,-63.6,118.92,-61.8,118.82,-59.97,118.71,-58.13,118.6,-56.3,118.48,-54.46,118.38,-52.63,118.27,-50.8,118.2,-49,125.02,-50.05,129.06,-51.18,133.09,-52.32,135.32,-53.57,137.55,-54.83,138.48,-56.23,139.4,-57.62,140,-59.2,143.9,-58.9,147.17,-58.41,150.43,-57.92,152.8,-57.07,155.16,-56.23,156.48,-54.95,157.8,-53.67,157.8,-51.8,157.8,-50,156.88,-48.76,155.97,-47.53,154.1,-46.57,152.22,-45.62,149.36,-44.79,146.5,-43.97,142.6,-43,140.65,-42.47,137.91,-41.89,135.18,-41.3,131.97,-40.72,128.77,-40.14,125.24,-39.59,121.72,-39.05,118.2,-38.6,118.2,-35.82,118.26,-33.18,118.32,-30.53,118.4,-28.07,118.47,-25.62,118.53,-23.38,118.6,-21.15,118.6,-19.2,118.6,-12.07,118.88,-6.11,119.15,-0.15,119.62,4.8,120.09,9.75,120.71,13.76,121.32,17.78,122,21,126.87,23.03,133.17,26.24,139.47,29.45,145.07,33.5,150.68,37.55,154.54,42.26,158.4,46.98,158.4,52,158.4,53.28,157.91,54.41,157.43,55.53,156.62,56.38,155.81,57.22,154.77,57.71,153.72,58.2,152.6,58.2,151.7,58.2,150.72,57.86,149.75,57.51,148.7,56.78,147.65,56.05,146.52,54.91,145.4,53.78,144.2,52.2,142.25,49.73,139.7,47.17,137.16,44.61,134.35,42.25,131.53,39.89,128.61,37.86,125.7,35.83,123,34.4,123.07,35.53,123.11,36.93,123.15,38.33,123.17,39.75,123.19,41.18,123.19,42.5,123.2,43.83,123.2,44.8,123.05,49.9,121.06,53.85,119.07,57.8,115.25,60.5,111.42,63.2,105.76,64.6,100.1,66,92.6,66,83.67,66,76.56,64.07,69.44,62.13,64.47,58.63,59.5,55.12,56.85,50.22,54.2,45.33,54.2,39.4,54.2,33.78,56.99,29.32,59.78,24.87,64.7,21.78,69.61,18.68,76.3,17.04,83,15.4,90.8,15.4,93.12,15.4,95.59,15.55,98.07,15.7,100.52,15.98,102.98,16.26,105.34,16.67,107.7,17.08,109.8,17.6,109.35,13.63,108.92,7.18,108.48,0.74,108.15,-6.8,107.81,-14.34,107.6,-22.28,107.4,-30.22,107.4,-37.2,103.87,-36.67,100.42,-36.29,96.97,-35.92,93.72,-35.67,90.48,-35.43,87.51,-35.31,84.55,-35.2,82,-35.2,78.32,-35.2,74.64,-35.93,70.96,-36.67,67.55,-38.22,64.14,-39.78,61.13,-42.2,58.12,-44.62,55.8,-48,58,-51.2,61,-48.8,63.88,-47.43,66.77,-46.07,69.52,-45.4,72.28,-44.72,74.9,-44.56,77.52,-44.4,80,-44.4,83.07,-44.4,86.53,-44.55,89.98,-44.7,93.52,-45,97.07,-45.3,100.56,-45.75,104.05,-46.2,107.2,-46.8,107.2,-64.8,107.2,-71.55,106.88,-76.23,106.57,-80.92,105.42,-83.85,104.28,-86.77,102.05,-88.08,99.82,-89.4,96,-89.4,95.62,-89.4,95.18,-89.36,94.74,-89.33,94.25,-89.27,93.76,-89.22,93.24,-89.14,92.72,-89.07,92.2,-89,91.6,-89.8,91.598,-89.797,110.6,27.8,108.05,26.68,105.41,25.79,102.77,24.89,100.15,24.28,97.52,23.66,94.96,23.33,92.4,23,90,23,84.07,23,78.96,24.07,73.84,25.14,70.07,27.2,66.3,29.26,64.15,32.28,62,35.3,62,39.2,62,43.25,64.07,46.23,66.15,49.2,69.9,51.15,73.65,53.1,78.87,54.05,84.1,55,90.4,55,96.1,55,100,53.98,103.9,52.96,106.3,50.73,108.7,48.49,109.75,44.96,110.8,41.43,110.8,36.4,110.8,35.43,110.79,34.44,110.79,33.45,110.77,32.4,110.75,31.35,110.71,30.21,110.67,29.08,110.6,27.8,110.598,27.801] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [259.6,-95.8,260.35,-97.45,261.45,-98.87,262.56,-100.3,264.08,-101.35,265.59,-102.4,267.56,-103,269.53,-103.6,272,-103.6,275.75,-103.6,279.47,-102.63,283.19,-101.67,286.18,-100.1,289.16,-98.52,291.04,-96.51,292.93,-94.5,293,-92.4,293,-91.12,292.68,-90.11,292.36,-89.1,291.93,-88.22,291.49,-87.34,291.06,-86.52,290.63,-85.7,290.4,-84.8,290.1,-83.9,289.91,-82.38,289.71,-80.86,289.6,-78.65,289.49,-76.43,289.44,-73.49,289.4,-70.55,289.4,-66.8,294.28,-67.1,299.08,-67.39,303.88,-67.68,308.15,-67.92,312.43,-68.17,315.95,-68.34,319.47,-68.52,321.8,-68.6,324.95,-68.75,327.39,-69.01,329.82,-69.27,331.7,-69.77,333.57,-70.28,334.96,-71.1,336.35,-71.92,337.4,-73.2,343.17,-71.62,347.4,-70.27,351.62,-68.92,354.37,-67.47,357.13,-66.03,358.47,-64.34,359.8,-62.65,359.8,-60.4,359.8,-59.57,359.26,-58.97,358.72,-58.37,357.87,-57.97,357.03,-57.58,356,-57.39,354.97,-57.2,354,-57.2,352.12,-57.2,349.57,-57.58,347.02,-57.96,343.48,-58.45,339.93,-58.93,335.24,-59.39,330.55,-59.85,324.4,-60,322.83,-60.07,321.15,-60.11,319.47,-60.15,317.73,-60.17,315.98,-60.19,314.19,-60.19,312.4,-60.2,310.6,-60.2,307.98,-60.2,305.29,-60.16,302.61,-60.12,299.95,-60.05,297.29,-59.97,294.68,-59.86,292.08,-59.75,289.6,-59.6,289.6,-54.57,289.64,-49.27,289.68,-43.96,289.75,-39.05,289.83,-34.14,289.94,-29.95,290.05,-25.77,290.2,-23,291.55,-20.75,292.66,-17.98,293.76,-15.2,294.55,-11.62,295.34,-8.04,295.77,-3.51,296.2,1.03,296.2,6.8,296.2,18.58,292.86,28.92,289.52,39.26,282.38,47.85,275.23,56.44,264.05,63.11,252.88,69.78,237.2,74.2,234.8,70.2,246.28,65.78,254.95,59.86,263.63,53.94,269.55,47,275.48,40.06,278.68,32.35,281.88,24.63,282.4,16.6,280.75,19.15,278.4,21.16,276.05,23.16,273.05,24.55,270.05,25.94,266.43,26.67,262.8,27.4,258.6,27.4,251.93,27.4,246.31,25.01,240.69,22.61,236.63,18.43,232.56,14.25,230.28,8.59,228,2.93,228,-3.6,228,-10.8,230.57,-16.95,233.14,-23.1,237.63,-27.6,242.11,-32.1,248.17,-34.65,254.23,-37.2,261.2,-37.2,263.75,-37.2,266.24,-36.86,268.72,-36.52,271.03,-35.82,273.33,-35.13,275.4,-34.08,277.48,-33.02,279.2,-31.6,279.2,-35.5,279.04,-39.25,278.88,-43,278.68,-46.47,278.47,-49.94,278.27,-53.06,278.08,-56.17,278,-58.8,273.28,-58.5,266.49,-57.84,259.7,-57.17,252.65,-56.35,245.6,-55.52,239.19,-54.64,232.78,-53.75,228.8,-53,226.93,-52.7,225.07,-52.27,223.21,-51.84,221.45,-51.35,219.69,-50.86,218.06,-50.35,216.43,-49.85,215,-49.4,213.2,-48.8,212.03,-48.16,210.86,-47.52,209.83,-47,208.8,-46.47,207.66,-46.14,206.53,-45.8,204.8,-45.8,202.03,-45.87,198.81,-47.6,195.58,-49.32,192.83,-51.95,190.07,-54.57,188.24,-57.72,186.4,-60.87,186.4,-63.8,186.4,-65.07,186.65,-66.2,186.9,-67.32,187.35,-68.3,187.8,-69.27,188.43,-70.1,189.05,-70.92,189.8,-71.6,191,-71.6,191.15,-70.47,191.78,-68.49,192.41,-66.5,194.23,-64.57,196.05,-62.64,199.41,-61.22,202.78,-59.8,208.4,-59.8,212.08,-59.8,221.8,-60.59,231.53,-61.39,242.55,-62.4,253.58,-63.41,263.53,-64.35,273.48,-65.3,277.6,-65.6,277.3,-74.75,276.94,-80.52,276.57,-86.29,275.43,-89.55,274.28,-92.81,272.01,-94,269.73,-95.2,265.6,-95.2,264.93,-95.2,264.25,-95.16,263.58,-95.13,262.9,-95.07,262.23,-95.02,261.55,-94.94,260.88,-94.87,260.2,-94.8,259.6,-95.8,259.601,-95.797,281.8,-9.8,281.8,-12.95,280.52,-16.47,279.24,-19.99,276.65,-22.95,274.06,-25.91,270.16,-27.86,266.25,-29.8,261,-29.8,256.73,-29.8,252.85,-28.16,248.97,-26.52,246.03,-23.3,243.08,-20.07,241.34,-15.29,239.6,-10.5,239.6,-4.2,239.6,1.05,241.46,5.14,243.33,9.24,246.25,12.05,249.18,14.86,252.76,16.33,256.35,17.8,259.8,17.8,266.33,17.8,270.58,15.85,274.83,13.9,277.33,10.3,279.82,6.7,280.81,1.6,281.8,-3.5,281.8,-9.8,281.801,-9.799,310,-109.2,318.32,-106.57,323.83,-103.44,329.34,-100.3,332.63,-97.17,335.91,-94.04,337.25,-91.17,338.6,-88.3,338.6,-86.2,338.6,-84.92,338.13,-83.79,337.65,-82.67,336.9,-81.82,336.15,-80.98,335.23,-80.49,334.3,-80,333.4,-80,332.05,-80,331.08,-80.33,330.11,-80.67,329.38,-81.35,328.64,-82.02,328.08,-83.03,327.53,-84.05,327,-85.4,326.03,-87.8,324.33,-90.5,322.64,-93.21,320.23,-95.95,317.81,-98.68,314.65,-101.32,311.5,-103.95,307.6,-106.2,310,-109.2,310,-109.197,336.2,-113.2,345.12,-110.2,350.87,-106.95,356.61,-103.71,359.92,-100.6,363.24,-97.48,364.52,-94.69,365.8,-91.9,365.8,-89.8,365.8,-88.6,365.36,-87.51,364.91,-86.42,364.2,-85.6,363.49,-84.77,362.59,-84.28,361.7,-83.8,360.8,-83.8,359.45,-83.8,358.48,-84.1,357.51,-84.41,356.77,-85.05,356.04,-85.68,355.48,-86.67,354.92,-87.65,354.4,-89,353.35,-91.55,351.46,-94.33,349.58,-97.12,346.97,-99.87,344.37,-102.63,341.1,-105.23,337.82,-107.82,334,-110,336.2,-113.2,336.2,-113.197] ) );
    shape.graphics.endFill();

    return shape;
  },
  "私は" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-131.7,-26.6,-131.7,-3.6,-121.42,0.45,-114.55,4.94,-107.67,9.43,-103.53,13.85,-99.38,18.28,-97.64,22.39,-95.9,26.5,-95.9,29.8,-95.9,31.6,-96.36,33.11,-96.83,34.61,-97.65,35.7,-98.47,36.79,-99.61,37.39,-100.75,38,-102.1,38,-102.7,38,-103.33,37.85,-103.97,37.7,-104.63,37.4,-105.28,37.1,-105.95,36.65,-106.63,36.2,-107.3,35.6,-108.43,31.25,-110.94,26.41,-113.46,21.56,-116.8,16.8,-120.14,12.04,-124.01,7.64,-127.88,3.25,-131.7,-0.2,-131.7,88.2,-131.7,88.65,-132.52,89.42,-133.33,90.2,-134.78,90.95,-136.22,91.7,-138.2,92.25,-140.18,92.8,-142.5,92.8,-144.5,92.8,-144.5,4.4,-147.95,12.2,-152.04,19.57,-156.14,26.95,-160.9,33.85,-165.66,40.75,-171.11,47.15,-176.55,53.55,-182.7,59.4,-185.5,56.4,-178.9,47.92,-173.28,38.11,-167.67,28.31,-163.07,17.67,-158.48,7.04,-154.93,-4.15,-151.37,-15.35,-148.9,-26.6,-183.1,-26.6,-184.5,-31.4,-144.5,-31.4,-144.5,-67.2,-149.52,-66,-154.67,-64.85,-159.82,-63.7,-164.97,-62.65,-170.13,-61.6,-175.24,-60.67,-180.35,-59.75,-185.3,-59,-185.45,-59.6,-185.6,-60.1,-185.74,-60.59,-185.87,-61.02,-186.01,-61.46,-186.11,-61.84,-186.22,-62.22,-186.3,-62.6,-176.32,-65.3,-165.37,-69.03,-154.42,-72.77,-144,-76.88,-133.57,-80.98,-124.42,-85.13,-115.28,-89.27,-108.9,-92.8,-92.5,-79.4,-92.88,-79.02,-93.33,-78.76,-93.78,-78.49,-94.33,-78.33,-94.87,-78.16,-95.51,-78.08,-96.15,-78,-96.9,-78,-97.5,-78,-98.17,-78.04,-98.84,-78.09,-99.58,-78.2,-100.31,-78.31,-101.09,-78.51,-101.88,-78.7,-102.7,-79,-105.7,-78.03,-109.06,-76.98,-112.42,-75.94,-116.08,-74.85,-119.73,-73.76,-123.65,-72.64,-127.58,-71.52,-131.7,-70.4,-131.7,-31.4,-117.5,-31.4,-108.3,-43.4,-91.1,-30.8,-91.78,-29.68,-92.57,-28.88,-93.36,-28.08,-94.45,-27.58,-95.54,-27.07,-97.01,-26.84,-98.48,-26.6,-100.5,-26.6,-131.7,-26.6,-131.7,-26.6,-37.3,-84.2,-37.53,-83.3,-37.98,-82.55,-38.44,-81.81,-39.3,-81.25,-40.16,-80.69,-41.52,-80.32,-42.88,-79.95,-44.9,-79.8,-47.75,-66.75,-52.12,-48.86,-56.48,-30.96,-61.98,-11.05,-67.47,8.86,-73.9,29.38,-80.33,49.9,-87.3,68.2,-80.18,67.82,-72.07,67.38,-63.96,66.93,-55.15,66.42,-46.34,65.92,-36.96,65.36,-27.58,64.8,-17.9,64.2,-20.3,56.92,-23.3,49.47,-26.3,42.02,-29.6,34.9,-32.9,27.77,-36.35,21.22,-39.8,14.67,-43.1,9.2,-39.9,8,-28.5,19.7,-20.83,30.39,-13.15,41.08,-8.5,50.32,-3.85,59.57,-1.88,67.15,0.1,74.72,0.1,80.2,0.1,83.12,-0.37,85.4,-0.83,87.67,-1.68,89.22,-2.52,90.78,-3.7,91.59,-4.88,92.4,-6.3,92.4,-6.98,92.4,-7.69,92.21,-8.39,92.02,-9.13,91.65,-9.86,91.27,-10.6,90.71,-11.35,90.15,-12.1,89.4,-12.33,87,-12.74,84.45,-13.14,81.91,-13.73,79.25,-14.31,76.59,-15.05,73.82,-15.8,71.05,-16.7,68.2,-24.43,69.77,-33.44,71.57,-42.45,73.36,-52.95,75.35,-63.45,77.34,-75.54,79.51,-87.63,81.67,-101.5,84,-101.95,84.9,-102.57,85.64,-103.19,86.39,-103.9,86.95,-104.61,87.51,-105.38,87.88,-106.15,88.25,-106.9,88.4,-113.9,69.2,-111.88,69.2,-109.48,69.13,-107.08,69.06,-104.33,68.95,-101.57,68.84,-98.46,68.69,-95.35,68.55,-91.9,68.4,-87.1,49.5,-82.23,27.51,-77.36,5.52,-73.05,-16.02,-68.74,-37.57,-65.29,-56.9,-61.85,-76.22,-59.9,-89.8,-37.3,-84.2,-37.301,-84.198] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [31.9,-73.2,32.5,-74.02,33.49,-74.66,34.48,-75.29,35.6,-75.72,36.73,-76.15,37.86,-76.38,39,-76.6,39.9,-76.6,42.75,-76.6,46.08,-74.98,49.4,-73.35,52.25,-70.67,55.1,-67.99,57,-64.53,58.9,-61.07,58.9,-57.4,58.9,-55.75,58.47,-54.52,58.03,-53.29,57.38,-52.22,56.72,-51.16,55.95,-50.11,55.18,-49.07,54.5,-47.8,50.6,-40.45,47.3,-31.94,44,-23.42,41.6,-14.05,39.2,-4.67,37.85,5.41,36.5,15.5,36.5,26,36.5,30.95,37.02,35.13,37.53,39.31,38.38,42.35,39.22,45.39,40.3,47.09,41.38,48.8,42.5,48.8,43.55,48.8,46.52,43.96,49.49,39.13,53.05,32.45,56.61,25.78,60.11,18.76,63.6,11.75,65.7,7.4,69.9,9,66.53,17.4,63.17,25.75,59.81,34.09,57.13,41.1,54.44,48.11,52.77,53.16,51.1,58.2,51.1,60,51.1,61.5,51.38,62.83,51.66,64.16,52,65.55,52.34,66.94,52.62,68.49,52.9,70.05,52.9,72,52.9,73.5,52.57,74.88,52.24,76.25,51.6,77.3,50.96,78.35,50.03,78.98,49.1,79.6,47.9,79.6,44.6,79.6,40.91,76.21,37.21,72.82,34.1,66.28,30.99,59.73,28.94,50.16,26.9,40.58,26.9,28.2,26.9,19.65,27.91,10.67,28.91,1.68,30.45,-6.92,31.99,-15.53,33.82,-23.35,35.65,-31.17,37.3,-37.4,38.13,-40.4,38.89,-43.33,39.64,-46.27,40.23,-49.05,40.81,-51.82,41.15,-54.38,41.5,-56.95,41.5,-59.2,41.5,-61.67,41.1,-63.93,40.7,-66.2,39.65,-68,38.6,-69.8,36.78,-71.01,34.95,-72.22,32.1,-72.6,31.9,-73.2,31.901,-73.198,119.5,-74.8,119.95,-76.45,120.97,-77.81,122,-79.17,123.5,-80.15,125,-81.12,126.92,-81.66,128.85,-82.2,131.1,-82.2,134.63,-82.2,138.16,-81.2,141.69,-80.21,144.52,-78.6,147.36,-76.99,149.13,-74.94,150.9,-72.9,150.9,-70.8,150.9,-69.75,150.63,-68.83,150.37,-67.92,149.97,-67.07,149.58,-66.23,149.13,-65.43,148.67,-64.62,148.3,-63.8,147.85,-62.97,147.6,-61.4,147.36,-59.82,147.22,-57.77,147.09,-55.73,147.03,-53.36,146.97,-51,146.9,-48.6,146.82,-46.8,146.72,-44.97,146.61,-43.14,146.5,-41.3,146.39,-39.46,146.28,-37.63,146.17,-35.8,146.1,-34,152.92,-35.05,156.96,-36.18,160.99,-37.32,163.22,-38.57,165.46,-39.83,166.38,-41.23,167.3,-42.62,167.9,-44.2,171.8,-43.9,175.07,-43.41,178.34,-42.92,180.7,-42.07,183.06,-41.23,184.38,-39.95,185.7,-38.67,185.7,-36.8,185.7,-35,184.79,-33.76,183.87,-32.53,182,-31.57,180.12,-30.62,177.26,-29.8,174.4,-28.97,170.5,-28,168.55,-27.47,165.81,-26.89,163.08,-26.31,159.87,-25.72,156.67,-25.14,153.15,-24.6,149.62,-24.05,146.1,-23.6,146.1,-20.82,146.16,-18.18,146.22,-15.53,146.3,-13.08,146.37,-10.62,146.44,-8.38,146.5,-6.15,146.5,-4.2,146.5,2.92,146.78,8.89,147.06,14.85,147.52,19.8,147.99,24.75,148.61,28.76,149.22,32.77,149.9,36,154.77,38.02,161.07,41.24,167.37,44.45,172.97,48.5,178.58,52.55,182.44,57.26,186.3,61.97,186.3,67,186.3,68.27,185.81,69.4,185.33,70.53,184.52,71.37,183.72,72.22,182.67,72.71,181.62,73.2,180.5,73.2,179.6,73.2,178.62,72.85,177.65,72.5,176.6,71.77,175.55,71.04,174.42,69.91,173.3,68.77,172.1,67.2,170.15,64.72,167.6,62.17,165.06,59.61,162.25,57.25,159.44,54.89,156.52,52.85,153.6,50.82,150.9,49.4,150.97,50.52,151.01,51.92,151.05,53.32,151.07,54.75,151.09,56.17,151.09,57.5,151.1,58.82,151.1,59.8,150.95,64.9,148.96,68.85,146.97,72.8,143.15,75.5,139.32,78.2,133.66,79.6,128,81,120.5,81,111.57,81,104.46,79.06,97.34,77.13,92.37,73.62,87.41,70.12,84.75,65.22,82.1,60.32,82.1,54.4,82.1,48.77,84.89,44.32,87.69,39.87,92.6,36.77,97.51,33.68,104.21,32.04,110.9,30.4,118.7,30.4,121.02,30.4,123.5,30.54,125.97,30.69,128.42,30.97,130.88,31.25,133.24,31.66,135.6,32.07,137.7,32.6,137.25,28.62,136.82,22.18,136.39,15.73,136.05,8.2,135.71,0.66,135.51,-7.28,135.3,-15.23,135.3,-22.2,131.77,-21.68,128.32,-21.3,124.87,-20.92,121.62,-20.68,118.38,-20.43,115.42,-20.32,112.45,-20.2,109.9,-20.2,106.23,-20.2,102.54,-20.94,98.86,-21.67,95.45,-23.23,92.04,-24.78,89.03,-27.21,86.03,-29.63,83.7,-33,85.9,-36.2,88.9,-33.8,91.78,-32.44,94.67,-31.08,97.42,-30.4,100.18,-29.73,102.8,-29.56,105.42,-29.4,107.9,-29.4,110.98,-29.4,114.43,-29.55,117.88,-29.7,121.43,-30,124.97,-30.3,128.46,-30.75,131.95,-31.2,135.1,-31.8,135.1,-49.8,135.1,-56.55,134.78,-61.24,134.47,-65.93,133.32,-68.85,132.18,-71.78,129.95,-73.09,127.72,-74.4,123.9,-74.4,123.52,-74.4,123.08,-74.37,122.64,-74.33,122.15,-74.28,121.66,-74.22,121.14,-74.15,120.62,-74.08,120.1,-74,119.5,-74.8,119.5,-74.799,138.5,42.8,135.95,41.67,133.31,40.78,130.68,39.89,128.05,39.27,125.42,38.66,122.86,38.33,120.3,38,117.9,38,111.98,38,106.86,39.07,101.74,40.14,97.98,42.2,94.21,44.26,92.05,47.28,89.9,50.3,89.9,54.2,89.9,58.25,91.98,61.22,94.05,64.2,97.8,66.15,101.55,68.1,106.78,69.05,112,70,118.3,70,124,70,127.9,68.98,131.8,67.96,134.2,65.72,136.6,63.49,137.65,59.96,138.7,56.42,138.7,51.4,138.7,50.42,138.7,49.44,138.69,48.45,138.67,47.4,138.66,46.35,138.62,45.21,138.57,44.07,138.5,42.8,138.5,42.8] ) );
    shape.graphics.endFill();

    return shape;
  },
  "変わることが" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,1,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,3,3,3,3,2,2,1,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-236.2,-233.1,-222.2,-219.5,-222.8,-218.83,-223.55,-218.39,-224.3,-217.96,-225.35,-217.68,-226.4,-217.39,-227.83,-217.22,-229.25,-217.05,-231.2,-216.9,-234.88,-211.58,-239.08,-206.74,-243.28,-201.9,-248.03,-197.53,-252.77,-193.16,-258.06,-189.25,-263.35,-185.35,-269.2,-181.9,-261.33,-178.83,-252.48,-176.35,-243.63,-173.88,-233.68,-172,-223.72,-170.13,-212.59,-168.85,-201.45,-167.58,-189,-166.9,-189.2,-164.5,-191.45,-163.9,-193.34,-162.81,-195.23,-161.73,-196.68,-160.15,-198.12,-158.58,-199.07,-156.51,-200.03,-154.45,-200.4,-151.9,-213.6,-153.55,-225.03,-155.82,-236.45,-158.08,-246.35,-161.03,-256.25,-163.97,-264.75,-167.62,-273.25,-171.28,-280.6,-175.7,-289.9,-171.2,-300.29,-167.57,-310.67,-163.94,-322.15,-161.08,-333.62,-158.21,-346.19,-156.04,-358.75,-153.88,-372.4,-152.3,-373.2,-155.9,-361.12,-157.93,-349.79,-160.5,-338.46,-163.06,-327.98,-166.25,-317.49,-169.44,-307.92,-173.28,-298.35,-177.13,-289.8,-181.7,-293.85,-184.78,-297.61,-188.12,-301.37,-191.47,-304.88,-195.13,-308.38,-198.78,-311.65,-202.77,-314.93,-206.75,-318,-211.1,-323.18,-206.98,-328.82,-203.11,-334.47,-199.24,-340.55,-195.75,-346.62,-192.26,-353.1,-189.22,-359.57,-186.18,-366.4,-183.7,-368.4,-186.5,-358.05,-191.38,-348.36,-198.19,-338.66,-205,-330.3,-212.78,-321.94,-220.56,-315.24,-228.83,-308.55,-237.1,-304.2,-244.9,-282.8,-240.1,-283.1,-239.35,-283.75,-238.76,-284.41,-238.16,-285.48,-237.75,-286.54,-237.34,-288.06,-237.12,-289.58,-236.9,-291.6,-236.9,-292.8,-235.4,-294.08,-233.9,-295.35,-232.4,-296.7,-230.9,-298.05,-229.4,-299.48,-227.9,-300.9,-226.4,-302.4,-224.9,-245.8,-224.9,-236.2,-233.1,-236.201,-233.101,-365.4,-232.9,-346.42,-240.25,-335.35,-248.67,-324.27,-257.09,-318.5,-266.5,-312.72,-275.91,-310.95,-286.28,-309.18,-296.65,-308.8,-307.9,-371.6,-307.9,-373,-312.7,-287.4,-312.7,-287.4,-337.3,-265,-335.3,-265.08,-334.17,-265.6,-333.33,-266.12,-332.49,-267.23,-331.85,-268.33,-331.21,-270.09,-330.74,-271.85,-330.27,-274.4,-329.9,-274.4,-312.7,-216.6,-312.7,-207,-325.1,-188.4,-312.1,-188.93,-311.05,-189.67,-310.26,-190.42,-309.47,-191.53,-308.95,-192.63,-308.42,-194.17,-308.16,-195.7,-307.9,-197.8,-307.9,-252.4,-307.9,-252.4,-258.3,-252.4,-254.55,-253.07,-251.49,-253.73,-248.44,-255.77,-246.15,-257.82,-243.86,-261.6,-242.38,-265.37,-240.9,-271.6,-240.3,-271.6,-244.12,-272.82,-246.37,-274.05,-248.61,-276.45,-249.85,-278.85,-251.09,-282.4,-251.61,-285.95,-252.12,-290.6,-252.5,-290.6,-255.3,-268.6,-255.3,-267.55,-255.3,-266.86,-255.43,-266.16,-255.57,-265.75,-255.92,-265.34,-256.28,-265.17,-256.9,-265,-257.52,-265,-258.5,-265,-307.9,-295,-307.9,-295.9,-295.37,-298.39,-284.15,-300.89,-272.92,-307.9,-263.07,-314.91,-253.23,-327.91,-244.82,-340.9,-236.4,-362.8,-229.5,-365.4,-232.9,-365.399,-232.9,-371.4,-255.1,-367.05,-258.25,-362.38,-262.64,-357.71,-267.03,-353.1,-272.37,-348.49,-277.72,-344.12,-283.87,-339.75,-290.02,-336,-296.7,-319.8,-286.7,-320.1,-286.17,-320.48,-285.76,-320.87,-285.36,-321.38,-285.07,-321.88,-284.79,-322.53,-284.65,-323.18,-284.5,-324,-284.5,-324.38,-284.5,-324.79,-284.54,-325.2,-284.57,-325.65,-284.65,-326.1,-284.72,-326.59,-284.84,-327.07,-284.95,-327.6,-285.1,-331.95,-279.55,-336.97,-274.6,-341.99,-269.65,-347.35,-265.45,-352.71,-261.25,-358.26,-257.87,-363.8,-254.5,-369.2,-252.1,-371.4,-255.1,-371.399,-255.1,-314.6,-213.7,-311.15,-209.65,-307.32,-205.97,-303.49,-202.29,-299.25,-198.98,-295.01,-195.66,-290.36,-192.69,-285.7,-189.73,-280.6,-187.1,-275.28,-190.48,-270.45,-194.2,-265.62,-197.92,-261.33,-202.03,-257.03,-206.13,-253.29,-210.64,-249.55,-215.15,-246.4,-220.1,-307.4,-220.1,-314.6,-213.7,-314.601,-213.701,-241,-293.3,-227.28,-289.92,-218.03,-285.35,-208.78,-280.78,-203.18,-275.92,-197.57,-271.07,-195.19,-266.38,-192.8,-261.7,-192.8,-258.1,-192.8,-256.45,-193.26,-255.09,-193.73,-253.72,-194.55,-252.75,-195.38,-251.77,-196.51,-251.24,-197.65,-250.7,-199,-250.7,-199.53,-250.7,-200.12,-250.81,-200.71,-250.92,-201.35,-251.15,-201.99,-251.37,-202.66,-251.71,-203.33,-252.05,-204,-252.5,-206.18,-257.52,-210.37,-262.98,-214.56,-268.43,-219.83,-273.6,-225.1,-278.77,-230.97,-283.32,-236.85,-287.88,-242.4,-291.1,-241,-293.3,-241.001,-293.299] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-34,-322.9,-33.48,-324.4,-32.55,-325.59,-31.63,-326.78,-30.38,-327.62,-29.12,-328.47,-27.56,-328.95,-26,-329.42,-24.2,-329.5,-21.13,-329.5,-17.65,-328.51,-14.17,-327.52,-11.22,-325.8,-8.28,-324.07,-6.34,-321.74,-4.4,-319.4,-4.4,-316.7,-4.4,-315.2,-4.97,-313.63,-5.54,-312.06,-6.27,-310.3,-7.01,-308.54,-7.69,-306.52,-8.37,-304.5,-8.6,-302.1,-8.67,-301.2,-8.84,-300.24,-9.01,-299.27,-9.2,-298.3,-9.39,-297.32,-9.56,-296.36,-9.72,-295.4,-9.8,-294.5,-7.47,-294.05,-5.4,-293.13,-3.33,-292.21,-1.77,-291.05,-0.22,-289.89,0.69,-288.59,1.6,-287.3,1.6,-286.1,1.6,-284.45,0.8,-283.24,-0.01,-282.03,-1.22,-280.92,-2.44,-279.82,-3.88,-278.65,-5.32,-277.47,-6.6,-275.9,-7.5,-274.85,-8.29,-273.78,-9.08,-272.72,-9.77,-271.72,-10.47,-270.73,-11.07,-269.85,-11.67,-268.97,-12.2,-268.3,-12.35,-266.87,-12.47,-265.61,-12.58,-264.35,-12.68,-263.15,-12.77,-261.95,-12.85,-260.76,-12.93,-259.57,-13,-258.3,-5.57,-263.7,2.62,-268.06,10.81,-272.42,18.92,-275.5,27.04,-278.57,34.67,-280.24,42.3,-281.9,48.6,-281.9,61.05,-281.9,70.73,-278.58,80.41,-275.26,87.05,-268.67,93.69,-262.09,97.14,-252.28,100.6,-242.48,100.6,-229.5,100.6,-229.3,100.6,-217.3,95.28,-207.58,89.96,-197.86,79.35,-190.53,68.74,-183.19,52.84,-178.31,36.95,-173.43,15.8,-171.1,14.4,-175.9,31.57,-178.83,45,-183.9,58.43,-188.97,67.67,-195.93,76.92,-202.88,81.76,-211.59,86.6,-220.3,86.6,-230.5,86.6,-240.25,84.31,-248.2,82.03,-256.14,77.32,-261.82,72.62,-267.51,65.42,-270.69,58.22,-273.87,48.4,-274.1,41.65,-274.1,33.93,-272.44,26.22,-270.78,18.17,-267.57,10.13,-264.37,2.08,-259.67,-5.97,-254.97,-13.4,-248.9,-13.47,-246.42,-13.55,-243.92,-13.62,-241.42,-13.67,-238.92,-13.73,-236.43,-13.76,-233.97,-13.8,-231.5,-13.8,-229.1,-13.72,-224,-13.73,-218.97,-13.74,-213.94,-13.7,-209.27,-13.66,-204.61,-13.52,-200.44,-13.37,-196.27,-13,-192.9,-12.62,-189.97,-12.33,-186.92,-12.03,-183.86,-11.82,-181.02,-11.62,-178.19,-11.51,-175.77,-11.4,-173.35,-11.4,-171.7,-11.4,-169.52,-12.12,-167.47,-12.84,-165.42,-14.17,-163.82,-15.51,-162.23,-17.39,-161.27,-19.27,-160.3,-21.6,-160.3,-22.87,-160.3,-23.94,-161.03,-25,-161.76,-25.77,-163.13,-26.54,-164.49,-26.97,-166.46,-27.4,-168.42,-27.4,-170.9,-27.4,-174.35,-28.6,-178.35,-29.79,-182.34,-31.87,-186.67,-33.96,-191.01,-36.76,-195.57,-39.57,-200.12,-42.8,-204.7,-39.8,-207.3,-37.62,-204.6,-35.18,-201.73,-32.74,-198.86,-30.62,-196.5,-28.5,-194.14,-27,-192.62,-25.5,-191.1,-25.2,-191.1,-24.67,-191.1,-24.39,-191.81,-24.1,-192.52,-23.97,-195,-23.84,-197.47,-23.82,-202.24,-23.8,-207,-23.8,-215.1,-23.8,-217.72,-23.79,-220.8,-23.79,-223.87,-23.75,-227.25,-23.71,-230.62,-23.63,-234.22,-23.55,-237.82,-23.4,-241.5,-26.02,-238.95,-28.98,-236.28,-31.93,-233.62,-34.87,-230.82,-37.82,-228.03,-40.58,-225.1,-43.35,-222.17,-45.6,-219.1,-48.3,-215.5,-50.2,-212.86,-52.1,-210.22,-53.6,-208.5,-55.1,-206.77,-56.4,-205.94,-57.7,-205.1,-59.2,-205.1,-60.62,-205.1,-61.8,-205.79,-62.98,-206.49,-63.82,-207.65,-64.67,-208.81,-65.13,-210.33,-65.6,-211.85,-65.6,-213.5,-65.6,-216.5,-64.74,-218.49,-63.89,-220.49,-62.52,-221.95,-61.15,-223.41,-59.44,-224.58,-57.72,-225.75,-56,-227.1,-48.27,-233.1,-42.34,-238.33,-36.41,-243.56,-32.25,-247.95,-28.09,-252.34,-25.68,-255.84,-23.27,-259.35,-22.6,-261.9,-22.52,-264.67,-22.45,-267.03,-22.37,-269.39,-22.27,-271.6,-22.18,-273.81,-22.06,-276.02,-21.95,-278.22,-21.8,-280.7,-23.9,-280.1,-26.15,-279.31,-28.41,-278.53,-30.55,-277.72,-32.69,-276.92,-34.57,-276.17,-36.45,-275.42,-37.8,-274.9,-39,-274.3,-40.13,-273.57,-41.26,-272.84,-42.35,-272.2,-43.44,-271.56,-44.49,-271.13,-45.55,-270.7,-46.6,-270.7,-49.3,-270.7,-51.79,-272.3,-54.29,-273.9,-56.2,-276.15,-58.11,-278.4,-59.25,-280.82,-60.4,-283.25,-60.4,-284.9,-60.4,-286.4,-60.21,-287.62,-60.02,-288.84,-59.65,-289.85,-59.27,-290.86,-58.71,-291.7,-58.15,-292.55,-57.4,-293.3,-56.4,-293.3,-56.32,-291.5,-55.56,-289.77,-54.8,-288.05,-53.45,-286.7,-52.1,-285.35,-50.21,-284.52,-48.32,-283.7,-46,-283.7,-42.7,-283.7,-38.75,-284.5,-34.81,-285.3,-31.22,-286.37,-27.64,-287.44,-24.93,-288.51,-22.22,-289.57,-21.4,-290.1,-21.32,-291.3,-21.13,-294.44,-20.93,-297.59,-20.72,-301.02,-20.52,-304.45,-20.36,-307.34,-20.2,-310.22,-20.2,-310.9,-20.2,-314.72,-21.48,-317.09,-22.76,-319.47,-24.75,-320.72,-26.74,-321.98,-29.14,-322.29,-31.55,-322.6,-33.8,-322.3,-34,-322.9,-34,-322.899] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [272,-241.9,277.85,-245.2,284.19,-247.96,290.53,-250.71,296.9,-252.7,303.28,-254.69,309.46,-255.79,315.65,-256.9,321.2,-256.9,335.97,-256.9,345.95,-253.12,355.92,-249.34,361.97,-243.03,368.03,-236.71,370.61,-228.47,373.2,-220.23,373.2,-211.3,373.2,-201.03,368.83,-192.09,364.46,-183.15,356.1,-176.53,347.74,-169.91,335.57,-166.1,323.4,-162.3,307.8,-162.3,298.73,-162.3,291.28,-164.33,283.83,-166.36,278.53,-169.83,273.22,-173.29,270.31,-177.91,267.4,-182.53,267.4,-187.7,267.4,-192.43,269.44,-196.67,271.47,-200.92,275.28,-204.13,279.08,-207.33,284.53,-209.22,289.98,-211.1,296.8,-211.1,303.85,-211.1,310.58,-208.52,317.3,-205.93,322.55,-201.68,327.8,-197.42,331,-191.95,334.2,-186.48,334.2,-180.7,334.2,-180.1,334.13,-179.54,334.06,-178.99,333.93,-178.5,333.79,-178.01,333.61,-177.61,333.43,-177.2,333.2,-176.9,338.83,-178.78,343.56,-182.37,348.29,-185.96,351.73,-190.63,355.16,-195.29,357.08,-200.72,359,-206.15,359,-211.7,359,-220.17,356.87,-227.3,354.74,-234.42,350.05,-239.57,345.36,-244.73,337.91,-247.61,330.45,-250.5,319.8,-250.5,314.7,-250.5,305.71,-248.66,296.71,-246.82,286.4,-242.22,276.09,-237.63,265.75,-229.83,255.4,-222.02,247.6,-210.1,246.63,-208.6,245.59,-207.01,244.56,-205.41,243.38,-204.1,242.2,-202.79,240.82,-201.94,239.45,-201.1,237.8,-201.1,236.38,-201.1,235.14,-201.93,233.9,-202.77,232.98,-204.02,232.06,-205.28,231.53,-206.75,231,-208.22,231,-209.5,231,-211.9,232.12,-214.13,233.23,-216.36,234.83,-218.32,236.42,-220.29,238.17,-221.96,239.93,-223.62,241.2,-224.9,247.43,-231.05,257.67,-241.28,267.91,-251.51,279.48,-263.1,291.04,-274.69,302.6,-286.27,314.15,-297.85,323,-306.7,323.6,-307.22,324.02,-307.67,324.44,-308.12,324.7,-308.5,324.96,-308.87,325.08,-309.17,325.2,-309.47,325.2,-309.7,325.2,-310,325.06,-310.19,324.91,-310.39,324.65,-310.5,324.39,-310.61,324.02,-310.66,323.65,-310.7,323.2,-310.7,321.85,-310.7,315.8,-309.63,309.74,-308.56,302.23,-306.92,294.71,-305.29,287.34,-303.36,279.98,-301.42,276,-299.7,274.2,-298.87,273.1,-298.08,272,-297.29,271.1,-296.67,270.2,-296.06,269.25,-295.68,268.3,-295.3,266.8,-295.3,263.43,-295.3,260.25,-296.96,257.08,-298.62,254.63,-301.25,252.17,-303.87,250.69,-307.11,249.2,-310.35,249.2,-313.5,249.2,-314.55,249.42,-315.75,249.64,-316.96,250.23,-318.17,250.81,-319.39,251.82,-320.56,252.83,-321.72,254.4,-322.7,255.4,-322.1,255.18,-319.7,255.85,-317.65,256.52,-315.6,257.93,-314.1,259.33,-312.6,261.39,-311.75,263.45,-310.9,266,-310.9,270.65,-310.9,278.64,-311.75,286.63,-312.61,294.95,-313.82,303.28,-315.04,310.44,-316.38,317.6,-317.72,320.6,-318.7,321.88,-319.15,323.01,-320.08,324.14,-321.01,325.15,-321.95,326.16,-322.89,327.07,-323.59,327.98,-324.3,328.8,-324.3,331.8,-324.3,335.02,-322.76,338.24,-321.22,340.9,-319.05,343.56,-316.87,345.28,-314.51,347,-312.15,347,-310.5,347,-308.62,345.95,-307.65,344.9,-306.67,343.1,-305.82,341.3,-304.98,338.9,-303.89,336.5,-302.8,333.8,-300.7,325.4,-294.17,316.62,-286.49,307.84,-278.81,299.55,-271.02,291.26,-263.24,283.91,-255.9,276.55,-248.55,271,-242.7,272,-241.9,272.001,-241.9,308.4,-172.7,310.2,-172.7,312.09,-172.78,313.99,-172.86,315.9,-173.03,317.81,-173.19,319.71,-173.46,321.6,-173.73,323.4,-174.1,323.1,-174.48,322.81,-174.86,322.52,-175.25,322.27,-175.7,322.03,-176.15,321.85,-176.69,321.67,-177.23,321.6,-177.9,321.15,-183.08,318.75,-187.82,316.35,-192.56,312.6,-196.18,308.85,-199.79,304.05,-201.95,299.25,-204.1,294,-204.1,290.25,-204.1,286.97,-203.05,283.69,-202.01,281.25,-200.08,278.81,-198.14,277.41,-195.41,276,-192.68,276,-189.3,276,-184.28,278.98,-181.05,281.96,-177.83,286.65,-175.98,291.34,-174.12,297.09,-173.41,302.85,-172.7,308.4,-172.7,308.4,-172.701] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [-307.4,242.9,-311.75,247.4,-315.17,252.25,-318.59,257.1,-320.95,262.05,-323.31,267,-324.55,271.92,-325.8,276.85,-325.8,281.5,-325.8,288.32,-322.99,294.3,-320.19,300.28,-314.17,304.72,-308.15,309.17,-298.71,311.73,-289.27,314.3,-276,314.3,-266.62,314.3,-258.81,313.86,-251,313.42,-245,312.57,-239,311.73,-234.94,310.5,-230.87,309.27,-229,307.7,-224.12,308.37,-220.42,309.32,-216.72,310.27,-214.22,311.55,-211.73,312.82,-210.46,314.45,-209.2,316.07,-209.2,318.1,-209.2,321.02,-213.86,322.79,-218.53,324.57,-227.02,325.52,-235.52,326.48,-247.42,326.79,-259.32,327.1,-273.8,327.1,-292.77,327.1,-304.71,323.03,-316.64,318.96,-323.37,313,-330.1,307.04,-332.55,300.27,-335,293.5,-335,288.1,-335,282.77,-333.96,277.11,-332.93,271.45,-330.17,265.45,-327.42,259.45,-322.59,253.11,-317.77,246.77,-310.2,240.1,-307.4,242.9,-307.398,242.9,-254.6,202.5,-261.12,203.48,-268.31,204.85,-275.49,206.22,-282.35,207.48,-289.21,208.73,-295.27,209.62,-301.32,210.5,-305.6,210.5,-310.25,210.5,-313.99,208.83,-317.72,207.16,-320.35,204.65,-322.97,202.14,-324.39,199.19,-325.8,196.25,-325.8,193.7,-325.8,193.03,-325.66,192.3,-325.52,191.57,-325.27,190.88,-325.03,190.18,-324.7,189.57,-324.37,188.95,-324,188.5,-322.6,188.7,-322.3,190.2,-321.02,191.95,-319.75,193.7,-317.2,195.2,-314.65,196.7,-310.67,197.7,-306.7,198.7,-301,198.7,-295.07,198.7,-286.27,197.68,-277.46,196.65,-268.95,195.15,-260.44,193.65,-253.81,191.95,-247.17,190.25,-245.6,188.9,-239.3,189.8,-235.36,191.25,-231.41,192.69,-229.2,194.47,-226.99,196.26,-226.19,198.27,-225.4,200.27,-225.4,202.3,-225.4,203.5,-226.36,204.44,-227.31,205.37,-228.85,206.05,-230.39,206.72,-232.32,207.14,-234.25,207.55,-236.2,207.7,-241.08,207.92,-247.93,210.09,-254.79,212.26,-262.25,215.42,-269.71,218.59,-277.09,222.3,-284.47,226,-290.4,229.3,-293,226.3,-289.55,223.6,-284.57,220.49,-279.59,217.37,-274.32,214.3,-269.06,211.22,-264.12,208.41,-259.18,205.6,-255.8,203.5,-254.6,202.5,-254.599,202.501] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [15.8,213.1,16.33,212.05,17.33,211.14,18.34,210.23,19.65,209.55,20.97,208.88,22.5,208.49,24.03,208.1,25.6,208.1,28.83,208.1,32.33,209.8,35.82,211.5,38.73,214.05,41.64,216.6,43.52,219.58,45.4,222.55,45.4,225.1,45.4,227.05,44.46,228.52,43.51,229.99,41.73,231.15,39.95,232.31,37.39,233.26,34.83,234.2,31.6,235.1,14.95,239.9,-2.19,246.9,-19.33,253.89,-33.24,262.43,-47.16,270.96,-55.98,280.69,-64.79,290.43,-64.79,300.7,-64.79,309.02,-60.77,313.82,-56.74,318.61,-49.84,321.02,-42.94,323.44,-33.74,324.07,-24.55,324.7,-14.2,324.7,-4.97,324.7,2.79,324.15,10.54,323.59,16.5,322.67,22.47,321.76,26.47,320.57,30.48,319.37,32.2,318.1,36.18,318.47,39.8,318.88,43.42,319.28,46.18,320.12,48.94,320.97,50.57,322.46,52.2,323.95,52.2,326.5,52.2,328,50.83,329.11,49.46,330.22,47.08,331.05,44.7,331.87,41.49,332.46,38.28,333.05,34.6,333.5,31.08,333.95,26.17,334.47,21.27,335,15.15,335.45,9.04,335.9,1.81,336.2,-5.42,336.5,-13.59,336.5,-28.82,336.5,-40.29,334.63,-51.75,332.77,-59.42,328.62,-67.09,324.48,-70.94,317.85,-74.79,311.22,-74.79,301.7,-74.79,295.17,-71.43,288.49,-68.06,281.81,-62.24,275.4,-56.43,268.99,-48.64,263.06,-40.84,257.12,-31.99,252.1,-36.64,249.32,-39.16,245.46,-41.68,241.59,-42.84,236,-44.01,230.41,-44.2,222.79,-44.39,215.17,-44.39,204.9,-44.39,204.15,-44.33,202.15,-44.27,200.14,-44.19,197.88,-44.12,195.61,-44.06,193.57,-43.99,191.53,-43.99,190.7,-43.99,189.13,-44.16,187.18,-44.32,185.23,-45.29,183.53,-46.27,181.82,-48.38,180.66,-50.49,179.5,-54.39,179.5,-54.84,179.5,-55.33,179.54,-55.82,179.57,-56.34,179.63,-56.87,179.68,-57.43,179.75,-57.99,179.83,-58.59,179.9,-58.99,178.7,-58.32,177.28,-57.11,175.94,-55.89,174.61,-54.39,173.58,-52.89,172.54,-51.23,171.92,-49.57,171.3,-47.99,171.3,-44.17,171.3,-40.38,172.33,-36.59,173.35,-33.57,175.15,-30.55,176.95,-28.67,179.4,-26.79,181.85,-26.79,184.7,-26.79,185.68,-27.33,186.91,-27.87,188.14,-28.57,189.63,-29.26,191.11,-29.92,192.83,-30.57,194.55,-30.79,196.5,-31.17,199.35,-31.43,202.37,-31.7,205.38,-31.87,208.48,-32.04,211.57,-32.12,214.7,-32.19,217.83,-32.19,220.9,-32.19,222.4,-32.19,223.86,-32.19,225.32,-32.17,226.75,-32.15,228.17,-32.11,229.56,-32.07,230.95,-31.99,232.3,-31.84,234.92,-30.92,237.33,-29.99,239.74,-28.62,241.67,-27.25,243.61,-25.61,244.93,-23.97,246.25,-22.39,246.7,-18.57,244.67,-13.64,242.21,-8.71,239.74,-3.37,237.15,1.97,234.56,7.39,232.02,12.81,229.47,17.61,227.3,19.86,226.32,21.57,225.35,23.29,224.37,24.46,223.37,25.62,222.38,26.21,221.37,26.81,220.35,26.81,219.3,26.81,218.25,25.97,217.16,25.14,216.07,23.73,215.25,22.32,214.42,20.48,214.01,18.63,213.6,16.61,213.9,15.8,213.1,15.804,213.101] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [223.2,178.7,223.95,177.05,225.18,175.69,226.4,174.33,227.9,173.35,229.4,172.38,231.08,171.84,232.75,171.3,234.4,171.3,238.6,171.3,242.57,172.46,246.53,173.62,249.6,175.48,252.68,177.33,254.54,179.65,256.4,181.98,256.4,184.3,256.4,185.43,255.77,186.26,255.15,187.09,254.23,188.28,253.31,189.46,252.27,191.3,251.23,193.15,250.4,196.3,249.65,199.38,248.83,202.52,248.01,205.66,247.13,208.83,246.25,211.99,245.31,215.17,244.38,218.35,243.4,221.5,245.28,221.28,247.76,220.9,250.25,220.53,253.08,220.18,255.91,219.82,258.96,219.56,262,219.3,265,219.3,275.8,219.3,282.31,222.36,288.82,225.43,292.3,231.2,295.79,236.98,296.9,245.29,298,253.6,298,264.1,298,274.15,296.06,286.84,294.12,299.54,289.98,310.75,285.83,321.96,279.36,329.63,272.88,337.3,263.8,337.3,262.23,337.3,261.07,336.66,259.92,336.01,259.05,334.85,258.19,333.69,257.56,332.07,256.93,330.45,256.4,328.5,255.95,326.92,253.57,324.37,251.19,321.82,247.7,318.75,244.22,315.67,240.04,312.3,235.85,308.92,231.8,305.7,234.4,302.3,239.73,305.6,244.57,308.51,249.41,311.42,253.48,313.6,257.55,315.77,260.7,317.04,263.85,318.3,265.8,318.3,266.85,318.3,267.79,318.15,268.73,318.01,269.73,317.42,270.72,316.84,271.85,315.68,272.98,314.52,274.4,312.5,276.28,309.87,278.36,304.96,280.43,300.04,282.18,293.27,283.92,286.51,285.06,278.1,286.2,269.7,286.2,260.1,286.2,251.92,285.58,245.59,284.95,239.26,282.7,234.93,280.45,230.59,276.08,228.35,271.7,226.1,264.2,226.1,262.18,226.1,259.06,226.44,255.94,226.77,252.6,227.28,249.27,227.78,246.15,228.38,243.03,228.98,241,229.5,237.33,241.57,232.78,254.53,228.22,267.48,223.33,279.87,218.44,292.27,213.47,303.38,208.51,314.5,204.01,322.9,202.51,325.82,201.11,327.97,199.72,330.12,198.41,331.52,197.09,332.93,195.85,333.61,194.61,334.3,193.41,334.3,191.91,334.3,190.69,333.64,189.47,332.99,188.6,331.62,187.74,330.25,187.27,328.14,186.8,326.02,186.8,323.1,186.8,321.52,187.67,319.73,188.53,317.94,189.8,316.1,191.08,314.26,192.54,312.47,194,310.67,195.2,309.1,198.73,304.9,203.36,296.14,207.98,287.39,212.73,276.55,217.47,265.71,221.84,254.03,226.2,242.35,229.2,232.3,227.25,232.82,224.7,233.55,222.15,234.28,219.45,235.12,216.75,235.97,214.13,236.88,211.5,237.8,209.4,238.7,208.58,239.07,207.62,239.84,206.67,240.61,205.65,241.37,204.64,242.14,203.61,242.72,202.58,243.3,201.6,243.3,198.15,243.3,195.35,241.5,192.54,239.7,190.55,237,188.57,234.3,187.49,231.15,186.4,228,186.4,225.3,186.4,223.72,186.92,222.3,187.43,220.87,188.25,219.72,189.08,218.58,190.12,217.79,191.15,217,192.2,216.7,193,217.1,192.7,218.75,193.21,220.67,193.72,222.6,194.98,224.25,196.24,225.9,198.21,227,200.18,228.1,202.8,228.1,205.65,228.1,209.01,227.72,212.37,227.34,216.03,226.72,219.68,226.11,223.53,225.31,227.38,224.52,231.2,223.7,232.03,220.77,233.22,215.77,234.42,210.77,235.53,205.42,236.63,200.08,237.42,195.27,238.2,190.45,238.2,187.9,238.2,185.57,237.67,183.88,237.15,182.18,235.93,181.07,234.71,179.97,232.72,179.43,230.73,178.9,227.8,178.9,227.35,178.9,226.87,178.9,226.38,178.91,225.88,178.92,225.37,178.94,224.85,178.98,224.33,179.02,223.8,179.1,223.2,178.7,223.203,178.701,306.8,176.5,315.58,179.58,321.46,183.08,327.33,186.59,330.88,190,334.42,193.41,335.91,196.47,337.4,199.53,337.4,201.7,337.4,202.98,336.96,204.07,336.51,205.17,335.8,205.98,335.09,206.78,334.2,207.24,333.3,207.7,332.4,207.7,331.05,207.7,330.08,207.37,329.1,207.03,328.35,206.38,327.6,205.72,327,204.75,326.4,203.78,325.8,202.5,324.83,200.1,322.82,197.08,320.82,194.06,318.03,190.95,315.23,187.84,311.77,184.89,308.3,181.95,304.4,179.7,306.8,176.5,306.802,176.501,309.8,205.9,323,209.88,332.12,216.82,341.24,223.77,346.9,232.07,352.56,240.38,355.08,249.24,357.6,258.1,357.6,265.9,357.6,269.5,356.96,272.36,356.33,275.21,355.2,277.2,354.08,279.19,352.54,280.24,351,281.3,349.2,281.3,347.85,281.3,346.59,280.91,345.33,280.51,344.35,279.5,343.38,278.49,342.79,276.74,342.2,275,342.2,272.3,342.2,263.22,340.67,254.14,339.15,245.06,335.23,236.82,331.31,228.59,324.57,221.65,317.83,214.7,307.4,209.9,309.8,205.9,309.802,205.9,329.2,163.9,338.05,166.9,343.97,170.37,349.89,173.83,353.45,177.23,357.01,180.62,358.51,183.67,360,186.73,360,188.9,360,190.18,359.56,191.27,359.12,192.37,358.43,193.18,357.73,193.98,356.88,194.44,356.03,194.9,355.2,194.9,353.85,194.9,352.85,194.56,351.84,194.23,351.08,193.55,350.31,192.88,349.72,191.86,349.13,190.85,348.6,189.5,347.55,187.03,345.51,184.03,343.46,181.03,340.65,177.98,337.84,174.92,334.37,172.04,330.9,169.15,327,166.9,329.2,163.9,329.202,163.901] ) );
    shape.graphics.endFill();

    return shape;
  },
  "巡りゆく" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,2,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [50.4,131.63,49.87,132.16,49.04,132.71,48.2,133.25,47,133.76,45.8,134.27,44.21,134.7,42.62,135.13,40.6,135.44,40.6,190.03,46,196.11,51.94,199.81,57.88,203.5,65.47,205.51,73.07,207.52,82.87,208.17,92.67,208.83,105.8,208.83,114.95,208.83,125.35,208.79,135.76,208.75,146.45,208.66,157.13,208.57,167.62,208.41,178.1,208.26,187.4,208.03,187.4,210.83,185.22,211.21,183.5,212.07,181.78,212.93,180.52,214.28,179.27,215.63,178.48,217.47,177.7,219.31,177.4,221.63,106,221.63,92.12,221.63,81.76,220.53,71.39,219.42,63.42,216.38,55.45,213.35,49.33,207.97,43.2,202.58,37.8,194.03,35.02,197.33,31.6,201.07,28.17,204.8,24.62,208.46,21.08,212.12,17.69,215.44,14.3,218.76,11.6,221.23,11.75,222.21,11.68,222.94,11.61,223.67,11.32,224.23,11.04,224.8,10.56,225.23,10.07,225.66,9.4,226.03,0,209.83,2.55,208.63,5.81,206.89,9.07,205.14,12.75,203.06,16.42,200.98,20.36,198.67,24.3,196.36,28.2,194.03,28.2,132.63,1.8,132.63,0.8,127.63,25.4,127.63,33.2,117.23,50.4,131.63,50.399,131.635,6.2,47.24,16.25,50.54,23.04,54.59,29.82,58.64,33.95,62.86,38.07,67.08,39.84,71.17,41.6,75.26,41.6,78.63,41.6,80.73,41.03,82.47,40.47,84.2,39.47,85.44,38.48,86.67,37.13,87.35,35.77,88.03,34.2,88.03,33.52,88.03,32.81,87.91,32.11,87.79,31.37,87.51,30.64,87.23,29.9,86.77,29.15,86.31,28.4,85.63,27.57,80.98,25.21,75.89,22.86,70.8,19.57,65.91,16.29,61.02,12.4,56.64,8.5,52.26,4.6,49.04,6.2,47.24,6.2,47.236,100.2,49.44,99.9,50.34,99.38,51.04,98.87,51.74,98.02,52.19,97.18,52.64,95.95,52.81,94.72,52.99,93,52.84,91.27,56.44,87.8,64.13,84.34,71.82,80.1,81.06,75.86,90.3,71.34,99.83,66.82,109.36,63,116.63,73.42,127.28,80.41,137.03,87.4,146.77,91.62,155.26,95.84,163.75,97.62,170.83,99.4,177.91,99.4,183.23,99.4,186.61,98.8,189.22,98.21,191.83,97.2,193.61,96.18,195.39,94.84,196.31,93.5,197.23,92,197.23,91.4,197.23,90.8,197.12,90.2,197,89.6,196.73,89,196.47,88.4,196.05,87.8,195.63,87.2,195.03,86.6,188.13,84.23,178.35,81.86,168.57,78,157.86,74.13,147.15,68.92,136.51,63.7,125.86,57.4,117.24,60.47,108.84,63.87,98.26,67.27,87.69,70.32,77.34,73.38,66.99,75.76,58.06,78.15,49.14,79.2,44.04,100.2,49.44,100.198,49.436,140.4,49.64,140.1,50.54,139.55,51.24,139,51.94,138.12,52.39,137.24,52.84,135.98,53.01,134.72,53.19,133,53.04,131.12,56.56,127.34,64.2,123.57,71.84,118.97,81.01,114.38,90.18,109.51,99.58,104.65,108.99,100.6,116.04,112.15,126.99,119.87,136.95,127.6,146.91,132.25,155.54,136.9,164.16,138.85,171.27,140.8,178.38,140.8,183.63,140.8,186.71,140.24,189.13,139.67,191.54,138.7,193.21,137.72,194.88,136.41,195.76,135.1,196.63,133.6,196.63,133,196.63,132.4,196.49,131.8,196.34,131.2,196.06,130.6,195.78,130,195.37,129.4,194.96,128.8,194.44,127.9,187.61,125.09,177.78,122.29,167.95,117.9,157.21,113.51,146.47,107.7,135.85,101.9,125.24,95,116.84,98.3,108.59,102.07,98.12,105.85,87.66,109.3,77.36,112.75,67.07,115.47,58.14,118.2,49.21,119.4,44.04,140.4,49.64,140.397,49.636,182.6,50.04,182.3,51.01,181.75,51.69,181.2,52.37,180.32,52.76,179.44,53.15,178.18,53.27,176.92,53.39,175.2,53.24,173.1,56.76,168.94,64.4,164.78,72.04,159.77,81.19,154.77,90.34,149.52,99.7,144.27,109.06,140,116.03,152.67,127.13,161.1,137.24,169.53,147.35,174.57,156.08,179.62,164.82,181.71,172,183.8,179.18,183.8,184.43,183.8,187.36,183.24,189.66,182.68,191.96,181.72,193.56,180.76,195.15,179.49,195.99,178.22,196.83,176.8,196.83,176.2,196.83,175.6,196.69,175,196.54,174.4,196.26,173.8,195.98,173.2,195.57,172.6,195.16,172,194.63,170.8,187.66,167.52,177.76,164.25,167.85,159.32,157.11,154.39,146.36,148.01,135.82,141.62,125.28,134.2,117.03,137.87,108.78,142.08,98.32,146.29,87.85,150.17,77.53,154.05,67.22,157.18,58.25,160.3,49.28,161.8,44.03,182.6,50.04,182.597,50.036,205.65,117.68,206.1,116.78,207.01,116.01,207.93,115.24,209.07,114.68,210.21,114.12,211.47,113.8,212.72,113.48,213.85,113.48,216.7,113.48,219.74,114.98,222.78,116.49,225.3,119.06,227.81,121.62,229.43,125.04,231.05,128.46,231.05,132.28,231.05,133.85,230.48,135.42,229.91,136.99,229.05,138.53,228.18,140.07,227.16,141.56,226.15,143.06,225.25,144.48,222.47,149.28,220.28,155.23,218.09,161.19,216.57,167.35,215.05,173.52,214.25,179.44,213.45,185.35,213.45,190.08,213.45,191.43,213.52,192.66,213.6,193.89,213.75,194.98,213.9,196.07,214.12,197,214.35,197.93,214.65,198.68,215.05,198.68,217.97,190.5,223.02,179.58,228.08,168.65,235.07,158.81,242.06,148.96,250.9,142.12,259.75,135.28,270.24,135.28,272.72,135.28,275.5,135.81,278.28,136.34,281.09,137.41,283.91,138.47,286.61,140.09,289.32,141.71,291.64,143.88,295.47,147.56,298.45,152.71,301.43,157.86,303.49,164.68,305.56,171.51,306.66,180.11,307.77,188.71,307.84,199.28,307.84,215.1,303.46,229.11,299.07,243.11,288.94,254.45,278.82,265.8,262.28,274.06,245.75,282.33,221.45,286.68,219.25,282.48,238.07,277.98,252.02,270.03,265.96,262.09,275.17,251.45,284.38,240.82,288.91,227.89,293.44,214.95,293.44,200.48,293.44,190.8,292.9,182.74,292.35,174.68,291.02,168.23,289.69,161.78,287.45,156.94,285.22,152.1,281.84,148.88,280.42,147.45,278.78,146.31,277.13,145.16,275.29,144.35,273.46,143.55,271.44,143.11,269.42,142.68,267.24,142.68,258.54,142.68,251.06,148.97,243.57,155.25,237.65,165.08,231.72,174.9,227.53,186.89,223.35,198.88,221.24,210.28,221.47,211.63,221.69,213.04,221.9,214.45,222.07,215.85,222.24,217.26,222.34,218.63,222.44,220,222.44,221.28,222.44,222.93,222.24,224.32,222.04,225.72,221.57,226.73,221.1,227.74,220.34,228.31,219.57,228.88,218.44,228.88,214.62,228.88,211.67,225.74,208.73,222.6,206.72,218.03,204.71,213.45,203.68,208.29,202.64,203.13,202.64,199.08,202.64,186.1,204.52,175.54,206.39,164.97,208.64,156.55,210.89,148.14,212.77,141.73,214.64,135.33,214.64,130.68,214.64,127.01,213.75,124.58,212.86,122.15,211.54,120.71,210.23,119.26,208.74,118.67,207.24,118.08,206.04,118.08,205.65,117.68,205.646,117.681] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [378.16,12,379.36,9.82,380.86,8.15,382.36,6.47,384.16,5.32,385.96,4.18,388.06,3.59,390.16,3,392.56,3,394.06,3,397.09,3.33,400.12,3.66,403.15,5.03,406.19,6.39,408.47,9.16,410.75,11.93,410.75,16.8,410.75,17.78,410.69,18.78,410.63,19.79,410.56,20.83,410.48,21.86,410.42,22.9,410.36,23.95,410.36,25,410.36,26.57,410.42,28.29,410.49,30.01,410.61,31.85,410.72,33.69,410.86,35.63,411.01,37.58,411.16,39.6,421.36,39,431.19,41.3,441.03,43.6,448.76,49.45,456.48,55.3,461.22,65.02,465.95,74.75,465.95,89,465.95,101.97,461.71,112.13,457.47,122.29,449.71,129.3,441.94,136.31,431.02,140.02,420.11,143.72,406.76,143.8,403.98,148.9,400.02,153.42,396.05,157.95,390.48,161.85,384.91,165.75,377.53,169,370.16,172.25,360.56,174.8,358.16,170.6,364.83,168.05,370.18,164.96,375.53,161.88,379.78,158.37,384.04,154.87,387.32,150.99,390.61,147.12,393.16,143,383.93,142.47,376.81,139.56,369.69,136.64,364.83,131.52,359.98,126.4,357.47,119.18,354.96,111.95,354.96,102.8,354.96,100.77,355.07,98.64,355.19,96.51,355.43,94.27,355.68,92.04,356.06,89.72,356.43,87.4,356.96,85,361.76,85,361.46,86.72,361.26,88.35,361.07,89.97,360.96,91.52,360.85,93.08,360.8,94.59,360.76,96.1,360.76,97.6,360.76,106.22,363.1,112.78,365.44,119.34,370.03,123.8,374.63,128.26,381.43,130.62,388.23,132.97,397.16,133.2,398.51,129.97,399.36,126.11,400.22,122.25,400.71,117.9,401.19,113.55,401.38,108.79,401.56,104.02,401.56,99,401.56,91.95,401.38,84.92,401.21,77.88,400.91,71.23,400.61,64.57,400.21,58.47,399.81,52.38,399.36,47.2,378.73,50.73,363.9,60.97,349.08,71.21,339.53,82.95,329.99,94.69,325.47,105.31,320.96,115.93,320.96,120.2,320.96,121.18,321.03,122.13,321.1,123.09,321.21,123.98,321.32,124.86,321.46,125.63,321.61,126.4,321.76,127,322.13,128.5,322.59,129.89,323.04,131.28,323.43,132.7,323.83,134.13,324.09,135.66,324.36,137.2,324.36,139,324.36,140.28,324.11,141.53,323.85,142.78,323.23,143.77,322.62,144.77,321.58,145.38,320.53,146,318.96,146,317.01,146,314.42,144.47,311.84,142.93,309.51,138.68,307.19,134.42,305.57,126.85,303.96,119.28,303.96,107.2,303.96,96.25,305.27,86.57,306.57,76.9,308.26,68.78,309.95,60.66,311.55,54.24,313.16,47.83,313.76,43.4,313.84,42.5,313.94,41.51,314.04,40.51,314.14,39.48,314.23,38.45,314.29,37.41,314.36,36.38,314.36,35.4,314.36,32.1,313.67,29.71,312.99,27.32,311.86,25.73,310.74,24.13,309.3,23.28,307.86,22.43,306.36,22.2,305.96,21.6,306.49,20.85,307.21,20.32,307.94,19.79,308.79,19.45,309.63,19.11,310.54,18.96,311.46,18.8,312.36,18.8,315.44,18.8,318.6,20.44,321.77,22.08,324.34,24.73,326.9,27.37,328.53,30.7,330.16,34.03,330.16,37.4,330.16,39.8,329.47,41.94,328.78,44.08,327.79,46.1,326.79,48.13,325.69,50.11,324.59,52.1,323.76,54.2,321.74,59.75,319.86,65.94,317.99,72.13,316.59,78.68,315.18,85.22,314.4,91.97,313.61,98.73,313.76,105.4,314.56,105.4,320.56,93.93,329.32,83.18,338.07,72.44,348.91,63.7,359.75,54.96,372.33,48.87,384.91,42.78,398.56,40.6,398.33,38.28,398.08,35.89,397.82,33.5,397.56,31.23,397.3,28.96,397.04,26.91,396.78,24.85,396.56,23.2,396.18,20.8,395.28,18.91,394.37,17.02,393.06,15.7,391.75,14.39,390.09,13.7,388.43,13,386.56,13,385.96,13,385.33,13.08,384.69,13.15,384.04,13.3,383.38,13.45,382.71,13.68,382.04,13.9,381.36,14.2,378.16,12,378.157,12,452.56,88.8,452.56,77.55,449.44,69.38,446.32,61.2,440.81,55.97,435.29,50.74,427.75,48.38,420.21,46.02,411.36,46.4,411.88,54.95,412.29,63.66,412.7,72.36,412.98,79.9,413.26,87.44,413.41,93.14,413.56,98.85,413.56,101.4,413.56,105.9,413.36,110.22,413.16,114.54,412.71,118.55,412.25,122.56,411.53,126.21,410.81,129.85,409.75,133,420.25,133,428.25,129.61,436.25,126.22,441.65,120.27,447.06,114.33,449.81,106.25,452.56,98.17,452.56,88.8,452.555,88.798] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [556.56,5.6,557.46,4.17,558.54,3.12,559.62,2.07,560.86,1.38,562.1,0.68,563.48,0.34,564.86,0,566.36,0,570.41,0,575.01,1.41,579.61,2.82,583.51,5.12,587.41,7.43,589.98,10.38,592.56,13.32,592.56,16.4,592.56,17.82,591.55,18.81,590.55,19.8,588.88,20.7,587.21,21.6,585.05,22.59,582.88,23.57,580.56,25,574.26,28.9,565.33,35.37,556.41,41.84,547.41,48.87,538.41,55.9,530.61,62.49,522.81,69.07,518.76,73.2,517.48,74.47,516.45,76.01,515.41,77.55,514.68,79.2,513.95,80.85,513.56,82.54,513.16,84.22,513.16,85.8,513.16,87.6,514.14,89.33,515.13,91.06,517.13,92.9,519.14,94.74,522.19,96.77,525.23,98.8,529.36,101.2,545.86,110.65,558.89,120.5,571.92,130.36,580.96,139.25,589.99,148.14,594.78,155.37,599.56,162.6,599.56,166.8,599.56,168.75,599.02,170.49,598.48,172.24,597.48,173.55,596.49,174.86,595.08,175.63,593.68,176.4,591.96,176.4,590.76,176.4,589.37,175.62,587.98,174.84,586.53,173.47,585.09,172.1,583.66,170.24,582.23,168.37,580.96,166.2,576.91,159.3,570.61,151.29,564.31,143.29,556.23,135.15,548.15,127.01,538.52,119.23,528.88,111.45,518.16,105,514.93,102.97,512.37,100.85,509.81,98.72,508.03,96.37,506.25,94.03,505.3,91.41,504.36,88.8,504.36,85.8,504.36,83.47,504.91,81.17,505.46,78.86,506.51,76.65,507.56,74.44,509.08,72.36,510.61,70.28,512.56,68.4,516.83,63.98,523.3,57.9,529.77,51.82,536.86,45.43,543.94,39.03,550.86,32.99,557.78,26.95,562.96,22.6,564.46,21.33,565.67,19.94,566.89,18.55,567.76,17.2,568.62,15.85,569.09,14.61,569.56,13.38,569.56,12.4,569.56,10.68,568.21,9.47,566.87,8.26,564.96,7.53,563.04,6.79,560.95,6.52,558.86,6.25,557.36,6.4,556.56,5.6,556.558,5.6] ) );
    shape.graphics.endFill();

    return shape;
  },
  "空間は" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,1,2,2,3,3,3,3,2,2,2,2,2,2,2,2,2,3,3,3,3,2,2,2,2,1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [169.4,20.6,185.2,35.8,184.67,36.4,183.95,36.79,183.23,37.18,182.27,37.42,181.32,37.67,180.11,37.8,178.9,37.92,177.4,38,175.37,40.62,172.65,43.69,169.93,46.76,166.9,49.8,163.86,52.84,160.69,55.6,157.52,58.37,154.6,60.4,152.2,59,153.25,56.82,154.48,53.83,155.71,50.84,156.95,47.52,158.19,44.21,159.34,40.8,160.5,37.4,161.4,34.4,28.2,34.4,28.12,40.55,26.39,45.41,24.66,50.27,21.82,53.65,18.99,57.02,15.35,58.81,11.7,60.6,7.8,60.6,5.1,60.6,3.54,59.77,1.99,58.94,1.2,57.87,0.41,56.81,0.21,55.79,0,54.77,0,54.4,0,53.27,0.49,52.17,0.98,51.06,1.82,50.05,2.67,49.04,3.8,48.16,4.92,47.27,6.2,46.6,9.43,45.17,12.44,42.54,15.46,39.91,17.75,36.35,20.04,32.79,21.33,28.43,22.62,24.08,22.4,19.2,26,19,26.38,20.42,26.71,21.81,27.04,23.19,27.3,24.52,27.56,25.86,27.74,27.13,27.93,28.4,28,29.6,85.6,29.6,85.6,0,108,2,107.92,3.13,107.43,3.97,106.94,4.81,105.87,5.45,104.81,6.09,103.08,6.56,101.35,7.03,98.8,7.4,98.8,29.6,160.6,29.6,169.4,20.6,169.397,20.6,156.6,173,166.2,160.2,184.6,173.6,184,174.65,183.24,175.43,182.48,176.22,181.37,176.75,180.27,177.27,178.72,177.53,177.17,177.8,175,177.8,1.4,177.8,0.2,173,85.6,173,85.6,120.6,22.8,120.6,21.6,115.8,139.4,115.8,148.8,104.2,166.6,116.4,166,117.52,165.24,118.32,164.48,119.12,163.37,119.62,162.27,120.13,160.72,120.36,159.17,120.6,157,120.6,98.8,120.6,98.8,173,156.6,173,156.598,172.997,7,102.6,20.73,97.65,30.19,90.68,39.66,83.71,45.82,75.32,51.99,66.94,55.35,57.46,58.7,47.97,60.2,38,81.6,41.8,81.37,42.85,80.83,43.54,80.29,44.24,79.35,44.65,78.41,45.06,77.04,45.23,75.67,45.4,73.8,45.4,71.47,55,66.99,64.04,62.5,73.08,54.87,80.97,47.24,88.87,35.97,95.32,24.7,101.77,8.8,106.2,7,102.6,7,102.598,108.4,37.4,127.8,39.4,127.65,40.22,127.28,40.84,126.9,41.45,126.17,41.9,125.44,42.35,124.28,42.66,123.12,42.97,121.4,43.2,121.4,78.6,121.4,80.25,121.49,81.17,121.59,82.1,122.15,82.55,122.71,83,123.93,83.1,125.15,83.2,127.4,83.2,157.4,83.2,158.45,83.2,159.32,83.14,160.2,83.07,160.95,82.85,161.7,82.62,162.35,82.19,163,81.75,163.6,81,164.12,80.32,164.79,78.84,165.45,77.36,166.22,75.3,166.99,73.24,167.84,70.7,168.7,68.17,169.6,65.4,171.6,65.4,171.8,82,173.9,82.67,175.16,83.14,176.42,83.6,177.1,84.05,177.77,84.5,177.98,85.04,178.2,85.57,178.2,86.4,178.2,88.35,177.11,89.78,176.03,91.21,173.57,92.15,171.12,93.09,167.14,93.54,163.17,94,157.4,94,126.4,94,120.62,94,117.09,93.36,113.55,92.72,111.62,91,109.69,89.27,109.04,86.24,108.4,83.2,108.4,78.4,108.4,37.4,108.398,37.399] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [264.04,142,221.84,142,221.84,250.4,221.84,250.7,221.5,251.58,221.16,252.46,219.87,253.4,218.57,254.33,216.02,255.06,213.47,255.8,209.04,255.8,209.04,77,223.04,83.6,262.24,83.6,267.84,76.2,284.04,87.8,283.59,88.33,282.82,88.87,282.06,89.41,281.06,89.9,280.07,90.39,278.89,90.78,277.71,91.18,276.44,91.4,276.44,148.6,276.44,148.75,275.71,149.39,274.98,150.04,273.46,150.75,271.95,151.46,269.61,152.03,267.26,152.6,264.04,152.6,264.04,142,264.04,141.999,264.04,88.4,221.84,88.4,221.84,110,264.04,110,264.04,88.4,264.04,88.399,221.84,137.2,264.04,137.2,264.04,114.8,221.84,114.8,221.84,137.2,221.841,137.199,334.64,170.2,334.19,170.72,333.42,171.27,332.65,171.81,331.64,172.3,330.63,172.79,329.41,173.18,328.19,173.57,326.84,173.8,326.84,235.4,326.84,235.55,326.08,236.25,325.33,236.96,323.79,237.75,322.25,238.53,319.92,239.17,317.59,239.8,314.44,239.8,314.44,230.4,265.24,230.4,265.24,237.4,265.24,237.4,264.79,238.09,264.35,238.77,263.01,239.6,261.68,240.42,259.25,241.11,256.81,241.8,252.84,241.8,252.84,160,266.24,166,312.64,166,318.24,158.6,334.64,170.2,334.639,170.198,314.44,170.8,265.24,170.8,265.24,195,314.44,195,314.44,170.8,314.439,170.798,265.24,225.6,314.44,225.6,314.44,199.8,265.24,199.8,265.24,225.6,265.24,225.598,362.64,75.2,380.04,88,379.51,88.6,378.64,89.22,377.76,89.83,376.61,90.37,375.47,90.92,374.1,91.35,372.74,91.77,371.24,92,371.24,236.6,371.24,240.5,370.48,243.73,369.72,246.97,367.41,249.42,365.11,251.88,360.86,253.5,356.61,255.12,349.64,255.8,349.64,251.6,348.13,249.12,346.62,246.64,343.71,245.25,340.81,243.86,336.56,243.25,332.31,242.65,326.84,242.2,326.84,239.4,353.84,239.4,355.19,239.4,356.04,239.24,356.9,239.08,357.39,238.72,357.87,238.37,358.06,237.79,358.24,237.22,358.24,236.4,358.24,142,314.44,142,314.44,147.6,314.44,147.67,313.99,148.37,313.54,149.07,312.19,149.87,310.84,150.68,308.36,151.34,305.89,152,301.84,152,301.84,77.6,315.24,83.6,356.24,83.6,362.64,75.2,362.639,75.2,358.24,88.4,314.44,88.4,314.44,110,358.24,110,358.24,88.4,358.238,88.399,314.44,137.2,358.24,137.2,358.24,114.8,314.44,114.8,314.44,137.2,314.439,137.199] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [404.24,51.2,404.84,50.37,405.83,49.74,406.82,49.11,407.94,48.67,409.07,48.24,410.2,48.02,411.34,47.8,412.24,47.8,415.09,47.8,418.42,49.42,421.74,51.04,424.59,53.72,427.44,56.41,429.34,59.86,431.24,63.32,431.24,67,431.24,68.65,430.81,69.88,430.37,71.11,429.72,72.17,429.06,73.24,428.29,74.28,427.52,75.32,426.84,76.6,422.94,83.95,419.64,92.46,416.34,100.97,413.94,110.35,411.54,119.72,410.19,129.81,408.84,139.9,408.84,150.4,408.84,155.35,409.36,159.53,409.87,163.71,410.72,166.75,411.56,169.79,412.64,171.49,413.72,173.2,414.84,173.2,415.89,173.2,418.86,168.36,421.83,163.52,425.39,156.85,428.95,150.17,432.45,143.16,435.94,136.15,438.04,131.8,442.24,133.4,438.87,141.8,435.51,150.14,432.15,158.49,429.47,165.5,426.78,172.51,425.11,177.56,423.44,182.6,423.44,184.4,423.44,185.9,423.72,187.23,424,188.56,424.34,189.95,424.68,191.34,424.96,192.89,425.24,194.45,425.24,196.4,425.24,197.9,424.91,199.27,424.58,200.65,423.94,201.7,423.3,202.75,422.37,203.37,421.44,204,420.24,204,416.94,204,413.25,200.61,409.55,197.22,406.44,190.67,403.33,184.13,401.29,174.55,399.24,164.97,399.24,152.6,399.24,144.05,400.25,135.07,401.25,126.08,402.79,117.48,404.33,108.87,406.16,101.05,407.99,93.23,409.64,87,410.47,84,411.23,81.06,411.98,78.13,412.57,75.35,413.15,72.58,413.49,70.01,413.84,67.45,413.84,65.2,413.84,62.73,413.44,60.46,413.04,58.2,411.99,56.4,410.94,54.6,409.12,53.39,407.29,52.18,404.44,51.8,404.24,51.2,404.242,51.199,491.84,49.6,492.29,47.95,493.32,46.59,494.34,45.23,495.84,44.25,497.34,43.28,499.27,42.74,501.19,42.2,503.44,42.2,506.97,42.2,510.5,43.19,514.03,44.19,516.87,45.8,519.7,47.41,521.47,49.46,523.24,51.5,523.24,53.6,523.24,54.65,522.98,55.57,522.71,56.48,522.32,57.33,521.92,58.17,521.47,58.97,521.01,59.77,520.64,60.6,520.19,61.43,519.94,63,519.7,64.58,519.57,66.62,519.43,68.67,519.38,71.03,519.32,73.4,519.24,75.8,519.17,77.6,519.06,79.43,518.95,81.26,518.84,83.1,518.73,84.94,518.62,86.77,518.52,88.6,518.44,90.4,525.27,89.35,529.3,88.22,533.33,87.08,535.57,85.82,537.8,84.57,538.72,83.17,539.64,81.78,540.24,80.2,544.14,80.5,547.41,80.99,550.68,81.48,553.04,82.32,555.4,83.17,556.72,84.45,558.04,85.72,558.04,87.6,558.04,89.4,557.13,90.63,556.22,91.87,554.34,92.82,552.47,93.78,549.6,94.6,546.74,95.42,542.84,96.4,540.89,96.92,538.16,97.51,535.42,98.09,532.22,98.67,529.01,99.26,525.49,99.8,521.97,100.35,518.44,100.8,518.44,103.57,518.5,106.22,518.57,108.87,518.64,111.32,518.72,113.78,518.78,116.01,518.84,118.25,518.84,120.2,518.84,127.32,519.12,133.29,519.4,139.25,519.87,144.2,520.34,149.15,520.95,153.16,521.57,157.17,522.24,160.4,527.12,162.42,533.41,165.63,539.71,168.85,545.32,172.9,550.92,176.95,554.78,181.66,558.64,186.37,558.64,191.4,558.64,192.67,558.16,193.8,557.67,194.93,556.87,195.77,556.06,196.62,555.01,197.11,553.97,197.6,552.84,197.6,551.94,197.6,550.97,197.25,549.99,196.9,548.94,196.17,547.89,195.44,546.76,194.31,545.64,193.17,544.44,191.6,542.49,189.12,539.95,186.57,537.4,184.01,534.59,181.65,531.78,179.28,528.86,177.25,525.94,175.22,523.24,173.8,523.32,174.92,523.36,176.32,523.4,177.72,523.42,179.15,523.43,180.57,523.44,181.9,523.44,183.22,523.44,184.2,523.29,189.3,521.3,193.25,519.32,197.2,515.49,199.9,511.67,202.6,506,204,500.34,205.4,492.84,205.4,483.92,205.4,476.8,203.46,469.69,201.53,464.72,198.02,459.75,194.51,457.09,189.62,454.44,184.72,454.44,178.8,454.44,173.17,457.24,168.72,460.03,164.26,464.94,161.17,469.85,158.08,476.55,156.44,483.24,154.8,491.04,154.8,493.37,154.8,495.84,154.94,498.31,155.09,500.77,155.37,503.22,155.65,505.58,156.06,507.94,156.47,510.04,157,509.59,153.02,509.16,146.58,508.73,140.13,508.39,132.6,508.05,125.06,507.85,117.12,507.64,109.17,507.64,102.2,504.12,102.72,500.66,103.1,497.21,103.48,493.97,103.72,490.72,103.97,487.76,104.08,484.79,104.2,482.24,104.2,478.57,104.2,474.89,103.46,471.2,102.73,467.79,101.17,464.38,99.62,461.37,97.19,458.37,94.77,456.04,91.4,458.24,88.2,461.24,90.6,464.13,91.96,467.01,93.32,469.77,94,472.52,94.67,475.15,94.83,477.77,95,480.24,95,483.32,95,486.77,94.85,490.22,94.7,493.77,94.4,497.31,94.1,500.8,93.65,504.29,93.2,507.44,92.6,507.44,74.6,507.44,67.85,507.13,63.16,506.81,58.47,505.67,55.55,504.52,52.62,502.3,51.31,500.07,50,496.24,50,495.87,50,495.42,50.03,494.98,50.07,494.49,50.12,494,50.18,493.49,50.25,492.97,50.32,492.44,50.4,491.84,49.6,491.841,49.6,510.84,167.2,508.29,166.07,505.65,165.18,503.02,164.29,500.39,163.67,497.77,163.05,495.2,162.73,492.64,162.4,490.24,162.4,484.31,162.4,479.2,163.47,474.08,164.53,470.32,166.6,466.55,168.66,464.39,171.68,462.24,174.7,462.24,178.6,462.24,182.65,464.32,185.62,466.39,188.6,470.14,190.55,473.89,192.5,479.12,193.45,484.34,194.4,490.64,194.4,496.34,194.4,500.24,193.38,504.14,192.35,506.54,190.12,508.94,187.89,509.99,184.36,511.04,180.82,511.04,175.8,511.04,174.82,511.04,173.83,511.03,172.85,511.01,171.8,511,170.75,510.96,169.61,510.91,168.47,510.84,167.2,510.84,167.198] ) );
    shape.graphics.endFill();

    return shape;
  }
});
</d>
<d p="0.1,8,25,16777215,1354860958,2,a0d50318,156322831">/* Comment Art Helper for submission Round and Round - v20121204.1
 * Copyright (C) 2012 EPM
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * For a copy of the GNU General Public License,
 * see &lt;http://www.gnu.org/licenses/&gt;.
 *
 * Documenting convention:
 *
 * For those functions that accept only one Object "params", only the content of the Object is documented.
 */
 
/* Category: Master Control
 * This category contains only a static class Helper for controlling the script.
 */
 
/* Static Class: Helper
 * Provides functions for commanding the helper.
 */
var Helper = Global._get( "__class_helper_helperRnr" );
 
/* Category: Utilities
 * This sort of classes provide utilities not directly related to presenting content.
 */
 
/* Static Class: Factory
 * Provides functions for creating and manipulating objects.
 *
 * As of 11/27, all functions with connection to loaderInfo removed. Factory now serve only as an object cloning utility.
 */
var Factory = Global._get( "__class_factory_helperRnr" );
 
/* Static Class: Timer
 * Improves timing precision over Player.time by sampling time usage for each frame. For retaining both smoothness and seekability.
 */
var Timer = Global._get( "__class_timer_helperRnr" );

/* Class: Binder
 * Provides functions for binding properties. Mainly used in layers.
 *
 * object
 *   An Object to bind.
 * properties
 *   An Object, containing values or Bindings for each property.
 */
var Binder = Global._get( "__class_binder_helperRnr" );

/* Category: Abstractions
 * This sort of classes are abstractions of display objects for use in production.
 */
 
/* Class: Layer
 * Provides functions for animating contents.
 *
 * source
 *   A DisplayObject serving as the layer source.
 * inPoint
 *   A Number, the time (in milliseconds) at which the layers enters.
 * outPoint
 *   A Number, the time (in milliseconds) at which the layers exits.
 * properties
 *   [default] {}
 *   An Object, containing values or Bindings for each AS3 property.
 */
var Layer = Global._get( "__class_layer_helperRnr" );

/* Class: DynamicVectorTextLayer
 * Alias: DVTLayer
 * A type of layer specialized to display basic dynamic vector text (huge sizes over 200px or exotic fonts).
 *
 * dictionary
 *   An Object containing functions to create possible glyphs (due to Flash unable to clone vector content). 
 *   Glyphs should be provided by user, be anchored at top-left and be of 200px in size.
 * textProperties
 *   [default] { horizontalAlign : "left", verticalAlign : "top", letterSpacing : 20, fontSize : 200, lineHeight : 240, text : "" }
 *   An Object, containing values or Bindings for vector text properties: horizontalAlign, verticalAlign, fontSize, letterSpacing, lineHeight, text.
 * inPoint
 *   A Number, the time (in milliseconds) at which the layers enters.
 * outPoint
 *   A Number, the time (in milliseconds) at which the layers exits.
 * properties
 *   [default] {}
 *   An Object, containing values or Bindings for each AS3 property.
 */
var DynamicVectorTextLayer = Global._get( "__class_dvtlayer_helperRnr" );
var DVTLayer = DynamicVectorTextLayer;

/* Class: CompositionLayer
 * Alias: CompLayer
 * A type of layer specialized to nest compositions.
 *
 * composition
 *   A Composition.
 * inPoint
 *   A Number, the time (in milliseconds) at which the layers enters.
 * outPoint
 *   A Number, the time (in milliseconds) at which the layers exits.
 * inPointTime
 *   [default] composition.startTime
 *   A Number, the time (in milliseconds) the Composition is at when the layers enters.
 * outPointTime
 *   [default] composition.startTime + composition.duration
 *   A Number, the time (in milliseconds) the Composition is at when the layers exits.
 * timeRemap
 *   [default] null
 *   A Function or null, depending on whether you need time remapping. Setting this function overrides inPointTime and outPointTime settings.
 *   The function should accept a parameter time (in milliseconds) the current time.
 * properties
 *   [default] {}
 *   An Object, containing values or Bindings for each AS3 property.
 */
var CompositionLayer = Global._get( "__class_complayer_helperRnr" );
var CompLayer = CompositionLayer;

/* Class: Composition
 * Alias: Comp
 * Provides functions as the framework of a scene.
 *
 * width
 *   [default] $.width
 *   A Number specifying stage width.
 * height
 *   [default] $.height
 *   A Number specifying stage height.
 * startTime
 *   [default] 0
 *   A Number, the time (in milliseconds) when the timeline starts.
 * duration
 *   [default] 60000
 *   A Number, the length (in milliseconds) of the timeline.
 * layers
 *   [default] []
 *   An Array of Layers, from top to bottom.
 * hasBoundaries
 *   [default] false
 *   Whether a mask will be put on the canvas so that elements outside become invisible.
 */
var Composition = Global._get( "__class_comp_helperRnr" );
var Comp = Composition;

/* Class: MainComposition
 * Alias: MainComp
 * Provides functions as the framework of the comment art. Only MainCompositions have ability to be presented.
 *
 * width
 *   [default] $.width
 *   A Number specifying stage width.
 * height
 *   [default] $.height
 *   A Number specifying stage height.
 * startTime
 *   [default] 0
 *   A Number, the time (in milliseconds) when the timeline starts.
 * duration
 *   [default] 60000
 *   A Number, the length (in milliseconds) of the timeline.
 * layers
 *   [default] []
 *   An Array of Layers, from top to bottom.
 * hasBoundaries
 *   [default] true
 *   Whether a mask will be put on the canvas so that elements outside become invisible.
 */
var MainComposition = Global._get( "__class_maincomp_helperRnr" );
var MainComp = MainComposition;

/* Category: Sources
 * This sort of classes are DisplayObjects that can serve as layer sources.
 */

/* Class: Sprite
 * Shortcut for AS3 Sprite.
 */
var Sprite = Global._get( "__class_sprite_helperRnr" );

/* Class: Shape
 * Shortcut for AS3 Shape.
 */
var Shape = Global._get( "__class_shape_helperRnr" );

/* Class: Text
 * Shortcut for AS3 TextField.
 *
 * preserveGlow
 *   [default] false
 *   Whether to preserve the original glow filter
 */
var Text = Global._get( "__class_text_helperRnr" );

/* Class: Solid
 * A solid color layer source.
 *
 * width
 *   A Number specifying solid width.
 * height
 *   A Number specifying solid height.
 * color
 *   A Number specifying solid color.
 */
var Solid = Global._get( "__class_solid_helperRnr" );

/* Class: Anchor
 * Anchors the layer source at a specific point
 *
 * source
 *   The DisplayObject to wrap around
 * x
 *   [default] source.width / 2
 *   Anchor X.
 * y
 *   [default] source.height / 2
 *   Anchor Y.
 */
var Anchor = Global._get( "__class_anchor_helperRnr" );

/* Class: Anchor3D
 * Anchors the layer source at a specific point in 3D space
 *
 * source
 *   The DisplayObject to wrap around
 * x
 *   [default] source.width / 2
 *   Anchor X.
 * y
 *   [default] source.height / 2
 *   Anchor Y.
 * z
 *   [default] 0
 *   Anchor Z.
 */
var Anchor3D = Global._get( "__class_anchor3d_helperRnr" );

/* Class: Checkerboard
 * A checkboard layer source.
 *
 * width
 *   A Number specifying checkboard width.
 * height
 *   A Number specifying checkboard height.
 * frequencyX
 *   Number of blocks on X axis.
 * frequencyY
 *   Number of blocks on Y axis.
 * color1
 *   A Number specifying checkboard background color.
 * color2
 *   A Number specifying checkboard foreground color.
 */
var Checkerboard = Global._get( "__class_checkerboard_helperRnr" );

/* Category: Effects
 * This sort of classes are effect to put on layers. Not to be confused with filters.
 */

/* Class: TrackMatte
 * Alias: TrkMat
 * Use another layer as a mask.
 *
 * layer
 *   The Layer to be masked.
 * mask
 *   The mask Layer.
 */
var TrackMatte = Global._get( "__class_trkmat_helperRnr" );
var TrkMat = TrackMatte;

/* Class: ForceMotionBlur
 * Alias: ForceMB
 * An effect dedicated to create motion blur effects which Flash lacks. Use the effect with Replicator.
 *
 * layers
 *   The Layers to use.
 * exposureTime
 *   [default] 20.8333
 *   Exposure time (in milliseconds). Defaults to 1000/48 (double the Player frame rate).
 * shutterPhase
 *   [default] -90
 *   Shutter phase in degrees.
 */
var ForceMotionBlur = Global._get( "__class_forcemb_helperRnr" );
var ForceMB = ForceMotionBlur;
 
/* Category: Animation Helpers
 * This sort of classes are helpers for creating animation.
 */
 
/* Class: Replicator
 * Alias: _
 * Returns an Array of Objects created according to given params. 
 *
 * constructor
 *   Constructor of the Class to replicate.
 * count
 *   Count of result Objects.
 * paramsFunction
 *   A Function accepting index as parameter, returning an Array of parameters.
 */
var Replicator = Global._get( "__class_replicator_helperRnr" );
var _ = Replicator;

/* Static Class: NumberInterpolation
 * Alias: NI
 * Provides functions for interpolating between numbers.
 *
 * Common parameters for functions in this class:
 *
 * t
 *   A Number, time factor indicating position between the values.
 * value1
 *   A Number, the first value ( t = 0 ).
 * value2
 *   A Number, the second value ( t = 1 ).
 */
var NumberInterpolation = Global._get( "__class_ni_helperRnr" );
var NI = NumberInterpolation;

/* Enum: KeyframeMode
 * Alias: KeyMode
 * Modes of keyframe behaviors.
 */
var KeyframeMode = Global._get( "__class_keymode_helperRnr" );
var KeyMode = KeyframeMode;

/* Class: Keyframe
 * Alias: Key
 * A class describing a keyframe.
 *
 * time
 *   Time (in milliseconds) the keyframe is at.
 * value
 *   Value of the keyframe.
 * interpolation
 *   [default] NumberInterpolation.linear
 *   Function used to interpolate between this value and the next.
 * mode
 *   [default] KeyframeMode.affectNext
 *   Interpolation behavior of this keyframe.
 * weight
 *   [default] 1
 *   Weight when KeyframeMode.weightBlend is used.
 */
var Keyframe = Global._get( "__class_key_helperRnr" );
var Key = Keyframe;

/* Enum: KeyframesBindMode
 * Alias: KeysBindMode
 * Modes of keyframe bind behaviors.
 */
var KeyframesBindMode = Global._get( "__class_keysbindmode_helperRnr" );
var KeysBindMode = KeyframesBindMode;

/* Class: KeyframesBind
 * Alias: KeysBind
 * An animation Binding using keyframes.
 *
 * keyframes
 *   An Array containing keyframes to use, in time order.
 * mode
 *   [default] KeyframesBindMode.hold
 *   Behavior when out of range.
 */
var KeyframesBind = Global._get( "__class_keysbind_helperRnr" );
var KeysBind = KeyframesBind;
 
/* Class: WiggleKeyframes
 * Alias: WiggleKeys
 * A set of keyframes that make a wiggle effect.
 *
 * origin
 *   Number or Array of Numbers to wiggle upon.
 * numSteps
 *   Number of keyframes to generate.
 * startTime
 *   Time (in milliseconds) at which the wiggle starts.
 * stepTime
 *   Time (in milliseconds) each step will last for.
 * amount
 *   Strength of the effect.
 * interpolation
 *   [default] NumberInterpolation.cubic.easeInOut
 *   Function used to interpolate between values.
 * returnCenter
 *   [default] false
 *   Indicated whether to return to center before every move
 */
var WiggleKeyframes = Global._get( "__class_wigglekeys_helperRnr" );
var WiggleKeys = WiggleKeyframes;

/* Contest submission Round and Round
 *
 * The following script is a programmatic representation of a Comment Art created by EPM.
 *
 * The work is licensed under Creative Commons Attribution-NoDerivs 3.0 Unported License.
 */

// Check if Glyphs are already defined to prevent issues
if ( Global._get( "___static2_Rnr" ) )
{
  // Glyphs are already defined, call a nonexistent function to trigger an Exception and stop execution.
  trace("Execution aborted for glyphs already defined.");
  Helper.stopExecution();
}
 
Global._set( "___static2_Rnr", 
{
  "人ごみに" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [0,216.6,30.22,197.77,46.48,176.35,62.73,154.93,70.17,132.22,77.62,109.52,78.83,86.18,80.05,62.85,80.2,40.2,102.8,42.2,102.65,43.18,102.25,43.96,101.84,44.75,100.92,45.35,100.01,45.95,98.44,46.36,96.87,46.78,94.4,47,96.27,69.8,101.31,92.12,106.35,114.44,116.7,135.1,127.05,155.76,143.79,174.18,160.52,192.6,185.8,207.6,185.2,209.8,182.57,210.02,180.36,210.67,178.15,211.31,176.37,212.55,174.59,213.79,173.24,215.7,171.9,217.62,171,220.4,151.35,206.6,137.72,189.95,124.1,173.3,115.1,154.85,106.1,136.4,101.02,116.67,95.95,96.95,93.4,77,93.2,77,92,95.97,88.18,115.21,84.37,134.44,74.67,152.85,64.98,171.26,47.78,188.32,30.57,205.37,2.6,220,0,216.6,0,216.597] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [219.8,186.8,215.45,191.3,212.03,196.15,208.61,201,206.25,205.97,203.89,210.94,202.64,215.91,201.4,220.87,201.4,225.6,201.4,232.35,204.21,238.29,207.01,244.22,213.05,248.65,219.09,253.07,228.57,255.64,238.05,258.2,251.4,258.2,260.7,258.2,268.47,257.76,276.24,257.32,282.22,256.47,288.21,255.63,292.27,254.4,296.32,253.17,298.2,251.6,303.07,252.27,306.78,253.22,310.48,254.17,312.97,255.45,315.47,256.72,316.73,258.35,318,259.97,318,262,318,264.92,313.33,266.69,308.67,268.47,300.17,269.42,291.68,270.38,279.78,270.69,267.87,271,253.4,271,234.5,271,222.58,266.96,210.65,262.92,203.9,256.97,197.15,251.03,194.68,244.25,192.2,237.47,192.2,232,192.2,226.67,193.26,221.01,194.33,215.35,197.1,209.35,199.88,203.35,204.69,197.01,209.5,190.67,217,184,219.8,186.8,219.801,186.799,272.6,146.6,266.15,147.5,259.01,148.83,251.87,150.16,245.03,151.4,238.18,152.64,232.13,153.52,226.08,154.4,221.8,154.4,216.85,154.4,213.04,152.59,209.24,150.78,206.65,148.18,204.06,145.57,202.73,142.67,201.4,139.78,201.4,137.6,201.4,136.92,201.54,136.2,201.68,135.47,201.93,134.77,202.17,134.08,202.5,133.47,202.83,132.85,203.2,132.4,204.6,132.6,204.9,134.1,206.18,135.88,207.45,137.66,210,139.2,212.55,140.74,216.53,141.77,220.5,142.8,226.2,142.8,232.13,142.8,240.82,141.77,249.51,140.74,257.95,139.22,266.39,137.71,273.06,135.97,279.73,134.22,281.6,132.8,287.15,133.7,291.03,135,294.91,136.31,297.35,137.97,299.79,139.64,300.89,141.66,302,143.67,302,146,302,147.27,301.02,148.25,300.03,149.23,298.48,149.92,296.92,150.62,295,151.03,293.07,151.45,291.2,151.6,286.25,151.82,279.35,153.99,272.46,156.16,264.98,159.32,257.49,162.49,250.11,166.2,242.73,169.9,236.8,173.2,234.2,170.2,237.65,167.5,242.66,164.39,247.66,161.28,252.95,158.23,258.24,155.17,263.17,152.4,268.1,149.63,271.4,147.6,272.6,146.6,272.6,146.6,300.4,109.8,306.62,112.35,311.75,115.61,316.87,118.86,320.52,122.35,324.18,125.84,326.19,129.32,328.2,132.8,328.2,135.8,328.2,137.37,327.69,138.67,327.17,139.96,326.35,140.87,325.52,141.79,324.49,142.3,323.45,142.8,322.4,142.8,321.65,142.8,320.85,142.44,320.05,142.09,319.32,141.45,318.59,140.81,317.98,139.93,317.37,139.05,317,138,315.95,135.37,314.39,132.18,312.83,128.98,310.52,125.62,308.22,122.27,305.05,118.96,301.87,115.65,297.6,112.8,300.4,109.8,300.399,109.8,323.4,99.2,329.55,101.53,334.76,104.6,339.96,107.68,343.75,111.07,347.54,114.47,349.67,117.96,351.8,121.45,351.8,124.6,351.8,126.1,351.35,127.35,350.89,128.6,350.12,129.5,349.36,130.4,348.34,130.9,347.32,131.4,346.2,131.4,345.45,131.4,344.68,131.11,343.91,130.81,343.2,130.25,342.49,129.69,341.87,128.87,341.25,128.05,340.8,127,339.67,124.3,338.01,121.1,336.34,117.9,333.92,114.6,331.51,111.3,328.23,108.1,324.95,104.9,320.6,102.2,323.4,99.2,323.399,99.2] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [483.8,42.2,484.62,40.62,485.63,39.4,486.64,38.17,487.97,37.32,489.3,36.48,491.03,36.04,492.75,35.6,495,35.6,499.72,35.6,503.63,36.89,507.53,38.18,510.32,40.07,513.12,41.97,514.66,44.12,516.2,46.27,516.2,48,516.2,48.97,515.96,49.81,515.73,50.64,515.37,51.37,515.02,52.11,514.59,52.75,514.17,53.4,513.8,54,513.35,54.67,513,55.32,512.65,55.97,512.37,56.65,512.09,57.32,511.86,58.05,511.62,58.77,511.4,59.6,510.72,63.42,509.97,67.69,509.22,71.95,508.4,76.3,507.57,80.65,506.67,84.91,505.77,89.17,504.8,93,508.47,94.72,513.78,97.4,519.08,100.09,523.97,103.5,528.87,106.91,532.33,110.94,535.8,114.97,535.8,119.4,535.8,120.97,535.29,122.17,534.78,123.37,533.97,124.17,533.17,124.98,532.17,125.39,531.17,125.8,530.2,125.8,528.7,125.8,527.44,125.39,526.18,124.98,524.95,124.17,523.71,123.37,522.38,122.17,521.05,120.97,519.4,119.4,517.75,117.75,515.77,116,513.78,114.26,511.5,112.5,509.21,110.73,506.63,108.99,504.05,107.25,501.2,105.6,497.52,117.07,492.13,126.74,486.73,136.41,479.17,144.1,471.62,151.78,461.68,157.4,451.75,163.02,439,166.4,436.6,162.6,447.02,158.85,455.81,152.64,464.6,146.43,471.5,138.27,478.4,130.11,483.29,120.27,488.17,110.42,490.8,99.4,484.35,96.1,477.18,93.27,470.02,90.44,462.57,88.32,455.13,86.2,447.63,84.91,440.12,83.62,433,83.4,432.25,85.72,431.37,88.2,430.49,90.68,429.55,93.17,428.61,95.67,427.66,98.11,426.7,100.55,425.8,102.8,422.65,110.6,418.2,118.13,413.74,125.67,408.32,131.6,402.91,137.52,396.69,141.16,390.47,144.8,383.8,144.8,378.55,144.8,374.52,142.89,370.49,140.99,367.75,137.67,365.01,134.35,363.61,129.86,362.2,125.37,362.2,120.2,362.2,112.4,366.54,104.77,370.88,97.14,378.92,90.97,386.97,84.8,398.4,80.74,409.82,76.67,424,76,426.17,69.4,428.76,60.04,431.34,50.68,433.57,41.62,435.81,32.57,437.3,25.34,438.8,18.12,438.8,15.8,438.8,15.35,438.72,15.01,438.64,14.67,438.45,14.45,438.26,14.22,437.96,14.11,437.65,14,437.2,14,436.67,14,432.9,14.84,429.12,15.68,424.37,16.97,419.63,18.27,415.06,19.82,410.5,21.37,408.4,22.8,406.75,23.85,405.32,24.6,403.89,25.36,402.52,25.85,401.16,26.34,399.76,26.57,398.37,26.8,396.8,26.8,394.25,26.8,391.34,25.53,388.42,24.26,385.95,22.05,383.47,19.84,381.84,16.84,380.2,13.85,380.2,10.4,380.2,9.27,380.58,8.01,380.97,6.76,381.62,5.57,382.28,4.39,383.15,3.4,384.02,2.4,385,1.8,385.8,2,385.95,5.6,387.27,7.77,388.59,9.94,390.5,11.1,392.41,12.26,394.63,12.63,396.85,13,398.8,13,401.05,13,405.51,12.42,409.97,11.84,415,10.92,420.02,10.01,424.79,8.86,429.55,7.72,432.4,6.6,434.35,5.77,435.8,4.64,437.25,3.51,438.47,2.47,439.69,1.44,440.81,0.72,441.92,0,443.2,0,445.6,0,448.59,1.25,451.57,2.49,454.2,4.27,456.82,6.06,458.61,8.01,460.4,9.97,460.4,11.4,460.4,13.12,459.58,14.06,458.77,14.99,457.62,15.7,456.48,16.41,455.25,17.19,454.02,17.97,453.2,19.4,452.15,21.2,451.17,23.67,450.2,26.15,449.3,29,448.4,31.85,447.57,34.92,446.75,38,446,41,444.95,44.67,443.75,48.83,442.55,52.99,441.22,57.45,439.89,61.91,438.43,66.59,436.97,71.27,435.4,76,442.97,76.22,450.7,77.29,458.43,78.35,465.87,80,473.32,81.65,480.26,83.76,487.2,85.87,493.2,88.2,494.1,84.67,494.97,80.54,495.84,76.41,496.57,71.92,497.3,67.44,497.84,62.75,498.37,58.05,498.6,53.4,498.6,51.37,498.43,49.43,498.25,47.49,497.22,45.97,496.19,44.46,493.96,43.53,491.72,42.6,487.6,42.6,487.22,42.6,486.85,42.6,486.47,42.61,486.1,42.62,485.72,42.64,485.35,42.68,484.97,42.72,484.6,42.8,483.8,42.2,483.799,42.199,422.2,83.4,412.07,84.07,403.18,86.9,394.29,89.73,387.67,94.47,381.06,99.22,377.23,105.76,373.4,112.3,373.4,120.4,373.4,123.47,374,125.89,374.6,128.3,375.8,129.97,377,131.64,378.8,132.52,380.6,133.4,383,133.4,387.95,133.4,392.49,131.29,397.04,129.17,401.2,124.9,405.36,120.62,409.15,114.16,412.95,107.7,416.4,99,417.07,97.42,417.81,95.6,418.55,93.79,419.3,91.8,420.05,89.81,420.79,87.69,421.52,85.57,422.2,83.4,422.199,83.398] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [594.8,139.2,590.98,147.52,587.34,155.92,583.7,164.32,580.85,171.6,578,178.87,576.24,184.42,574.48,189.97,574.4,192.6,574.4,193.65,574.74,194.99,575.09,196.33,575.5,197.92,575.91,199.52,576.26,201.34,576.6,203.17,576.6,205.2,576.6,207.15,576.19,208.55,575.78,209.95,575.1,210.85,574.43,211.75,573.56,212.17,572.7,212.6,571.8,212.6,568.43,212.6,565.04,209.42,561.64,206.24,558.93,199.77,556.21,193.3,554.5,183.49,552.8,173.67,552.8,160.4,552.8,149.22,554.07,138.92,555.34,128.61,557.1,119.35,558.86,110.09,560.73,101.96,562.6,93.82,563.8,87,564.03,85.8,564.21,84.63,564.39,83.47,564.53,82.32,564.66,81.18,564.73,80.05,564.8,78.92,564.8,77.8,564.8,77.35,564.77,76.87,564.74,76.39,564.7,75.9,564.66,75.41,564.63,74.93,564.6,74.45,564.6,74,564.6,71.45,563.59,69.06,562.59,66.67,561.05,64.77,559.51,62.88,557.68,61.65,555.85,60.42,554.2,60.2,554,58.8,554.68,58.05,555.55,57.58,556.43,57.11,557.4,56.85,558.38,56.59,559.4,56.49,560.43,56.4,561.4,56.4,565.98,56.4,569.77,58.45,573.56,60.5,576.27,63.5,578.99,66.5,580.5,69.9,582,73.3,582,76,582,78.1,581.54,79.75,581.09,81.4,580.45,82.75,579.81,84.1,579.13,85.22,578.45,86.35,578,87.4,575.3,94.08,572.65,101.94,570,109.81,567.9,118.52,565.8,127.24,564.5,136.65,563.2,146.05,563.2,155.8,563.2,160.37,563.41,164.06,563.62,167.75,563.98,170.6,564.33,173.45,564.8,175.49,565.28,177.52,565.8,178.8,567.6,178.2,568.88,176.25,571.67,171.43,574.47,166.6,577.83,160.62,581.18,154.64,584.62,148.36,588.05,142.07,590.6,137.2,594.8,139.2,594.801,139.199,634.2,134.4,630.82,138.07,627.93,141.92,625.04,145.76,622.92,149.7,620.81,153.64,619.6,157.63,618.4,161.62,618.4,165.6,618.4,171.82,620.74,176.1,623.07,180.38,627.95,183.02,632.82,185.67,640.34,186.83,647.85,188,658.2,188,664.65,188,670.18,187.63,675.71,187.27,680.1,186.72,684.49,186.18,687.62,185.55,690.75,184.92,692.4,184.4,696.45,185,699.3,186.01,702.15,187.02,703.95,188.3,705.75,189.57,706.57,191.03,707.4,192.5,707.4,194,707.4,195.95,705.67,197.22,703.94,198.5,699.1,199.25,694.26,200,685.63,200.3,677,200.6,663.2,200.6,649.62,200.6,639.49,198.79,629.36,196.98,622.62,193.02,615.89,189.07,612.55,182.79,609.2,176.52,609.2,167.6,609.2,162.5,610.93,157.63,612.67,152.77,615.57,148.2,618.48,143.62,622.28,139.36,626.07,135.1,630.2,131.2,634.2,134.4,634.199,134.398,613.4,83.8,615.27,84.32,617.7,84.67,620.13,85.02,622.77,85.22,625.42,85.43,628.11,85.51,630.8,85.6,633.2,85.6,637.02,85.6,642.41,85,647.79,84.41,653.47,83.37,659.15,82.34,664.5,80.96,669.85,79.57,673.6,78,674.87,77.47,676.24,76.72,677.61,75.97,678.85,75.27,680.09,74.58,681.08,74.09,682.07,73.6,682.6,73.6,685.45,73.6,688.4,74.15,691.35,74.7,693.75,75.75,696.15,76.8,697.67,78.32,699.2,79.85,699.2,81.8,699.2,83.37,697.98,84.47,696.77,85.57,694.72,86.4,692.68,87.22,690,87.87,687.32,88.52,684.4,89.2,678.85,90.32,672.57,91.31,666.29,92.29,660.25,93.02,654.21,93.76,648.91,94.18,643.6,94.6,640,94.6,636.7,94.6,633.1,94.37,629.5,94.14,625.9,93.37,622.3,92.61,618.85,91.14,615.4,89.67,612.4,87.2,613.4,83.8,613.4,83.799] ) );
    shape.graphics.endFill();

    return shape;
  },
  "飲まれて" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [27.6,217.8,31.2,216.98,35.01,216.08,38.82,215.18,42.8,214.23,46.77,213.27,50.89,212.26,55,211.25,59.2,210.2,57.63,207.72,55.88,205.34,54.14,202.96,52.3,200.75,50.46,198.54,48.57,196.53,46.68,194.53,44.8,192.8,46.6,191,56.43,195.2,63,199.8,69.57,204.4,73.52,208.9,77.48,213.4,79.14,217.55,80.8,221.7,80.8,225,80.8,226.95,80.31,228.57,79.81,230.19,78.95,231.35,78.09,232.51,76.92,233.16,75.75,233.8,74.4,233.8,73.72,233.8,73.02,233.65,72.31,233.49,71.6,233.18,70.89,232.86,70.18,232.37,69.47,231.88,68.8,231.2,68.35,229.25,67.65,227.13,66.94,225.02,66.02,222.83,65.11,220.63,63.99,218.4,62.87,216.18,61.6,214,57.25,216.03,52.14,218.45,47.02,220.87,41.1,223.63,35.17,226.38,28.41,229.44,21.65,232.5,14,235.8,13.77,236.7,13.34,237.45,12.91,238.19,12.32,238.78,11.74,239.36,11.05,239.77,10.35,240.18,9.6,240.4,1.2,223.4,2.48,223.18,4.01,222.88,5.54,222.58,7.3,222.23,9.06,221.87,11.04,221.46,13.03,221.05,15.2,220.6,15.2,118.6,13.7,120.18,12.16,121.68,10.63,123.18,9.05,124.6,7.47,126.03,5.86,127.38,4.25,128.73,2.6,130,0,128,5.7,121.85,11.13,113.7,16.56,105.55,21.25,96.68,25.94,87.81,29.64,78.87,33.35,69.93,35.6,62.2,57.6,64.6,57.45,65.43,56.95,66.07,56.44,66.72,55.52,67.2,54.61,67.69,53.24,68.03,51.87,68.38,50,68.6,60.72,71.68,67.88,75.31,75.03,78.95,79.32,82.68,83.62,86.41,85.41,90.01,87.2,93.6,87.2,96.6,87.2,98.48,86.61,100.02,86.02,101.57,85.02,102.68,84.03,103.78,82.73,104.39,81.42,105,80,105,79.4,105,78.77,104.89,78.14,104.78,77.5,104.55,76.86,104.33,76.23,103.99,75.6,103.65,75,103.2,73.72,99.53,71.36,95.41,68.99,91.3,65.65,87.08,62.31,82.86,58.07,78.71,53.82,74.55,48.8,70.8,46.17,76.05,42.9,81.67,39.62,87.29,35.8,92.95,31.97,98.61,27.65,104.16,23.32,109.7,18.6,114.8,28.4,119.6,40.8,119.6,40.8,96.6,59.8,98.2,59.65,99.1,59.27,99.76,58.89,100.42,58.12,100.9,57.36,101.39,56.11,101.75,54.87,102.1,53,102.4,53,119.6,66.8,119.6,71.6,112.4,85.8,124,85.27,124.53,84.5,125.07,83.73,125.62,82.77,126.1,81.82,126.59,80.71,126.98,79.6,127.38,78.4,127.6,78.4,183.8,78.25,184.1,77.32,184.7,76.38,185.3,74.97,185.9,73.57,186.5,71.85,186.95,70.12,187.4,68.4,187.4,66,187.4,66,176.8,27.6,176.8,27.6,217.8,27.6,217.801,66,124.4,27.6,124.4,27.6,145.4,66,145.4,66,124.4,65.999,124.401,27.6,172,66,172,66,150.2,27.6,150.2,27.6,172,27.6,172.001,139.6,107,139.6,107.4,140.8,129.08,143.55,147.89,146.31,166.69,151.9,182.58,157.49,198.46,166.54,211.38,175.6,224.3,189.4,234.2,189,236.6,186.6,236.97,184.61,237.79,182.63,238.61,181.07,240,179.52,241.39,178.4,243.41,177.27,245.42,176.6,248.2,166.7,239.42,159.84,227.6,152.99,215.78,148.45,201.48,143.91,187.17,141.33,170.66,138.75,154.15,137.4,136,137.2,136,134.95,155.88,130.96,172.72,126.96,189.57,119.95,203.43,112.94,217.28,102.27,228.17,91.6,239.05,76,247,73.2,244,88.65,234.7,98.35,220.82,108.06,206.94,113.77,189.38,119.49,171.81,122.11,150.99,124.72,130.18,126,107,112.6,107,110.2,113.6,107.46,119.69,104.72,125.77,101.63,131.23,98.53,136.68,95.08,141.45,91.63,146.23,87.8,150.2,84.8,148.4,88.93,141.43,92.52,131.85,96.11,122.26,99,111.05,101.89,99.84,103.98,87.48,106.08,75.13,107.2,62.6,129.2,66.6,128.97,67.65,128.56,68.41,128.14,69.18,127.37,69.7,126.61,70.23,125.4,70.54,124.2,70.85,122.4,71,121.57,75.05,120.64,79.06,119.71,83.06,118.67,86.98,117.64,90.9,116.52,94.71,115.4,98.53,114.2,102.2,165,102.2,173.4,93.4,188.8,108.4,188.2,108.93,187.47,109.28,186.74,109.63,185.8,109.85,184.86,110.08,183.68,110.2,182.5,110.33,181,110.4,179.27,114.38,176.88,119.3,174.48,124.22,171.72,129.23,168.97,134.23,166.01,138.89,163.05,143.55,160.2,147,157.6,145.4,158.72,141.95,159.96,137.18,161.19,132.41,162.37,127.18,163.55,121.94,164.6,116.69,165.65,111.43,166.4,107,139.6,107,139.598,107.002] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [242.4,7.6,242.93,6.17,244.05,4.81,245.17,3.44,246.73,2.38,248.28,1.31,250.19,0.65,252.1,0,254.2,0,258.4,0,262.4,0.9,266.39,1.81,269.5,3.32,272.61,4.84,274.51,6.83,276.4,8.82,276.4,11,276.4,12.13,275.89,13,275.38,13.87,274.7,14.85,274.03,15.82,273.36,17.07,272.7,18.32,272.4,20.2,272.25,21.17,272.16,22.51,272.08,23.85,272,25.5,271.93,27.15,271.84,29.09,271.75,31.02,271.6,33.2,276.63,32.75,281.44,32.1,286.26,31.45,290.5,30.7,294.74,29.95,298.21,29.15,301.68,28.35,304,27.6,306.63,26.77,308.37,26.1,310.11,25.42,311.2,24.75,312.29,24.07,312.83,23.32,313.38,22.57,313.6,21.6,315.6,21,318.15,21.75,321.5,22.06,324.85,22.38,327.85,22.92,330.85,23.47,332.93,24.57,335,25.67,335,28,335,29.72,333.62,30.95,332.24,32.17,329.82,33.12,327.41,34.08,324.12,34.89,320.82,35.7,317,36.6,312.95,37.5,306.89,38.47,300.83,39.44,294.33,40.3,287.82,41.16,281.65,41.83,275.48,42.5,271.2,42.8,271.13,44.82,271.08,46.99,271.04,49.17,271.03,51.47,271.01,53.78,271,56.21,271,58.65,271,61.2,271,63.22,271,65.31,271.01,67.39,271.03,69.47,271.04,71.55,271.08,73.6,271.13,75.65,271.2,77.6,272.93,77.52,278.86,77.03,284.79,76.53,291.23,75.57,297.66,74.62,302.73,73.18,307.8,71.75,307.8,69.8,307.8,69.42,307.65,68.98,307.5,68.54,307.2,68.07,306.9,67.6,306.45,67.13,306,66.65,305.4,66.2,308,64,309.58,65.05,310.65,65.8,311.73,66.56,312.7,67.05,313.68,67.53,314.75,67.77,315.83,68,317.4,68,319.28,68.07,321.38,68.26,323.49,68.45,325.28,68.9,327.06,69.35,328.23,70.13,329.4,70.92,329.4,72.2,329.4,74.22,328.56,75.61,327.73,76.99,325.85,78.02,323.98,79.05,320.96,79.87,317.95,80.7,313.6,81.6,310.15,82.35,305.35,83.05,300.55,83.76,295,84.4,289.45,85.03,283.45,85.59,277.45,86.15,271.6,86.6,271.75,91.4,271.97,95.85,272.19,100.3,272.48,104.22,272.76,108.14,273.09,111.43,273.43,114.72,273.8,117.2,274.4,123.39,282.05,125.27,289.38,127.87,296.71,130.48,303.18,133.42,309.64,136.36,314.99,139.45,320.33,142.54,324,145.39,326.18,147.04,327.7,148.64,329.22,150.23,330.18,151.84,331.13,153.46,331.57,155.13,332,156.79,332,158.59,332,159.79,331.58,160.85,331.15,161.91,330.4,162.69,329.65,163.48,328.63,163.94,327.6,164.39,326.4,164.39,325.28,164.39,323.96,164.18,322.64,163.97,321.13,163.29,319.61,162.62,317.88,161.36,316.15,160.09,314.2,157.99,310.98,154.47,306.9,151.19,302.83,147.91,297.95,144.95,293.08,141.98,287.43,139.38,281.78,136.77,275.4,134.6,275.48,136.02,275.55,137.56,275.62,139.1,275.68,140.62,275.73,142.14,275.77,143.57,275.8,145,275.8,146.2,275.8,152.57,273.7,157.24,271.61,161.91,267.13,164.97,262.64,168.03,255.64,169.51,248.63,171,238.8,171,228.75,171,221.06,168.83,213.36,166.67,208.15,163,202.94,159.32,200.27,154.46,197.6,149.6,197.6,144.2,197.6,138.2,201.24,133.57,204.88,128.95,210.95,125.8,217.03,122.65,224.94,121.02,232.85,119.4,241.4,119.4,243.95,119.4,246.69,119.54,249.42,119.68,252.18,119.95,254.93,120.21,257.63,120.58,260.33,120.95,262.8,121.4,262.8,119.6,262.49,114.82,262.17,110.04,261.78,104.62,261.38,99.2,261.03,94.31,260.68,89.42,260.6,87.4,257.6,87.7,253.92,87.92,250.24,88.15,246.3,88.3,242.36,88.45,238.38,88.52,234.4,88.6,230.8,88.6,223,88.6,217.56,87.52,212.11,86.45,208.7,84.5,205.29,82.55,203.74,79.82,202.2,77.1,202.2,73.8,202.2,71.47,203.66,68.98,205.11,66.48,207.7,64.05,210.29,61.61,213.84,59.34,217.4,57.07,221.6,55.2,223.6,58,219.93,59.72,217.25,61.57,214.57,63.41,212.83,65.25,211.08,67.08,210.24,68.85,209.4,70.62,209.4,72.2,209.4,74.3,210.7,75.84,212.01,77.38,214.58,78.4,217.14,79.41,220.96,79.9,224.78,80.4,229.8,80.4,233.33,80.4,237.45,80.26,241.58,80.12,245.7,79.9,249.83,79.67,253.65,79.38,257.48,79.1,260.4,78.8,260.25,74.45,260.13,69.95,260.02,65.45,259.93,60.97,259.83,56.49,259.75,52.11,259.68,47.72,259.6,43.6,255.48,43.82,250.63,44.07,245.78,44.32,241.05,44.52,236.33,44.73,232.15,44.86,227.98,45,225.2,45,218.45,45,213.24,44.22,208.04,43.45,203.95,41.67,199.86,39.89,196.68,36.98,193.5,34.07,190.8,29.8,193.4,26.6,195.8,29.15,198.99,30.93,202.18,32.72,205.85,33.85,209.53,34.97,213.54,35.48,217.55,36,221.6,36,225.13,36,230.18,35.89,235.23,35.78,240.58,35.57,245.92,35.36,250.94,35.07,255.95,34.77,259.4,34.4,259.4,32.97,259.37,31.43,259.34,29.89,259.3,28.37,259.26,26.85,259.23,25.42,259.2,24,259.2,22.8,259.13,19.05,258.89,16.3,258.65,13.55,257.6,11.75,256.55,9.95,254.36,9.07,252.18,8.19,248.2,8.19,247.6,8.19,247,8.23,246.4,8.27,245.78,8.35,245.16,8.42,244.52,8.53,243.88,8.65,243.2,8.8,242.4,7.6,242.402,7.6,263.2,130.6,260.28,129.77,257.2,129.08,254.13,128.38,251.05,127.87,247.98,127.37,244.98,127.08,241.98,126.8,239.2,126.8,231.63,126.8,225.49,128.01,219.36,129.23,215.03,131.42,210.7,133.62,208.35,136.67,206,139.72,206,143.4,206,147.67,208.38,150.83,210.77,153.99,215,156.07,219.24,158.15,225.07,159.18,230.9,160.2,237.8,160.2,244.63,160.2,249.48,159.29,254.33,158.38,257.4,156.37,260.48,154.37,261.88,151.17,263.28,147.97,263.2,143.4,263.2,142.72,263.23,140.92,263.26,139.12,263.28,137.07,263.29,135.03,263.29,133.19,263.28,131.35,263.2,130.6,263.201,130.598] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [463.4,209,463.4,209.08,463.23,211.13,463.06,213.18,462.8,216.55,462.54,219.93,462.22,224.3,461.9,228.68,461.6,233.4,461.22,238.13,460.87,242.91,460.51,247.69,460.22,251.88,459.94,256.06,459.77,259.3,459.6,262.55,459.6,264.2,459.6,269.45,460.24,273.26,460.87,277.08,462.15,279.55,463.42,282.03,465.34,283.21,467.25,284.4,469.8,284.4,472.42,284.4,475.34,283.75,478.25,283.11,481.4,281.63,484.55,280.14,487.91,277.73,491.27,275.33,494.8,271.8,497.8,274,494.72,279.63,491.35,284.05,487.98,288.47,484.18,291.52,480.37,294.58,476.06,296.19,471.75,297.8,466.8,297.8,461.03,297.8,457.05,295.51,453.08,293.23,450.63,289.1,448.17,284.98,447.09,279.24,446,273.5,446,266.6,446,258.95,446.45,250.86,446.91,242.77,447.53,235.18,448.14,227.58,448.79,220.96,449.43,214.33,449.8,209.6,449.88,208.18,449.95,206.79,450.02,205.4,450.08,204.03,450.13,202.66,450.17,201.31,450.2,199.95,450.2,198.6,450.2,194.25,449.64,190.43,449.07,186.6,447.48,183.75,445.88,180.9,443.03,179.25,440.18,177.6,435.6,177.6,428.55,177.6,420.84,180.44,413.13,183.28,404.95,188.48,396.78,193.67,388.24,200.97,379.7,208.28,371,217.2,370.85,219.23,370.71,221.8,370.56,224.38,370.45,227,370.34,229.63,370.27,232.05,370.2,234.48,370.2,236.2,370.2,241.15,370.21,246.81,370.23,252.46,370.3,258.48,370.38,264.5,370.54,270.71,370.7,276.93,371,283,371.15,284.73,371.39,286.67,371.63,288.61,371.85,290.58,372.08,292.55,372.24,294.45,372.4,296.35,372.4,298,372.4,299.73,371.52,301.72,370.64,303.72,369.25,305.43,367.86,307.13,366.16,308.27,364.45,309.4,362.8,309.4,361.3,309.4,360.2,308.15,359.11,306.91,358.38,304.83,357.64,302.74,357.26,300.04,356.88,297.33,356.8,294.4,356.8,291.25,356.31,288.26,355.83,285.26,354.4,281.7,352.98,278.14,350.39,273.65,347.8,269.15,343.6,263,345.8,261.4,347.45,263.43,349.45,265.55,351.46,267.68,353.28,269.43,355.09,271.17,356.46,272.29,357.82,273.4,358.2,273.4,358.57,273.4,358.9,273.11,359.23,272.83,359.47,272,359.72,271.18,359.86,269.69,360,268.2,360,265.8,360,260.85,360.07,255.74,360.14,250.63,360.25,245.75,360.36,240.88,360.51,236.44,360.65,232,360.8,228.4,357.05,232.38,353.38,236.57,349.71,240.76,346.28,245,342.84,249.24,339.74,253.43,336.63,257.63,334,261.6,332.73,263.48,331.68,265.34,330.63,267.19,329.5,268.68,328.38,270.16,327.03,271.08,325.68,272,323.8,272,322.08,272,320.83,271.33,319.58,270.66,318.78,269.35,317.97,268.04,317.59,266.09,317.2,264.15,317.2,261.6,317.2,260.55,317.33,259.79,317.46,259.03,317.93,258.23,318.39,257.42,319.31,256.4,320.23,255.38,321.8,253.8,327.95,247.73,334.23,241.27,340.51,234.81,345.95,228.55,351.39,222.29,355.49,216.51,359.6,210.73,361.4,206,361.63,203.38,361.79,200.64,361.94,197.91,362.08,195.23,362.21,192.55,362.33,190,362.45,187.45,362.6,185.2,361.93,185.28,361.06,185.45,360.2,185.62,359.3,185.83,358.4,186.03,357.54,186.24,356.68,186.45,356,186.6,349.48,188.4,345.22,190.17,340.97,191.94,338.48,193.88,335.98,195.81,334.99,197.99,334,200.18,334,202.8,334,203.48,334.07,204.19,334.14,204.89,334.28,205.63,334.41,206.36,334.59,207.1,334.78,207.85,335,208.6,331.4,210.2,330.58,207.65,329.63,205.84,328.68,204.03,327.88,202.45,327.07,200.88,326.54,199.29,326,197.7,326,195.6,326,192.98,326.73,190.68,327.46,188.38,328.98,186.5,330.49,184.63,332.83,183.23,335.18,181.83,338.4,181,341.47,180.25,344.56,179.51,347.65,178.77,350.5,178.08,353.35,177.38,355.84,176.75,358.32,176.13,360.2,175.6,360.65,175.45,361.09,175.3,361.54,175.15,361.95,175,362.36,174.85,362.73,174.7,363.1,174.55,363.4,174.4,363.47,172.53,363.58,170.18,363.68,167.84,363.77,165.4,363.87,162.96,363.93,160.62,364,158.28,364,156.4,364,152.2,363.31,149.75,362.62,147.3,361.2,146.1,359.77,144.9,357.59,144.7,355.4,144.5,352.4,144.8,352,143,352.98,141.95,354.16,141.07,355.35,140.19,356.7,139.55,358.05,138.91,359.54,138.56,361.03,138.2,362.6,138.2,365.3,138.2,368.42,139.29,371.54,140.38,374.2,142.25,376.86,144.13,378.63,146.64,380.4,149.15,380.4,152,380.4,153.88,379.91,155.16,379.41,156.45,378.7,157.8,377.99,159.15,377.19,160.89,376.4,162.63,375.8,165.4,375.65,166.3,375.53,167.35,375.42,168.39,375.33,169.43,375.23,170.46,375.15,171.39,375.07,172.33,375,173,376.35,173.98,377.61,174.93,378.87,175.89,379.85,176.9,380.82,177.91,381.41,179.02,382,180.13,382,181.4,382,182.75,381.18,183.86,380.36,184.97,379.17,186.23,377.99,187.48,376.68,189.08,375.37,190.68,374.4,193,373.65,194.95,373.17,196.69,372.69,198.44,372.35,200.2,372.01,201.96,371.76,203.86,371.5,205.75,371.2,208,379.67,199.3,388.85,192.15,398.03,185,406.82,179.9,415.62,174.8,423.48,172,431.35,169.2,437.2,169.2,446.27,169.13,451.5,171.87,456.73,174.62,459.37,179.18,462.02,183.73,462.71,189.59,463.4,195.45,463.4,201.6,463.4,209,463.4,209.002] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [453.2,93,453.58,95.4,454.77,97.36,455.96,99.32,457.78,100.7,459.6,102.09,461.95,102.85,464.3,103.6,467,103.6,468.28,103.6,470.2,103.46,472.13,103.32,474.3,103.05,476.48,102.79,478.7,102.42,480.93,102.05,482.8,101.6,488.73,100.4,499.89,98.36,511.06,96.32,524.13,94.13,537.2,91.93,550.5,89.93,563.8,87.93,574,86.8,576.25,86.5,578.35,86,580.45,85.49,582.23,84.85,584.01,84.22,585.39,83.48,586.78,82.75,587.6,82,593.83,83.2,598.2,84.51,602.57,85.82,605.33,87.38,608.08,88.93,609.34,90.81,610.6,92.68,610.6,95,610.6,96.28,610,97.09,609.39,97.91,608.3,98.38,607.21,98.85,605.71,99.02,604.2,99.2,602.4,99.2,600.75,99.2,598.87,99.08,596.99,98.95,595,98.8,593.01,98.65,590.98,98.53,588.95,98.4,587,98.4,578.98,98.4,570.25,101.92,561.52,105.45,553.45,110.98,545.39,116.51,538.69,123.29,531.98,130.08,528,136.6,525.53,140.35,523.38,145.34,521.22,150.32,519.63,156.08,518.03,161.83,517.12,168.13,516.2,174.43,516.2,180.8,516.2,191.45,519.28,198.49,522.35,205.52,527.73,209.95,533.11,214.37,540.42,216.69,547.73,219,556.2,220.2,558.3,220.5,560.57,220.56,562.85,220.61,564.93,220.65,567.01,220.69,568.72,220.82,570.43,220.95,571.4,221.4,573.95,222.45,575.74,223.68,577.53,224.91,578.65,226.27,579.78,227.64,580.29,229.13,580.8,230.62,580.8,232.2,580.8,233.47,580.21,234.38,579.62,235.29,578.48,235.87,577.33,236.46,575.66,236.73,573.98,237,571.8,237,571.13,237,570.41,236.96,569.7,236.93,568.95,236.87,568.2,236.82,567.41,236.75,566.63,236.67,565.8,236.6,547.5,234.5,535.62,230.28,523.74,226.06,516.8,219.32,509.87,212.59,507.14,203.16,504.4,193.73,504.4,181.2,504.4,166.8,509.32,154.03,514.24,141.25,522.3,130.45,530.37,119.65,540.68,111,551,102.35,561.8,96.2,561.6,95.6,552.83,96.5,539.92,98.77,527.02,101.03,514.3,103.98,501.59,106.92,491.23,110.2,480.88,113.48,477.2,116.4,476.15,117.08,475.15,117.72,474.14,118.37,473.05,118.88,471.97,119.38,470.74,119.69,469.51,120,468.01,120,464.78,120,461.35,118.19,457.91,116.38,455.08,113.63,452.25,110.87,450.43,107.6,448.61,104.33,448.61,101.4,448.61,99.98,448.83,98.65,449.05,97.33,449.48,96.2,449.91,95.08,450.55,94.2,451.18,93.33,452.01,92.8,453.2,93,453.204,93.003] ) );
    shape.graphics.endFill();

    return shape;
  },
  "出会えてた" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,2,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,2,1,2,3,3,3,3,2,2,2,2,2] ), $.toNumberVector( [175,82,187.9,74.42,200.7,64.52,213.49,54.61,224.72,43.7,235.96,32.79,244.89,21.53,253.82,10.27,259,0,281.4,6,281.17,6.9,280.62,7.53,280.07,8.15,279.1,8.6,278.12,9.05,276.67,9.38,275.22,9.7,273.2,10,280.7,18.55,290.23,26.69,299.77,34.83,310.92,42.12,322.08,49.42,334.65,55.65,347.22,61.87,360.8,66.6,360.4,69.8,358.15,70.4,356.31,71.56,354.47,72.71,353.05,74.25,351.62,75.79,350.61,77.62,349.6,79.45,349,81.4,336.4,75.02,324.76,67.29,313.11,59.56,302.95,50.75,292.79,41.94,284.37,32.18,275.95,22.42,269.8,12,262.75,21.52,252.7,31.73,242.65,41.94,230.5,51.67,218.35,61.41,204.55,70.08,190.75,78.75,176.2,85.2,175,82,175,81.999,326.4,107.4,336.6,94.6,355.4,108,354.8,109.05,354.04,109.84,353.28,110.62,352.17,111.15,351.07,111.67,349.52,111.94,347.97,112.2,345.8,112.2,250.2,112.2,259.6,115.4,259.22,116.22,258.6,116.79,257.98,117.35,257.05,117.67,256.11,117.99,254.82,118.07,253.52,118.15,251.8,118,249.02,123.25,245.46,129.23,241.89,135.21,237.82,141.4,233.75,147.59,229.33,153.72,224.9,159.85,220.4,165.4,230.07,165.1,241.15,164.66,252.24,164.22,264.35,163.7,276.46,163.17,289.42,162.58,302.37,162,315.8,161.4,312.5,157.5,308.81,153.78,305.12,150.07,301.27,146.67,297.43,143.28,293.55,140.28,289.67,137.27,286,134.8,287.6,132.6,303.5,137.85,314.11,143.99,324.72,150.13,331.1,156.25,337.47,162.36,340.13,167.98,342.8,173.6,342.8,177.8,342.8,179.67,342.3,181.22,341.8,182.76,340.92,183.87,340.04,184.98,338.83,185.59,337.62,186.2,336.2,186.2,335.52,186.2,334.81,186.05,334.1,185.9,333.37,185.62,332.64,185.34,331.89,184.93,331.15,184.52,330.4,184,329.57,181.82,328.42,179.58,327.28,177.33,325.87,175.05,324.46,172.76,322.83,170.44,321.2,168.12,319.4,165.8,309.5,167.22,297.48,168.77,285.46,170.31,271.1,172,256.73,173.68,239.92,175.53,223.1,177.37,203.6,179.4,203.15,180.3,202.59,180.98,202.03,181.67,201.4,182.17,200.76,182.68,200.05,183.02,199.35,183.37,198.6,183.6,188,166.2,190.55,166.2,193.53,166.16,196.52,166.12,199.87,166.05,203.23,165.97,206.93,165.86,210.62,165.75,214.6,165.6,217.67,159.6,220.8,152.84,223.93,146.08,226.87,139.12,229.82,132.17,232.46,125.29,235.1,118.42,237.2,112.2,182.4,112.2,181,107.4,326.4,107.4,326.398,107.398,299,59.2,317.4,72,316.8,73.12,316.01,73.92,315.23,74.72,314.12,75.22,313.02,75.73,311.52,75.96,310.02,76.2,308,76.2,215.2,76.2,213.8,71.4,289.2,71.4,299,59.2,298.998,59.199] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [449,240.4,449,245.2,449.72,248.45,450.45,251.71,452.4,253.7,454.35,255.68,457.77,256.54,461.2,257.4,466.6,257.4,471.25,257.4,474.32,257.36,477.4,257.32,479.5,257.22,481.6,257.13,483.02,256.98,484.45,256.82,485.8,256.6,486.7,256.45,487.63,256.21,488.56,255.97,489.5,255.75,490.44,255.52,491.37,255.36,492.3,255.2,493.2,255.2,493.87,255.2,495.74,255.85,497.6,256.5,499.57,257.7,501.54,258.9,503.07,260.6,504.6,262.3,504.6,264.4,504.6,266.35,502.52,267.5,500.44,268.65,496.52,269.25,492.6,269.85,486.96,270.02,481.32,270.2,474.2,270.2,464.07,270.2,457.09,268.29,450.1,266.38,445.77,262.57,441.44,258.77,439.52,253.07,437.6,247.37,437.6,239.8,437.6,239.27,437.66,237.78,437.72,236.28,437.8,234.57,437.87,232.87,437.94,231.33,438,229.8,438,229.2,438,223.87,437.26,220.55,436.52,217.23,435.07,215.37,433.63,213.52,431.5,212.86,429.37,212.2,426.6,212.2,423.07,212.2,417.2,214.46,411.32,216.72,403.9,222.17,396.47,227.63,387.9,236.75,379.32,245.87,370.4,259.6,368.82,262,367.59,263.8,366.36,265.6,365.17,266.8,363.99,268,362.72,268.6,361.45,269.2,359.8,269.2,358.15,269.2,356.85,268.69,355.55,268.18,354.65,267.22,353.75,266.27,353.27,264.89,352.8,263.52,352.8,261.8,352.8,258.57,353.93,256.02,355.06,253.46,357.02,251.1,358.99,248.74,361.66,246.33,364.32,243.92,367.4,241,372.42,236.2,381.13,227.68,389.84,219.16,400.45,208.55,411.06,197.94,422.69,186.04,434.32,174.15,445.2,162.6,445.57,162.15,445.87,161.77,446.17,161.4,446.37,161.1,446.58,160.8,446.69,160.57,446.8,160.35,446.8,160.2,446.8,160.13,446.76,160.05,446.72,159.98,446.62,159.92,446.53,159.87,446.38,159.83,446.22,159.8,446,159.8,445.25,159.8,437.84,161.32,430.44,162.84,421.1,165.07,411.76,167.31,402.86,169.84,393.95,172.37,390.2,174.4,388.92,175.15,387.91,175.93,386.9,176.71,386,177.35,385.1,177.99,384.24,178.39,383.37,178.8,382.4,178.8,380.15,178.8,377.65,177.55,375.15,176.31,373.05,174.23,370.95,172.14,369.57,169.43,368.2,166.73,368.2,163.8,368.2,161.77,369.07,159.66,369.94,157.54,371.42,155.57,372.91,153.61,374.87,151.9,376.82,150.2,379,149,381,151,380.17,151.98,379.51,152.95,378.84,153.92,378.37,154.88,377.91,155.83,377.65,156.77,377.4,157.7,377.4,158.6,377.4,159.65,377.86,160.56,378.33,161.48,379.32,162.15,380.32,162.83,381.87,163.21,383.42,163.6,385.6,163.6,389.12,163.6,397.02,162.43,404.91,161.25,413.95,159.6,422.99,157.95,431.55,156.18,440.12,154.4,445,153.2,446.35,152.9,447.53,152.02,448.7,151.14,449.77,150.2,450.84,149.26,451.83,148.53,452.82,147.8,453.8,147.8,455.75,147.8,458.49,149.06,461.23,150.31,463.75,152.15,466.26,153.99,468.03,156.07,469.8,158.15,469.8,159.8,469.8,160.85,468.94,161.63,468.09,162.41,466.72,163.05,465.35,163.69,463.64,164.24,461.92,164.8,460.2,165.4,456.6,166.68,448.18,174.08,439.77,181.48,431,189.98,422.22,198.47,415.31,205.54,408.4,212.6,407.8,213.2,408.6,213.4,412.2,211.15,415.43,209.65,418.67,208.15,421.57,207.25,424.48,206.35,427.08,205.98,429.67,205.6,432,205.6,436.27,205.6,439.49,207.05,442.72,208.5,444.87,211.5,447.03,214.5,448.11,219.1,449.2,223.7,449.2,230,449,240.4,448.999,240.397,432.4,125.4,431.35,125.47,430.3,125.55,429.25,125.62,428.22,125.67,427.19,125.73,426.18,125.76,425.17,125.8,424.2,125.8,417.37,125.8,411.64,124.76,405.91,123.72,401.42,121.7,396.94,119.67,393.8,116.69,390.65,113.7,389,109.8,392.6,107.4,394.25,109.5,396.72,111.07,399.19,112.65,402.47,113.7,405.76,114.75,409.84,115.27,413.92,115.8,418.8,115.8,422.55,115.8,426.16,115.52,429.77,115.24,433,114.9,436.22,114.56,438.94,114.28,441.65,114,443.6,114,447.8,114,450.92,115.03,454.04,116.07,456.1,117.62,458.16,119.18,459.18,121,460.2,122.82,460.2,124.4,460.2,126.2,458.68,127.09,457.17,127.98,454.82,128.37,452.48,128.77,449.65,128.87,446.82,128.97,444.2,129.2,440.3,129.65,435.67,130.84,431.05,132.02,426.25,133.6,421.45,135.17,416.75,136.96,412.05,138.75,408,140.4,406.6,137,409.15,136.02,412.63,134.57,416.11,133.12,419.72,131.55,423.34,129.97,426.71,128.45,430.07,126.92,432.4,125.8,432.4,125.4,432.398,125.399] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [446.4,52.2,446.78,54.6,447.97,56.56,449.16,58.51,450.98,59.9,452.79,61.29,455.15,62.04,457.5,62.8,460.2,62.8,461.48,62.8,463.4,62.66,465.33,62.51,467.5,62.25,469.68,61.99,471.9,61.62,474.13,61.25,476,60.8,481.93,59.6,493.09,57.56,504.26,55.52,517.33,53.33,530.39,51.13,543.7,49.13,557,47.13,567.2,46,569.45,45.7,571.55,45.19,573.64,44.69,575.42,44.05,577.2,43.41,578.59,42.68,579.97,41.95,580.8,41.2,587.02,42.4,591.4,43.71,595.77,45.02,598.52,46.58,601.28,48.13,602.54,50,603.8,51.88,603.8,54.2,603.8,55.48,603.19,56.29,602.59,57.11,601.5,57.58,600.41,58.04,598.91,58.22,597.4,58.4,595.6,58.4,593.95,58.4,592.07,58.28,590.19,58.15,588.2,58,586.21,57.85,584.18,57.73,582.15,57.6,580.2,57.6,572.17,57.6,563.44,61.12,554.71,64.64,546.65,70.17,538.59,75.71,531.88,82.49,525.18,89.27,521.2,95.8,518.73,99.55,516.57,104.53,514.42,109.52,512.83,115.27,511.23,121.03,510.32,127.33,509.4,133.62,509.4,140,509.4,150.65,512.47,157.69,515.54,164.72,520.93,169.15,526.31,173.57,533.62,175.88,540.92,178.2,549.4,179.4,551.5,179.7,553.77,179.75,556.04,179.81,558.12,179.85,560.21,179.88,561.92,180.02,563.62,180.15,564.6,180.6,567.15,181.65,568.94,182.88,570.72,184.1,571.85,185.47,572.97,186.84,573.49,188.33,574,189.82,574,191.4,574,192.67,573.41,193.58,572.82,194.49,571.67,195.07,570.53,195.65,568.85,195.92,567.17,196.2,565,196.2,564.32,196.2,563.61,196.16,562.9,196.13,562.15,196.07,561.4,196.02,560.61,195.94,559.82,195.87,559,195.8,540.7,193.7,528.82,189.48,516.94,185.25,510,178.52,503.06,171.79,500.33,162.36,497.6,152.92,497.6,140.4,497.6,126,502.52,113.22,507.44,100.45,515.5,89.65,523.56,78.85,533.88,70.2,544.2,61.55,555,55.4,554.8,54.8,546.02,55.7,533.12,57.97,520.21,60.23,507.5,63.18,494.79,66.12,484.43,69.4,474.08,72.68,470.4,75.6,469.35,76.28,468.34,76.92,467.34,77.57,466.25,78.08,465.16,78.58,463.93,78.89,462.7,79.2,461.2,79.2,457.98,79.2,454.54,77.39,451.11,75.58,448.28,72.83,445.45,70.07,443.62,66.8,441.8,63.53,441.8,60.6,441.8,59.18,442.02,57.85,442.25,56.53,442.68,55.4,443.11,54.28,443.74,53.4,444.38,52.52,445.2,52,446.4,52.2,446.401,52.2] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [632.2,67.2,633.48,69.3,634.95,70.91,636.41,72.51,638.25,73.6,640.09,74.69,642.38,75.24,644.68,75.8,647.6,75.8,650.23,75.8,653.37,75.56,656.52,75.31,659.73,74.9,662.93,74.49,665.97,73.94,669,73.4,671.4,72.8,671.55,72.27,672.1,69.74,672.65,67.21,673.25,63.65,673.85,60.09,674.33,55.98,674.8,51.87,674.8,48.2,674.8,45.35,674.35,43.43,673.9,41.51,673,40.35,672.1,39.19,670.75,38.69,669.4,38.2,667.6,38.2,666.63,38.2,665.68,38.21,664.73,38.23,663.78,38.32,662.82,38.42,661.84,38.62,660.85,38.82,659.8,39.2,659,37.8,659.6,36.45,660.52,35.03,661.43,33.61,663.03,32.45,664.62,31.29,667.07,30.54,669.53,29.8,673.2,29.8,676.28,29.8,679.85,30.59,683.42,31.38,686.48,32.82,689.53,34.27,691.57,36.3,693.6,38.32,693.6,40.8,693.6,42.22,693.23,43.17,692.86,44.12,692.3,44.92,691.74,45.73,691.07,46.56,690.4,47.4,689.8,48.6,689.2,49.8,688.63,51.41,688.07,53.02,687.38,55.47,686.68,57.93,685.78,61.45,684.88,64.97,683.6,70,690.65,68.27,696.34,66.34,702.03,64.41,706.3,62.17,710.58,59.94,713.41,57.37,716.25,54.8,717.6,51.8,719.4,51.6,722.17,51.75,725.4,51.92,728.62,52.1,731.38,52.7,734.13,53.3,735.97,54.52,737.8,55.75,737.8,58,737.8,59.87,736.5,61.42,735.2,62.97,732.8,64.37,730.4,65.78,727,67.14,723.6,68.5,719.4,70,714.83,71.65,709.8,73.21,704.78,74.76,699.78,76.15,694.77,77.54,690.01,78.72,685.25,79.9,681.2,80.8,678.73,90.17,674.96,102.68,671.19,115.19,667.25,127.6,663.31,140.01,659.77,150.72,656.23,161.42,654.2,167.2,651.28,175.97,649.26,181.66,647.24,187.35,645.43,190.67,643.61,193.99,641.63,195.29,639.65,196.6,636.8,196.6,635.53,196.6,634.65,196.16,633.77,195.72,633.23,194.72,632.68,193.73,632.44,192.13,632.2,190.52,632.2,188.2,632.2,187.15,632.24,185.94,632.28,184.74,632.35,183.37,632.43,182,632.54,180.46,632.65,178.92,632.8,177.2,635.8,173.15,638.36,168.93,640.91,164.72,643.05,160.57,645.19,156.43,646.92,152.48,648.65,148.52,650,145,652.03,139.75,654.8,131.85,657.58,123.95,660.38,115.27,663.17,106.59,665.61,98.06,668.05,89.52,669.4,83,666.4,83.6,663.63,84.05,660.86,84.5,658.35,84.8,655.84,85.1,653.59,85.25,651.35,85.4,649.4,85.4,643.78,85.4,640.01,83.76,636.25,82.12,633.98,79.65,631.71,77.17,630.75,74.26,629.8,71.35,629.8,68.8,632.2,67.2,632.203,67.199,718,136.2,716.58,138.67,715.37,141.28,714.16,143.88,713.28,146.52,712.4,149.17,711.9,151.81,711.4,154.45,711.4,157,711.4,165.32,715.61,169.83,719.81,174.34,726.15,176.42,732.49,178.5,739.92,178.85,747.35,179.2,753.8,179.2,756.05,179.2,758.02,179.16,759.99,179.12,761.78,179.02,763.56,178.93,765.19,178.78,766.83,178.62,768.4,178.4,769.9,178.32,771.27,178.09,772.64,177.87,773.8,177.62,774.96,177.38,775.88,177.19,776.8,177,777.4,177,779.8,177,782.26,177.66,784.71,178.33,786.7,179.47,788.69,180.62,789.94,182.14,791.2,183.67,791.2,185.4,791.2,187.57,789.37,188.91,787.54,190.24,784.08,190.97,780.61,191.7,775.59,191.95,770.58,192.2,764.2,192.2,750.93,192.2,739.92,191.04,728.92,189.88,721.03,186.55,713.13,183.21,708.77,177.18,704.4,171.15,704.4,161.4,704.4,158.17,705.05,154.79,705.69,151.4,707,147.97,708.31,144.54,710.31,141.12,712.3,137.7,715,134.4,718,136.2,718.002,136.198,733.4,116.4,736.25,114,739.5,111.5,742.74,109.01,746.03,106.65,749.31,104.29,752.44,102.17,755.58,100.05,758.2,98.4,752.65,98.1,747.18,98.47,741.71,98.84,736.18,100.02,730.64,101.2,724.99,103.26,719.33,105.32,713.4,108.4,711,105.4,717.15,100.3,723.75,96.82,730.34,93.34,737.23,91.2,744.11,89.06,751.19,88.13,758.28,87.2,765.4,87.2,769.83,87.2,773.69,88.05,777.56,88.91,780.43,90.3,783.29,91.69,784.95,93.44,786.6,95.2,786.6,97,786.6,98.27,786.24,99.06,785.89,99.84,785.25,100.27,784.61,100.7,783.73,100.85,782.85,101,781.8,101,781.13,101,780.38,100.97,779.64,100.94,778.88,100.9,778.11,100.86,777.33,100.83,776.55,100.8,775.8,100.8,771.6,100.8,766.83,102.32,762.07,103.84,757.03,106.37,751.98,108.9,746.8,112.19,741.63,115.47,736.6,119,733.4,116.4,733.401,116.398] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,2,2,2,2] ), $.toNumberVector( [144,157.4,165,159,164.85,160.12,164.39,160.96,163.94,161.8,163,162.4,162.06,163,160.55,163.39,159.05,163.77,156.8,164,156.8,235.8,156.8,235.95,156.32,236.65,155.84,237.36,154.45,238.15,153.06,238.93,150.55,239.57,148.05,240.2,144,240.2,144,223,12.6,223,12.6,237.6,12.6,237.75,12.15,238.45,11.7,239.16,10.35,239.95,9,240.73,6.53,241.37,4.05,242,0,242,0,157.4,20.8,159,20.65,160.12,20.22,160.96,19.79,161.8,18.88,162.4,17.96,163,16.44,163.39,14.93,163.77,12.6,164,12.6,218.2,71.2,218.2,71.2,138.8,22.8,138.8,22.8,147.2,22.8,147.35,22.32,148.05,21.84,148.76,20.45,149.55,19.06,150.34,16.56,150.97,14.05,151.6,10,151.6,10,75.6,31,77.2,30.85,78.25,30.39,79.08,29.94,79.91,29,80.52,28.06,81.14,26.56,81.56,25.05,81.97,22.8,82.2,22.8,134,71.2,134,71.2,57.8,93.6,59.8,93.52,61,93,61.88,92.48,62.76,91.37,63.4,90.27,64.04,88.51,64.47,86.75,64.9,84.2,65.2,84.2,134,133.8,134,133.8,75.6,154.8,77.2,154.72,78.25,154.28,79.08,153.83,79.91,152.87,80.52,151.92,81.14,150.38,81.56,148.85,81.97,146.6,82.2,146.6,146.2,146.6,146.35,146.17,147.06,145.75,147.76,144.4,148.55,143.05,149.34,140.52,149.97,138,150.6,133.8,150.6,133.8,138.8,84.2,138.8,84.2,218.2,144,218.2,144,157.4,143.998,157.398] ) );
    shape.graphics.endFill();

    return shape;
  },
  "はずなのに" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [5,67,5.6,66.18,6.59,65.54,7.57,64.91,8.7,64.48,9.82,64.04,10.96,63.82,12.1,63.6,13,63.6,15.85,63.6,19.17,65.22,22.5,66.84,25.35,69.53,28.2,72.21,30.1,75.67,32,79.13,32,82.8,32,84.45,31.56,85.68,31.13,86.91,30.47,87.97,29.82,89.04,29.05,90.08,28.27,91.13,27.6,92.4,23.7,99.75,20.4,108.26,17.1,116.78,14.7,126.15,12.3,135.53,10.95,145.61,9.6,155.7,9.6,166.2,9.6,171.15,10.12,175.33,10.63,179.51,11.47,182.55,12.32,185.59,13.4,187.29,14.47,189,15.6,189,16.65,189,19.62,184.16,22.59,179.32,26.15,172.65,29.71,165.97,33.21,158.96,36.7,151.95,38.8,147.6,43,149.2,39.62,157.6,36.26,165.94,32.91,174.29,30.22,181.3,27.54,188.31,25.87,193.36,24.2,198.4,24.2,200.2,24.2,201.7,24.48,203.03,24.76,204.36,25.1,205.75,25.44,207.14,25.72,208.69,26,210.25,26,212.2,26,213.7,25.67,215.07,25.34,216.45,24.7,217.5,24.06,218.55,23.13,219.17,22.2,219.8,21,219.8,17.7,219.8,14.01,216.41,10.31,213.02,7.2,206.47,4.09,199.93,2.04,190.35,0,180.78,0,168.4,0,159.85,1.01,150.87,2.01,141.88,3.55,133.28,5.09,124.67,6.92,116.85,8.75,109.03,10.4,102.8,11.22,99.8,11.98,96.86,12.74,93.93,13.32,91.15,13.91,88.38,14.25,85.81,14.6,83.25,14.6,81,14.6,78.53,14.2,76.26,13.8,74,12.75,72.2,11.7,70.4,9.87,69.19,8.05,67.98,5.2,67.6,5,67,5,67,92.6,65.4,93.05,63.75,94.07,62.39,95.1,61.03,96.6,60.05,98.1,59.08,100.02,58.54,101.95,58,104.2,58,107.72,58,111.26,58.99,114.79,59.99,117.62,61.6,120.45,63.21,122.23,65.26,124,67.3,124,69.4,124,70.45,123.73,71.37,123.47,72.28,123.07,73.12,122.68,73.97,122.23,74.77,121.77,75.57,121.4,76.4,120.95,77.22,120.7,78.8,120.46,80.38,120.32,82.42,120.19,84.47,120.13,86.83,120.07,89.2,120,91.6,119.92,93.4,119.82,95.23,119.71,97.06,119.6,98.9,119.49,100.74,119.38,102.57,119.27,104.4,119.2,106.2,126.02,105.15,130.06,104.02,134.09,102.88,136.32,101.62,138.55,100.37,139.48,98.97,140.4,97.57,141,96,144.9,96.3,148.17,96.79,151.44,97.28,153.8,98.12,156.16,98.97,157.48,100.25,158.8,101.53,158.8,103.4,158.8,105.2,157.89,106.43,156.97,107.67,155.1,108.62,153.22,109.58,150.36,110.4,147.5,111.22,143.6,112.2,141.65,112.72,138.91,113.31,136.18,113.89,132.97,114.47,129.77,115.05,126.25,115.6,122.72,116.15,119.2,116.6,119.2,119.37,119.26,122.02,119.32,124.67,119.4,127.12,119.47,129.58,119.54,131.81,119.6,134.05,119.6,136,119.6,143.12,119.88,149.08,120.16,155.05,120.62,160,121.09,164.95,121.71,168.96,122.32,172.97,123,176.2,127.87,178.22,134.17,181.43,140.47,184.65,146.07,188.7,151.68,192.75,155.54,197.46,159.4,202.17,159.4,207.2,159.4,208.47,158.91,209.6,158.43,210.73,157.62,211.57,156.82,212.42,155.77,212.91,154.72,213.4,153.6,213.4,152.7,213.4,151.72,213.05,150.75,212.7,149.7,211.97,148.65,211.24,147.52,210.11,146.4,208.97,145.2,207.4,143.25,204.92,140.7,202.37,138.16,199.81,135.35,197.45,132.54,195.08,129.62,193.05,126.7,191.02,124,189.6,124.07,190.72,124.11,192.12,124.16,193.52,124.17,194.95,124.19,196.37,124.2,197.7,124.2,199.02,124.2,200,124.05,205.1,122.06,209.05,120.07,213,116.25,215.7,112.42,218.4,106.76,219.8,101.1,221.2,93.6,221.2,84.67,221.2,77.56,219.26,70.44,217.33,65.47,213.82,60.51,210.31,57.85,205.42,55.2,200.52,55.2,194.6,55.2,188.97,57.99,184.52,60.79,180.06,65.7,176.97,70.61,173.88,77.31,172.24,84,170.6,91.8,170.6,94.12,170.6,96.6,170.74,99.07,170.89,101.52,171.17,103.98,171.45,106.34,171.86,108.7,172.27,110.8,172.8,110.35,168.82,109.92,162.38,109.49,155.93,109.15,148.4,108.81,140.86,108.61,132.92,108.4,124.97,108.4,118,104.87,118.52,101.42,118.9,97.97,119.28,94.72,119.52,91.48,119.77,88.52,119.88,85.55,120,83,120,79.32,120,75.64,119.26,71.96,118.53,68.55,116.97,65.14,115.42,62.13,112.99,59.13,110.57,56.8,107.2,59,104,62,106.4,64.89,107.76,67.77,109.12,70.53,109.8,73.28,110.47,75.9,110.63,78.52,110.8,81,110.8,84.07,110.8,87.53,110.65,90.98,110.5,94.52,110.2,98.07,109.9,101.56,109.45,105.05,109,108.2,108.4,108.2,90.4,108.2,83.65,107.88,78.96,107.57,74.27,106.42,71.35,105.28,68.42,103.05,67.11,100.82,65.8,97,65.8,96.62,65.8,96.18,65.83,95.74,65.87,95.25,65.92,94.76,65.98,94.24,66.05,93.73,66.12,93.2,66.2,92.6,65.4,92.599,65.4,111.6,183,109.05,181.87,106.41,180.98,103.77,180.09,101.15,179.47,98.52,178.85,95.96,178.53,93.4,178.2,91,178.2,85.07,178.2,79.96,179.27,74.84,180.34,71.07,182.4,67.3,184.46,65.15,187.48,63,190.5,63,194.4,63,198.45,65.07,201.42,67.15,204.4,70.9,206.35,74.65,208.3,79.87,209.25,85.1,210.2,91.4,210.2,97.1,210.2,101,209.18,104.9,208.15,107.3,205.92,109.7,203.69,110.75,200.16,111.8,196.62,111.8,191.6,111.8,190.62,111.79,189.64,111.79,188.65,111.77,187.6,111.75,186.55,111.71,185.41,111.67,184.27,111.6,183,111.598,182.998] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [260.6,59.4,261.35,57.75,262.45,56.32,263.56,54.9,265.08,53.85,266.59,52.8,268.56,52.2,270.53,51.6,273,51.6,276.75,51.6,280.47,52.56,284.19,53.52,287.17,55.1,290.16,56.68,292.04,58.69,293.93,60.7,294,62.8,294,64.07,293.68,65.08,293.36,66.09,292.93,66.97,292.49,67.86,292.06,68.68,291.63,69.5,291.4,70.4,291.1,71.3,290.91,72.82,290.71,74.34,290.6,76.55,290.49,78.76,290.44,81.71,290.4,84.65,290.4,88.4,295.27,88.1,300.07,87.81,304.87,87.52,309.15,87.27,313.42,87.03,316.95,86.85,320.47,86.67,322.8,86.6,325.95,86.45,328.39,86.19,330.82,85.93,332.7,85.42,334.57,84.92,335.96,84.1,337.35,83.27,338.4,82,344.17,83.57,348.4,84.93,352.62,86.28,355.37,87.72,358.13,89.17,359.46,90.86,360.8,92.55,360.8,94.8,360.8,95.62,360.26,96.23,359.72,96.83,358.87,97.22,358.03,97.62,357,97.81,355.97,98,355,98,353.12,98,350.57,97.62,348.02,97.24,344.47,96.75,340.93,96.26,336.24,95.8,331.55,95.35,325.4,95.2,323.82,95.12,322.15,95.08,320.47,95.04,318.72,95.02,316.98,95.01,315.19,95,313.4,95,311.6,95,308.98,95,306.29,95.04,303.61,95.07,300.95,95.15,298.29,95.22,295.68,95.34,293.08,95.45,290.6,95.6,290.6,100.63,290.64,105.93,290.68,111.24,290.75,116.15,290.83,121.06,290.94,125.24,291.05,129.42,291.2,132.2,292.55,134.45,293.66,137.22,294.76,139.99,295.55,143.57,296.34,147.16,296.77,151.69,297.2,156.22,297.2,162,297.2,173.77,293.86,184.12,290.52,194.46,283.38,203.05,276.23,211.64,265.05,218.3,253.88,224.97,238.2,229.4,235.8,225.4,247.28,220.97,255.95,215.05,264.63,209.14,270.55,202.2,276.48,195.26,279.68,187.54,282.88,179.82,283.4,171.8,281.75,174.35,279.4,176.35,277.05,178.36,274.05,179.75,271.05,181.14,267.43,181.87,263.8,182.6,259.6,182.6,252.93,182.6,247.31,180.2,241.7,177.8,237.63,173.62,233.56,169.44,231.28,163.78,229,158.12,229,151.6,229,144.4,231.57,138.25,234.15,132.1,238.63,127.6,243.11,123.1,249.17,120.55,255.23,118,262.2,118,264.75,118,267.24,118.34,269.72,118.68,272.03,119.37,274.33,120.07,276.4,121.12,278.48,122.17,280.2,123.6,280.2,119.7,280.04,115.95,279.88,112.19,279.68,108.73,279.47,105.26,279.27,102.14,279.08,99.03,279,96.4,274.28,96.7,267.49,97.36,260.7,98.03,253.65,98.85,246.6,99.68,240.19,100.56,233.78,101.45,229.8,102.2,227.93,102.5,226.07,102.93,224.21,103.36,222.45,103.85,220.69,104.34,219.06,104.84,217.43,105.35,216,105.8,214.2,106.4,213.03,107.04,211.86,107.68,210.83,108.2,209.8,108.73,208.66,109.06,207.53,109.4,205.8,109.4,203.03,109.33,199.81,107.6,196.58,105.88,193.83,103.25,191.07,100.63,189.24,97.48,187.4,94.33,187.4,91.4,187.4,90.13,187.65,89,187.9,87.88,188.35,86.9,188.8,85.93,189.43,85.1,190.05,84.28,190.8,83.6,192,83.6,192.15,84.73,192.78,86.71,193.41,88.7,195.23,90.63,197.05,92.56,200.41,93.98,203.78,95.4,209.4,95.4,213.08,95.4,222.8,94.61,232.53,93.81,243.55,92.8,254.58,91.79,264.53,90.85,274.48,89.9,278.6,89.6,278.3,80.45,277.94,74.68,277.57,68.91,276.43,65.65,275.28,62.39,273,61.19,270.73,60,266.6,60,265.93,60,265.25,60.04,264.58,60.07,263.9,60.13,263.23,60.18,262.55,60.25,261.88,60.33,261.2,60.4,260.6,59.4,260.601,59.4,282.8,145.4,282.8,142.25,281.52,138.73,280.24,135.21,277.65,132.25,275.06,129.29,271.16,127.34,267.25,125.4,262,125.4,257.73,125.4,253.85,127.04,249.97,128.67,247.03,131.9,244.08,135.12,242.34,139.91,240.6,144.7,240.6,151,240.6,156.25,242.46,160.34,244.33,164.44,247.25,167.25,250.18,170.06,253.76,171.53,257.35,173,260.8,173,267.33,173,271.58,171.05,275.83,169.1,278.33,165.5,280.82,161.9,281.81,156.8,282.8,151.7,282.8,145.4,282.801,145.398,311,46,319.32,48.63,324.83,51.76,330.34,54.89,333.62,58.03,336.91,61.16,338.25,64.03,339.6,66.9,339.6,69,339.6,70.28,339.13,71.4,338.65,72.53,337.9,73.37,337.15,74.22,336.23,74.71,335.3,75.2,334.4,75.2,333.05,75.2,332.08,74.86,331.11,74.52,330.38,73.85,329.64,73.17,329.08,72.16,328.53,71.15,328,69.8,327.03,67.4,325.33,64.69,323.64,61.99,321.22,59.25,318.81,56.51,315.65,53.88,312.5,51.25,308.6,49,311,46,311,46,337.2,42,346.12,45,351.86,48.24,357.61,51.49,360.92,54.6,364.24,57.71,365.52,60.51,366.8,63.3,366.8,65.4,366.8,66.6,366.36,67.69,365.91,68.77,365.2,69.6,364.49,70.42,363.59,70.91,362.7,71.4,361.8,71.4,360.45,71.4,359.48,71.09,358.51,70.79,357.77,70.15,357.04,69.51,356.48,68.53,355.92,67.55,355.4,66.2,354.35,63.65,352.47,60.87,350.58,58.08,347.98,55.33,345.37,52.57,342.1,49.97,338.83,47.38,335,45.2,337.2,42,337.199,42] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [381.8,100.8,382.55,99.15,383.91,97.79,385.27,96.43,387,95.45,388.72,94.48,390.69,93.94,392.65,93.4,394.6,93.4,398.2,93.4,401.77,94.26,405.35,95.11,408.2,96.5,411.05,97.89,412.82,99.64,414.6,101.4,414.6,103.2,414.6,105,413.97,106.09,413.34,107.18,412.42,108.45,411.51,109.73,410.46,111.64,409.42,113.55,408.6,117,408.3,118.5,407.77,120.25,407.25,122.01,406.65,123.83,406.05,125.64,405.45,127.43,404.85,129.23,404.4,130.8,409.27,129.9,414.98,128.46,420.69,127.02,425.75,124.98,430.81,122.93,434.49,120.25,438.17,117.57,439,114.2,445.9,113.97,450.14,114.34,454.37,114.7,456.7,115.45,459.02,116.2,459.81,117.24,460.6,118.28,460.6,119.4,460.6,120.98,459.81,122.23,459.02,123.48,457.3,124.62,455.57,125.77,452.84,126.91,450.1,128.05,446.2,129.4,442.37,130.75,436.84,132.36,431.31,133.98,425.17,135.55,419.04,137.12,412.87,138.51,406.7,139.9,401.6,140.8,398.45,150.77,393.67,162.66,388.89,174.54,383.45,186.22,378.01,197.9,372.41,208.33,366.8,218.75,362,225.8,361.33,226.7,360.52,227.53,359.72,228.36,358.88,229,358.03,229.64,357.19,230.02,356.35,230.4,355.6,230.4,354.93,230.4,353.84,230.01,352.76,229.62,351.73,228.65,350.69,227.67,349.95,226.01,349.2,224.35,349.2,221.8,349.2,220.67,349.37,219.34,349.54,218.01,349.95,216.7,350.36,215.39,351.06,214.2,351.75,213.02,352.8,212.2,357.6,208.22,363.12,200.42,368.64,192.62,373.85,182.95,379.06,173.27,383.46,162.7,387.85,152.12,390.4,142.6,388,142.9,385.59,143.16,383.19,143.42,381.05,143.62,378.91,143.83,377.18,143.98,375.45,144.12,374.4,144.2,370.87,144.2,367.79,143.86,364.7,143.51,362.15,142.8,359.6,142.09,357.64,140.99,355.67,139.9,354.4,138.4,353.65,137.72,352.86,136.68,352.07,135.64,351.4,134.4,350.72,133.16,350.24,131.82,349.75,130.47,349.6,129.2,352.2,126.8,353.7,129.27,355.49,130.93,357.29,132.58,359.5,133.57,361.71,134.57,364.41,134.98,367.1,135.4,370.4,135.4,372.42,135.4,375.14,135.26,377.85,135.11,380.85,134.85,383.85,134.59,386.94,134.22,390.02,133.85,392.8,133.4,393.7,129.58,394.4,126.28,395.11,122.99,395.6,120.13,396.09,117.26,396.34,114.75,396.6,112.25,396.6,110,396.6,108.2,396.34,106.66,396.09,105.13,395.17,104,394.25,102.88,392.46,102.24,390.67,101.6,387.6,101.6,387.07,101.6,386.51,101.64,385.94,101.68,385.32,101.75,384.7,101.83,384.03,101.94,383.35,102.05,382.6,102.2,381.8,100.8,381.799,100.801,439.4,155.2,445.62,151.82,451.2,149.59,456.78,147.36,461.82,146.02,466.87,144.69,471.43,144.15,476,143.6,480.2,143.6,487.4,143.6,493.45,144.74,499.51,145.87,503.9,147.9,508.28,149.92,510.74,152.71,513.2,155.5,513.2,158.8,513.2,159.62,512.81,160.19,512.42,160.77,511.75,161.12,511.07,161.48,510.16,161.64,509.25,161.8,508.2,161.8,507.37,161.8,506.52,161.73,505.68,161.65,504.87,161.52,504.07,161.39,503.33,161.21,502.6,161.02,502,160.8,501.02,160.35,499.64,160.01,498.27,159.67,496.67,159.45,495.08,159.22,493.36,159.11,491.65,159,490,159,489.25,159,488.53,159.01,487.82,159.01,487.15,159.05,486.47,159.09,485.84,159.17,485.2,159.25,484.6,159.4,476.8,161.2,472.29,163.95,467.79,166.7,465.5,170.3,463.21,173.9,462.6,178.3,462,182.7,462,187.8,462,191.4,462.07,194.02,462.41,196.72,462.74,199.42,463.17,202.05,463.6,204.67,464.05,207.15,464.5,209.62,464.8,211.8,464.95,212.4,465.1,213.18,465.24,213.97,465.37,214.8,465.5,215.62,465.61,216.41,465.72,217.2,465.8,217.8,470.52,219.45,475.32,221.39,480.12,223.33,484.67,225.52,489.23,227.71,493.39,230.14,497.55,232.57,501,235.2,503.55,237.15,505.21,239.08,506.87,241.01,507.85,242.85,508.82,244.68,509.21,246.39,509.6,248.1,509.6,249.6,509.52,250.79,508.8,251.76,508.09,252.72,507,253.39,505.91,254.07,504.59,254.43,503.27,254.79,502,254.79,500.72,254.79,498.33,252.29,495.94,249.79,491.85,246.02,487.76,242.25,481.69,237.84,475.62,233.42,467,229.6,467.07,230.42,467.14,231.45,467.22,232.49,467.27,233.67,467.33,234.85,467.36,236.15,467.4,237.44,467.4,238.79,467.4,239.62,467.39,240.41,467.39,241.19,467.37,241.94,467.35,242.69,467.31,243.41,467.27,244.12,467.2,244.79,466.82,248.69,464.65,252.24,462.47,255.79,458.2,258.49,453.92,261.19,447.4,262.79,440.87,264.39,431.8,264.39,423.32,264.39,416.33,262.43,409.33,260.48,404.32,256.97,399.32,253.46,396.56,248.62,393.8,243.77,393.8,238,393.8,232.3,396.88,227.65,399.96,223,405.25,219.7,410.54,216.4,417.59,214.6,424.65,212.8,432.6,212.8,434.92,212.8,437.8,213.01,440.68,213.22,443.62,213.57,446.57,213.93,449.33,214.4,452.1,214.87,454.2,215.4,454.12,214.05,453.77,210.53,453.42,207.02,453.02,203.05,452.63,199.07,452.31,195.48,452,191.9,452,190.4,452,184.25,453.31,178.86,454.62,173.48,458.12,168.92,461.63,164.37,467.78,160.67,473.92,156.97,483.6,154.2,483.6,153.2,482.55,152.97,481.39,152.79,480.23,152.6,478.97,152.47,477.72,152.34,476.37,152.27,475.02,152.2,473.6,152.2,470.45,152.2,466.85,152.56,463.25,152.92,459.2,153.75,455.15,154.57,450.65,155.91,446.15,157.25,441.2,159.2,439.4,155.2,439.398,155.199,455,224.6,452.52,223.55,449.44,222.7,446.35,221.85,443.07,221.25,439.79,220.65,436.52,220.32,433.25,220,430.4,220,424.77,220,419.73,221.24,414.68,222.49,410.87,224.72,407.07,226.95,404.83,230.04,402.6,233.12,402.6,236.8,402.6,240.92,404.42,244.09,406.25,247.27,409.85,249.42,413.45,251.58,418.8,252.69,424.15,253.8,431.2,253.8,437.87,253.8,442.55,252.76,447.23,251.72,450.17,249.82,453.12,247.93,454.46,245.28,455.8,242.62,455.8,239.4,455.8,237.52,455.73,235.4,455.66,233.27,455.55,231.25,455.44,229.22,455.29,227.47,455.15,225.72,455,224.6,454.998,224.598] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [571.4,142.2,592.1,139.35,606.5,132.68,620.9,126.01,629.9,116.75,638.9,107.49,642.95,96.24,647,85,647,73,647,59.35,643.63,47.14,640.27,34.94,632.85,25.75,625.42,16.56,613.59,11.18,601.75,5.8,584.8,5.8,583.37,5.8,581.24,5.94,579.11,6.09,576.75,6.35,574.39,6.61,572.03,6.98,569.67,7.35,567.8,7.8,569.6,9.07,571.01,11.15,572.42,13.22,573.4,15.85,574.37,18.47,574.89,21.52,575.4,24.57,575.4,27.8,575.4,41.6,570.84,58.7,566.28,75.8,558.57,90.8,550.87,105.8,540.72,116,530.58,126.2,519.4,126.2,514.08,126.2,509.63,123.18,505.18,120.17,501.98,114.67,498.77,109.18,496.99,101.48,495.2,93.77,495.2,84.4,495.2,67.07,501.93,51.72,508.66,36.37,520.7,24.87,532.74,13.38,549.37,6.69,566,0,585.8,0,604.25,0,618.4,5.46,632.55,10.92,642.15,20.72,651.75,30.53,656.67,44.13,661.6,57.72,661.6,74,661.6,88.02,656.72,100.39,651.85,112.77,641.2,122.42,630.55,132.08,613.67,138.49,596.8,144.9,572.8,147,571.4,142.2,571.398,142.197,562.4,9,551,11.77,540.95,18.41,530.9,25.05,523.4,34.8,515.9,44.55,511.55,57.04,507.2,69.52,507.2,84,507.2,89.85,508.08,94.99,508.96,100.12,510.62,103.95,512.29,107.77,514.71,109.98,517.12,112.2,520.2,112.2,528.75,112.2,536.91,102.75,545.07,93.3,551.45,79.5,557.82,65.7,561.71,50.1,565.6,34.5,565.6,22.2,565.6,20.17,565.32,18.11,565.05,16.05,564.6,14.25,564.15,12.45,563.57,11.06,563,9.68,562.4,9,562.398,9] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [711.2,178.8,707.37,187.12,703.74,195.52,700.1,203.92,697.25,211.2,694.4,218.47,692.64,224.02,690.87,229.57,690.8,232.2,690.8,233.25,691.14,234.59,691.49,235.93,691.9,237.52,692.31,239.12,692.66,240.94,693,242.77,693,244.8,693,246.75,692.59,248.15,692.17,249.55,691.5,250.45,690.82,251.35,689.96,251.77,689.1,252.2,688.2,252.2,684.82,252.2,681.43,249.02,678.04,245.84,675.32,239.37,672.61,232.9,670.9,223.09,669.2,213.27,669.2,200,669.2,188.82,670.47,178.52,671.74,168.21,673.5,158.95,675.26,149.69,677.13,141.56,679,133.42,680.2,126.6,680.42,125.4,680.61,124.23,680.79,123.07,680.92,121.93,681.06,120.78,681.13,119.65,681.2,118.53,681.2,117.4,681.2,116.95,681.17,116.47,681.14,115.99,681.1,115.5,681.06,115.01,681.03,114.53,681,114.05,681,113.6,681,111.05,679.99,108.66,678.99,106.27,677.45,104.38,675.91,102.48,674.08,101.25,672.25,100.03,670.6,99.8,670.4,98.4,671.07,97.65,671.95,97.18,672.82,96.71,673.8,96.45,674.77,96.19,675.8,96.09,676.82,96,677.8,96,682.37,96,686.17,98.05,689.96,100.1,692.67,103.1,695.39,106.1,696.9,109.5,698.4,112.9,698.4,115.6,698.4,117.7,697.94,119.35,697.49,121,696.85,122.35,696.21,123.7,695.53,124.83,694.85,125.95,694.4,127,691.7,133.68,689.05,141.54,686.4,149.41,684.3,158.12,682.2,166.84,680.9,176.25,679.6,185.65,679.6,195.4,679.6,199.97,679.81,203.66,680.02,207.35,680.37,210.2,680.73,213.05,681.2,215.09,681.67,217.12,682.2,218.4,684,217.8,685.27,215.85,688.07,211.03,690.87,206.2,694.22,200.22,697.58,194.24,701.02,187.96,704.45,181.67,707,176.8,711.2,178.8,711.199,178.799,750.6,174,747.22,177.67,744.33,181.52,741.44,185.36,739.32,189.3,737.21,193.24,736,197.23,734.8,201.22,734.8,205.2,734.8,211.42,737.14,215.7,739.47,219.98,744.35,222.62,749.22,225.27,756.74,226.43,764.25,227.6,774.6,227.6,781.05,227.6,786.58,227.23,792.11,226.87,796.5,226.32,800.89,225.78,804.02,225.15,807.15,224.52,808.8,224,812.85,224.6,815.7,225.61,818.55,226.62,820.35,227.9,822.15,229.17,822.97,230.63,823.8,232.1,823.8,233.6,823.8,235.55,822.07,236.82,820.33,238.1,815.5,238.85,810.66,239.6,802.03,239.9,793.4,240.2,779.6,240.2,766.02,240.2,755.89,238.39,745.76,236.58,739.02,232.62,732.29,228.67,728.95,222.39,725.6,216.12,725.6,207.2,725.6,202.1,727.33,197.23,729.07,192.37,731.97,187.8,734.88,183.22,738.68,178.96,742.47,174.7,746.6,170.8,750.6,174,750.599,173.998,729.8,123.4,731.67,123.92,734.1,124.27,736.53,124.62,739.17,124.82,741.82,125.03,744.51,125.11,747.2,125.2,749.6,125.2,753.42,125.2,758.81,124.6,764.19,124.01,769.87,122.97,775.55,121.94,780.9,120.56,786.25,119.17,790,117.6,791.27,117.07,792.64,116.32,794.01,115.57,795.25,114.87,796.49,114.18,797.48,113.69,798.47,113.2,799,113.2,801.85,113.2,804.8,113.75,807.75,114.3,810.15,115.35,812.55,116.4,814.07,117.92,815.6,119.45,815.6,121.4,815.6,122.97,814.38,124.07,813.17,125.17,811.12,126,809.08,126.82,806.4,127.47,803.72,128.12,800.8,128.8,795.25,129.92,788.97,130.91,782.69,131.89,776.65,132.62,770.61,133.35,765.3,133.78,760,134.2,756.4,134.2,753.1,134.2,749.5,133.97,745.9,133.74,742.3,132.97,738.7,132.2,735.25,130.74,731.8,129.27,728.8,126.8,729.8,123.4,729.799,123.4] ) );
    shape.graphics.endFill();

    return shape;
  },
  "今でも" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,1,2,3,3,3,3,2,2,2,2,2] ), $.toNumberVector( [0,123.6,12.97,115.8,26.36,104.86,39.75,93.92,51.45,81.53,63.15,69.13,72.11,56.13,81.07,43.13,85.2,31.2,108.4,35.4,108.17,36.3,107.6,36.95,107.03,37.6,106.07,38.05,105.12,38.5,103.76,38.78,102.4,39.05,100.6,39.2,108.25,49.85,118.36,60.1,128.48,70.36,140.27,79.68,152.07,89,165.14,97.11,178.22,105.23,191.8,111.6,191.4,114.6,189.22,114.97,187.3,115.88,185.38,116.77,183.85,118.05,182.31,119.33,181.22,120.9,180.12,122.47,179.6,124.2,166.32,116.63,154.03,107.16,141.73,97.69,131.05,87,120.36,76.31,111.59,64.74,102.82,53.18,96.6,41.4,90.07,53.18,79.79,65.23,69.5,77.29,56.92,88.5,44.34,99.71,30.2,109.52,16.05,119.33,1.8,126.6,0,123.6,0,123.6,137.6,137.4,145.2,129.2,161,143,160.4,143.6,159.44,144.09,158.48,144.57,157.22,144.95,155.97,145.32,154.44,145.59,152.92,145.85,151.2,146,148.27,152.53,144.1,161.47,139.93,170.42,135.22,180.22,130.52,190.03,125.63,199.91,120.75,209.8,116.4,218.2,115.95,218.27,115.5,218.35,115.04,218.42,114.57,218.47,114.11,218.53,113.61,218.56,113.12,218.6,112.6,218.6,111.55,218.6,110.42,218.48,109.29,218.35,108.07,218.07,106.85,217.79,105.54,217.33,104.22,216.87,102.8,216.2,107.37,207.5,112.17,197.69,116.97,187.88,121.55,178.07,126.12,168.27,130.25,159.02,134.37,149.77,137.6,142.2,26,142.2,24.4,137.4,137.6,137.4,137.598,137.4,121,90.8,138.4,103.4,137.8,104.53,137.04,105.32,136.28,106.12,135.2,106.63,134.11,107.13,132.6,107.37,131.1,107.6,129,107.6,48.6,107.6,47.4,102.8,112,102.8,121,90.8,120.998,90.801] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [165.6,11,165.98,13.4,167.17,15.36,168.36,17.31,170.18,18.7,171.99,20.09,174.35,20.84,176.7,21.6,179.4,21.6,180.68,21.6,182.6,21.46,184.53,21.31,186.7,21.05,188.88,20.79,191.1,20.42,193.33,20.05,195.2,19.6,201.13,18.4,212.29,16.36,223.46,14.32,236.53,12.13,249.59,9.93,262.9,7.93,276.2,5.93,286.4,4.8,288.65,4.5,290.75,3.99,292.84,3.49,294.62,2.85,296.41,2.21,297.79,1.48,299.17,0.75,300,0.01,306.22,1.2,310.6,2.51,314.97,3.82,317.72,5.38,320.48,6.93,321.74,8.8,323,10.68,323,13,323,14.2,322.36,14.98,321.71,15.75,320.55,16.2,319.39,16.65,317.77,16.83,316.15,17,314.2,17,312.55,17,310.73,16.91,308.92,16.81,307.02,16.7,305.13,16.59,303.2,16.49,301.27,16.4,299.4,16.4,291.37,16.4,282.64,19.92,273.91,23.44,265.85,28.97,257.79,34.51,251.08,41.29,244.38,48.07,240.4,54.6,237.93,58.35,235.77,63.33,233.62,68.32,232.02,74.07,230.43,79.83,229.52,86.13,228.6,92.42,228.6,98.8,228.6,109.45,231.67,116.49,234.74,123.52,240.13,127.95,245.51,132.37,252.82,134.69,260.13,137,268.6,138.2,270.7,138.5,272.97,138.55,275.24,138.61,277.32,138.65,279.41,138.69,281.12,138.82,282.82,138.95,283.8,139.4,286.35,140.45,288.14,141.68,289.92,142.9,291.05,144.27,292.17,145.64,292.69,147.13,293.2,148.62,293.2,150.2,293.2,151.47,292.61,152.38,292.02,153.29,290.87,153.87,289.73,154.45,288.05,154.73,286.37,155,284.2,155,283.52,155,282.81,154.96,282.1,154.93,281.35,154.87,280.6,154.82,279.81,154.75,279.02,154.67,278.2,154.6,259.9,152.5,248.02,148.28,236.14,144.05,229.2,137.32,222.26,130.59,219.53,121.16,216.8,111.72,216.8,99.2,216.8,84.8,221.72,72.02,226.64,59.25,234.7,48.45,242.76,37.65,253.08,29,263.4,20.35,274.2,14.2,274,13.6,265.22,14.5,252.32,16.77,239.41,19.03,226.7,21.97,213.99,24.92,203.63,28.2,193.28,31.47,189.6,34.4,188.55,35.07,187.54,35.72,186.54,36.37,185.45,36.87,184.36,37.38,183.13,37.69,181.9,38,180.4,38,177.18,38,173.74,36.19,170.31,34.38,167.48,31.62,164.65,28.87,162.82,25.6,161,22.32,161,19.4,161,17.97,161.22,16.65,161.45,15.32,161.88,14.2,162.31,13.07,162.94,12.2,163.58,11.32,164.4,10.8,165.6,11,165.601,11,279,50,287.85,53.08,293.61,56.42,299.37,59.77,302.75,63,306.12,66.22,307.46,69.12,308.8,72.02,308.8,74.2,308.8,75.47,308.39,76.57,307.97,77.67,307.3,78.47,306.62,79.28,305.76,79.74,304.9,80.2,304,80.2,302.72,80.2,301.76,79.83,300.8,79.47,300.05,78.77,299.3,78.08,298.71,77.08,298.12,76.07,297.6,74.8,296.55,72.4,294.66,69.54,292.77,66.67,290.12,63.75,287.48,60.82,284.13,58.04,280.77,55.25,276.8,53,279,50,278.999,50,299.6,32.8,308.45,35.87,314.18,39.26,319.91,42.64,323.25,45.9,326.59,49.16,327.89,52.09,329.2,55.02,329.2,57.2,329.2,58.47,328.82,59.54,328.44,60.61,327.8,61.37,327.16,62.14,326.33,62.57,325.5,63,324.6,63,323.25,63,322.27,62.63,321.3,62.27,320.55,61.57,319.8,60.88,319.2,59.88,318.6,58.87,318,57.6,317.02,55.2,315.14,52.37,313.26,49.54,310.6,46.65,307.94,43.76,304.56,41.01,301.17,38.25,297.2,36,299.6,32.8,299.599,32.799] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [447.2,141.6,453.35,148.87,458.34,154.94,463.32,161.01,466.85,166.45,470.37,171.89,472.29,176.98,474.2,182.07,474.2,187.4,474.2,193.62,471.38,199.5,468.57,205.37,461.72,209.92,454.88,214.48,443.4,217.24,431.92,220,414.6,220,400.95,220,391.68,217.17,382.41,214.35,376.75,208.8,371.09,203.25,368.64,195.02,366.2,186.8,366.2,176,366.2,173.6,366.43,170.77,366.66,167.94,366.97,165.07,367.29,162.21,367.63,159.49,367.97,156.78,368.2,154.6,361.07,154.38,355.41,152.94,349.74,151.5,345.8,148.95,341.86,146.4,339.79,142.79,337.73,139.18,337.8,134.6,337.8,129.5,340.92,124.09,344.04,118.69,349.13,113.7,354.21,108.71,360.67,104.51,367.13,100.3,373.8,97.6,370.95,97.6,365.56,97.26,360.18,96.92,354.85,94.88,349.53,92.83,345.56,88.4,341.6,83.98,341.6,75.8,345,74.6,345.45,78.35,347.66,81.01,349.86,83.66,353.5,85.35,357.14,87.04,362.04,87.82,366.95,88.6,372.8,88.6,373.25,88.6,374.52,88.63,375.78,88.66,377.23,88.68,378.67,88.69,379.97,88.68,381.28,88.68,381.8,88.6,382.25,85.67,382.71,82.67,383.18,79.67,383.55,76.75,383.93,73.82,384.16,71.05,384.4,68.27,384.4,65.8,384.4,63.17,383.49,61.38,382.58,59.58,381.03,58.47,379.47,57.37,377.4,56.88,375.33,56.4,373,56.4,372.55,56.4,372.07,56.4,371.59,56.41,371.1,56.42,370.61,56.44,370.13,56.48,369.65,56.52,369.2,56.6,368.8,56,369.48,54.2,370.39,52.88,371.3,51.56,372.65,50.7,374,49.84,375.89,49.42,377.78,49,380.4,49,384.45,49,388.24,50.11,392.03,51.22,394.95,52.92,397.88,54.63,399.64,56.68,401.4,58.73,401.4,60.6,401.4,61.8,400.92,62.96,400.43,64.13,399.78,65.4,399.12,66.67,398.45,68.14,397.78,69.6,397.4,71.4,397.1,73.2,396.73,75.13,396.36,77.06,395.95,79.05,395.54,81.04,395.1,83.04,394.65,85.05,394.2,87,397.58,86.63,400.51,86.06,403.44,85.49,405.8,84.72,408.16,83.96,409.9,82.98,411.63,82,412.6,80.8,417.18,80.58,420.37,81.26,423.57,81.94,425.58,83.13,427.58,84.31,428.49,85.78,429.4,87.25,429.4,88.6,429.4,89.2,429.02,89.86,428.63,90.52,427.83,91.17,427.02,91.83,425.77,92.45,424.53,93.07,422.8,93.6,421.38,93.97,418.1,94.5,414.82,95.03,410.53,95.58,406.23,96.12,401.34,96.61,396.45,97.1,391.8,97.4,390.23,102.95,388.58,108.83,386.93,114.7,385.38,120.7,383.82,126.7,382.44,132.73,381.05,138.75,380,144.6,384.58,144.6,389.72,144.44,394.87,144.29,399.43,143.95,403.98,143.61,407.37,143.08,410.75,142.55,411.8,141.8,415.32,142.47,418.48,143.5,421.64,144.52,424.02,145.8,426.41,147.07,427.8,148.55,429.2,150.02,429.2,151.6,429.2,152.87,428.52,153.75,427.84,154.63,426.77,155.17,425.71,155.72,424.39,155.96,423.07,156.2,421.8,156.2,421.42,156.2,421.05,156.2,420.67,156.19,420.3,156.17,419.92,156.16,419.55,156.12,419.17,156.07,418.8,156,414.75,155.32,410.78,154.99,406.8,154.66,402.15,154.55,397.5,154.44,391.8,154.48,386.1,154.53,378.6,154.6,378.23,156.63,377.87,159.16,377.51,161.69,377.23,164.35,376.94,167.01,376.77,169.62,376.6,172.23,376.6,174.4,376.6,183.03,378.22,189.36,379.83,195.69,383.98,199.85,388.12,204.01,395.25,206.07,402.38,208.12,413.4,208.2,426.38,208.2,435.44,206.33,444.49,204.46,450.18,201.2,455.86,197.94,458.43,193.52,461,189.1,461,184,461,178.9,459.82,174.04,458.63,169.19,456.33,164.35,454.02,159.51,450.62,154.58,447.23,149.65,442.8,144.4,447.2,141.6,447.199,141.6,380.4,98.6,373.65,101.6,367.53,105.44,361.41,109.28,356.77,113.57,352.14,117.87,349.43,122.42,346.72,126.97,346.8,131.4,346.8,135.45,348.52,137.99,350.23,140.52,353.32,141.95,356.42,143.37,360.72,143.89,365.02,144.4,370.2,144.4,371.25,139.22,372.55,133.25,373.86,127.27,375.22,121.2,376.59,115.12,377.93,109.3,379.27,103.47,380.4,98.6,380.4,98.6] ) );
    shape.graphics.endFill();

    return shape;
  },
  "わからず" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [31.6,28.8,32.13,27.3,33.05,26.11,33.97,24.92,35.22,24.07,36.48,23.23,38.04,22.75,39.6,22.27,41.4,22.2,44.48,22.2,47.95,23.19,51.43,24.17,54.38,25.9,57.32,27.62,59.26,29.96,61.2,32.3,61.2,35,61.2,36.5,60.63,38.07,60.06,39.64,59.33,41.4,58.59,43.16,57.91,45.18,57.23,47.2,57,49.6,56.93,50.5,56.76,51.46,56.59,52.42,56.4,53.4,56.21,54.37,56.04,55.34,55.88,56.3,55.8,57.2,58.13,57.65,60.2,58.57,62.27,59.49,63.83,60.65,65.38,61.81,66.29,63.11,67.2,64.4,67.2,65.6,67.2,67.25,66.4,68.46,65.59,69.67,64.38,70.77,63.16,71.88,61.72,73.05,60.28,74.22,59,75.8,58.1,76.85,57.31,77.91,56.52,78.98,55.83,79.97,55.13,80.97,54.53,81.85,53.93,82.72,53.4,83.4,53.25,84.82,53.13,86.09,53.02,87.35,52.93,88.55,52.83,89.75,52.75,90.94,52.67,92.12,52.6,93.4,60.03,88,68.22,83.64,76.41,79.27,84.52,76.2,92.64,73.12,100.27,71.46,107.9,69.8,114.2,69.8,126.65,69.8,136.33,73.12,146.01,76.44,152.65,83.02,159.29,89.6,162.74,99.41,166.2,109.22,166.2,122.2,166.2,122.4,166.2,134.4,160.88,144.12,155.56,153.84,144.95,161.17,134.34,168.5,118.44,173.39,102.55,178.27,81.4,180.6,80,175.8,97.17,172.87,110.6,167.8,124.03,162.73,133.27,155.77,142.52,148.82,147.36,140.11,152.2,131.4,152.2,121.2,152.2,111.45,149.91,103.5,147.63,95.55,142.92,89.87,138.22,84.19,131.02,81.01,123.82,77.82,114,77.6,107.25,77.6,99.53,79.26,91.82,80.92,83.78,84.12,75.73,87.33,67.68,92.03,59.63,96.72,52.2,102.8,52.13,105.27,52.05,107.78,51.98,110.28,51.93,112.77,51.87,115.27,51.84,117.73,51.8,120.2,51.8,122.6,51.88,127.7,51.87,132.73,51.86,137.75,51.9,142.42,51.94,147.09,52.08,151.26,52.23,155.42,52.6,158.8,52.98,161.72,53.27,164.78,53.57,167.84,53.78,170.67,53.98,173.5,54.09,175.93,54.2,178.35,54.2,180,54.2,182.17,53.48,184.22,52.76,186.28,51.43,187.87,50.09,189.47,48.21,190.43,46.33,191.4,44,191.4,42.73,191.4,41.66,190.67,40.6,189.94,39.83,188.57,39.06,187.2,38.63,185.24,38.2,183.27,38.2,180.8,38.2,177.35,37,173.35,35.81,169.35,33.73,165.02,31.65,160.69,28.84,156.13,26.03,151.57,22.8,147,25.8,144.4,27.98,147.1,30.42,149.96,32.86,152.83,34.98,155.2,37.1,157.56,38.6,159.08,40.1,160.6,40.4,160.6,40.93,160.6,41.21,159.88,41.5,159.17,41.63,156.7,41.76,154.22,41.78,149.46,41.8,144.7,41.8,136.6,41.8,133.97,41.81,130.9,41.81,127.82,41.85,124.45,41.89,121.07,41.97,117.47,42.05,113.87,42.2,110.2,39.58,112.75,36.62,115.41,33.67,118.08,30.73,120.87,27.78,123.66,25.02,126.59,22.25,129.52,20,132.6,17.3,136.2,15.4,138.83,13.5,141.47,12,143.2,10.5,144.92,9.2,145.76,7.9,146.6,6.4,146.6,4.98,146.6,3.8,145.9,2.62,145.21,1.78,144.05,0.93,142.88,0.47,141.36,0,139.85,0,138.2,0,135.2,0.86,133.2,1.71,131.21,3.08,129.75,4.45,128.28,6.16,127.11,7.88,125.95,9.6,124.6,17.33,118.6,23.26,113.36,29.19,108.13,33.35,103.75,37.52,99.36,39.92,95.85,42.33,92.35,43,89.8,43.08,87.02,43.15,84.67,43.23,82.31,43.33,80.1,43.42,77.88,43.54,75.68,43.65,73.47,43.8,71,41.7,71.6,39.45,72.38,37.19,73.17,35.05,73.97,32.91,74.78,31.03,75.53,29.15,76.27,27.8,76.8,26.6,77.4,25.47,78.13,24.34,78.86,23.25,79.5,22.16,80.13,21.11,80.57,20.05,81,19,81,16.3,81,13.81,79.4,11.31,77.8,9.4,75.55,7.49,73.3,6.35,70.87,5.2,68.45,5.2,66.8,5.2,65.3,5.39,64.08,5.58,62.86,5.95,61.85,6.33,60.83,6.89,59.99,7.45,59.15,8.2,58.4,9.2,58.4,9.28,60.2,10.04,61.92,10.8,63.65,12.15,65,13.5,66.35,15.39,67.17,17.28,68,19.6,68,22.9,68,26.85,67.19,30.8,66.39,34.38,65.32,37.96,64.25,40.67,63.19,43.38,62.12,44.2,61.6,44.28,60.4,44.47,57.25,44.67,54.1,44.88,50.67,45.08,47.24,45.24,44.36,45.4,41.47,45.4,40.8,45.4,36.97,44.12,34.6,42.84,32.23,40.85,30.97,38.86,29.72,36.46,29.41,34.05,29.1,31.8,29.4,31.6,28.8,31.6,28.799] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [186.8,125.4,187.55,123.75,188.78,122.39,190,121.02,191.5,120.05,193,119.07,194.68,118.54,196.35,118,198,118,202.2,118,206.16,119.16,210.12,120.32,213.2,122.17,216.27,124.03,218.14,126.35,220,128.67,220,131,220,132.12,219.37,132.96,218.74,133.79,217.82,134.97,216.91,136.15,215.86,138,214.82,139.85,214,143,213.25,146.07,212.43,149.21,211.61,152.35,210.72,155.52,209.84,158.69,208.91,161.87,207.97,165.05,207,168.2,208.87,167.97,211.36,167.6,213.84,167.23,216.67,166.87,219.51,166.52,222.55,166.26,225.6,166,228.6,166,239.4,166,245.91,169.06,252.41,172.12,255.9,177.9,259.39,183.67,260.49,191.98,261.6,200.3,261.6,210.8,261.6,220.85,259.66,233.54,257.72,246.23,253.57,257.45,249.43,268.66,242.95,276.33,236.47,284,227.4,284,225.82,284,224.67,283.35,223.51,282.71,222.65,281.55,221.79,280.38,221.16,278.76,220.52,277.15,220,275.19,219.55,273.62,217.17,271.07,214.79,268.52,211.3,265.45,207.81,262.37,203.63,259,199.45,255.62,195.4,252.4,198,249,203.33,252.3,208.17,255.21,213.01,258.12,217.08,260.3,221.14,262.47,224.3,263.73,227.45,265,229.4,265,230.45,265,231.39,264.85,232.33,264.7,233.32,264.12,234.32,263.54,235.45,262.38,236.57,261.22,238,259.19,239.87,256.57,241.95,251.65,244.03,246.74,245.77,239.97,247.52,233.2,248.66,224.8,249.8,216.4,249.8,206.8,249.8,198.62,249.17,192.29,248.55,185.95,246.3,181.62,244.05,177.29,239.67,175.04,235.3,172.8,227.8,172.8,225.78,172.8,222.66,173.13,219.54,173.47,216.2,173.97,212.86,174.48,209.74,175.08,206.63,175.67,204.6,176.2,200.93,188.27,196.37,201.22,191.82,214.18,186.93,226.57,182.03,238.96,177.07,250.08,172.1,261.19,167.6,269.6,166.1,272.52,164.71,274.67,163.31,276.81,162,278.22,160.69,279.63,159.45,280.31,158.2,281,157,281,155.5,281,154.28,280.34,153.06,279.69,152.2,278.32,151.34,276.95,150.87,274.84,150.4,272.72,150.4,269.79,150.4,268.22,151.26,266.43,152.13,264.63,153.4,262.79,154.68,260.96,156.14,259.16,157.6,257.37,158.8,255.8,162.32,251.6,166.95,242.84,171.58,234.08,176.32,223.25,181.07,212.41,185.43,200.73,189.8,189.05,192.8,179,190.85,179.52,188.3,180.25,185.75,180.98,183.05,181.82,180.35,182.67,177.73,183.58,175.1,184.5,173,185.4,172.17,185.77,171.22,186.54,170.26,187.3,169.25,188.07,168.24,188.84,167.21,189.42,166.17,190,165.2,190,161.75,190,158.94,188.2,156.14,186.4,154.15,183.7,152.16,181,151.08,177.85,150,174.7,150,172,150,170.42,150.51,168.99,151.03,167.56,151.85,166.42,152.68,165.28,153.71,164.49,154.75,163.7,155.8,163.4,156.6,163.8,156.3,165.45,156.81,167.37,157.32,169.3,158.58,170.95,159.83,172.6,161.8,173.7,163.78,174.79,166.4,174.79,169.25,174.79,172.61,174.42,175.97,174.04,179.63,173.42,183.28,172.8,187.13,172.01,190.97,171.22,194.8,170.4,195.62,167.47,196.82,162.47,198.02,157.46,199.12,152.12,200.23,146.78,201.02,141.96,201.8,137.15,201.8,134.6,201.8,132.27,201.27,130.58,200.74,128.88,199.52,127.77,198.31,126.67,196.32,126.13,194.32,125.6,191.4,125.6,190.95,125.6,190.47,125.6,189.98,125.6,189.48,125.62,188.97,125.64,188.45,125.68,187.92,125.72,187.4,125.8,186.8,125.4,186.8,125.398,273.2,151.8,286.47,155.77,295.63,162.72,304.79,169.67,310.47,178,316.15,186.32,318.68,195.22,321.2,204.12,321.2,212,321.2,215.67,320.56,218.57,319.92,221.47,318.8,223.47,317.67,225.48,316.13,226.54,314.6,227.6,312.8,227.6,311.45,227.52,310.19,227.09,308.92,226.66,307.95,225.65,306.97,224.63,306.39,222.93,305.8,221.22,305.8,218.6,305.8,209.45,304.24,200.29,302.67,191.14,298.7,182.85,294.72,174.56,287.91,167.58,281.1,160.6,270.6,155.8,273.2,151.8,273.198,151.798] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [316.2,166.4,338.63,165.12,355.9,162.01,373.17,158.89,384.92,153.47,396.68,148.05,402.74,140.1,408.8,132.15,408.8,121.2,408.8,112.35,406.41,106.24,404.02,100.14,399.57,96.35,395.13,92.56,388.8,90.88,382.47,89.2,374.6,89.2,367.85,89.2,360.41,91.08,352.96,92.97,345.2,96.77,337.44,100.58,329.54,106.33,321.65,112.07,314,119.8,312.88,120.92,312.01,122.28,311.14,123.64,310.23,124.82,309.31,126,308.18,126.8,307.05,127.6,305.4,127.6,302.48,127.6,299.89,126.37,297.31,125.13,295.38,123.3,293.44,121.46,292.32,119.33,291.2,117.2,291.2,115.4,291.2,114.2,291.48,113.32,291.75,112.43,292.2,111.65,292.65,110.86,293.23,110.05,293.8,109.25,294.4,108.2,295.23,106.85,295.96,105.08,296.7,103.31,297.3,101.25,297.9,99.18,298.34,96.89,298.78,94.6,299,92.2,299.23,89.95,299.54,87,299.84,84.05,300.13,80.77,300.41,77.49,300.6,74.06,300.8,70.62,300.8,67.4,300.8,65.75,300.73,64.15,300.65,62.56,300.5,61.1,300.35,59.64,300.13,58.34,299.9,57.05,299.6,56,299.45,55.47,299.34,54.94,299.23,54.42,299.15,53.87,299.08,53.33,299.04,52.76,299,52.2,299,51.6,299,49.65,299.57,47.64,300.14,45.62,301.48,43.6,302.81,41.57,304.99,39.56,307.18,37.55,310.4,35.6,313.1,33.8,317.41,31.96,321.73,30.13,326.6,28.57,331.48,27.02,336.39,25.89,341.3,24.77,345.2,24.4,345,24.2,338.4,23.67,332.88,22.06,327.35,20.45,323,17.75,318.65,15.05,315.53,11.26,312.4,7.47,310.6,2.6,315,0,318.45,5.47,323.48,8.44,328.52,11.41,335.03,12.77,341.53,14.14,349.45,14.37,357.38,14.6,366.6,14.6,370.8,14.6,374.55,15.71,378.29,16.81,381.13,18.65,383.96,20.49,385.64,22.87,387.33,25.25,387.4,27.8,387.4,29.3,386.65,30.33,385.89,31.36,384.68,32,383.46,32.64,381.92,32.92,380.38,33.2,378.8,33.2,377.9,33.2,376.45,32.78,374.99,32.37,373.33,31.82,371.66,31.28,369.94,30.75,368.23,30.22,366.8,30,365.3,29.77,363.8,29.62,362.3,29.47,360.8,29.37,359.3,29.28,357.8,29.24,356.3,29.2,354.8,29.2,349.4,29.2,344.11,29.81,338.82,30.41,333.93,31.5,329.03,32.59,324.68,34.09,320.33,35.6,316.8,37.4,314.63,38.45,312.82,39.53,311.02,40.62,309.73,41.87,308.43,43.13,307.72,44.63,307,46.12,307,48,307,48.9,307.25,49.85,307.49,50.8,307.93,51.7,308.36,52.6,308.94,53.4,309.53,54.2,310.2,54.8,310.88,55.4,311.46,56.36,312.04,57.32,312.48,58.45,312.91,59.57,313.15,60.76,313.4,61.95,313.4,63,313.4,65.02,313.04,67.65,312.67,70.27,312.13,73.77,311.58,77.28,310.95,81.82,310.32,86.35,309.8,92.2,309.57,94.82,309.27,97.09,308.97,99.35,308.57,101.3,308.18,103.25,307.69,104.91,307.2,106.57,306.6,108,306.53,108.15,306.48,108.27,306.44,108.39,306.43,108.5,306.41,108.61,306.4,108.73,306.4,108.85,306.4,109,306.4,109.22,306.47,109.41,306.54,109.59,306.68,109.72,306.81,109.86,306.99,109.93,307.18,110,307.4,110,307.93,110,308.58,109.94,309.24,109.89,309.98,109.7,310.71,109.51,311.48,109.16,312.25,108.8,313,108.2,320.13,103.1,328.13,98.37,336.13,93.64,344.33,90,352.52,86.36,360.56,84.18,368.6,82,375.8,82,386.6,82,395.32,84.36,404.05,86.73,410.2,91.62,416.35,96.52,419.67,104.02,423,111.52,423,121.8,423,135.37,416.02,144.62,409.05,153.87,395.55,159.62,382.05,165.38,362.25,168.06,342.45,170.75,316.8,171.2,316.2,166.4,316.2,166.397] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [447.2,145.2,447.95,143.55,449.05,142.12,450.16,140.7,451.67,139.65,453.19,138.6,455.16,138,457.12,137.4,459.6,137.4,463.35,137.4,467.07,138.36,470.79,139.32,473.77,140.9,476.76,142.47,478.64,144.49,480.52,146.5,480.6,148.6,480.6,149.87,480.28,150.88,479.96,151.89,479.52,152.77,479.09,153.65,478.66,154.48,478.22,155.3,478,156.2,477.7,157.1,477.51,158.62,477.31,160.14,477.2,162.35,477.09,164.56,477.04,167.5,477,170.45,477,174.2,481.87,173.9,486.67,173.61,491.47,173.32,495.75,173.07,500.02,172.83,503.55,172.65,507.07,172.47,509.4,172.4,512.55,172.25,514.99,171.99,517.42,171.73,519.3,171.22,521.17,170.72,522.56,169.89,523.95,169.07,525,167.8,530.77,169.37,534.99,170.73,539.22,172.08,541.97,173.52,544.73,174.97,546.06,176.66,547.4,178.35,547.4,180.6,547.4,181.42,546.86,182.03,546.32,182.63,545.47,183.02,544.63,183.42,543.6,183.61,542.57,183.8,541.6,183.8,539.72,183.8,537.17,183.42,534.62,183.03,531.07,182.55,527.53,182.06,522.84,181.6,518.15,181.15,512,181,510.42,180.92,508.74,180.88,507.07,180.84,505.32,180.82,503.58,180.8,501.79,180.8,500,180.8,498.2,180.8,495.57,180.8,492.89,180.83,490.21,180.87,487.55,180.95,484.89,181.02,482.28,181.13,479.67,181.25,477.2,181.4,477.2,186.42,477.24,191.73,477.27,197.03,477.35,201.95,477.42,206.86,477.54,211.04,477.65,215.22,477.8,218,479.15,220.25,480.25,223.02,481.36,225.79,482.15,229.37,482.94,232.95,483.37,237.49,483.8,242.02,483.8,247.8,483.8,259.57,480.46,269.91,477.12,280.26,469.97,288.85,462.83,297.43,451.65,304.1,440.47,310.77,424.8,315.19,422.4,311.19,433.87,306.77,442.55,300.85,451.22,294.93,457.15,288,463.07,281.06,466.27,273.34,469.47,265.62,470,257.59,468.35,260.15,466,262.15,463.65,264.16,460.65,265.55,457.65,266.93,454.02,267.66,450.4,268.4,446.2,268.4,439.52,268.4,433.91,266,428.29,263.6,424.22,259.42,420.16,255.24,417.88,249.58,415.6,243.92,415.6,237.4,415.6,230.2,418.17,224.05,420.74,217.9,425.22,213.4,429.71,208.9,435.76,206.35,441.82,203.8,448.8,203.8,451.35,203.8,453.83,204.14,456.32,204.48,458.62,205.17,460.93,205.87,463,206.92,465.07,207.97,466.8,209.4,466.8,205.5,466.64,201.74,466.48,197.99,466.27,194.52,466.07,191.05,465.87,187.94,465.67,184.82,465.6,182.2,460.87,182.5,454.09,183.16,447.3,183.82,440.25,184.65,433.2,185.47,426.79,186.36,420.37,187.25,416.4,188,414.52,188.3,412.67,188.73,410.81,189.16,409.05,189.65,407.29,190.14,405.66,190.64,404.02,191.15,402.6,191.6,400.8,192.2,399.63,192.84,398.46,193.47,397.42,194,396.39,194.52,395.26,194.86,394.12,195.2,392.4,195.2,389.63,195.12,386.4,193.4,383.18,191.67,380.43,189.05,377.67,186.42,375.83,183.27,374,180.12,374,177.2,374,175.92,374.25,174.8,374.5,173.67,374.95,172.7,375.4,171.72,376.02,170.9,376.65,170.07,377.4,169.4,378.6,169.4,378.75,170.52,379.38,172.51,380.01,174.49,381.82,176.42,383.64,178.35,387.01,179.78,390.37,181.2,396,181.2,399.67,181.2,409.4,180.4,419.12,179.61,430.15,178.6,441.17,177.59,451.12,176.64,461.07,175.7,465.2,175.4,464.9,166.25,464.53,160.48,464.17,154.71,463.02,151.45,461.88,148.19,459.6,146.99,457.32,145.8,453.2,145.8,452.52,145.8,451.85,145.83,451.17,145.87,450.5,145.92,449.82,145.98,449.15,146.05,448.47,146.12,447.8,146.2,447.2,145.2,447.2,145.198,469.4,231.2,469.4,228.05,468.12,224.53,466.84,221.01,464.25,218.05,461.66,215.08,457.76,213.14,453.85,211.2,448.6,211.2,444.32,211.2,440.45,212.83,436.57,214.47,433.63,217.7,430.68,220.92,428.94,225.71,427.2,230.5,427.2,236.8,427.2,242.05,429.06,246.14,430.93,250.23,433.85,253.05,436.77,255.86,440.36,257.33,443.95,258.8,447.4,258.8,453.93,258.8,458.18,256.85,462.43,254.9,464.93,251.3,467.42,247.7,468.41,242.6,469.4,237.5,469.4,231.2,469.4,231.197,497.6,131.8,505.92,134.42,511.43,137.56,516.94,140.69,520.22,143.82,523.51,146.95,524.85,149.83,526.2,152.7,526.2,154.8,526.2,156.07,525.73,157.2,525.25,158.33,524.5,159.17,523.75,160.02,522.83,160.51,521.9,161,521,161,519.65,161,518.68,160.66,517.71,160.32,516.98,159.65,516.24,158.97,515.68,157.96,515.13,156.95,514.6,155.6,513.63,153.2,511.93,150.49,510.24,147.79,507.83,145.05,505.41,142.31,502.25,139.68,499.1,137.05,495.2,134.8,497.6,131.8,497.6,131.798,523.8,127.8,532.72,130.8,538.46,134.04,544.21,137.29,547.52,140.4,550.84,143.51,552.12,146.3,553.4,149.1,553.4,151.2,553.4,152.4,552.96,153.49,552.51,154.57,551.8,155.4,551.09,156.22,550.19,156.71,549.3,157.2,548.4,157.2,547.05,157.2,546.08,156.89,545.11,156.59,544.37,155.95,543.64,155.31,543.08,154.33,542.52,153.35,542,152,540.95,149.45,539.07,146.66,537.18,143.88,534.58,141.12,531.97,138.37,528.7,135.77,525.42,133.17,521.6,131,523.8,127.8,523.799,127.798] ) );
    shape.graphics.endFill();

    return shape;
  },
  "同じ時刻" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,1,2,3,3,3,3,2,2,2,2,2,1,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [-221.8,-85.6,-204.4,-72.6,-204.93,-72,-205.78,-71.38,-206.63,-70.76,-207.75,-70.2,-208.88,-69.64,-210.25,-69.17,-211.63,-68.7,-213.2,-68.4,-213.2,73.8,-213.2,77.47,-213.93,80.44,-214.66,83.4,-217.1,85.65,-219.54,87.9,-224.17,89.44,-228.8,90.97,-236.6,91.8,-236.6,88.35,-238.35,86.18,-240.1,84.02,-243.38,82.72,-246.66,81.43,-251.37,80.8,-256.08,80.17,-262,79.8,-262,76.8,-231.4,76.8,-229.98,76.8,-228.99,76.72,-227.99,76.64,-227.38,76.32,-226.76,76.01,-226.48,75.37,-226.2,74.73,-226.2,73.6,-226.2,-72.2,-357.6,-72.2,-357.6,86.8,-357.6,87.02,-357.94,87.9,-358.28,88.77,-359.58,89.72,-360.87,90.68,-363.42,91.44,-365.98,92.2,-370.4,92.2,-370.4,-83.8,-356.2,-77,-228.2,-77,-221.8,-85.6,-221.802,-85.599,-256,-57,-238.6,-44.8,-239.28,-43.67,-240.07,-42.88,-240.87,-42.08,-241.98,-41.57,-243.08,-41.07,-244.59,-40.83,-246.1,-40.6,-248.2,-40.6,-341.8,-40.6,-343,-45.4,-265,-45.4,-256,-57,-256.001,-56.999,-247.2,-11.2,-247.65,-10.67,-248.42,-10.13,-249.18,-9.59,-250.18,-9.1,-251.17,-8.61,-252.35,-8.22,-253.53,-7.82,-254.8,-7.6,-254.8,50.2,-254.8,50.35,-255.54,51.09,-256.27,51.83,-257.83,52.65,-259.38,53.48,-261.8,54.14,-264.23,54.8,-267.6,54.8,-267.6,41.4,-317,41.4,-317,55,-317,55.07,-317.48,55.77,-317.96,56.47,-319.32,57.27,-320.69,58.08,-323.16,58.74,-325.63,59.4,-329.6,59.4,-329.6,-21.4,-316.2,-15.4,-269.4,-15.4,-263.6,-22.8,-247.2,-11.2,-247.201,-11.199,-317,36.6,-267.6,36.6,-267.6,-10.6,-317,-10.6,-317,36.6,-317,36.6] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-169.2,-75,-168.52,-76.72,-167.17,-78.13,-165.81,-79.53,-164.05,-80.52,-162.29,-81.52,-160.25,-82.06,-158.22,-82.6,-156.2,-82.6,-152.75,-82.6,-148.85,-81.6,-144.94,-80.6,-141.62,-78.8,-138.31,-77,-136.09,-74.5,-133.87,-72,-133.8,-69,-133.8,-67.27,-134.46,-66.02,-135.12,-64.76,-136.1,-63,-137.07,-61.24,-138.19,-58.48,-139.3,-55.72,-140.2,-51,-141.25,-44.92,-142.32,-34.96,-143.4,-25,-144.3,-13.6,-145.2,-2.2,-145.82,9.41,-146.45,21.02,-146.6,30.4,-146.6,41.8,-143.91,48.97,-141.23,56.15,-136.22,60.2,-131.22,64.25,-124.07,65.72,-116.92,67.2,-108,67.2,-96.82,67.2,-86.49,64.25,-76.15,61.29,-66.85,55.27,-57.55,49.26,-49.39,40.11,-41.22,30.97,-34.4,18.6,-30.2,20.8,-36.42,36.47,-44.78,47.68,-53.14,58.89,-63.18,66.07,-73.21,73.26,-84.68,76.63,-96.15,80,-108.6,80,-118.65,80,-127.66,77.78,-136.66,75.56,-143.45,70.03,-150.24,64.49,-154.22,55.11,-158.2,45.72,-158.2,31.4,-158.2,21.35,-157.7,8.91,-157.2,-3.52,-156.45,-16.5,-155.7,-29.47,-154.82,-42.06,-153.95,-54.65,-153.2,-65,-153.2,-66.2,-153.2,-67.02,-153.43,-68.44,-153.66,-69.85,-154.6,-71.22,-155.54,-72.59,-157.42,-73.59,-159.3,-74.6,-162.6,-74.6,-163.35,-74.6,-164.16,-74.56,-164.96,-74.53,-165.75,-74.47,-166.54,-74.42,-167.27,-74.34,-168,-74.27,-168.6,-74.2,-169.2,-75,-169.198,-74.998,-93.6,-59.4,-84.6,-56.25,-78.79,-52.8,-72.97,-49.35,-69.6,-46.05,-66.22,-42.75,-64.91,-39.82,-63.6,-36.9,-63.6,-34.8,-63.6,-33.45,-63.96,-32.28,-64.31,-31.11,-64.95,-30.25,-65.59,-29.39,-66.47,-28.89,-67.35,-28.4,-68.4,-28.4,-69.6,-28.4,-70.62,-28.74,-71.63,-29.08,-72.48,-29.77,-73.32,-30.47,-74,-31.52,-74.68,-32.57,-75.2,-34,-76.1,-36.25,-78.03,-39.12,-79.96,-42,-82.68,-45,-85.39,-48,-88.79,-50.87,-92.18,-53.75,-96,-56,-93.6,-59.4,-93.6,-59.398,-71,-74.2,-62,-71.05,-56.19,-67.6,-50.38,-64.14,-47,-60.82,-43.63,-57.5,-42.31,-54.54,-41,-51.57,-41,-49.4,-41,-48.12,-41.33,-47,-41.66,-45.87,-42.28,-45.02,-42.89,-44.18,-43.79,-43.69,-44.68,-43.2,-45.8,-43.2,-46.93,-43.2,-47.9,-43.54,-48.88,-43.87,-49.7,-44.55,-50.53,-45.22,-51.2,-46.24,-51.88,-47.25,-52.4,-48.6,-53.3,-50.92,-55.23,-53.81,-57.16,-56.69,-59.88,-59.67,-62.59,-62.65,-65.99,-65.5,-69.38,-68.35,-73.2,-70.6,-71,-74.2,-71,-74.198] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,3,3,3,3,2,2,2,2,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,1,2,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,2,2,2,2,3,3,3,3,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [40,-81.6,57,-69,56.55,-68.4,55.71,-67.81,54.88,-67.22,53.75,-66.7,52.63,-66.17,51.26,-65.74,49.9,-65.3,48.4,-65,48.4,51.4,48.4,51.62,47.7,52.37,46.99,53.12,45.48,53.92,43.96,54.73,41.57,55.37,39.18,56,35.8,56,35.8,41.4,5,41.4,5,61,5,61.38,4.25,62.11,3.49,62.84,2.1,63.57,0.72,64.31,-1.24,64.85,-3.2,65.4,-5.6,65.4,-7.6,65.4,-7.6,-79.8,7.4,-73.4,33.8,-73.4,40,-81.6,40.001,-81.599,35.8,-68.6,5,-68.6,5,-19,35.8,-19,35.8,-68.6,35.802,-68.599,5,36.6,35.8,36.6,35.8,-14.2,5,-14.2,5,36.6,5.003,36.6,156,-36.6,173.4,-24,172.8,-22.87,172.04,-22.08,171.29,-21.28,170.2,-20.77,169.11,-20.27,167.61,-20.03,166.1,-19.8,164,-19.8,52,-19.8,50.8,-24.6,100.6,-24.6,100.6,-57.8,60.4,-57.8,59.2,-62.6,100.6,-62.6,100.6,-92.8,122.8,-91,122.65,-89.72,122.12,-88.83,121.59,-87.94,120.5,-87.3,119.41,-86.66,117.68,-86.22,115.95,-85.77,113.4,-85.4,113.4,-62.6,135.4,-62.6,144.4,-74.4,161.6,-62,161,-60.87,160.21,-60.08,159.42,-59.28,158.3,-58.77,157.17,-58.27,155.64,-58.03,154.1,-57.8,152,-57.8,113.4,-57.8,113.4,-24.6,146.8,-24.6,156,-36.6,155.999,-36.599,145.6,11.6,154.4,0,170.8,12.2,170.2,13.32,169.45,14.12,168.69,14.92,167.62,15.42,166.56,15.93,165.09,16.17,163.63,16.4,161.6,16.4,137.4,16.4,137.4,72.2,137.4,76.17,136.73,79.57,136.06,82.97,133.85,85.6,131.64,88.22,127.45,89.97,123.25,91.72,116.2,92.4,116.2,88.42,114.75,86.04,113.31,83.65,110.48,82.3,107.65,80.95,103.46,80.36,99.28,79.77,93.8,79.4,93.8,76,120,76,121.35,76,122.24,75.83,123.13,75.66,123.65,75.22,124.18,74.79,124.39,74.06,124.6,73.32,124.6,72.2,124.6,16.4,52.4,16.4,51,11.6,124.6,11.6,124.6,-13,145.6,-11.4,145.53,-10.43,145.16,-9.67,144.8,-8.91,143.9,-8.33,143,-7.74,141.44,-7.32,139.88,-6.9,137.4,-6.6,137.4,11.6,145.6,11.6,145.601,11.601,71,25.4,78.65,29.15,83.83,33.15,89,37.16,92.15,41.07,95.3,44.99,96.65,48.66,98,52.32,98,55.4,98,57.65,97.37,59.49,96.74,61.34,95.68,62.65,94.61,63.96,93.19,64.68,91.78,65.4,90.2,65.4,89.45,65.4,88.67,65.24,87.89,65.08,87.1,64.72,86.31,64.37,85.53,63.8,84.75,63.22,84,62.4,83.7,58.2,82.3,53.38,80.9,48.56,78.8,43.77,76.7,38.99,74.1,34.58,71.5,30.17,68.8,26.8,71,25.4,71.001,25.4] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,1,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,2,3,3,3,3,2,2,2,1,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2] ), $.toNumberVector( [269.8,-60.6,279.4,-73,297.2,-60,296.6,-58.87,295.81,-58.08,295.02,-57.28,293.9,-56.77,292.77,-56.27,291.24,-56.03,289.7,-55.8,287.6,-55.8,233.6,-55.8,245.6,-50.8,245.3,-50.05,244.75,-49.46,244.21,-48.88,243.33,-48.52,242.44,-48.17,241.19,-48.07,239.93,-47.97,238.2,-48.2,235.35,-43.85,232.16,-39.52,228.98,-35.19,225.6,-31.12,222.23,-27.05,218.74,-23.36,215.25,-19.67,211.8,-16.6,215.03,-14.42,217.27,-12.14,219.52,-9.85,220.93,-7.62,222.33,-5.39,222.97,-3.3,223.6,-1.2,223.6,0.6,223.6,2.33,223.14,3.73,222.68,5.13,221.85,6.13,221.03,7.12,219.89,7.66,218.75,8.2,217.4,8.2,216.8,8.2,216.2,8.09,215.6,7.98,214.98,7.75,214.36,7.53,213.72,7.19,213.08,6.85,212.4,6.4,211.13,2.35,208.3,-2.01,205.48,-6.37,201.8,-10.5,198.13,-14.62,193.95,-18.24,189.78,-21.85,185.8,-24.4,187.2,-26.4,190.35,-25.65,193.2,-24.82,196.05,-24,198.6,-23.1,201.15,-22.2,203.4,-21.22,205.65,-20.25,207.6,-19.2,209.7,-22.72,211.95,-26.97,214.2,-31.22,216.43,-35.92,218.66,-40.63,220.79,-45.66,222.93,-50.7,224.8,-55.8,186.4,-55.8,185.2,-60.6,232.6,-60.6,232.6,-93,254.6,-91.2,254.53,-90,254.04,-89.14,253.54,-88.29,252.48,-87.67,251.41,-87.05,249.68,-86.61,247.95,-86.17,245.4,-85.8,245.4,-60.6,269.8,-60.6,269.802,-60.599,185.8,44.8,197.5,37.15,208.42,27.4,219.35,17.64,228.78,6.98,238.21,-3.69,245.79,-14.68,253.38,-25.67,258.4,-35.8,276.6,-26.8,276.23,-26.27,275.79,-25.83,275.36,-25.39,274.8,-25.07,274.24,-24.76,273.51,-24.58,272.78,-24.4,271.8,-24.4,271.5,-24.4,271.13,-24.43,270.76,-24.47,270.35,-24.52,269.94,-24.58,269.5,-24.65,269.05,-24.72,268.6,-24.8,262.68,-15.57,254.29,-5.61,245.9,4.36,235.55,13.98,225.2,23.59,213.14,32.32,201.08,41.05,187.8,47.8,185.8,44.8,185.802,44.8,186.6,89.8,201.15,82.37,214.13,72.48,227.1,62.58,237.9,51.27,248.7,39.97,257.03,27.78,265.35,15.6,270.6,3.6,289.2,12.2,288.83,12.73,288.39,13.17,287.96,13.61,287.4,13.93,286.84,14.24,286.11,14.42,285.38,14.6,284.4,14.6,284.1,14.6,283.73,14.57,283.36,14.53,282.95,14.48,282.54,14.42,282.1,14.35,281.65,14.28,281.2,14.2,278.88,18.4,276.11,22.63,273.34,26.86,270.15,31.08,266.96,35.29,263.37,39.48,259.78,43.68,255.8,47.8,265.4,51.4,271.88,55.58,278.37,59.75,282.3,63.95,286.24,68.15,287.92,72.1,289.6,76.05,289.6,79.2,289.6,81,289.14,82.51,288.68,84.01,287.85,85.1,287.03,86.19,285.89,86.79,284.75,87.4,283.4,87.4,282.73,87.4,282.05,87.25,281.38,87.11,280.7,86.82,280.03,86.54,279.35,86.13,278.68,85.73,278,85.2,276.8,80.93,274.23,76.34,271.66,71.76,268.23,67.3,264.8,62.84,260.76,58.71,256.73,54.58,252.6,51.2,246.23,57.5,238.97,63.41,231.72,69.32,223.65,74.65,215.59,79.97,206.76,84.61,197.93,89.25,188.41,93,186.6,89.8,186.603,89.799,326.6,-66.6,326.53,-65.55,326.1,-64.72,325.68,-63.89,324.73,-63.27,323.77,-62.66,322.19,-62.24,320.6,-61.82,318.2,-61.6,318.2,42.2,318.2,42.27,317.75,42.97,317.31,43.67,315.98,44.47,314.65,45.28,312.21,45.94,309.78,46.6,305.8,46.6,305.8,-68.4,326.6,-66.6,326.601,-66.599,348.6,-89.4,370.4,-87.6,370.25,-86.47,369.86,-85.6,369.48,-84.72,368.5,-84.05,367.53,-83.37,365.79,-82.87,364.05,-82.37,361.2,-82,361.2,72,361.2,75.97,360.48,79.38,359.75,82.78,357.5,85.42,355.25,88.07,351.08,89.86,346.9,91.65,340,92.4,339.78,88.35,338.29,86.01,336.81,83.67,333.98,82.37,331.14,81.08,326.92,80.5,322.7,79.92,317,79.4,317,76.2,343.8,76.2,345.15,76.2,346.07,75.96,346.99,75.72,347.55,75.2,348.11,74.67,348.36,73.84,348.6,73,348.6,71.8,348.6,-89.4,348.601,-89.398] ) );
    shape.graphics.endFill();

    return shape;
  },
  "同じ場所" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,1,2,3,3,3,3,2,2,2,2,2,1,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [-223.4,-85.5,-206,-72.5,-206.53,-71.9,-207.38,-71.28,-208.23,-70.66,-209.35,-70.1,-210.48,-69.54,-211.85,-69.07,-213.23,-68.6,-214.8,-68.3,-214.8,73.9,-214.8,77.57,-215.53,80.54,-216.26,83.5,-218.7,85.75,-221.14,88,-225.77,89.54,-230.4,91.07,-238.2,91.9,-238.2,88.45,-239.95,86.28,-241.7,84.12,-244.98,82.82,-248.26,81.53,-252.97,80.9,-257.68,80.27,-263.6,79.9,-263.6,76.9,-233,76.9,-231.58,76.9,-230.59,76.82,-229.59,76.74,-228.98,76.42,-228.36,76.1,-228.08,75.46,-227.8,74.82,-227.8,73.7,-227.8,-72.1,-359.2,-72.1,-359.2,86.9,-359.2,87.12,-359.54,87.99,-359.88,88.87,-361.17,89.82,-362.47,90.78,-365.02,91.54,-367.57,92.3,-372,92.3,-372,-83.7,-357.8,-76.9,-229.8,-76.9,-223.4,-85.5,-223.402,-85.499,-257.6,-56.9,-240.2,-44.7,-240.88,-43.57,-241.67,-42.78,-242.47,-41.98,-243.58,-41.47,-244.68,-40.97,-246.19,-40.73,-247.7,-40.5,-249.8,-40.5,-343.4,-40.5,-344.6,-45.3,-266.6,-45.3,-257.6,-56.9,-257.602,-56.899,-248.8,-11.1,-249.25,-10.58,-250.02,-10.03,-250.78,-9.49,-251.78,-9,-252.77,-8.51,-253.95,-8.12,-255.13,-7.72,-256.4,-7.5,-256.4,50.3,-256.4,50.45,-257.14,51.19,-257.87,51.92,-259.43,52.75,-260.98,53.57,-263.41,54.24,-265.83,54.9,-269.2,54.9,-269.2,41.5,-318.6,41.5,-318.6,55.1,-318.6,55.17,-319.08,55.87,-319.56,56.57,-320.93,57.37,-322.29,58.18,-324.76,58.84,-327.23,59.5,-331.2,59.5,-331.2,-21.3,-317.8,-15.3,-271,-15.3,-265.2,-22.7,-248.8,-11.1,-248.802,-11.1,-318.6,36.7,-269.2,36.7,-269.2,-10.5,-318.6,-10.5,-318.6,36.7,-318.601,36.699] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-170.8,-74.9,-170.12,-76.62,-168.77,-78.03,-167.41,-79.43,-165.65,-80.42,-163.89,-81.42,-161.86,-81.96,-159.82,-82.5,-157.8,-82.5,-154.35,-82.5,-150.45,-81.5,-146.54,-80.5,-143.22,-78.7,-139.91,-76.9,-137.69,-74.4,-135.47,-71.9,-135.4,-68.9,-135.4,-67.17,-136.06,-65.92,-136.72,-64.66,-137.7,-62.9,-138.68,-61.14,-139.79,-58.38,-140.9,-55.62,-141.8,-50.9,-142.85,-44.82,-143.92,-34.86,-145,-24.9,-145.9,-13.5,-146.8,-2.1,-147.42,9.51,-148.05,21.13,-148.2,30.5,-148.2,41.9,-145.51,49.07,-142.83,56.25,-137.82,60.3,-132.82,64.35,-125.67,65.82,-118.52,67.3,-109.6,67.3,-98.42,67.3,-88.09,64.35,-77.75,61.39,-68.45,55.37,-59.15,49.36,-50.99,40.21,-42.83,31.07,-36,18.7,-31.8,20.9,-38.03,36.57,-46.38,47.78,-54.74,58.99,-64.78,66.17,-74.81,73.36,-86.28,76.73,-97.75,80.1,-110.2,80.1,-120.25,80.1,-129.26,77.88,-138.26,75.66,-145.05,70.12,-151.84,64.59,-155.82,55.21,-159.8,45.82,-159.8,31.5,-159.8,21.45,-159.3,9.01,-158.8,-3.43,-158.05,-16.4,-157.3,-29.38,-156.42,-41.96,-155.55,-54.55,-154.8,-64.9,-154.8,-66.1,-154.8,-66.92,-155.03,-68.34,-155.26,-69.76,-156.2,-71.12,-157.14,-72.49,-159.02,-73.5,-160.9,-74.5,-164.2,-74.5,-164.95,-74.5,-165.75,-74.46,-166.56,-74.43,-167.35,-74.37,-168.14,-74.32,-168.87,-74.25,-169.6,-74.17,-170.2,-74.1,-170.8,-74.9,-170.799,-74.898,-95.2,-59.3,-86.2,-56.15,-80.39,-52.7,-74.58,-49.25,-71.2,-45.95,-67.83,-42.65,-66.51,-39.72,-65.2,-36.8,-65.2,-34.7,-65.2,-33.35,-65.56,-32.18,-65.91,-31.01,-66.55,-30.15,-67.19,-29.29,-68.07,-28.79,-68.95,-28.3,-70,-28.3,-71.2,-28.3,-72.22,-28.64,-73.23,-28.98,-74.08,-29.67,-74.92,-30.37,-75.6,-31.42,-76.28,-32.48,-76.8,-33.9,-77.7,-36.15,-79.63,-39.02,-81.56,-41.9,-84.28,-44.9,-86.99,-47.9,-90.39,-50.77,-93.78,-53.65,-97.6,-55.9,-95.2,-59.3,-95.2,-59.299,-72.6,-74.1,-63.6,-70.95,-57.79,-67.5,-51.98,-64.04,-48.6,-60.72,-45.23,-57.41,-43.91,-54.44,-42.6,-51.47,-42.6,-49.3,-42.6,-48.02,-42.93,-46.9,-43.26,-45.77,-43.88,-44.92,-44.5,-44.08,-45.39,-43.59,-46.28,-43.1,-47.4,-43.1,-48.53,-43.1,-49.5,-43.44,-50.48,-43.77,-51.3,-44.45,-52.13,-45.12,-52.8,-46.14,-53.48,-47.15,-54,-48.5,-54.9,-50.82,-56.83,-53.71,-58.76,-56.59,-61.48,-59.57,-64.2,-62.56,-67.59,-65.4,-70.98,-68.25,-74.8,-70.5,-72.6,-74.1,-72.601,-74.099] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,1,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,2,2,2,2,2,1,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [20.4,25.5,24,24.6,27.71,23.6,31.41,22.6,35.2,21.55,38.99,20.5,42.84,19.43,46.7,18.35,50.6,17.3,51.4,20.1,46.67,22.5,40.88,25.45,35.09,28.39,28.18,31.82,21.26,35.26,13.18,39.14,5.1,43.02,-4.2,47.3,-4.42,48.2,-4.83,48.98,-5.23,49.76,-5.77,50.4,-6.32,51.04,-6.98,51.52,-7.65,52,-8.4,52.3,-17,34.9,-14.97,34.45,-12.34,33.85,-9.7,33.25,-6.55,32.5,-3.4,31.75,0.21,30.85,3.83,29.95,7.8,28.9,7.8,-35.9,-14.6,-35.9,-16,-40.7,7.8,-40.7,7.8,-91.7,29.8,-89.7,29.73,-88.5,29.18,-87.68,28.63,-86.86,27.5,-86.27,26.38,-85.69,24.63,-85.28,22.88,-84.87,20.4,-84.5,20.4,-40.7,26,-40.7,34.2,-52.7,50,-40.1,49.4,-38.98,48.65,-38.18,47.89,-37.38,46.83,-36.88,45.76,-36.37,44.29,-36.13,42.83,-35.9,40.8,-35.9,20.4,-35.9,20.4,25.5,20.402,25.5,171,-4.7,170.4,-3.58,169.61,-2.75,168.83,-1.92,167.72,-1.38,166.62,-0.83,165.12,-0.57,163.63,-0.3,161.6,-0.3,85.4,-0.3,84.28,2.4,83,5.06,81.73,7.71,80.32,10.3,78.92,12.89,77.38,15.39,75.85,17.9,74.2,20.3,142.4,20.3,148.8,12.5,164.4,24.7,163.95,25.22,163.24,25.67,162.53,26.12,161.57,26.47,160.62,26.83,159.42,27.09,158.22,27.35,156.8,27.5,155.9,40.62,154.6,50.82,153.3,61.02,151.52,68.45,149.74,75.87,147.43,80.6,145.12,85.32,142.2,87.5,140.32,88.85,138.34,89.8,136.35,90.75,134.1,91.35,131.85,91.95,129.26,92.22,126.67,92.5,123.6,92.5,123.6,90.25,123.23,88.38,122.86,86.51,121.25,85.05,119.64,83.59,116.34,82.54,113.05,81.5,107.2,80.9,107.4,77.5,109.35,77.57,112.18,77.65,115.02,77.72,117.92,77.77,120.83,77.83,123.4,77.86,125.97,77.9,127.4,77.9,128.67,77.9,129.61,77.88,130.54,77.85,131.27,77.72,132,77.59,132.6,77.31,133.2,77.02,133.8,76.5,135.6,75,137.11,71.05,138.62,67.11,139.87,60.7,141.13,54.29,142.15,45.39,143.17,36.5,144,25.1,129.6,25.1,126.22,35.6,121.4,45.09,116.57,54.57,110.2,63.05,103.82,71.52,95.85,78.99,87.87,86.45,78.2,92.9,75.8,89.5,83.15,83.05,89.27,75.67,95.4,68.29,100.35,60.15,105.3,52.01,109.1,43.21,112.9,34.4,115.6,25.1,99.2,25.1,95.07,34.25,89.59,42.69,84.11,51.14,77.38,58.75,70.64,66.36,62.72,73.08,54.8,79.8,45.8,85.5,43.2,82.1,50.33,76.4,56.61,69.79,62.89,63.18,68.25,55.92,73.61,48.67,78.02,40.9,82.43,33.12,85.8,25.1,71,25.1,67.1,30.35,62.68,35.25,58.25,40.16,53.3,44.67,48.35,49.19,42.88,53.31,37.4,57.42,31.4,61.1,29,57.9,36.05,52.12,42.25,45.4,48.46,38.68,53.73,31.27,58.99,23.87,63.29,15.91,67.58,7.95,70.8,-0.3,42,-0.3,40.6,-5.1,144.2,-5.1,153.4,-16.9,171,-4.7,171,-4.7,73.8,-25.5,73.8,-18.5,73.8,-18.43,73.32,-17.73,72.84,-17.03,71.48,-16.22,70.11,-15.42,67.64,-14.76,65.18,-14.1,61.2,-14.1,61.2,-89.1,74.8,-82.9,131.8,-82.9,137.8,-90.9,155.2,-78.5,154.67,-77.9,153.83,-77.31,152.98,-76.72,151.87,-76.2,150.77,-75.67,149.43,-75.24,148.1,-74.8,146.6,-74.5,146.6,-20.7,146.6,-20.55,145.89,-19.78,145.19,-19.01,143.65,-18.15,142.11,-17.29,139.68,-16.59,137.25,-15.9,133.8,-15.9,133.8,-25.5,73.8,-25.5,73.801,-25.499,133.8,-78.1,73.8,-78.1,73.8,-56.9,133.8,-56.9,133.8,-78.1,133.799,-78.099,73.8,-30.3,133.8,-30.3,133.8,-52.1,73.8,-52.1,73.8,-30.3,73.801,-30.3] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,2,2,2,2,2,2,1,2,2,2,2,2,1,2,3,3,3,3,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2] ), $.toNumberVector( [252.6,13.1,210,13.1,209.78,22.77,208.76,33.24,207.75,43.7,205.03,54.05,202.31,64.4,197.43,74.19,192.55,83.97,184.6,92.3,181.8,90.1,187.28,80.5,190.37,69.84,193.46,59.18,194.98,48.02,196.5,36.87,196.85,25.5,197.2,14.12,197.2,3.1,197.2,-48.5,212.4,-41.9,250.6,-41.9,256.6,-49.9,274,-37.5,273.48,-36.9,272.63,-36.31,271.78,-35.72,270.68,-35.2,269.57,-34.67,268.23,-34.24,266.9,-33.8,265.4,-33.5,265.4,22.9,265.4,23.05,264.67,23.69,263.93,24.34,262.38,25.05,260.82,25.76,258.4,26.33,255.98,26.9,252.6,26.9,252.6,13.1,252.602,13.1,279,-77.1,278.4,-75.97,277.62,-75.15,276.83,-74.32,275.73,-73.77,274.62,-73.23,273.12,-72.97,271.63,-72.7,269.6,-72.7,185.2,-72.7,184,-77.5,252.6,-77.5,261.8,-89.5,279,-77.1,279,-77.099,252.6,-37.1,210,-37.1,210,8.3,252.6,8.3,252.6,-37.1,252.602,-37.1,354.8,-34.3,372,-21.9,371.4,-20.77,370.61,-19.98,369.83,-19.18,368.72,-18.67,367.62,-18.17,366.12,-17.93,364.63,-17.7,362.6,-17.7,344,-17.7,344,88.1,344,88.47,343.24,89.18,342.47,89.88,341.05,90.57,339.62,91.27,337.59,91.78,335.55,92.3,333,92.3,331,92.3,331,-17.7,297,-17.7,297,-8.5,297,5.07,295.61,18.98,294.23,32.89,289.5,46.05,284.78,59.21,275.74,71.09,266.7,82.97,251.4,92.5,248.8,89.9,260.2,79.92,267.16,68.62,274.11,57.31,277.9,44.9,281.69,32.49,282.94,19.08,284.2,5.67,284.2,-8.5,284.2,-76.9,299.4,-71.5,306.07,-73.67,312.99,-76.36,319.9,-79.05,326.35,-81.9,332.8,-84.75,338.44,-87.59,344.07,-90.42,348.2,-92.9,365.4,-78.5,365.02,-78.12,364.57,-77.83,364.12,-77.53,363.6,-77.32,363.07,-77.12,362.47,-77.01,361.87,-76.9,361.2,-76.9,360.6,-76.9,359.92,-77,359.25,-77.11,358.5,-77.3,357.75,-77.49,356.92,-77.74,356.1,-78,355.2,-78.3,349.72,-76.65,342.84,-74.97,335.96,-73.29,328.35,-71.75,320.74,-70.21,312.73,-68.9,304.72,-67.6,297,-66.7,297,-22.5,346,-22.5,354.8,-34.3,354.799,-34.3] ) );
    shape.graphics.endFill();

    return shape;
  },
  "重ね合う" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,2,2,2,2,2,2,2,2,2,3,3,3,3,2,2,2,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,2,2,2,2,3,3,3,3,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [-158.14,93.01,-139.74,105.81,-140.34,106.94,-141.1,107.77,-141.86,108.59,-142.97,109.14,-144.07,109.68,-145.62,109.95,-147.17,110.21,-149.34,110.21,-324.34,110.21,-325.54,105.41,-239.94,105.41,-239.94,81.41,-308.54,81.41,-309.94,76.61,-239.94,76.61,-239.94,54.81,-283.34,54.81,-283.34,59.81,-283.34,59.89,-283.79,60.62,-284.25,61.34,-285.64,62.19,-287.03,63.03,-289.58,63.72,-292.14,64.41,-296.34,64.41,-296.34,-8.38,-281.94,-2.19,-239.94,-2.19,-239.94,-22.18,-320.94,-22.18,-322.34,-26.98,-239.94,-26.98,-239.94,-45.78,-248.26,-45.03,-256.77,-44.37,-265.28,-43.7,-273.81,-43.16,-282.34,-42.62,-290.82,-42.21,-299.29,-41.81,-307.54,-41.59,-308.14,-45.59,-291.34,-47.01,-273.02,-49.38,-254.7,-51.75,-237.19,-54.64,-219.68,-57.52,-204.13,-60.72,-188.59,-63.91,-177.34,-66.98,-163.74,-53.59,-164.11,-53.29,-164.53,-53.06,-164.95,-52.84,-165.41,-52.69,-165.88,-52.54,-166.41,-52.46,-166.94,-52.39,-167.54,-52.39,-168.21,-52.39,-168.96,-52.5,-169.71,-52.61,-170.54,-52.84,-171.36,-53.06,-172.26,-53.4,-173.16,-53.74,-174.14,-54.19,-179.76,-53.29,-185.96,-52.36,-192.15,-51.44,-198.79,-50.54,-205.43,-49.64,-212.44,-48.79,-219.46,-47.94,-226.74,-47.19,-226.74,-26.99,-169.74,-26.99,-160.34,-38.79,-142.54,-26.59,-143.06,-25.46,-143.81,-24.63,-144.56,-23.81,-145.66,-23.26,-146.77,-22.72,-148.3,-22.45,-149.84,-22.19,-151.94,-22.19,-226.74,-22.19,-226.74,-2.19,-184.14,-2.19,-178.14,-10.19,-160.54,2.21,-161.06,2.81,-161.91,3.4,-162.76,3.99,-163.86,4.51,-164.97,5.04,-166.3,5.47,-167.64,5.91,-169.14,6.21,-169.14,59.41,-169.21,59.49,-170.02,60.09,-170.82,60.69,-172.41,61.39,-174.01,62.08,-176.42,62.65,-178.84,63.21,-182.14,63.21,-182.14,54.81,-226.74,54.81,-226.74,76.61,-179.14,76.61,-170.34,65.61,-153.14,77.01,-153.74,78.21,-154.5,79.05,-155.25,79.89,-156.34,80.41,-157.43,80.94,-158.93,81.17,-160.44,81.41,-162.54,81.41,-226.74,81.41,-226.74,105.41,-167.74,105.41,-158.14,93.01,-158.141,93.013,-239.94,2.62,-283.34,2.62,-283.34,23.61,-239.94,23.61,-239.94,2.62,-239.939,2.615,-283.34,50.01,-239.94,50.01,-239.94,28.41,-283.34,28.41,-283.34,50.01,-283.338,50.014,-182.14,2.62,-226.74,2.62,-226.74,23.61,-182.14,23.61,-182.14,2.62,-182.14,2.615,-226.74,50.01,-182.14,50.01,-182.14,28.41,-226.74,28.41,-226.74,50.01,-226.739,50.014] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [-113.14,-21.59,-112.91,-19.56,-112.06,-17.87,-111.21,-16.18,-109.91,-14.96,-108.62,-13.74,-106.98,-13.06,-105.34,-12.39,-103.54,-12.39,-101.36,-12.39,-96.82,-13.22,-92.28,-14.05,-87.46,-15.29,-82.64,-16.52,-78.59,-17.95,-74.54,-19.39,-73.34,-20.59,-73.11,-24.04,-72.9,-27.76,-72.68,-31.49,-72.51,-34.66,-72.35,-37.83,-72.24,-40.02,-72.14,-42.21,-72.14,-42.59,-72.14,-44.61,-72.43,-46.55,-72.71,-48.49,-73.84,-50.01,-74.96,-51.53,-77.2,-52.46,-79.44,-53.39,-83.34,-53.39,-83.64,-53.39,-83.97,-53.38,-84.3,-53.38,-84.64,-53.36,-84.98,-53.34,-85.31,-53.3,-85.64,-53.26,-85.94,-53.19,-86.54,-54.19,-85.49,-56.06,-84.31,-57.29,-83.13,-58.53,-81.76,-59.26,-80.4,-59.99,-78.8,-60.29,-77.21,-60.58,-75.34,-60.58,-72.86,-60.58,-69.62,-59.45,-66.37,-58.31,-63.46,-56.43,-60.56,-54.56,-58.55,-52.15,-56.54,-49.73,-56.54,-47.19,-56.54,-45.98,-56.93,-44.82,-57.32,-43.65,-57.86,-42.36,-58.41,-41.07,-58.99,-39.56,-59.56,-38.06,-59.94,-36.19,-60.09,-34.98,-60.27,-33.67,-60.45,-32.36,-60.64,-30.94,-60.83,-29.51,-61.01,-27.97,-61.19,-26.44,-61.34,-24.79,-59.39,-24.11,-57.46,-23.12,-55.53,-22.14,-53.99,-20.94,-52.45,-19.74,-51.5,-18.37,-50.54,-17.01,-50.54,-15.59,-50.54,-13.56,-51.85,-12.1,-53.16,-10.63,-55.19,-8.96,-57.21,-7.29,-59.65,-5.04,-62.09,-2.79,-64.34,0.81,-64.94,10.81,-56.31,3.76,-47.3,-1.93,-38.28,-7.62,-29.71,-11.64,-21.15,-15.65,-13.44,-17.82,-5.74,-19.99,0.26,-19.99,12.26,-19.99,21.04,-16.88,29.82,-13.78,35.56,-7.16,41.3,-0.54,44.08,9.8,46.86,20.14,46.86,34.61,46.86,40.46,46.29,45.73,45.73,50.99,44.73,55.71,43.74,60.44,42.39,64.65,41.03,68.86,39.46,72.61,40.88,73.74,42.38,74.83,43.88,75.93,45.31,77.04,46.73,78.14,48.01,79.28,49.28,80.41,50.26,81.61,51.53,83.19,52.63,84.71,53.73,86.23,54.53,87.79,55.34,89.34,55.8,90.98,56.26,92.61,56.26,94.41,56.26,96.06,55.62,97.42,54.97,98.79,53.96,99.76,52.95,100.74,51.7,101.27,50.46,101.81,49.26,101.81,48.21,101.81,47.24,101.49,46.27,101.16,45.38,100.56,44.5,99.96,43.72,99.11,42.93,98.26,42.26,97.21,41.28,95.64,40.16,94.1,39.04,92.56,37.78,91.06,36.53,89.56,35.14,88.1,33.76,86.64,32.26,85.21,28.58,90.31,24.07,94.01,19.56,97.71,14.46,100.11,9.36,102.51,3.8,103.66,-1.77,104.81,-7.54,104.81,-16.54,104.81,-22.73,102.51,-28.91,100.21,-32.74,96.44,-36.56,92.67,-38.25,87.85,-39.94,83.04,-39.94,78.01,-39.94,73.36,-37.67,69.34,-35.41,65.32,-31.26,62.36,-27.12,59.4,-21.29,57.71,-15.46,56.01,-8.34,56.01,-4.21,56.01,0.4,56.74,5.02,57.46,9.71,58.81,14.4,60.16,18.94,62.09,23.48,64.01,27.46,66.41,28.51,63.41,29.55,60.01,30.58,56.61,31.41,52.84,32.23,49.07,32.75,44.95,33.26,40.84,33.26,36.41,33.26,25.39,31.93,16.48,30.59,7.57,26.78,1.29,22.98,-4.99,16.13,-8.39,9.28,-11.79,-1.74,-11.79,-8.49,-11.79,-16.04,-9.43,-23.6,-7.07,-31.71,-2.84,-39.83,1.4,-48.4,7.28,-56.96,13.16,-65.74,20.21,-66.34,39.21,-66.34,52.94,-66.2,62.85,-66.06,72.76,-65.84,79.94,-65.61,87.12,-65.33,92.11,-65.04,97.11,-64.74,101.01,-64.74,102.61,-64.74,104.94,-65.44,106.85,-66.13,108.77,-67.31,110.14,-68.5,111.51,-70.05,112.26,-71.61,113.01,-73.34,113.01,-74.91,113.01,-76.05,112.47,-77.18,111.94,-77.91,110.81,-78.65,109.69,-78.99,107.95,-79.34,106.21,-79.34,103.81,-79.34,99.99,-80.35,96.16,-81.36,92.34,-83.54,88.09,-85.71,83.83,-89.13,78.92,-92.54,74.01,-97.34,68.01,-94.94,65.81,-91.94,68.51,-89.17,70.88,-86.41,73.25,-84.21,75.01,-82.02,76.77,-80.57,77.79,-79.11,78.81,-78.74,78.81,-78.29,78.81,-78.01,78.37,-77.74,77.93,-77.59,76.94,-77.44,75.94,-77.39,74.34,-77.34,72.74,-77.34,70.41,-77.34,67.94,-77.23,63.63,-77.13,59.33,-76.94,53.81,-76.75,48.3,-76.5,41.89,-76.24,35.49,-75.94,28.81,-79.16,31.89,-82.67,35.81,-86.18,39.73,-90.04,44.44,-93.9,49.14,-98.16,54.6,-102.41,60.06,-107.14,66.21,-108.19,67.64,-109,68.88,-109.8,70.12,-110.59,71.04,-111.38,71.96,-112.26,72.48,-113.14,73.01,-114.34,73.01,-116.21,73.01,-117.64,72.2,-119.06,71.38,-120.01,70.09,-120.97,68.79,-121.45,67.19,-121.94,65.59,-121.94,64.01,-121.94,62.51,-121.59,61.17,-121.25,59.83,-120.66,58.69,-120.08,57.54,-119.32,56.62,-118.56,55.69,-117.74,55.01,-109.49,47.66,-102.5,40.87,-95.51,34.07,-90.01,27.96,-84.52,21.85,-80.64,16.48,-76.76,11.11,-74.74,6.61,-74.66,4.21,-74.56,1.86,-74.45,-0.49,-74.34,-2.76,-74.23,-5.03,-74.12,-7.2,-74.01,-9.36,-73.94,-11.39,-75.21,-11.09,-77.92,-10.14,-80.62,-9.19,-83.71,-7.99,-86.81,-6.79,-89.77,-5.54,-92.74,-4.29,-94.54,-3.39,-95.89,-2.79,-97.07,-1.99,-98.26,-1.2,-99.36,-0.49,-100.47,0.23,-101.54,0.72,-102.61,1.21,-103.74,1.21,-103.94,1.21,-107.09,1.21,-109.7,-0.35,-112.31,-1.9,-114.19,-4.21,-116.06,-6.52,-117.1,-9.16,-118.14,-11.81,-118.14,-13.99,-118.14,-14.89,-117.89,-15.9,-117.64,-16.92,-117.19,-17.94,-116.74,-18.95,-116.12,-19.89,-115.49,-20.84,-114.74,-21.59,-113.14,-21.59,-113.138,-21.585,22.66,77.01,19.13,74.09,15.05,71.63,10.96,69.17,6.76,67.39,2.56,65.61,-1.53,64.61,-5.62,63.61,-9.14,63.61,-14.16,63.61,-18.26,64.67,-22.36,65.73,-25.27,67.59,-28.17,69.44,-29.76,71.97,-31.34,74.49,-31.34,77.41,-31.34,81.91,-29.79,85.1,-28.23,88.29,-25.36,90.31,-22.5,92.34,-18.43,93.28,-14.37,94.21,-9.34,94.21,-3.34,94.21,1.59,92.82,6.53,91.43,10.48,89.06,14.44,86.7,17.46,83.58,20.48,80.46,22.66,77.01,22.66,77.013] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,2,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,1,2,3,3,3,3,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [36.73,-30.02,49.7,-37.14,62.96,-47.18,76.22,-57.22,87.75,-68.64,99.28,-80.06,108.08,-92.09,116.88,-104.11,120.93,-115.21,144.73,-110.81,144.5,-109.91,143.96,-109.26,143.42,-108.61,142.48,-108.14,141.54,-107.67,140.17,-107.36,138.8,-107.04,136.93,-106.81,144.58,-97.22,154.77,-88.04,164.97,-78.87,176.8,-70.62,188.63,-62.37,201.64,-55.29,214.65,-48.22,227.93,-42.82,227.53,-39.62,225.28,-39.24,223.31,-38.25,221.35,-37.25,219.78,-35.87,218.2,-34.48,217.06,-32.81,215.93,-31.14,215.33,-29.42,202.28,-36.09,190.11,-44.6,177.94,-53.11,167.33,-62.84,156.72,-72.57,148,-83.22,139.28,-93.86,133.13,-104.81,126.53,-93.94,116.23,-82.87,105.94,-71.8,93.35,-61.57,80.77,-51.33,66.61,-42.43,52.45,-33.54,38.13,-27.02,36.73,-30.02,36.729,-30.016,174.73,-8.42,181.13,-16.42,198.53,-4.02,198,-3.42,197.15,-2.8,196.3,-2.18,195.18,-1.62,194.05,-1.05,192.68,-0.59,191.3,-0.12,189.73,0.18,189.73,64.18,189.73,64.41,188.99,65.12,188.25,65.84,186.68,66.61,185.1,67.38,182.64,67.98,180.18,68.58,176.73,68.58,176.73,56.78,86.33,56.78,86.33,65.18,86.33,65.33,85.9,66.1,85.48,66.87,84.13,67.73,82.78,68.59,80.25,69.29,77.73,69.98,73.53,69.98,73.53,-14.62,87.73,-8.42,174.73,-8.42,174.727,-8.416,161.33,-54.41,178.73,-42.22,178.13,-41.09,177.34,-40.29,176.56,-39.5,175.45,-38.99,174.34,-38.48,172.85,-38.25,171.35,-38.02,169.33,-38.02,81.73,-38.02,80.53,-42.82,151.93,-42.82,161.33,-54.41,161.327,-54.415,86.33,51.98,176.73,51.98,176.73,-3.62,86.33,-3.62,86.33,51.98,86.329,51.983] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [225.94,-1.19,225.34,-0.21,224.92,0.69,224.5,1.59,224.24,2.42,223.98,3.24,223.86,3.99,223.74,4.74,223.74,5.41,223.74,6.91,224.31,8.1,224.89,9.29,225.94,10.11,226.99,10.94,228.47,11.38,229.94,11.81,231.74,11.81,235.56,11.81,241.62,9.06,247.67,6.31,255.26,3.01,262.86,-0.29,271.65,-3.04,280.44,-5.79,289.74,-5.79,300.91,-5.79,307.9,-2.19,314.89,1.4,318.81,7.49,322.73,13.58,324.14,21.64,325.54,29.69,325.54,38.61,325.54,51.14,320.59,62.96,315.64,74.78,305.74,84.86,295.84,94.95,280.99,102.79,266.14,110.64,246.34,115.21,243.94,111.01,261.12,105.16,273.61,96.88,286.1,88.59,294.21,78.94,302.33,69.28,306.24,58.79,310.14,48.29,310.14,38.01,310.14,30.59,309.46,24,308.78,17.42,306.51,12.49,304.25,7.56,299.93,4.69,295.61,1.81,288.34,1.81,283.24,1.81,277.93,3.26,272.61,4.71,267.29,7.24,261.96,9.77,256.73,13.21,251.49,16.64,246.54,20.61,244.59,22.11,243,23.61,241.41,25.11,239.84,26.31,238.27,27.51,236.53,28.26,234.79,29.01,232.54,29.01,229.61,29.01,226.53,27.53,223.45,26.04,220.92,23.56,218.38,21.09,216.76,17.88,215.14,14.66,215.14,11.21,215.14,8.96,215.85,6.86,216.57,4.76,217.69,2.94,218.82,1.12,220.2,-0.34,221.59,-1.81,222.94,-2.79,225.94,-1.19,225.94,-1.185,254.54,-27.58,257.69,-29.31,261.99,-31.6,266.28,-33.9,270.31,-36.03,274.35,-38.17,277.41,-39.79,280.46,-41.41,281.14,-41.78,281.29,-41.93,281.43,-42.08,281.58,-42.23,281.69,-42.36,281.8,-42.49,281.87,-42.6,281.94,-42.71,281.94,-42.78,281.94,-42.93,281.83,-43.05,281.73,-43.16,281.54,-43.23,281.35,-43.31,281.1,-43.35,280.84,-43.38,280.54,-43.38,272.06,-43.38,265.17,-43.8,258.28,-44.22,252.84,-45.96,247.4,-47.7,243.36,-51.23,239.32,-54.76,236.54,-60.98,239.74,-63.79,241.39,-61.23,243.74,-59.48,246.08,-57.72,249.37,-56.63,252.65,-55.55,256.98,-55.07,261.31,-54.59,266.94,-54.59,269.34,-54.59,271.75,-54.65,274.16,-54.71,276.46,-54.79,278.77,-54.86,280.92,-54.92,283.06,-54.99,284.94,-54.99,289.51,-54.91,293.56,-53.97,297.6,-53.03,300.61,-51.38,303.63,-49.73,305.39,-47.45,307.14,-45.16,307.14,-42.38,307.14,-40.51,305.79,-39.42,304.43,-38.33,302.31,-37.73,300.2,-37.13,297.6,-36.87,295.01,-36.61,292.54,-36.38,290.36,-36.23,286.7,-35.23,283.03,-34.23,278.34,-32.58,273.65,-30.93,268.18,-28.73,262.71,-26.53,256.94,-23.99,254.54,-27.58,254.54,-27.584] ) );
    shape.graphics.endFill();

    return shape;
  },
  "そのことも" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-385.9,-20,-375.48,-23,-364.84,-25.55,-354.21,-28.11,-343.88,-30.22,-333.55,-32.34,-323.78,-34.03,-314,-35.73,-305.3,-37,-301.55,-37.45,-299.02,-37.94,-296.49,-38.43,-294.65,-39.13,-292.82,-39.82,-291.41,-40.8,-290,-41.77,-288.5,-43.2,-281.98,-42,-277.25,-40.58,-272.53,-39.15,-269.45,-37.5,-266.38,-35.85,-264.88,-33.97,-263.38,-32.1,-263.3,-30,-263.3,-29.03,-263.74,-28.18,-264.19,-27.34,-265.03,-26.73,-265.87,-26.11,-267.1,-25.75,-268.33,-25.4,-269.91,-25.4,-271.18,-25.4,-274.52,-25.68,-277.86,-25.96,-281.63,-26.3,-285.4,-26.64,-288.78,-26.92,-292.15,-27.2,-293.51,-27.2,-308.58,-27.2,-320.81,-22.06,-333.04,-16.91,-341.68,-8.7,-350.32,-0.49,-355.01,9.76,-359.7,20,-359.7,30.2,-359.7,39.72,-354.44,44.88,-349.17,50.04,-341.73,52.42,-334.28,54.81,-326.21,55.2,-318.13,55.6,-312.5,55.6,-309.95,55.6,-307.66,56.48,-305.37,57.37,-303.63,58.77,-301.89,60.18,-300.83,61.93,-299.78,63.67,-299.7,65.4,-299.7,66.9,-300.57,68.02,-301.44,69.15,-302.75,69.9,-304.07,70.65,-305.61,71.02,-307.15,71.4,-308.5,71.4,-312.4,71.4,-316.12,71.12,-319.84,70.85,-323.38,70.4,-326.92,69.95,-330.3,69.37,-333.68,68.8,-336.9,68.2,-345.45,66.77,-352.02,63.74,-358.59,60.7,-363.05,56.22,-367.52,51.74,-369.81,45.9,-372.1,40.05,-372.1,33,-372.1,23.55,-368.26,14.56,-364.41,5.57,-358.28,-2.15,-352.15,-9.88,-344.51,-15.94,-336.88,-22,-329.3,-25.6,-329.7,-26,-336.3,-24.88,-345.06,-22.88,-353.81,-20.89,-362.98,-18.48,-372.15,-16.06,-380.86,-13.43,-389.58,-10.8,-396.1,-8.4,-400,-6.9,-403.09,-5.09,-406.17,-3.27,-408.93,-1.7,-411.68,-0.12,-414.35,0.94,-417.03,2,-420.1,2,-421.08,2,-422.57,1.55,-424.07,1.11,-425.48,0.23,-426.88,-0.66,-427.89,-1.97,-428.9,-3.27,-428.9,-5,-428.9,-6.35,-428.45,-7.73,-428,-9.11,-427.25,-10.35,-426.5,-11.59,-425.53,-12.59,-424.55,-13.6,-423.5,-14.2,-420.35,-14.42,-416.9,-15.19,-413.45,-15.95,-409.7,-17.3,-405.95,-18.65,-401.9,-20.61,-397.85,-22.57,-393.5,-25.2,-380.68,-32.85,-367.89,-42.65,-355.1,-52.44,-344.88,-61.42,-334.66,-70.41,-328.28,-77.09,-321.9,-83.77,-321.9,-85.2,-321.9,-85.35,-322.01,-85.49,-322.12,-85.64,-322.3,-85.75,-322.49,-85.86,-322.75,-85.93,-323,-86,-323.3,-86,-324.13,-86,-331.38,-83.91,-338.64,-81.82,-347.45,-79.17,-356.26,-76.53,-364.2,-74.1,-372.13,-71.67,-374.3,-71,-375.8,-70.47,-377.1,-69.53,-378.4,-68.59,-379.75,-67.67,-381.1,-66.76,-382.63,-66.08,-384.15,-65.4,-386.1,-65.4,-389.25,-65.4,-392.36,-67.23,-395.48,-69.06,-397.95,-71.95,-400.43,-74.84,-401.96,-78.39,-403.5,-81.95,-403.5,-85.4,-403.5,-86.6,-403.27,-87.78,-403.03,-88.97,-402.53,-90.07,-402.02,-91.18,-401.22,-92.18,-400.43,-93.17,-399.3,-94,-398.1,-93.6,-397.43,-90.37,-396.35,-88.1,-395.27,-85.82,-393.68,-84.37,-392.08,-82.93,-389.92,-82.26,-387.75,-81.6,-384.9,-81.6,-380.25,-81.6,-372.59,-82.67,-364.92,-83.74,-356.58,-85.35,-348.23,-86.96,-340.38,-88.85,-332.53,-90.75,-327.5,-92.4,-325.93,-93,-324.72,-93.95,-323.5,-94.9,-322.45,-95.8,-321.4,-96.7,-320.42,-97.35,-319.43,-98,-318.3,-98,-316.28,-98,-313.15,-96.6,-310.02,-95.2,-307.08,-93.1,-304.14,-91,-302.02,-88.55,-299.9,-86.1,-299.9,-84,-299.9,-81.75,-301.31,-80.5,-302.72,-79.26,-305.3,-77.92,-307.89,-76.59,-311.55,-74.63,-315.2,-72.67,-319.7,-69,-326.15,-63.82,-334.44,-57.5,-342.72,-51.17,-351.78,-44.62,-360.83,-38.08,-370.13,-31.79,-379.43,-25.5,-387.9,-20.4,-385.9,-20,-385.903,-20] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [-158.3,110.6,-137.6,107.75,-123.2,101.08,-108.8,94.41,-99.8,85.15,-90.8,75.89,-86.75,64.64,-82.7,53.4,-82.7,41.4,-82.7,27.75,-86.07,15.54,-89.43,3.34,-96.85,-5.85,-104.28,-15.04,-116.12,-20.42,-127.95,-25.8,-144.9,-25.8,-146.33,-25.8,-148.46,-25.65,-150.59,-25.51,-152.95,-25.25,-155.31,-24.99,-157.67,-24.62,-160.03,-24.25,-161.9,-23.8,-160.1,-22.52,-158.69,-20.45,-157.28,-18.37,-156.3,-15.75,-155.33,-13.12,-154.81,-10.07,-154.3,-7.02,-154.3,-3.8,-154.3,10,-158.86,27.1,-163.42,44.2,-171.13,59.2,-178.83,74.2,-188.98,84.4,-199.13,94.6,-210.3,94.6,-215.63,94.6,-220.07,91.59,-224.52,88.57,-227.73,83.08,-230.93,77.58,-232.72,69.88,-234.5,62.18,-234.5,52.8,-234.5,35.48,-227.77,20.12,-221.04,4.77,-209,-6.72,-196.96,-18.22,-180.33,-24.91,-163.7,-31.6,-143.9,-31.6,-125.45,-31.6,-111.3,-26.14,-97.15,-20.68,-87.55,-10.87,-77.95,-1.07,-73.03,12.53,-68.1,26.13,-68.1,42.4,-68.1,56.42,-72.98,68.8,-77.85,81.17,-88.5,90.82,-99.15,100.48,-116.03,106.89,-132.9,113.3,-156.9,115.4,-158.3,110.6,-158.303,110.6,-167.3,-22.6,-178.7,-19.82,-188.75,-13.19,-198.8,-6.55,-206.3,3.2,-213.8,12.95,-218.15,25.44,-222.5,37.93,-222.5,52.4,-222.5,58.25,-221.62,63.39,-220.75,68.53,-219.08,72.35,-217.41,76.18,-214.99,78.39,-212.58,80.6,-209.5,80.6,-200.95,80.6,-192.79,71.15,-184.63,61.7,-178.25,47.9,-171.88,34.1,-167.99,18.5,-164.1,2.9,-164.1,-9.4,-164.1,-11.42,-164.38,-13.49,-164.65,-15.55,-165.1,-17.35,-165.55,-19.15,-166.13,-20.54,-166.7,-21.92,-167.3,-22.6,-167.303,-22.599] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [-4.1,-25.8,-8.45,-21.3,-11.87,-16.45,-15.29,-11.6,-17.65,-6.65,-20.01,-1.7,-21.26,3.22,-22.5,8.15,-22.5,12.8,-22.5,19.63,-19.7,25.6,-16.89,31.58,-10.88,36.02,-4.86,40.47,4.58,43.03,14.03,45.6,27.3,45.6,36.67,45.6,44.49,45.16,52.3,44.72,58.3,43.87,64.3,43.03,68.36,41.8,72.42,40.57,74.3,39,79.17,39.67,82.88,40.62,86.58,41.57,89.07,42.85,91.57,44.12,92.83,45.75,94.1,47.37,94.1,49.4,94.1,52.32,89.43,54.1,84.77,55.87,76.27,56.82,67.78,57.78,55.88,58.09,43.97,58.4,29.5,58.4,10.52,58.4,-1.41,54.33,-13.34,50.26,-20.08,44.3,-26.81,38.34,-29.25,31.57,-31.7,24.8,-31.7,19.4,-31.7,14.07,-30.67,8.41,-29.63,2.75,-26.87,-3.25,-24.12,-9.25,-19.3,-15.59,-14.47,-21.93,-6.9,-28.6,-4.1,-25.8,-4.1,-25.8,48.7,-66.2,42.18,-65.22,34.99,-63.85,27.81,-62.48,20.95,-61.22,14.09,-59.97,8.03,-59.08,1.98,-58.2,-2.3,-58.2,-6.95,-58.2,-10.69,-59.87,-14.42,-61.54,-17.05,-64.05,-19.67,-66.56,-21.09,-69.51,-22.5,-72.45,-22.5,-75,-22.5,-75.67,-22.36,-76.4,-22.22,-77.13,-21.97,-77.82,-21.73,-78.52,-21.4,-79.13,-21.07,-79.75,-20.7,-80.2,-19.3,-80,-19,-78.5,-17.72,-76.75,-16.45,-75,-13.9,-73.5,-11.35,-72,-7.37,-71,-3.4,-70,2.3,-70,8.23,-70,17.03,-71.02,25.84,-72.05,34.35,-73.55,42.86,-75.05,49.49,-76.75,56.13,-78.45,57.7,-79.8,64,-78.9,67.94,-77.45,71.89,-76.01,74.1,-74.22,76.31,-72.44,77.11,-70.43,77.9,-68.42,77.9,-66.4,77.9,-65.2,76.94,-64.26,75.99,-63.32,74.45,-62.65,72.91,-61.97,70.98,-61.56,69.05,-61.15,67.1,-61,62.22,-60.77,55.37,-58.61,48.51,-56.44,41.05,-53.27,33.59,-50.11,26.21,-46.4,18.83,-42.7,12.9,-39.4,10.3,-42.4,13.75,-45.1,18.73,-48.21,23.71,-51.32,28.97,-54.4,34.24,-57.47,39.18,-60.29,44.12,-63.1,47.5,-65.2,48.7,-66.2,48.7,-66.199] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [219.1,-73.6,219.63,-74.65,220.63,-75.56,221.64,-76.47,222.95,-77.15,224.26,-77.82,225.8,-78.21,227.33,-78.6,228.9,-78.6,232.13,-78.6,235.62,-76.9,239.12,-75.2,242.03,-72.65,244.93,-70.1,246.82,-67.12,248.7,-64.15,248.7,-61.6,248.7,-59.65,247.76,-58.18,246.81,-56.71,245.03,-55.55,243.25,-54.39,240.69,-53.44,238.13,-52.5,234.9,-51.6,218.25,-46.8,201.11,-39.8,183.96,-32.81,170.05,-24.27,156.14,-15.74,147.32,-6.01,138.5,3.72,138.5,14,138.5,22.33,142.53,27.12,146.55,31.91,153.45,34.33,160.35,36.74,169.55,37.37,178.75,38,189.1,38,198.33,38,206.08,37.45,213.84,36.89,219.8,35.97,225.76,35.06,229.77,33.87,233.78,32.67,235.5,31.4,239.48,31.77,243.1,32.18,246.72,32.58,249.48,33.42,252.23,34.27,253.87,35.76,255.5,37.25,255.5,39.8,255.5,41.3,254.13,42.41,252.76,43.52,250.38,44.35,247.99,45.17,244.79,45.76,241.58,46.35,237.9,46.8,234.38,47.25,229.47,47.77,224.56,48.3,218.45,48.75,212.34,49.2,205.11,49.5,197.88,49.8,189.7,49.8,174.48,49.8,163.01,47.93,151.55,46.07,143.88,41.92,136.21,37.78,132.36,31.15,128.5,24.52,128.5,15,128.5,8.48,131.87,1.79,135.24,-4.89,141.05,-11.3,146.87,-17.71,154.66,-23.64,162.45,-29.58,171.3,-34.6,166.65,-37.37,164.13,-41.24,161.62,-45.11,160.45,-50.7,159.29,-56.29,159.1,-63.91,158.9,-71.52,158.9,-81.8,158.9,-82.55,158.97,-84.55,159.03,-86.56,159.1,-88.82,159.18,-91.09,159.24,-93.13,159.3,-95.17,159.3,-96,159.3,-97.57,159.14,-99.52,158.98,-101.47,158,-103.17,157.03,-104.88,154.92,-106.04,152.8,-107.2,148.9,-107.2,148.45,-107.2,147.97,-107.16,147.48,-107.13,146.95,-107.07,146.43,-107.02,145.87,-106.95,145.3,-106.87,144.7,-106.8,144.3,-108,144.98,-109.42,146.19,-110.76,147.4,-112.09,148.9,-113.12,150.4,-114.16,152.07,-114.78,153.73,-115.4,155.3,-115.4,159.13,-115.4,162.92,-114.37,166.71,-113.35,169.73,-111.55,172.75,-109.75,174.63,-107.3,176.5,-104.85,176.5,-102,176.5,-101.03,175.96,-99.79,175.42,-98.56,174.73,-97.08,174.03,-95.59,173.38,-93.87,172.73,-92.15,172.5,-90.2,172.13,-87.35,171.86,-84.33,171.6,-81.32,171.43,-78.23,171.26,-75.13,171.18,-72,171.1,-68.88,171.1,-65.8,171.1,-64.3,171.11,-62.84,171.11,-61.38,171.13,-59.95,171.15,-58.53,171.19,-57.14,171.23,-55.75,171.3,-54.4,171.45,-51.78,172.38,-49.37,173.31,-46.96,174.68,-45.03,176.05,-43.09,177.69,-41.77,179.33,-40.45,180.9,-40,184.73,-42.03,189.66,-44.49,194.58,-46.96,199.93,-49.55,205.27,-52.14,210.69,-54.68,216.1,-57.23,220.9,-59.4,223.15,-60.38,224.87,-61.35,226.59,-62.33,227.75,-63.33,228.92,-64.32,229.51,-65.33,230.1,-66.35,230.1,-67.4,230.1,-68.45,229.27,-69.54,228.43,-70.63,227.03,-71.45,225.62,-72.28,223.77,-72.69,221.93,-73.1,219.9,-72.8,219.1,-73.6,219.102,-73.599] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [401.9,-8.2,408.05,-0.92,413.04,5.14,418.03,11.21,421.55,16.65,425.08,22.09,426.99,27.18,428.9,32.27,428.9,37.6,428.9,43.82,426.09,49.7,423.27,55.57,416.43,60.12,409.58,64.68,398.11,67.44,386.63,70.2,369.3,70.2,355.65,70.2,346.38,67.37,337.12,64.55,331.45,59,325.79,53.45,323.35,45.22,320.9,37,320.9,26.2,320.9,23.8,321.13,20.97,321.36,18.14,321.68,15.27,322,12.41,322.34,9.69,322.68,6.97,322.9,4.8,315.78,4.57,310.11,3.14,304.44,1.7,300.5,-0.85,296.57,-3.4,294.5,-7.01,292.43,-10.63,292.5,-15.2,292.5,-20.3,295.63,-25.71,298.75,-31.11,303.83,-36.1,308.91,-41.09,315.37,-45.29,321.83,-49.5,328.5,-52.2,325.65,-52.2,320.27,-52.54,314.88,-52.88,309.55,-54.93,304.23,-56.97,300.27,-61.4,296.3,-65.83,296.3,-74,299.7,-75.2,300.15,-71.45,302.36,-68.79,304.57,-66.14,308.2,-64.45,311.84,-62.76,316.75,-61.98,321.65,-61.2,327.5,-61.2,327.95,-61.2,329.22,-61.17,330.49,-61.14,331.93,-61.13,333.37,-61.11,334.68,-61.12,335.98,-61.13,336.5,-61.2,336.95,-64.13,337.42,-67.13,337.88,-70.13,338.25,-73.05,338.63,-75.98,338.87,-78.75,339.1,-81.53,339.1,-84,339.1,-86.63,338.19,-88.42,337.29,-90.22,335.73,-91.33,334.17,-92.43,332.1,-92.92,330.03,-93.4,327.7,-93.4,327.25,-93.4,326.77,-93.4,326.29,-93.39,325.8,-93.38,325.32,-93.36,324.84,-93.32,324.35,-93.28,323.9,-93.2,323.5,-93.8,324.18,-95.6,325.09,-96.92,326,-98.24,327.36,-99.1,328.71,-99.96,330.59,-100.38,332.48,-100.8,335.11,-100.8,339.16,-100.8,342.94,-99.69,346.73,-98.58,349.65,-96.88,352.58,-95.17,354.34,-93.12,356.11,-91.08,356.11,-89.2,356.11,-88,355.62,-86.84,355.14,-85.68,354.48,-84.4,353.82,-83.13,353.15,-81.66,352.48,-80.2,352.11,-78.4,351.81,-76.6,351.44,-74.67,351.07,-72.74,350.66,-70.75,350.24,-68.76,349.8,-66.76,349.36,-64.75,348.91,-62.8,352.28,-63.18,355.21,-63.74,358.14,-64.31,360.5,-65.08,362.87,-65.84,364.6,-66.82,366.33,-67.8,367.3,-69,371.88,-69.23,375.08,-68.54,378.27,-67.86,380.28,-66.68,382.29,-65.49,383.19,-64.02,384.1,-62.55,384.1,-61.2,384.1,-60.6,383.72,-59.94,383.34,-59.28,382.53,-58.63,381.72,-57.97,380.48,-57.35,379.23,-56.73,377.5,-56.2,376.08,-55.83,372.8,-55.3,369.52,-54.77,365.23,-54.23,360.94,-53.68,356.04,-53.19,351.15,-52.7,346.5,-52.4,344.93,-46.85,343.28,-40.98,341.64,-35.1,340.08,-29.1,338.52,-23.1,337.14,-17.08,335.75,-11.05,334.7,-5.2,339.28,-5.2,344.43,-5.36,349.57,-5.51,354.13,-5.85,358.69,-6.19,362.07,-6.72,365.45,-7.25,366.5,-8,370.03,-7.33,373.19,-6.3,376.35,-5.28,378.73,-4,381.11,-2.73,382.51,-1.25,383.9,0.22,383.9,1.8,383.9,3.07,383.23,3.95,382.55,4.83,381.48,5.37,380.41,5.92,379.09,6.16,377.78,6.4,376.5,6.4,376.13,6.4,375.75,6.39,375.38,6.39,375,6.37,374.63,6.35,374.25,6.31,373.88,6.27,373.5,6.2,369.45,5.52,365.48,5.19,361.5,4.86,356.85,4.75,352.2,4.64,346.5,4.68,340.81,4.72,333.31,4.8,332.93,6.82,332.57,9.35,332.21,11.89,331.93,14.55,331.65,17.21,331.48,19.82,331.31,22.42,331.31,24.6,331.31,33.22,332.92,39.55,334.54,45.89,338.68,50.05,342.82,54.21,349.95,56.27,357.08,58.32,368.11,58.4,381.08,58.4,390.14,56.53,399.2,54.66,404.88,51.4,410.56,48.13,413.13,43.72,415.7,39.3,415.7,34.2,415.7,29.1,414.52,24.24,413.33,19.39,411.03,14.55,408.72,9.71,405.32,4.78,401.93,-0.15,397.5,-5.4,401.9,-8.2,401.902,-8.2,335.1,-51.2,328.35,-48.2,322.23,-44.36,316.11,-40.52,311.48,-36.22,306.85,-31.93,304.14,-27.38,301.43,-22.82,301.5,-18.4,301.5,-14.35,303.22,-11.81,304.93,-9.27,308.03,-7.85,311.12,-6.42,315.42,-5.91,319.73,-5.4,324.9,-5.4,325.95,-10.57,327.26,-16.55,328.56,-22.52,329.93,-28.6,331.3,-34.67,332.64,-40.5,333.98,-46.32,335.1,-51.2,335.103,-51.199] ) );
    shape.graphics.endFill();

    return shape;
  },
  "空間が" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,1,2,2,3,3,3,3,2,2,2,2,2,2,2,2,2,3,3,3,3,2,2,2,2,1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [169.4,20.6,185.2,35.8,184.67,36.4,183.95,36.79,183.23,37.18,182.27,37.42,181.32,37.67,180.11,37.8,178.9,37.92,177.4,38,175.37,40.62,172.65,43.69,169.93,46.76,166.9,49.8,163.86,52.84,160.69,55.6,157.52,58.37,154.6,60.4,152.2,59,153.25,56.82,154.48,53.83,155.71,50.84,156.95,47.52,158.19,44.21,159.34,40.8,160.5,37.4,161.4,34.4,28.2,34.4,28.12,40.55,26.39,45.41,24.66,50.27,21.82,53.65,18.99,57.02,15.35,58.81,11.7,60.6,7.8,60.6,5.1,60.6,3.54,59.77,1.99,58.94,1.2,57.87,0.41,56.81,0.21,55.79,0,54.77,0,54.4,0,53.27,0.49,52.17,0.98,51.06,1.82,50.05,2.67,49.04,3.8,48.16,4.92,47.27,6.2,46.6,9.43,45.17,12.44,42.54,15.46,39.91,17.75,36.35,20.04,32.79,21.33,28.43,22.62,24.08,22.4,19.2,26,19,26.38,20.42,26.71,21.81,27.04,23.19,27.3,24.52,27.56,25.86,27.74,27.13,27.93,28.4,28,29.6,85.6,29.6,85.6,0,108,2,107.92,3.13,107.43,3.97,106.94,4.81,105.87,5.45,104.81,6.09,103.08,6.56,101.35,7.03,98.8,7.4,98.8,29.6,160.6,29.6,169.4,20.6,169.397,20.6,156.6,173,166.2,160.2,184.6,173.6,184,174.65,183.24,175.43,182.48,176.22,181.37,176.75,180.27,177.27,178.72,177.53,177.17,177.8,175,177.8,1.4,177.8,0.2,173,85.6,173,85.6,120.6,22.8,120.6,21.6,115.8,139.4,115.8,148.8,104.2,166.6,116.4,166,117.52,165.24,118.32,164.48,119.12,163.37,119.62,162.27,120.13,160.72,120.36,159.17,120.6,157,120.6,98.8,120.6,98.8,173,156.6,173,156.598,172.997,7,102.6,20.73,97.65,30.19,90.68,39.66,83.71,45.82,75.32,51.99,66.94,55.35,57.46,58.7,47.97,60.2,38,81.6,41.8,81.37,42.85,80.83,43.54,80.29,44.24,79.35,44.65,78.41,45.06,77.04,45.23,75.67,45.4,73.8,45.4,71.47,55,66.99,64.04,62.5,73.08,54.87,80.97,47.24,88.87,35.97,95.32,24.7,101.77,8.8,106.2,7,102.6,7,102.598,108.4,37.4,127.8,39.4,127.65,40.22,127.28,40.84,126.9,41.45,126.17,41.9,125.44,42.35,124.28,42.66,123.12,42.97,121.4,43.2,121.4,78.6,121.4,80.25,121.49,81.17,121.59,82.1,122.15,82.55,122.71,83,123.93,83.1,125.15,83.2,127.4,83.2,157.4,83.2,158.45,83.2,159.32,83.14,160.2,83.07,160.95,82.85,161.7,82.62,162.35,82.19,163,81.75,163.6,81,164.12,80.32,164.79,78.84,165.45,77.36,166.22,75.3,166.99,73.24,167.84,70.7,168.7,68.17,169.6,65.4,171.6,65.4,171.8,82,173.9,82.67,175.16,83.14,176.42,83.6,177.1,84.05,177.77,84.5,177.98,85.04,178.2,85.57,178.2,86.4,178.2,88.35,177.11,89.78,176.03,91.21,173.57,92.15,171.12,93.09,167.14,93.54,163.17,94,157.4,94,126.4,94,120.62,94,117.09,93.36,113.55,92.72,111.62,91,109.69,89.27,109.04,86.24,108.4,83.2,108.4,78.4,108.4,37.4,108.398,37.399] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [264.04,142,221.84,142,221.84,250.4,221.84,250.7,221.5,251.58,221.16,252.46,219.87,253.4,218.57,254.33,216.02,255.06,213.47,255.8,209.04,255.8,209.04,77,223.04,83.6,262.24,83.6,267.84,76.2,284.04,87.8,283.59,88.33,282.82,88.87,282.06,89.41,281.06,89.9,280.07,90.39,278.89,90.78,277.71,91.18,276.44,91.4,276.44,148.6,276.44,148.75,275.71,149.39,274.98,150.04,273.46,150.75,271.95,151.46,269.61,152.03,267.26,152.6,264.04,152.6,264.04,142,264.04,141.999,264.04,88.4,221.84,88.4,221.84,110,264.04,110,264.04,88.4,264.04,88.399,221.84,137.2,264.04,137.2,264.04,114.8,221.84,114.8,221.84,137.2,221.841,137.199,334.64,170.2,334.19,170.72,333.42,171.27,332.65,171.81,331.64,172.3,330.63,172.79,329.41,173.18,328.19,173.57,326.84,173.8,326.84,235.4,326.84,235.55,326.08,236.25,325.33,236.96,323.79,237.75,322.25,238.53,319.92,239.17,317.59,239.8,314.44,239.8,314.44,230.4,265.24,230.4,265.24,237.4,265.24,237.4,264.79,238.09,264.35,238.77,263.01,239.6,261.68,240.42,259.25,241.11,256.81,241.8,252.84,241.8,252.84,160,266.24,166,312.64,166,318.24,158.6,334.64,170.2,334.639,170.198,314.44,170.8,265.24,170.8,265.24,195,314.44,195,314.44,170.8,314.439,170.798,265.24,225.6,314.44,225.6,314.44,199.8,265.24,199.8,265.24,225.6,265.24,225.598,362.64,75.2,380.04,88,379.51,88.6,378.64,89.22,377.76,89.83,376.61,90.37,375.47,90.92,374.1,91.35,372.74,91.77,371.24,92,371.24,236.6,371.24,240.5,370.48,243.73,369.72,246.97,367.41,249.42,365.11,251.88,360.86,253.5,356.61,255.12,349.64,255.8,349.64,251.6,348.13,249.12,346.62,246.64,343.71,245.25,340.81,243.86,336.56,243.25,332.31,242.65,326.84,242.2,326.84,239.4,353.84,239.4,355.19,239.4,356.04,239.24,356.9,239.08,357.39,238.72,357.87,238.37,358.06,237.79,358.24,237.22,358.24,236.4,358.24,142,314.44,142,314.44,147.6,314.44,147.67,313.99,148.37,313.54,149.07,312.19,149.87,310.84,150.68,308.36,151.34,305.89,152,301.84,152,301.84,77.6,315.24,83.6,356.24,83.6,362.64,75.2,362.639,75.2,358.24,88.4,314.44,88.4,314.44,110,358.24,110,358.24,88.4,358.238,88.399,314.44,137.2,358.24,137.2,358.24,114.8,314.44,114.8,314.44,137.2,314.439,137.199] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [430.24,46.75,430.99,45.1,432.21,43.74,433.44,42.38,434.94,41.4,436.44,40.43,438.11,39.89,439.79,39.35,441.44,39.35,445.64,39.35,449.6,40.51,453.56,41.67,456.64,43.53,459.71,45.38,461.57,47.7,463.44,50.03,463.44,52.35,463.44,53.48,462.81,54.31,462.18,55.14,461.26,56.33,460.34,57.51,459.3,59.35,458.26,61.2,457.44,64.35,456.69,67.43,455.86,70.57,455.04,73.71,454.16,76.88,453.28,80.04,452.35,83.22,451.41,86.4,450.44,89.55,452.31,89.33,454.8,88.95,457.28,88.58,460.11,88.23,462.94,87.87,465.99,87.61,469.04,87.35,472.04,87.35,482.84,87.35,489.34,90.41,495.85,93.48,499.34,99.25,502.82,105.03,503.93,113.34,505.04,121.65,505.04,132.15,505.04,142.2,503.1,154.89,501.15,167.59,497.01,178.8,492.87,190.01,486.39,197.68,479.91,205.35,470.84,205.35,469.26,205.35,468.11,204.71,466.95,204.06,466.09,202.9,465.22,201.74,464.59,200.12,463.96,198.5,463.44,196.55,462.99,194.97,460.61,192.42,458.22,189.87,454.74,186.8,451.25,183.72,447.07,180.35,442.89,176.97,438.84,173.75,441.44,170.35,446.76,173.65,451.6,176.56,456.44,179.47,460.51,181.65,464.58,183.82,467.73,185.09,470.89,186.35,472.84,186.35,473.89,186.35,474.83,186.2,475.77,186.06,476.76,185.47,477.76,184.89,478.88,183.73,480.01,182.57,481.44,180.55,483.31,177.92,485.39,173.01,487.47,168.09,489.21,161.32,490.96,154.56,492.1,146.15,493.24,137.75,493.24,128.15,493.24,119.97,492.61,113.64,491.99,107.31,489.74,102.97,487.49,98.64,483.11,96.4,478.74,94.15,471.24,94.15,469.21,94.15,466.09,94.48,462.98,94.82,459.64,95.32,456.3,95.83,453.18,96.43,450.06,97.02,448.04,97.55,444.36,109.62,439.81,122.58,435.26,135.53,430.36,147.92,425.47,160.32,420.5,171.43,415.54,182.55,411.04,190.95,409.54,193.87,408.14,196.02,406.75,198.17,405.44,199.57,404.13,200.98,402.88,201.66,401.64,202.35,400.44,202.35,398.94,202.35,397.72,201.69,396.5,201.04,395.64,199.67,394.78,198.3,394.31,196.19,393.84,194.07,393.84,191.15,393.84,189.57,394.7,187.78,395.56,185.99,396.84,184.15,398.11,182.31,399.58,180.52,401.04,178.72,402.24,177.15,405.76,172.95,410.39,164.19,415.02,155.44,419.76,144.6,424.51,133.76,428.87,122.08,433.24,110.4,436.24,100.35,434.29,100.87,431.74,101.6,429.19,102.33,426.49,103.17,423.79,104.02,421.16,104.93,418.54,105.85,416.44,106.75,415.61,107.12,414.66,107.89,413.7,108.66,412.69,109.42,411.67,110.19,410.64,110.77,409.61,111.35,408.64,111.35,405.19,111.35,402.38,109.55,399.57,107.75,397.59,105.05,395.6,102.35,394.52,99.2,393.44,96.05,393.44,93.35,393.44,91.77,393.95,90.35,394.46,88.92,395.29,87.77,396.11,86.63,397.15,85.84,398.19,85.05,399.24,84.75,400.04,85.15,399.74,86.8,400.25,88.72,400.76,90.65,402.01,92.3,403.27,93.95,405.24,95.05,407.21,96.15,409.84,96.15,412.69,96.15,416.05,95.77,419.41,95.39,423.06,94.77,426.72,94.16,430.57,93.37,434.41,92.57,438.24,91.75,439.06,88.82,440.26,83.82,441.46,78.82,442.56,73.48,443.67,68.13,444.45,63.32,445.24,58.5,445.24,55.95,445.24,53.63,444.71,51.93,444.18,50.23,442.96,49.13,441.74,48.02,439.75,47.49,437.76,46.95,434.84,46.95,434.39,46.95,433.9,46.95,433.42,46.96,432.91,46.98,432.41,46.99,431.88,47.04,431.36,47.08,430.84,47.15,430.24,46.75,430.237,46.751,513.84,44.55,522.61,47.63,528.49,51.13,534.37,54.64,537.91,58.05,541.45,61.46,542.95,64.52,544.44,67.58,544.44,69.75,544.44,71.03,543.99,72.12,543.55,73.22,542.84,74.03,542.12,74.83,541.23,75.29,540.34,75.75,539.44,75.75,538.09,75.75,537.11,75.42,536.14,75.08,535.39,74.43,534.64,73.77,534.04,72.8,533.44,71.83,532.84,70.55,531.86,68.15,529.86,65.13,527.85,62.11,525.06,59,522.27,55.89,518.8,52.95,515.34,50,511.44,47.75,513.84,44.55,513.836,44.551,516.84,73.95,530.04,77.92,539.15,84.87,548.27,91.82,553.94,100.12,559.6,108.43,562.12,117.29,564.63,126.15,564.63,133.95,564.63,137.55,564,140.41,563.36,143.26,562.24,145.25,561.11,147.24,559.57,148.29,558.04,149.35,556.24,149.35,554.89,149.35,553.62,148.96,552.36,148.56,551.39,147.55,550.41,146.54,549.82,144.79,549.24,143.05,549.24,140.35,549.24,131.27,547.71,122.19,546.18,113.11,542.26,104.87,538.34,96.64,531.6,89.7,524.86,82.75,514.44,77.95,516.84,73.95,516.836,73.95,536.24,31.95,545.09,34.95,551,38.42,556.92,41.88,560.48,45.28,564.05,48.67,565.54,51.72,567.03,54.78,567.03,56.95,567.03,58.23,566.59,59.32,566.15,60.42,565.46,61.23,564.77,62.03,563.91,62.49,563.06,62.95,562.24,62.95,560.88,62.95,559.88,62.61,558.88,62.28,558.11,61.6,557.34,60.93,556.75,59.91,556.16,58.9,555.63,57.55,554.58,55.08,552.54,52.08,550.5,49.08,547.68,46.03,544.87,42.97,541.4,40.09,537.93,37.2,534.03,34.95,536.24,31.95,536.235,31.951] ) );
    shape.graphics.endFill();

    return shape;
  },
  "貴方さえ" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,2,2,2,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [167.8,94,185.4,106.2,184.8,107.25,184.04,108.04,183.29,108.82,182.2,109.35,181.11,109.87,179.6,110.14,178.1,110.4,176,110.4,1.4,110.4,0,105.6,85.6,105.6,85.6,90,44.4,90,44.4,95.2,44.4,95.27,43.9,95.94,43.39,96.61,42.03,97.37,40.66,98.14,38.24,98.77,35.83,99.4,32,99.4,32,53.2,45.6,59.2,85.6,59.2,85.6,42.2,107.8,44.2,107.72,45.4,107.2,46.28,106.68,47.16,105.58,47.8,104.47,48.44,102.71,48.87,100.95,49.3,98.4,49.6,98.4,59.2,139.2,59.2,145,51.8,161.4,63.4,160.95,63.93,160.18,64.5,159.41,65.08,158.4,65.6,157.39,66.13,156.17,66.55,154.95,66.98,153.6,67.2,153.6,93,153.6,93.15,152.9,93.86,152.19,94.56,150.67,95.35,149.16,96.14,146.76,96.77,144.37,97.4,141,97.4,141,90,98.4,90,98.4,105.6,158.6,105.6,167.8,94,167.798,93.999,79.8,207.4,79.42,207.85,78.94,208.18,78.46,208.52,77.87,208.75,77.29,208.97,76.62,209.08,75.95,209.2,75.2,209.2,74.6,209.2,73.99,209.13,73.39,209.06,72.75,208.95,72.11,208.83,71.43,208.69,70.75,208.55,70,208.4,64.07,211.47,56.34,214.47,48.6,217.47,39.75,220.07,30.9,222.68,21.29,224.74,11.68,226.8,2,228,0.6,224.8,9.6,222.4,18.67,218.94,27.74,215.47,35.95,211.5,44.16,207.52,51.06,203.31,57.95,199.1,62.6,195.2,79.8,207.4,79.799,207.397,155.4,197,155.32,197.45,154.19,198.19,153.05,198.93,151.4,199.65,149.75,200.36,147.86,200.88,145.97,201.4,144.4,201.4,142.4,201.4,142.4,194.4,42.6,194.4,42.6,198.4,42.6,198.47,42.14,199.2,41.69,199.93,40.3,200.77,38.91,201.62,36.36,202.31,33.8,203,29.6,203,29.6,118.8,43.8,125,140.6,125,146.6,117.4,163,129.2,162.55,129.72,161.78,130.27,161.02,130.82,160.02,131.32,159.03,131.83,157.85,132.26,156.67,132.7,155.4,133,155.4,197,155.398,196.998,142.4,129.8,42.6,129.8,42.6,146,142.4,146,142.4,129.8,142.398,129.799,142.4,167.4,142.4,150.8,42.6,150.8,42.6,167.4,142.4,167.4,142.398,167.398,42.6,189.6,142.4,189.6,142.4,172.2,42.6,172.2,42.6,189.6,42.6,189.598,44.4,85.2,85.6,85.2,85.6,64,44.4,64,44.4,85.2,44.399,85.199,141,64,98.4,64,98.4,85.2,141,85.2,141,64,140.998,64,108,199.8,129.22,201.22,143.13,203.95,157.03,206.68,165.22,209.92,173.42,213.17,176.71,216.53,180,219.9,180,222.6,180,223.8,179.4,224.82,178.8,225.85,177.77,226.6,176.74,227.35,175.36,227.77,173.97,228.2,172.4,228.2,171.57,228.2,170.71,228.08,169.85,227.96,168.97,227.7,168.09,227.44,167.19,227.02,166.3,226.6,165.4,226,161.05,223,155.15,219.9,149.26,216.81,141.95,213.85,134.64,210.89,125.97,208.17,117.3,205.45,107.4,203.2,108,199.8,107.999,199.798] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,2] ), $.toNumberVector( [358.78,119,377.58,132.2,376.98,133.32,376.19,134.15,375.4,134.98,374.28,135.52,373.15,136.07,371.61,136.33,370.08,136.6,367.98,136.6,278.18,136.6,277.88,137.27,277.36,137.8,276.84,138.33,275.98,138.72,275.12,139.12,273.85,139.38,272.58,139.65,270.78,139.8,270.55,144,270.3,148.55,270.05,153.1,269.65,157.92,269.26,162.74,268.67,167.78,268.08,172.82,267.18,178,330.98,178,337.98,169.6,353.98,182.4,353.45,183,352.73,183.49,352,183.97,351.03,184.35,350.05,184.72,348.8,184.99,347.55,185.25,345.98,185.4,345.15,201.37,343.87,215.8,342.6,230.23,340.7,241.72,338.81,253.22,336.22,261.08,333.63,268.95,330.18,271.8,327.93,273.52,325.56,274.77,323.19,276.02,320.38,276.85,317.56,277.67,314.15,278.1,310.73,278.52,306.38,278.6,306.38,277.25,306.12,276.02,305.86,274.8,305.35,273.75,304.85,272.7,304.1,271.85,303.35,271,302.38,270.4,301.18,269.65,298.53,268.91,295.89,268.18,292.48,267.52,289.07,266.87,285.22,266.32,281.38,265.77,277.78,265.4,277.98,261.8,281.95,262.02,287.01,262.27,292.08,262.52,297.03,262.72,301.98,262.93,306.21,263.06,310.45,263.2,312.78,263.2,314.35,263.2,315.52,263.14,316.69,263.08,317.63,262.87,318.56,262.67,319.36,262.27,320.15,261.87,320.98,261.2,323.38,259.02,325.24,251.98,327.11,244.95,328.55,234.45,330,223.95,331.07,210.69,332.15,197.42,332.98,182.8,266.18,182.8,263.78,194.8,259.11,207.27,254.44,219.74,246.23,232,238.02,244.26,225.62,255.98,213.23,267.7,195.38,278.2,192.38,275.2,214.95,258.85,227.66,240.8,240.37,222.75,246.65,204.62,252.93,186.49,254.51,169.08,256.08,151.67,256.38,136.6,193.58,136.6,192.18,131.8,277.78,131.8,277.78,93,300.18,95,300.1,96.2,299.61,97.05,299.12,97.91,298.03,98.53,296.94,99.14,295.17,99.58,293.4,100.03,290.78,100.4,290.78,131.8,348.98,131.8,358.78,119,358.777,119] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [511.18,19.2,514.26,19.35,517.8,19.37,521.34,19.38,524.36,19.77,527.38,20.17,529.38,21.2,531.38,22.22,531.38,24.4,531.38,28.52,524.39,32.18,517.4,35.83,507.86,38.77,498.31,41.72,488.44,43.83,478.56,45.95,472.78,47,474.58,53.6,477.55,60.32,480.51,67.05,484.48,73.05,488.46,79.05,493.37,83.9,498.28,88.75,503.98,91.6,506.16,92.65,507.52,94.16,508.89,95.67,509.66,97.4,510.43,99.12,510.7,100.94,510.98,102.75,510.98,104.4,510.98,105.75,510.42,106.79,509.86,107.84,508.91,108.55,507.95,109.26,506.68,109.63,505.41,110,503.98,110,502.48,110,500.96,108.95,499.44,107.9,497.53,106.4,495.62,104.9,493.13,103.25,490.63,101.6,487.18,100.4,483.81,99.2,480.35,98.36,476.88,97.52,473.28,97,469.68,96.47,465.92,96.24,462.16,96,458.18,96,447.83,96,439.54,98.62,431.25,101.24,425.43,105.55,419.62,109.86,416.5,115.41,413.38,120.95,413.38,126.8,413.38,134.97,417.98,140.53,422.57,146.08,430.18,149.47,437.8,152.87,447.64,154.33,457.48,155.8,467.98,155.8,471.96,155.8,477.09,155.57,482.23,155.34,487.01,154.85,491.79,154.36,495.46,153.61,499.13,152.85,500.18,151.8,503.18,152.32,505.74,153.21,508.31,154.09,510.18,155.27,512.06,156.45,513.12,157.9,514.18,159.35,514.18,161,514.18,163.1,511.53,164.42,508.87,165.75,503.43,166.5,497.99,167.25,489.71,167.52,481.43,167.8,470.18,167.8,456.83,167.8,444.6,165.73,432.37,163.66,423.03,159.02,413.7,154.39,408.14,146.96,402.58,139.53,402.58,128.8,402.58,122.2,405.79,115.28,409,108.36,416.08,102.7,423.17,97.04,434.48,93.42,445.78,89.8,461.98,89.8,464.46,89.8,467.36,89.86,470.27,89.92,473.38,90.13,476.49,90.33,479.7,90.73,482.91,91.13,485.98,91.8,485.98,91,483.13,88.45,480.14,84.52,477.14,80.59,474.18,75.3,471.22,70.01,468.38,63.38,465.53,56.75,462.98,48.8,457.58,49.7,451.53,50.5,445.48,51.3,439.78,51.9,434.08,52.5,429.23,52.85,424.38,53.2,421.38,53.2,416.81,53.2,413.18,52.98,409.55,52.75,406.76,52.3,403.96,51.85,401.95,51.18,399.93,50.5,398.58,49.6,396.63,48.4,394.66,46.75,392.68,45.11,390.88,43.18,389.08,41.24,387.56,39.11,386.03,36.98,384.98,34.8,388.18,32.6,391.33,36.13,394.56,38.35,397.78,40.57,401.23,41.83,404.68,43.08,408.43,43.54,412.18,44,416.38,44,420.73,44,426.46,43.62,432.18,43.24,438.18,42.63,444.18,42.01,449.91,41.22,455.63,40.43,459.98,39.6,459.31,36.9,458.52,33.81,457.73,30.72,456.96,27.63,456.19,24.53,455.51,21.63,454.83,18.73,454.38,16.4,453.86,13.7,452.67,12.24,451.47,10.78,450.11,10.1,448.74,9.43,447.43,9.31,446.13,9.2,445.38,9.2,444.41,9.2,443.43,9.29,442.46,9.37,441.48,9.58,440.51,9.78,439.53,10.13,438.56,10.48,437.58,11,436.58,9.2,437.11,7.1,438.37,5.4,439.63,3.7,441.43,2.5,443.23,1.3,445.47,0.65,447.71,0,450.18,0,452.88,0,456.16,0.58,459.43,1.15,462.28,2.2,465.13,3.25,467.06,4.73,468.98,6.2,468.98,8,468.98,9.28,468.7,10.03,468.42,10.79,468.08,11.5,467.74,12.21,467.46,13.12,467.18,14.03,467.18,15.6,467.18,16.2,467.18,17.63,467.42,20.16,467.67,22.69,468.08,25.67,468.49,28.66,469.04,31.75,469.58,34.85,470.18,37.4,471.08,37.25,477.01,35.9,482.95,34.54,489.91,32.27,496.86,30.01,502.83,26.97,508.8,23.92,509.78,20.4,511.18,19.2,511.183,19.2] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [645.44,186.8,645.44,191.6,646.16,194.85,646.89,198.11,648.84,200.1,650.79,202.09,654.21,202.94,657.64,203.8,663.04,203.8,667.69,203.8,670.76,203.76,673.84,203.72,675.94,203.62,678.04,203.53,679.46,203.38,680.89,203.22,682.24,203,683.14,202.85,684.07,202.61,685,202.37,685.94,202.15,686.87,201.92,687.81,201.76,688.74,201.6,689.64,201.6,690.31,201.6,692.18,202.25,694.04,202.9,696.01,204.1,697.98,205.3,699.51,207,701.04,208.7,701.04,210.8,701.04,212.75,698.96,213.9,696.88,215.05,692.96,215.65,689.04,216.25,683.4,216.42,677.76,216.6,670.64,216.6,660.51,216.6,653.53,214.69,646.54,212.78,642.21,208.97,637.88,205.17,635.96,199.47,634.04,193.77,634.04,186.2,634.04,185.67,634.1,184.18,634.16,182.68,634.24,180.97,634.31,179.27,634.38,177.73,634.44,176.2,634.44,175.6,634.44,170.27,633.7,166.95,632.96,163.63,631.51,161.77,630.07,159.92,627.94,159.26,625.81,158.6,623.04,158.6,619.51,158.6,613.64,160.86,607.76,163.12,600.34,168.57,592.91,174.03,584.34,183.15,575.76,192.27,566.84,206,565.26,208.4,564.03,210.2,562.8,212,561.61,213.2,560.43,214.4,559.16,215,557.89,215.6,556.24,215.6,554.59,215.6,553.29,215.09,551.99,214.58,551.09,213.62,550.19,212.67,549.71,211.29,549.24,209.92,549.24,208.2,549.24,204.97,550.37,202.42,551.5,199.86,553.46,197.5,555.43,195.14,558.1,192.73,560.76,190.32,563.84,187.4,568.86,182.6,577.57,174.08,586.28,165.56,596.89,154.95,607.5,144.34,619.13,132.44,630.76,120.55,641.64,109,642.01,108.55,642.31,108.18,642.61,107.8,642.81,107.5,643.02,107.2,643.13,106.98,643.24,106.75,643.24,106.6,643.24,106.53,643.2,106.45,643.16,106.38,643.06,106.33,642.97,106.27,642.82,106.24,642.66,106.2,642.44,106.2,641.69,106.2,634.28,107.72,626.88,109.24,617.54,111.48,608.2,113.71,599.3,116.24,590.39,118.78,586.64,120.8,585.36,121.55,584.35,122.33,583.34,123.11,582.44,123.75,581.54,124.39,580.68,124.79,579.81,125.2,578.84,125.2,576.59,125.2,574.09,123.95,571.59,122.71,569.49,120.63,567.39,118.55,566.01,115.84,564.64,113.13,564.64,110.2,564.64,108.18,565.51,106.06,566.38,103.94,567.87,101.98,569.35,100.01,571.31,98.3,573.26,96.6,575.44,95.4,577.44,97.4,576.61,98.38,575.95,99.35,575.28,100.32,574.81,101.28,574.35,102.23,574.09,103.17,573.84,104.1,573.84,105,573.84,106.05,574.3,106.96,574.77,107.88,575.76,108.55,576.76,109.23,578.31,109.61,579.86,110,582.04,110,585.56,110,593.46,108.83,601.35,107.65,610.39,106,619.43,104.35,627.99,102.58,636.56,100.8,641.44,99.6,642.79,99.3,643.97,98.42,645.14,97.54,646.21,96.6,647.28,95.66,648.27,94.93,649.26,94.2,650.24,94.2,652.19,94.2,654.93,95.46,657.68,96.71,660.19,98.55,662.7,100.39,664.47,102.47,666.24,104.55,666.24,106.2,666.24,107.25,665.38,108.03,664.53,108.81,663.16,109.45,661.79,110.09,660.08,110.65,658.36,111.2,656.64,111.8,653.04,113.08,644.62,120.48,636.21,127.88,627.44,136.38,618.66,144.87,611.75,151.94,604.84,159,604.24,159.6,605.04,159.8,608.64,157.55,611.87,156.05,615.11,154.55,618.01,153.65,620.92,152.75,623.52,152.38,626.11,152,628.44,152,632.71,152,635.93,153.45,639.16,154.9,641.31,157.9,643.47,160.9,644.55,165.5,645.64,170.1,645.64,176.4,645.44,186.8,645.438,186.799,628.84,71.8,627.79,71.88,626.74,71.95,625.69,72.02,624.66,72.08,623.63,72.13,622.62,72.17,621.61,72.2,620.64,72.2,613.81,72.2,608.08,71.16,602.34,70.12,597.86,68.1,593.38,66.07,590.23,63.09,587.09,60.1,585.44,56.2,589.04,53.8,590.69,55.9,593.16,57.48,595.63,59.05,598.91,60.1,602.19,61.15,606.28,61.68,610.36,62.2,615.24,62.2,618.99,62.2,622.6,61.92,626.21,61.64,629.44,61.3,632.66,60.96,635.38,60.68,638.09,60.4,640.04,60.4,644.24,60.4,647.36,61.43,650.48,62.47,652.54,64.02,654.6,65.58,655.62,67.4,656.64,69.22,656.64,70.8,656.64,72.6,655.12,73.49,653.61,74.38,651.26,74.77,648.92,75.17,646.09,75.27,643.26,75.37,640.64,75.6,636.74,76.05,632.11,77.24,627.49,78.42,622.69,80,617.89,81.57,613.19,83.36,608.49,85.15,604.44,86.8,603.04,83.4,605.59,82.42,609.07,80.97,612.55,79.52,616.16,77.95,619.78,76.37,623.15,74.85,626.51,73.33,628.84,72.2,628.84,71.8,628.837,71.8] ) );
    shape.graphics.endFill();

    return shape;
  },
  "引き" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,2,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,1,2,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [69,10.6,75.2,2.4,93,15,92.47,15.68,91.53,16.33,90.58,16.99,89.32,17.58,88.07,18.16,86.56,18.63,85.05,19.1,83.4,19.4,83.4,67.2,83.4,67.35,82.7,67.99,82,68.64,80.5,69.35,79,70.06,76.65,70.63,74.3,71.2,71,71.2,71,61.8,23,61.8,22.47,65.4,21.81,69.87,21.14,74.34,20.37,79.25,19.61,84.16,18.75,89.31,17.9,94.45,17,99.4,69,99.4,75.8,91.4,91.2,103.8,90.67,104.32,89.95,104.8,89.22,105.28,88.25,105.67,87.27,106.07,86.02,106.36,84.77,106.65,83.2,106.8,82,120.37,80.23,132.15,78.47,143.92,76.12,153.15,73.78,162.37,70.85,168.67,67.92,174.97,64.4,177.6,62.15,179.17,59.8,180.31,57.45,181.44,54.75,182.17,52.05,182.9,48.87,183.25,45.7,183.6,41.8,183.6,41.8,182.32,41.55,181.14,41.29,179.96,40.82,178.95,40.35,177.94,39.69,177.13,39.02,176.32,38.2,175.8,37.15,175.12,34.89,174.46,32.62,173.8,29.7,173.22,26.77,172.64,23.46,172.17,20.15,171.7,17,171.4,17.2,167.8,20.65,167.95,25.14,168.15,29.62,168.36,34.05,168.55,38.47,168.74,42.29,168.87,46.1,169,48.2,169,49.62,169,50.71,168.94,51.8,168.87,52.7,168.65,53.6,168.42,54.39,167.99,55.17,167.55,56,166.8,58.4,164.92,60.56,159.49,62.72,154.06,64.6,145.85,66.47,137.64,68.04,127.03,69.6,116.42,70.8,104.2,16.2,104.2,15.97,105.62,15.72,107.01,15.46,108.39,15.2,109.72,14.94,111.05,14.68,112.33,14.42,113.6,14.2,114.8,13.52,115.18,12.8,115.47,12.09,115.77,11.3,115.98,10.51,116.18,9.64,116.29,8.77,116.4,7.8,116.4,7.12,116.4,6.37,116.36,5.62,116.32,4.8,116.22,3.97,116.13,3.07,115.98,2.17,115.82,1.2,115.6,2.77,108.02,4.47,99.07,6.17,90.12,7.72,81.17,9.28,72.23,10.56,63.99,11.85,55.75,12.6,49.6,26.8,57,71,57,71,15.4,1.6,15.4,0,10.6,69,10.6,68.999,10.6,144.4,1.2,166.2,3.2,166.05,4.33,165.55,5.16,165.05,6,164.02,6.6,162.99,7.2,161.33,7.59,159.67,7.97,157.2,8.2,157.2,179,157.2,179.22,156.77,180.06,156.35,180.9,155,181.82,153.65,182.74,151.12,183.47,148.6,184.2,144.4,184.2,144.4,1.2,144.397,1.2] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [345.8,55.8,347.22,55.8,348.5,56.03,349.77,56.27,350.72,56.77,351.68,57.28,352.24,58.08,352.8,58.87,352.8,60,352.8,61.35,351.7,62.63,350.59,63.91,348.62,65.12,346.65,66.34,343.94,67.51,341.22,68.67,338,69.8,334.32,71.15,329.38,72.58,324.44,74.02,318.72,75.42,313,76.83,306.75,78.15,300.5,79.47,294.2,80.6,296.37,85.47,299.52,89.94,302.67,94.42,306.17,98.07,309.68,101.73,313.24,104.36,316.8,107,319.8,108.2,322.12,109.1,323.85,110.25,325.58,111.4,326.72,112.77,327.87,114.14,328.43,115.71,329,117.27,329,119,329,120.72,328.42,121.94,327.84,123.16,326.9,123.92,325.96,124.69,324.78,125.05,323.6,125.4,322.4,125.4,320.82,125.4,319.34,124.81,317.87,124.22,316.42,123.37,314.98,122.53,313.54,121.6,312.1,120.67,310.6,120,308.5,119.1,305.5,118.17,302.49,117.25,298.72,116.5,294.95,115.75,290.49,115.27,286.02,114.8,281,114.8,268.32,114.8,259.71,116.99,251.09,119.17,245.82,122.7,240.56,126.22,238.28,130.66,236,135.1,236,139.6,236,145.52,239.25,149.8,242.5,154.07,248.95,156.82,255.4,159.58,265.02,160.89,274.65,162.2,287.4,162.2,288.8,162.2,295.7,162.12,300.61,161.58,305.53,161.04,308.92,160.42,312.32,159.81,314.42,159.3,316.52,158.8,317.8,158.8,320.72,158.8,323.37,159.37,326.02,159.95,328.02,161,330.03,162.05,331.21,163.52,332.4,165,332.4,166.8,332.4,168.97,329.39,170.5,326.38,172.02,320.8,172.97,315.21,173.93,307.25,174.36,299.3,174.8,289.4,174.8,272.82,174.8,260.56,172.67,248.3,170.54,240.2,166.32,232.1,162.11,228.09,155.81,224.07,149.52,224,141.2,224.07,134.52,228.12,128.65,232.16,122.78,239.55,118.37,246.94,113.97,257.35,111.36,267.77,108.75,280.6,108.6,284.27,108.6,287.81,108.86,291.34,109.13,294.47,109.52,297.6,109.92,300.2,110.37,302.8,110.82,304.6,111.2,305.4,110.4,302.32,108.15,299.28,104.96,296.23,101.77,293.47,98.07,290.72,94.38,288.38,90.4,286.05,86.42,284.4,82.6,277.57,83.87,270.74,85.06,263.91,86.26,257.47,87.17,251.04,88.09,245.22,88.65,239.4,89.2,234.6,89.2,228.6,89.2,223.67,88.38,218.75,87.55,214.7,85.75,210.65,83.95,207.37,81.1,204.1,78.25,201.4,74.2,204,71.6,207.15,74.6,210.74,76.41,214.33,78.22,218.18,79.2,222.02,80.17,226.02,80.49,230.03,80.8,234,80.8,238.73,80.8,244.64,80.34,250.55,79.89,256.85,79.1,263.15,78.31,269.44,77.26,275.72,76.2,281.2,75,280,71.77,278.8,68.27,277.59,64.77,276.52,61.4,275.46,58.02,274.59,54.98,273.72,51.93,273.2,49.6,268.62,50.35,264.02,51.07,259.42,51.79,254.97,52.35,250.53,52.91,246.34,53.26,242.15,53.6,238.4,53.6,234.42,53.6,231.07,52.91,227.72,52.21,224.77,50.75,221.83,49.29,219.19,47.02,216.55,44.75,214,41.6,216.2,38.8,218.82,40.67,221.3,41.97,223.78,43.27,226.27,44.08,228.77,44.88,231.36,45.24,233.95,45.6,236.8,45.6,239.65,45.6,243.83,45.29,248.01,44.97,252.67,44.43,257.34,43.88,262.08,43.15,266.82,42.43,270.8,41.6,270.27,39.65,269.69,37.43,269.11,35.22,268.55,33.03,267.99,30.83,267.48,28.8,266.97,26.78,266.6,25.2,265.7,21.68,264.16,19.77,262.62,17.86,260.88,16.98,259.13,16.09,257.4,15.95,255.67,15.8,254.4,15.8,253.35,15.8,252.29,15.89,251.23,15.98,250.25,16.23,249.28,16.47,248.44,16.9,247.6,17.33,247,18,245.8,17.4,245.8,15,246.89,12.98,247.99,10.96,250.2,9.48,252.41,7.99,255.76,7.14,259.1,6.28,263.6,6.2,267.2,6.2,269.93,6.85,272.66,7.51,274.5,8.58,276.34,9.64,277.27,11.01,278.2,12.38,278.2,13.8,278.2,14.55,278.17,15.18,278.14,15.8,278.1,16.4,278.06,17,278.03,17.63,278,18.25,278,19,278,20.65,278.22,22.59,278.44,24.52,278.88,26.98,279.31,29.43,279.94,32.53,280.58,35.63,281.4,39.6,291.08,37.65,297.26,35.88,303.44,34.12,307,32.38,310.56,30.63,311.94,28.83,313.33,27.03,313.4,25,314.08,24.93,314.72,24.89,315.36,24.84,315.98,24.83,316.59,24.81,317.2,24.8,317.8,24.8,318.4,24.8,321.7,24.8,324.18,25.19,326.65,25.58,328.3,26.28,329.95,26.97,330.77,27.92,331.6,28.88,331.6,30,331.6,31.28,330.89,32.32,330.18,33.37,328.75,34.33,327.33,35.28,325.19,36.22,323.05,37.15,320.2,38.2,316,39.63,311.35,41,306.7,42.36,301.9,43.6,297.1,44.84,292.3,45.91,287.5,46.98,283,47.8,283.53,50.2,284.34,53.31,285.14,56.42,286.18,59.78,287.21,63.13,288.43,66.5,289.65,69.88,291,72.8,296.1,71.98,300.54,70.89,304.98,69.81,308.83,68.63,312.67,67.44,315.95,66.25,319.23,65.05,322,64,323.43,63.48,324.54,62.94,325.66,62.41,326.43,61.85,327.19,61.29,327.6,60.68,328,60.08,328,59.4,328,59.02,327.85,58.65,327.7,58.27,327.4,57.88,327.1,57.48,326.65,57.07,326.2,56.65,325.6,56.2,328.2,53.6,329.55,54.28,331.09,54.77,332.63,55.26,334.2,55.58,335.78,55.89,337.31,56.05,338.85,56.2,340.2,56.2,345.8,55.8,345.798,55.799] ) );
    shape.graphics.endFill();

    return shape;
  },
  "裂く" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,2,2,1,3,3,3,3,2,3,3,3,3,2,2,2,1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,2] ), $.toNumberVector( [475.4,109.4,477.65,113.9,480.38,118.13,483.1,122.36,486.25,126.3,489.4,130.24,492.95,133.87,496.5,137.5,500.4,140.8,504.68,137.95,509.07,134.69,513.46,131.44,517.53,128.12,521.59,124.8,525.12,121.59,528.65,118.37,531.2,115.6,547.6,126.4,547.22,126.85,546.84,127.22,546.45,127.59,546,127.85,545.55,128.11,545.01,128.25,544.47,128.4,543.8,128.4,543.42,128.4,543.01,128.33,542.59,128.26,542.12,128.15,541.66,128.04,541.13,127.89,540.6,127.75,540,127.6,536.85,129.62,532.78,131.82,528.72,134.02,524.12,136.2,519.53,138.37,514.6,140.42,509.68,142.47,504.8,144.2,510.95,148.92,517.78,152.97,524.61,157.02,531.97,160.4,539.34,163.77,547.18,166.47,555.02,169.17,563.2,171.2,562.8,173.2,560.7,173.5,558.84,174.41,556.99,175.33,555.45,176.77,553.91,178.22,552.73,180.14,551.55,182.07,550.8,184.4,536.85,179.37,524.67,172.36,512.49,165.34,502.4,156.17,492.31,147,484.48,135.6,476.65,124.2,471.4,110.4,468.1,113.7,464.44,116.81,460.77,119.92,456.78,122.85,452.78,125.77,448.48,128.51,444.18,131.25,439.6,133.8,439.6,164.4,496,157.6,496.4,161,489.8,162.87,481.72,165.01,473.65,167.15,463.9,169.57,454.15,171.99,442.62,174.69,431.1,177.4,417.6,180.4,417.3,181.37,416.8,182.13,416.29,182.88,415.68,183.45,415.06,184.01,414.37,184.39,413.68,184.77,413,185,403.4,168,405.5,167.85,408.07,167.62,410.64,167.4,413.6,167.12,416.56,166.84,419.88,166.51,423.2,166.17,426.8,165.8,426.8,140.4,421.17,143.1,415.23,145.54,409.29,147.98,403.1,150.17,396.91,152.37,390.52,154.32,384.12,156.27,377.6,158,376,154.2,387.47,150.3,398.36,145.34,409.24,140.38,419.12,134.65,429.01,128.91,437.68,122.53,446.35,116.15,453.4,109.4,378.2,109.4,376.8,104.6,463.2,104.6,463.2,80.8,484.4,82.6,484.32,83.72,483.88,84.53,483.43,85.34,482.47,85.92,481.52,86.5,479.98,86.9,478.45,87.3,476.2,87.6,476.2,104.6,536.6,104.6,545.8,93,563.2,105.2,562.6,106.25,561.81,107.04,561.02,107.82,559.9,108.35,558.77,108.87,557.23,109.14,555.7,109.4,553.59,109.4,475.4,109.4,475.401,109.398,473.8,39.8,473.2,40.47,472.46,40.94,471.72,41.4,470.73,41.7,469.73,42,468.43,42.16,467.13,42.32,465.4,42.4,460,53.12,452.03,61.92,444.07,70.72,433.45,77.7,422.84,84.67,409.55,89.87,396.25,95.07,380.2,98.6,379.2,95,392.4,91.02,403.56,85.61,414.71,80.2,423.73,73.32,432.75,66.44,439.59,58.07,446.43,49.7,451,39.8,413.8,39.8,412.68,40.85,411.52,41.87,410.36,42.88,409.18,43.87,408,44.87,406.8,45.85,405.6,46.82,404.4,47.8,410.25,49.07,414.27,51.07,418.28,53.07,420.75,55.37,423.23,57.68,424.32,60.09,425.4,62.5,425.4,64.6,425.4,66.02,424.94,67.27,424.48,68.51,423.68,69.42,422.87,70.34,421.78,70.87,420.68,71.4,419.4,71.4,418.88,71.4,418.35,71.32,417.82,71.24,417.28,71.05,416.73,70.86,416.17,70.56,415.6,70.25,415,69.8,414.33,67.32,412.86,64.72,411.4,62.11,409.43,59.6,407.46,57.09,405.13,54.78,402.8,52.48,400.4,50.6,398.23,52.1,395.98,53.56,393.73,55.01,391.4,56.4,389.08,57.79,386.68,59.09,384.28,60.4,381.8,61.6,379.6,58,385.75,53.8,391.24,48.99,396.73,44.17,401.48,38.85,406.22,33.52,410.18,27.74,414.13,21.95,417.2,15.8,382,15.8,380.81,11,456,11,464.6,0.2,481.2,11.6,480.68,12.73,479.94,13.52,479.19,14.32,478.1,14.83,477.02,15.33,475.52,15.57,474.03,15.8,472,15.8,432.61,15.8,431.18,18.43,429.57,20.94,427.97,23.45,426.21,25.85,424.44,28.25,422.54,30.54,420.63,32.83,418.61,35,450.81,35,459.41,27.2,473.8,39.8,473.801,39.799,509.2,10.8,509.05,11.93,508.59,12.76,508.14,13.6,507.2,14.2,506.26,14.8,504.76,15.19,503.25,15.58,501,15.8,501,65.8,501,65.95,500.56,66.62,500.11,67.3,498.8,68.05,497.49,68.8,495.09,69.4,492.7,70,488.8,70,488.8,9.2,509.2,10.8,509.2,10.8,556.8,1.6,556.65,2.65,556.28,3.42,555.91,4.19,555.02,4.75,554.14,5.31,552.61,5.71,551.07,6.1,548.6,6.4,548.6,76,548.6,79.9,547.99,83.16,547.38,86.43,545.35,88.92,543.33,91.42,539.49,93.07,535.65,94.72,529.2,95.4,529.2,91.87,528.17,89.66,527.13,87.45,524.83,86.12,522.52,84.79,518.82,84.12,515.13,83.45,509.8,83,509.8,80,532.2,80,533.4,80,534.18,79.77,534.95,79.54,535.4,79.07,535.85,78.6,536.03,77.89,536.2,77.17,536.2,76.2,536.2,0,556.8,1.6,556.8,1.6] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [645.4,9.6,646.3,8.18,647.38,7.12,648.47,6.07,649.7,5.38,650.94,4.68,652.32,4.34,653.7,4,655.2,4,659.25,4,663.85,5.41,668.45,6.82,672.35,9.12,676.25,11.43,678.83,14.38,681.4,17.32,681.4,20.4,681.4,21.82,680.4,22.81,679.4,23.8,677.73,24.7,676.06,25.6,673.89,26.59,671.73,27.57,669.4,29,663.1,32.9,654.18,39.37,645.25,45.84,636.25,52.87,627.25,59.9,619.45,66.49,611.65,73.07,607.6,77.2,606.33,78.47,605.3,80.01,604.26,81.55,603.53,83.2,602.8,84.85,602.4,86.54,602,88.22,602,89.8,602,91.6,602.99,93.33,603.97,95.06,605.98,96.9,607.99,98.74,611.03,100.77,614.08,102.8,618.2,105.2,634.7,114.65,647.73,124.5,660.77,134.36,669.8,143.25,678.84,152.13,683.62,159.37,688.4,166.6,688.4,170.8,688.4,172.75,687.86,174.49,687.32,176.23,686.33,177.55,685.33,178.86,683.93,179.63,682.53,180.4,680.8,180.4,679.6,180.4,678.21,179.62,676.82,178.84,675.38,177.47,673.93,176.1,672.51,174.24,671.08,172.37,669.8,170.2,665.75,163.3,659.46,155.29,653.16,147.29,645.08,139.15,637,131.01,627.36,123.23,617.73,115.45,607,109,603.78,106.97,601.22,104.85,598.66,102.72,596.88,100.37,595.1,98.03,594.15,95.42,593.2,92.8,593.2,89.8,593.2,87.47,593.75,85.17,594.3,82.86,595.35,80.65,596.4,78.44,597.93,76.36,599.45,74.27,601.4,72.4,605.68,67.97,612.15,61.9,618.62,55.82,625.7,49.42,632.79,43.03,639.71,36.99,646.63,30.95,651.8,26.6,653.3,25.33,654.52,23.94,655.74,22.55,656.6,21.2,657.47,19.85,657.94,18.61,658.4,17.38,658.4,16.4,658.4,14.68,657.06,13.47,655.72,12.26,653.8,11.53,651.89,10.79,649.8,10.52,647.7,10.25,646.2,10.4,645.4,9.6,645.404,9.6] ) );
    shape.graphics.endFill();

    return shape;
  },
  "偽りの" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,2,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,2,3,3,3,3,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,2,3,3,3,3,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [65,7,64.7,7.9,64.21,8.57,63.71,9.24,62.85,9.68,61.99,10.11,60.67,10.29,59.35,10.47,57.4,10.4,55.37,15.95,53.2,21.42,51.02,26.88,48.7,32.22,46.37,37.57,43.9,42.77,41.42,47.98,38.8,53,45.8,55.6,45.57,56.27,45.09,56.87,44.6,57.46,43.85,57.95,43.1,58.44,42.09,58.81,41.07,59.17,39.8,59.4,39.8,181.2,39.8,181.2,39.26,181.89,38.72,182.57,37.3,183.4,35.87,184.22,33.39,184.91,30.9,185.6,27,185.6,27,73.6,24.15,78.02,21.22,82.21,18.3,86.39,15.3,90.27,12.3,94.15,9.22,97.7,6.15,101.25,3,104.4,0,102.4,6.15,93.85,12.37,82.36,18.58,70.87,24.37,57.57,30.17,44.28,35.3,29.75,40.42,15.23,44.4,0.6,65,7,64.999,7,172.6,103.4,188.4,115.6,187.87,116.2,187.15,116.69,186.43,117.17,185.47,117.55,184.52,117.92,183.31,118.19,182.1,118.45,180.6,118.6,179.77,131.8,178.58,142.32,177.38,152.85,175.67,160.65,173.97,168.45,171.68,173.5,169.4,178.55,166.4,180.8,164.52,182.15,162.46,183.13,160.4,184.11,158.02,184.75,155.64,185.39,152.87,185.69,150.1,186,146.8,186,146.8,183.22,146.28,181.28,145.76,179.34,143.85,177.97,141.94,176.6,138.19,175.68,134.45,174.75,128,174,128,170.6,130.4,170.67,133.7,170.81,137.01,170.94,140.35,171.07,143.69,171.2,146.62,171.3,149.55,171.4,151.2,171.4,152.4,171.4,153.35,171.34,154.31,171.29,155.1,171.1,155.89,170.91,156.54,170.55,157.2,170.2,157.8,169.6,159.52,168.1,161.02,163.87,162.52,159.64,163.77,152.85,165.03,146.06,166.04,136.8,167.05,127.55,167.8,116,78,116,74.17,119.9,70.05,123.57,65.92,127.25,61.5,130.7,57.07,134.15,52.35,137.37,47.62,140.6,42.6,143.6,40.6,140.8,52.67,131.95,62.81,121.32,72.94,110.7,81.3,98.85,89.66,87,96.34,74.2,103.02,61.4,108.2,48.2,60,48.2,58.4,43.4,110,43.4,112.02,37.92,113.79,32.46,115.55,26.99,117.07,21.55,118.59,16.11,119.87,10.72,121.15,5.32,122.2,0,144,5.2,143.7,6.17,143.14,6.92,142.57,7.66,141.6,8.15,140.62,8.64,139.16,8.86,137.7,9.07,135.6,9,134.47,13.2,133.23,17.47,131.98,21.74,130.57,26.05,129.17,30.36,127.58,34.71,126,39.05,124.2,43.4,143.6,43.4,150,36.8,163,48,162.47,48.52,161.86,48.91,161.24,49.29,160.47,49.55,159.7,49.81,158.75,49.97,157.8,50.12,156.6,50.2,152.6,77.6,158.4,77.6,164.6,71.2,177.6,82.2,177.07,82.8,176.46,83.19,175.84,83.58,175.07,83.82,174.3,84.07,173.35,84.2,172.4,84.32,171.2,84.4,167.4,109.6,172.6,103.4,172.598,103.398,74,134,74.3,135.65,74.52,137.22,74.75,138.8,74.9,140.3,75.05,141.8,75.12,143.22,75.2,144.65,75.2,146,75.2,153.57,73.24,159.58,71.28,165.59,68.22,169.77,65.17,173.95,61.45,176.17,57.72,178.4,54.2,178.4,52.47,178.4,51.32,177.9,50.17,177.4,49.47,176.65,48.78,175.9,48.49,175.02,48.2,174.15,48.2,173.4,48.2,172.35,48.58,171.34,48.97,170.34,49.62,169.4,50.28,168.46,51.15,167.6,52.02,166.75,53,166,56.07,164.12,59.09,160.85,62.11,157.59,64.55,153.35,66.99,149.11,68.58,144.12,70.17,139.12,70.4,133.8,74,134,73.999,133.998,71.6,1.8,78.35,4.95,82.91,8.46,87.47,11.98,90.25,15.5,93.02,19.02,94.21,22.39,95.4,25.75,95.4,28.6,95.4,30.93,94.77,32.87,94.14,34.82,93.07,36.23,92,37.63,90.59,38.42,89.17,39.2,87.6,39.2,86.85,39.2,86.1,39.01,85.35,38.82,84.62,38.43,83.89,38.03,83.18,37.43,82.47,36.83,81.8,36,82.02,31.95,81.1,27.44,80.17,22.94,78.45,18.55,76.72,14.16,74.37,10.18,72.02,6.2,69.4,3.2,71.6,1.8,71.6,1.8,159.4,82.4,104.6,82.4,102.2,86.15,99.64,89.85,97.09,93.56,94.35,97.17,91.61,100.79,88.68,104.31,85.75,107.82,82.6,111.2,154.8,111.2,159.4,82.4,159.397,82.399,89.2,132.6,93.1,136.12,95.74,139.58,98.39,143.04,100,146.32,101.61,149.6,102.31,152.65,103,155.7,103,158.4,103,161.4,102.27,163.87,101.54,166.33,100.32,168.1,99.11,169.86,97.51,170.83,95.92,171.8,94.2,171.8,93.45,171.8,92.71,171.6,91.96,171.4,91.25,170.97,90.54,170.54,89.87,169.86,89.2,169.17,88.6,168.2,89.05,166.7,89.35,165.09,89.66,163.49,89.85,161.82,90.04,160.15,90.12,158.44,90.2,156.72,90.2,155,90.2,152.07,89.94,149.15,89.69,146.23,89.2,143.47,88.71,140.72,88.01,138.21,87.3,135.7,86.4,133.6,89.2,132.6,89.199,132.598,107.6,129.8,113.82,132.42,118.04,135.42,122.26,138.42,124.82,141.47,127.39,144.53,128.5,147.49,129.6,150.45,129.6,153,129.6,155.02,129.04,156.68,128.49,158.34,127.55,159.52,126.61,160.7,125.38,161.35,124.15,162,122.8,162,122.2,162,121.57,161.88,120.94,161.75,120.3,161.47,119.66,161.19,119.03,160.73,118.4,160.27,117.8,159.6,117.8,156.07,116.79,152.18,115.79,148.29,114.1,144.5,112.41,140.71,110.21,137.27,108,133.82,105.6,131.2,107.6,129.8,107.599,129.798,144.6,48.2,122.4,48.2,120.82,51.95,119.1,55.66,117.38,59.37,115.52,63.05,113.67,66.72,111.68,70.36,109.7,74,107.6,77.6,139.8,77.6,144.6,48.2,144.598,48.199,130,125.4,136.67,126.82,141.23,129,145.78,131.18,148.57,133.67,151.37,136.17,152.58,138.76,153.8,141.35,153.8,143.6,153.8,145.17,153.34,146.49,152.88,147.82,152.07,148.77,151.27,149.73,150.17,150.26,149.07,150.8,147.8,150.8,147.27,150.8,146.71,150.68,146.15,150.57,145.57,150.35,144.99,150.12,144.4,149.78,143.8,149.45,143.2,149,142.52,146.22,141,143.17,139.47,140.12,137.45,137.17,135.42,134.23,133.07,131.59,130.72,128.95,128.4,127,130,125.4,129.998,125.398] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [226.6,101.6,227.05,100.7,227.97,99.93,228.89,99.16,230.03,98.6,231.17,98.04,232.43,97.72,233.68,97.4,234.8,97.4,237.65,97.4,240.7,98.9,243.74,100.41,246.25,102.98,248.77,105.54,250.38,108.96,252,112.38,252,116.2,252,117.77,251.43,119.34,250.87,120.91,250,122.45,249.14,123.99,248.12,125.48,247.1,126.97,246.2,128.4,243.43,133.2,241.24,139.15,239.05,145.11,237.53,151.27,236.01,157.44,235.21,163.36,234.4,169.27,234.4,174,234.4,175.35,234.48,176.58,234.55,177.81,234.7,178.9,234.85,179.99,235.08,180.92,235.3,181.85,235.6,182.6,236,182.6,238.93,174.42,243.98,163.5,249.03,152.57,256.03,142.72,263.02,132.88,271.86,126.04,280.7,119.2,291.2,119.2,293.68,119.2,296.46,119.73,299.24,120.26,302.05,121.32,304.86,122.39,307.57,124.01,310.28,125.62,312.6,127.8,316.43,131.47,319.41,136.62,322.39,141.77,324.45,148.6,326.51,155.42,327.62,164.02,328.73,172.62,328.8,183.2,328.8,199.02,324.41,213.03,320.03,227.03,309.9,238.37,299.78,249.72,283.24,257.98,266.7,266.25,242.4,270.6,240.2,266.4,259.03,261.9,272.97,253.95,286.92,246,296.13,235.37,305.33,224.74,309.87,211.81,314.4,198.87,314.4,184.4,314.4,174.72,313.85,166.66,313.31,158.6,311.98,152.15,310.64,145.7,308.41,140.86,306.18,136.02,302.8,132.8,301.38,131.37,299.73,130.23,298.09,129.08,296.25,128.27,294.41,127.47,292.39,127.03,290.38,126.6,288.2,126.6,279.5,126.6,272.01,132.89,264.53,139.17,258.6,149,252.68,158.82,248.49,170.81,244.3,182.8,242.2,194.2,242.43,195.55,242.64,196.96,242.86,198.37,243.03,199.77,243.2,201.18,243.3,202.55,243.4,203.92,243.4,205.2,243.4,206.85,243.2,208.24,242.99,209.64,242.53,210.65,242.06,211.66,241.29,212.23,240.53,212.8,239.4,212.8,235.58,212.8,232.63,209.66,229.68,206.52,227.68,201.95,225.67,197.37,224.64,192.21,223.6,187.05,223.6,183,223.6,170.02,225.48,159.46,227.35,148.89,229.6,140.47,231.85,132.06,233.73,125.65,235.6,119.25,235.6,114.6,235.6,110.92,234.71,108.5,233.81,106.07,232.5,104.62,231.19,103.18,229.7,102.59,228.2,102,227,102,226.6,101.6,226.605,101.601] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [425.8,153.6,446.5,150.75,460.9,144.08,475.3,137.41,484.3,128.15,493.3,118.88,497.35,107.64,501.4,96.4,501.4,84.4,501.4,70.75,498.04,58.54,494.67,46.33,487.25,37.15,479.82,27.96,467.99,22.58,456.15,17.2,439.2,17.2,437.78,17.2,435.64,17.34,433.51,17.48,431.15,17.75,428.79,18.01,426.43,18.38,424.08,18.75,422.2,19.2,424,20.47,425.41,22.55,426.83,24.62,427.8,27.25,428.78,29.87,429.29,32.92,429.8,35.97,429.8,39.2,429.8,53,425.24,70.1,420.68,87.2,412.98,102.2,405.27,117.2,395.12,127.4,384.98,137.6,373.8,137.6,368.48,137.6,364.03,134.58,359.58,131.56,356.38,126.07,353.17,120.58,351.39,112.87,349.6,105.17,349.6,95.8,349.6,78.47,356.33,63.12,363.07,47.77,375.1,36.27,387.14,24.78,403.77,18.09,420.4,11.4,440.2,11.4,458.65,11.4,472.8,16.86,486.95,22.32,496.55,32.12,506.15,41.93,511.08,55.53,516,69.12,516,85.4,516,99.42,511.13,111.79,506.25,124.16,495.6,133.82,484.95,143.48,468.08,149.89,451.2,156.3,427.2,158.4,425.8,153.6,425.8,153.596,416.8,20.4,405.4,23.17,395.35,29.81,385.3,36.45,377.8,46.2,370.3,55.95,365.95,68.43,361.6,80.92,361.6,95.4,361.6,101.25,362.48,106.38,363.36,111.52,365.03,115.35,366.69,119.17,369.11,121.38,371.53,123.6,374.6,123.6,383.15,123.6,391.31,114.15,399.48,104.7,405.85,90.9,412.23,77.1,416.11,61.5,420,45.9,420,33.6,420,31.57,419.73,29.51,419.45,27.45,419,25.65,418.55,23.85,417.97,22.46,417.4,21.07,416.8,20.4,416.8,20.397] ) );
    shape.graphics.endFill();

    return shape;
  },
  "時の中" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,3,3,3,3,2,2,2,2,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,1,2,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,2,2,2,2,3,3,3,3,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [47.6,46.8,64.6,59.4,64.15,60,63.31,60.59,62.47,61.18,61.35,61.7,60.22,62.23,58.86,62.66,57.5,63.1,56,63.4,56,179.8,56,180.02,55.3,180.77,54.59,181.52,53.07,182.32,51.55,183.13,49.16,183.76,46.77,184.4,43.4,184.4,43.4,169.8,12.6,169.8,12.6,189.4,12.6,189.77,11.84,190.51,11.09,191.24,9.7,191.97,8.31,192.71,6.36,193.25,4.4,193.8,2,193.8,0,193.8,0,48.6,15,55,41.4,55,47.6,46.8,47.599,46.801,43.4,59.8,12.6,59.8,12.6,109.4,43.4,109.4,43.4,59.8,43.399,59.801,12.6,165,43.4,165,43.4,114.2,12.6,114.2,12.6,165,12.6,164.998,163.6,91.8,181,104.4,180.4,105.52,179.64,106.32,178.88,107.12,177.8,107.63,176.71,108.13,175.2,108.37,173.7,108.6,171.6,108.6,59.6,108.6,58.4,103.8,108.2,103.8,108.2,70.6,68,70.6,66.8,65.8,108.2,65.8,108.2,35.6,130.4,37.4,130.25,38.68,129.72,39.57,129.18,40.46,128.1,41.1,127.01,41.74,125.28,42.18,123.55,42.63,121,43,121,65.8,143,65.8,152,54,169.2,66.4,168.6,67.53,167.81,68.32,167.02,69.12,165.9,69.63,164.77,70.13,163.23,70.37,161.7,70.6,159.6,70.6,121,70.6,121,103.8,154.4,103.8,163.6,91.8,163.597,91.8,153.2,140,162,128.4,178.4,140.6,177.8,141.72,177.04,142.52,176.29,143.32,175.22,143.82,174.15,144.33,172.69,144.56,171.22,144.8,169.2,144.8,145,144.8,145,200.6,145,204.57,144.33,207.97,143.66,211.37,141.45,214,139.24,216.62,135.04,218.37,130.85,220.12,123.8,220.8,123.8,216.82,122.35,214.43,120.9,212.05,118.07,210.7,115.24,209.35,111.06,208.76,106.87,208.17,101.4,207.8,101.4,204.4,127.6,204.4,128.95,204.4,129.84,204.23,130.72,204.05,131.25,203.62,131.77,203.19,131.99,202.46,132.2,201.72,132.2,200.6,132.2,144.8,60,144.8,58.6,140,132.2,140,132.2,115.4,153.2,117,153.12,117.97,152.76,118.73,152.4,119.49,151.5,120.07,150.6,120.66,149.04,121.08,147.47,121.5,145,121.8,145,140,153.2,140,153.197,139.999,78.6,153.8,86.25,157.55,91.42,161.55,96.6,165.56,99.75,169.47,102.9,173.39,104.25,177.06,105.6,180.72,105.6,183.8,105.6,186.05,104.97,187.89,104.34,189.74,103.27,191.05,102.2,192.36,100.79,193.08,99.37,193.8,97.8,193.8,97.05,193.8,96.27,193.64,95.49,193.48,94.7,193.12,93.91,192.77,93.13,192.2,92.35,191.62,91.6,190.8,91.3,186.6,89.9,181.78,88.5,176.96,86.4,172.17,84.3,167.39,81.7,162.98,79.1,158.57,76.4,155.2,78.6,153.8,78.599,153.799] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [264.5,142.2,285.2,139.35,299.6,132.68,314,126.01,323,116.75,332,107.49,336.05,96.24,340.1,85,340.1,73,340.1,59.35,336.74,47.14,333.37,34.94,325.95,25.75,318.52,16.56,306.69,11.18,294.85,5.8,277.9,5.8,276.47,5.8,274.34,5.94,272.21,6.09,269.85,6.35,267.49,6.61,265.13,6.98,262.77,7.35,260.9,7.8,262.7,9.07,264.11,11.15,265.52,13.22,266.5,15.85,267.48,18.47,267.99,21.52,268.5,24.57,268.5,27.8,268.5,41.6,263.94,58.7,259.38,75.8,251.68,90.8,243.97,105.8,233.82,116,223.68,126.2,212.5,126.2,207.18,126.2,202.73,123.18,198.28,120.17,195.08,114.67,191.87,109.18,190.09,101.48,188.3,93.77,188.3,84.4,188.3,67.07,195.03,51.72,201.76,36.37,213.8,24.87,225.84,13.38,242.47,6.69,259.1,0,278.9,0,297.35,0,311.5,5.46,325.65,10.92,335.25,20.72,344.85,30.53,349.77,44.13,354.7,57.72,354.7,74,354.7,88.02,349.82,100.39,344.95,112.77,334.3,122.42,323.65,132.08,306.77,138.49,289.9,144.9,265.9,147,264.5,142.2,264.5,142.197,255.5,9,244.1,11.77,234.05,18.41,224,25.05,216.5,34.8,209,44.55,204.65,57.04,200.3,69.52,200.3,84,200.3,89.85,201.18,94.99,202.06,100.12,203.73,103.95,205.4,107.77,207.81,109.98,210.23,112.2,213.3,112.2,221.85,112.2,230.01,102.75,238.18,93.3,244.55,79.5,250.93,65.7,254.81,50.1,258.7,34.5,258.7,22.2,258.7,20.17,258.43,18.11,258.15,16.05,257.7,14.25,257.25,12.45,256.68,11.06,256.1,9.67,255.5,9,255.501,8.999] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [519.7,68.2,537.3,80.8,536.77,81.4,535.92,81.99,535.07,82.58,533.95,83.1,532.82,83.63,531.45,84.06,530.07,84.5,528.5,84.8,528.5,162.6,528.5,162.82,527.73,163.54,526.96,164.26,525.35,165.02,523.74,165.79,521.24,166.4,518.75,167,515.3,167,515.3,148.4,457.1,148.4,457.1,215.4,457.1,215.55,456.67,216.41,456.23,217.27,454.83,218.25,453.42,219.22,450.77,220.01,448.13,220.8,443.7,220.8,443.7,148.4,386.5,148.4,386.5,164,386.5,164.07,386.1,164.86,385.7,165.65,384.35,166.57,383,167.49,380.43,168.25,377.85,169,373.5,169,373.5,69.8,387.9,76.4,443.7,76.4,443.7,35.2,465.7,37.2,465.55,38.25,465.06,39.08,464.57,39.91,463.57,40.53,462.58,41.14,461,41.56,459.42,41.98,457.1,42.2,457.1,76.4,513.3,76.4,519.7,68.2,519.698,68.2,386.5,143.6,443.7,143.6,443.7,81.2,386.5,81.2,386.5,143.6,386.5,143.6,457.1,143.6,515.3,143.6,515.3,81.2,457.1,81.2,457.1,143.6,457.1,143.6] ) );
    shape.graphics.endFill();

    return shape;
  },
  "出会える" : function()
  {
    var shape = Shape();
    
      shape.graphics.beginFill( 0xFFFFFF,1 );
      shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,2,2,2,2] ), $.toNumberVector( [144,101.4,165,103,164.85,104.12,164.39,104.96,163.94,105.8,163,106.4,162.06,107,160.55,107.39,159.05,107.77,156.8,108,156.8,179.8,156.8,179.95,156.32,180.65,155.84,181.36,154.45,182.15,153.06,182.93,150.55,183.57,148.05,184.2,144,184.2,144,167,12.6,167,12.6,181.6,12.6,181.75,12.15,182.45,11.7,183.16,10.35,183.95,9,184.73,6.53,185.37,4.05,186,0,186,0,101.4,20.8,103,20.65,104.12,20.22,104.96,19.79,105.8,18.88,106.4,17.96,107,16.44,107.39,14.93,107.77,12.6,108,12.6,162.2,71.2,162.2,71.2,82.8,22.8,82.8,22.8,91.2,22.8,91.35,22.32,92.05,21.84,92.76,20.45,93.55,19.06,94.34,16.56,94.97,14.05,95.6,10,95.6,10,19.6,31,21.2,30.85,22.25,30.39,23.08,29.94,23.91,29,24.53,28.06,25.14,26.56,25.56,25.05,25.98,22.8,26.2,22.8,78,71.2,78,71.2,1.8,93.6,3.8,93.52,5,93,5.88,92.48,6.76,91.37,7.4,90.27,8.04,88.51,8.47,86.75,8.9,84.2,9.2,84.2,78,133.8,78,133.8,19.6,154.8,21.2,154.72,22.25,154.28,23.08,153.83,23.91,152.87,24.53,151.92,25.14,150.38,25.56,148.85,25.98,146.6,26.2,146.6,90.2,146.6,90.35,146.17,91.06,145.75,91.76,144.4,92.55,143.05,93.34,140.52,93.97,138,94.6,133.8,94.6,133.8,82.8,84.2,82.8,84.2,162.2,144,162.2,144,101.4,143.998,101.398] ) );
      shape.graphics.endFill();
      shape.graphics.beginFill( 0xFFFFFF,1 );
      shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,2,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,2,1,2,3,3,3,3,2,2,2,2,2] ), $.toNumberVector( [185,82,197.9,74.42,210.7,64.52,223.49,54.61,234.72,43.7,245.96,32.79,254.89,21.53,263.82,10.27,269,0,291.4,6,291.17,6.9,290.62,7.53,290.07,8.15,289.1,8.6,288.12,9.05,286.67,9.38,285.22,9.7,283.2,10,290.7,18.55,300.23,26.69,309.77,34.83,320.92,42.12,332.08,49.42,344.65,55.65,357.22,61.87,370.8,66.6,370.4,69.8,368.15,70.4,366.31,71.56,364.47,72.71,363.05,74.25,361.62,75.79,360.61,77.62,359.6,79.45,359,81.4,346.4,75.02,334.76,67.29,323.11,59.56,312.95,50.75,302.79,41.94,294.37,32.18,285.95,22.43,279.8,12,272.75,21.53,262.7,31.73,252.65,41.94,240.5,51.67,228.35,61.41,214.55,70.08,200.75,78.75,186.2,85.2,185,82,185,81.999,336.4,107.4,346.6,94.6,365.4,108,364.8,109.05,364.04,109.83,363.28,110.62,362.17,111.15,361.07,111.67,359.52,111.93,357.97,112.2,355.8,112.2,260.2,112.2,269.6,115.4,269.22,116.22,268.6,116.79,267.98,117.35,267.05,117.67,266.11,117.99,264.82,118.07,263.52,118.15,261.8,118,259.02,123.25,255.46,129.23,251.89,135.21,247.82,141.4,243.75,147.58,239.33,153.72,234.9,159.85,230.4,165.4,240.07,165.1,251.15,164.66,262.24,164.22,274.35,163.7,286.46,163.17,299.42,162.58,312.37,162,325.8,161.4,322.5,157.5,318.81,153.78,315.12,150.06,311.27,146.67,307.43,143.28,303.55,140.27,299.67,137.27,296,134.8,297.6,132.6,313.5,137.85,324.11,143.99,334.72,150.13,341.1,156.25,347.47,162.36,350.13,167.98,352.8,173.6,352.8,177.8,352.8,179.67,352.3,181.22,351.8,182.76,350.92,183.87,350.04,184.98,348.83,185.59,347.62,186.2,346.2,186.2,345.52,186.2,344.81,186.05,344.1,185.9,343.37,185.62,342.64,185.34,341.89,184.93,341.15,184.52,340.4,184,339.57,181.82,338.42,179.58,337.28,177.33,335.87,175.05,334.46,172.76,332.83,170.44,331.2,168.12,329.4,165.8,319.5,167.22,307.48,168.76,295.46,170.31,281.1,172,266.73,173.68,249.92,175.53,233.1,177.37,213.6,179.4,213.15,180.3,212.59,180.98,212.03,181.66,211.4,182.17,210.76,182.68,210.05,183.02,209.35,183.37,208.6,183.6,198,166.2,200.55,166.2,203.53,166.16,206.52,166.12,209.87,166.05,213.23,165.97,216.93,165.86,220.62,165.75,224.6,165.6,227.67,159.6,230.8,152.84,233.93,146.08,236.87,139.12,239.82,132.16,242.46,125.29,245.1,118.42,247.2,112.2,192.4,112.2,191,107.4,336.4,107.4,336.398,107.398,309,59.2,327.4,72,326.8,73.12,326.01,73.92,325.23,74.72,324.12,75.22,323.02,75.73,321.52,75.96,320.02,76.2,318,76.2,225.2,76.2,223.8,71.4,299.2,71.4,309,59.2,308.998,59.199] ) );
      shape.graphics.endFill();
      shape.graphics.beginFill( 0xFFFFFF,1 );
      shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [492,142.4,492,147.2,492.72,150.45,493.45,153.71,495.4,155.7,497.35,157.68,500.77,158.54,504.2,159.4,509.6,159.4,514.25,159.4,517.32,159.36,520.4,159.32,522.5,159.22,524.6,159.13,526.02,158.98,527.45,158.82,528.8,158.6,529.7,158.45,530.63,158.21,531.56,157.97,532.5,157.75,533.44,157.52,534.37,157.36,535.3,157.2,536.2,157.2,536.87,157.2,538.74,157.85,540.6,158.5,542.57,159.7,544.54,160.9,546.07,162.6,547.6,164.3,547.6,166.4,547.6,168.35,545.52,169.5,543.44,170.65,539.52,171.25,535.6,171.85,529.96,172.02,524.32,172.2,517.2,172.2,507.07,172.2,500.09,170.29,493.1,168.38,488.77,164.57,484.44,160.77,482.52,155.07,480.6,149.37,480.6,141.8,480.6,141.27,480.66,139.78,480.72,138.28,480.8,136.57,480.87,134.87,480.94,133.33,481,131.8,481,131.2,481,125.87,480.26,122.55,479.52,119.23,478.07,117.37,476.63,115.52,474.5,114.86,472.37,114.2,469.6,114.2,466.07,114.2,460.2,116.46,454.32,118.72,446.9,124.17,439.47,129.63,430.9,138.75,422.32,147.87,413.4,161.6,411.82,164,410.59,165.8,409.36,167.6,408.17,168.8,406.99,170,405.72,170.6,404.45,171.2,402.8,171.2,401.15,171.2,399.85,170.69,398.55,170.18,397.65,169.22,396.75,168.27,396.27,166.89,395.8,165.52,395.8,163.8,395.8,160.57,396.93,158.02,398.06,155.46,400.02,153.1,401.99,150.74,404.66,148.33,407.32,145.92,410.4,143,415.42,138.2,424.13,129.68,432.84,121.16,443.45,110.55,454.06,99.94,465.69,88.04,477.32,76.15,488.2,64.6,488.57,64.15,488.87,63.77,489.17,63.4,489.37,63.1,489.58,62.8,489.69,62.57,489.8,62.35,489.8,62.2,489.8,62.12,489.76,62.05,489.72,61.98,489.62,61.93,489.53,61.87,489.38,61.84,489.22,61.8,489,61.8,488.25,61.8,480.84,63.32,473.44,64.84,464.1,67.08,454.76,69.31,445.86,71.84,436.95,74.38,433.2,76.4,431.92,77.15,430.91,77.93,429.9,78.71,429,79.35,428.1,79.99,427.24,80.39,426.37,80.8,425.4,80.8,423.15,80.8,420.65,79.55,418.15,78.31,416.05,76.22,413.95,74.14,412.57,71.43,411.2,68.72,411.2,65.8,411.2,63.78,412.07,61.66,412.94,59.54,414.42,57.58,415.91,55.61,417.87,53.9,419.82,52.2,422,51,424,53,423.17,53.97,422.51,54.95,421.84,55.92,421.37,56.87,420.91,57.83,420.65,58.77,420.4,59.7,420.4,60.6,420.4,61.65,420.86,62.56,421.33,63.48,422.32,64.15,423.32,64.83,424.87,65.21,426.42,65.6,428.6,65.6,432.12,65.6,440.02,64.43,447.91,63.25,456.95,61.6,465.99,59.95,474.55,58.18,483.12,56.4,488,55.2,489.35,54.9,490.53,54.02,491.7,53.14,492.77,52.2,493.84,51.26,494.83,50.53,495.82,49.8,496.8,49.8,498.75,49.8,501.49,51.06,504.23,52.31,506.75,54.15,509.26,55.99,511.03,58.07,512.8,60.15,512.8,61.8,512.8,62.85,511.94,63.63,511.09,64.41,509.72,65.05,508.35,65.69,506.64,66.24,504.92,66.8,503.2,67.4,499.6,68.68,491.18,76.08,482.77,83.48,474,91.98,465.22,100.47,458.31,107.53,451.4,114.6,450.8,115.2,451.6,115.4,455.2,113.15,458.43,111.65,461.67,110.15,464.57,109.25,467.48,108.35,470.08,107.97,472.67,107.6,475,107.6,479.27,107.6,482.49,109.05,485.72,110.5,487.87,113.5,490.03,116.5,491.11,121.1,492.2,125.7,492.2,132,492,142.4,491.999,142.397,475.4,27.4,474.35,27.47,473.3,27.55,472.25,27.62,471.22,27.67,470.19,27.73,469.18,27.76,468.17,27.8,467.2,27.8,460.37,27.8,454.64,26.76,448.91,25.72,444.42,23.7,439.94,21.67,436.8,18.69,433.65,15.7,432,11.8,435.6,9.4,437.25,11.5,439.72,13.07,442.19,14.65,445.47,15.7,448.76,16.75,452.84,17.27,456.92,17.8,461.8,17.8,465.55,17.8,469.16,17.52,472.77,17.24,476,16.9,479.22,16.56,481.94,16.28,484.65,16,486.6,16,490.8,16,493.92,17.03,497.04,18.07,499.1,19.62,501.16,21.18,502.18,23,503.2,24.82,503.2,26.4,503.2,28.2,501.68,29.09,500.17,29.98,497.82,30.37,495.48,30.77,492.65,30.87,489.82,30.97,487.2,31.2,483.3,31.65,478.67,32.84,474.05,34.02,469.25,35.6,464.45,37.17,459.75,38.96,455.05,40.75,451,42.4,449.6,39,452.15,38.02,455.63,36.58,459.11,35.13,462.72,33.55,466.34,31.98,469.71,30.45,473.07,28.93,475.4,27.8,475.4,27.4,475.398,27.399] ) );
      shape.graphics.endFill();
      shape.graphics.beginFill( 0xFFFFFF,1 );
      shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [609.4,96.4,615.25,93.1,621.59,90.34,627.93,87.59,634.3,85.6,640.68,83.61,646.87,82.51,653.05,81.4,658.6,81.4,673.38,81.4,683.35,85.18,693.32,88.95,699.38,95.27,705.43,101.59,708.02,109.83,710.6,118.07,710.6,127,710.6,137.27,706.23,146.21,701.86,155.15,693.5,161.77,685.14,168.39,672.97,172.19,660.8,176,645.2,176,636.13,176,628.68,173.97,621.24,171.94,615.93,168.47,610.62,165,607.71,160.39,604.8,155.77,604.8,150.6,604.8,145.87,606.84,141.63,608.87,137.38,612.68,134.17,616.49,130.97,621.93,129.08,627.38,127.2,634.2,127.2,641.25,127.2,647.98,129.78,654.7,132.37,659.95,136.62,665.2,140.88,668.4,146.35,671.6,151.82,671.6,157.6,671.6,158.2,671.53,158.75,671.46,159.31,671.33,159.8,671.2,160.29,671.01,160.69,670.83,161.1,670.6,161.4,676.23,159.52,680.96,155.93,685.7,152.34,689.13,147.67,692.56,143,694.48,137.58,696.4,132.15,696.4,126.6,696.4,118.12,694.27,111,692.14,103.88,687.45,98.72,682.77,93.57,675.31,90.68,667.85,87.8,657.2,87.8,652.1,87.8,643.11,89.64,634.12,91.48,623.8,96.07,613.49,100.67,603.15,108.47,592.8,116.27,585,128.2,584.03,129.7,583,131.29,581.96,132.89,580.78,134.2,579.6,135.51,578.23,136.35,576.85,137.2,575.2,137.2,573.78,137.2,572.54,136.36,571.3,135.53,570.38,134.27,569.46,133.02,568.93,131.54,568.4,130.07,568.4,128.8,568.4,126.4,569.52,124.17,570.64,121.94,572.23,119.97,573.82,118,575.58,116.34,577.33,114.67,578.6,113.4,584.83,107.25,595.07,97.02,605.31,86.79,616.88,75.2,628.45,63.61,640,52.03,651.55,40.45,660.4,31.6,661,31.07,661.42,30.62,661.84,30.17,662.1,29.8,662.37,29.42,662.48,29.12,662.6,28.82,662.6,28.6,662.6,28.3,662.46,28.11,662.32,27.91,662.05,27.8,661.79,27.69,661.42,27.64,661.05,27.6,660.6,27.6,659.25,27.6,653.2,28.67,647.15,29.74,639.63,31.37,632.11,33.01,624.74,34.94,617.38,36.87,613.4,38.6,611.6,39.42,610.5,40.22,609.4,41.01,608.5,41.62,607.6,42.24,606.65,42.62,605.7,43,604.2,43,600.83,43,597.66,41.34,594.49,39.67,592.03,37.05,589.57,34.42,588.09,31.19,586.6,27.95,586.6,24.8,586.6,23.75,586.83,22.55,587.05,21.34,587.63,20.12,588.21,18.91,589.22,17.74,590.23,16.57,591.8,15.6,592.8,16.2,592.58,18.6,593.25,20.65,593.92,22.7,595.33,24.2,596.73,25.7,598.79,26.55,600.85,27.4,603.4,27.4,608.05,27.4,616.04,26.55,624.03,25.69,632.35,24.47,640.68,23.26,647.84,21.92,655,20.57,658,19.6,659.28,19.15,660.41,18.22,661.54,17.29,662.55,16.35,663.57,15.41,664.47,14.71,665.38,14,666.2,14,669.2,14,672.42,15.54,675.64,17.07,678.3,19.25,680.97,21.42,682.68,23.79,684.4,26.15,684.4,27.8,684.4,29.67,683.35,30.65,682.3,31.63,680.5,32.47,678.7,33.32,676.3,34.41,673.9,35.5,671.2,37.6,662.8,44.12,654.02,51.81,645.24,59.49,636.95,67.27,628.67,75.06,621.31,82.4,613.95,89.75,608.4,95.6,609.4,96.4,609.404,96.398,645.8,165.6,647.6,165.6,649.5,165.52,651.39,165.44,653.3,165.27,655.22,165.1,657.11,164.84,659,164.57,660.8,164.2,660.5,163.82,660.21,163.44,659.92,163.05,659.68,162.6,659.43,162.15,659.26,161.61,659.08,161.07,659,160.4,658.55,155.22,656.15,150.48,653.75,145.74,650,142.12,646.25,138.5,641.45,136.35,636.65,134.2,631.4,134.2,627.65,134.2,624.37,135.25,621.09,136.29,618.65,138.22,616.22,140.16,614.81,142.89,613.4,145.62,613.4,149,613.4,154.02,616.39,157.24,619.37,160.47,624.05,162.32,628.74,164.18,634.5,164.89,640.25,165.6,645.8,165.6,645.804,165.598] ) );
      shape.graphics.endFill();

    return shape;
  },
  "信じて" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,2,1,2,3,3,3,3,2,2,2,2,2,1,2,3,3,3,3,2,2,2,2,2,1,2,2,2,2,3,3,3,3,2,2,1,2,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,1,3,3,3,3,2,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [0,102.8,6.3,94.17,12.69,82.57,19.08,70.97,25.02,57.55,30.97,44.12,36.2,29.45,41.42,14.77,45.4,0,66.2,6.6,65.9,7.42,65.38,8.09,64.86,8.75,63.97,9.2,63.09,9.65,61.78,9.86,60.47,10.07,58.6,10,56.57,15.55,54.37,21.01,52.16,26.47,49.8,31.8,47.44,37.12,44.93,42.29,42.42,47.45,39.8,52.4,47.2,55.2,46.97,55.87,46.48,56.46,45.99,57.06,45.22,57.52,44.45,57.99,43.4,58.32,42.35,58.65,41,58.8,41,180.8,40.92,181.17,39.96,181.91,39,182.64,37.5,183.37,36,184.1,34.14,184.65,32.27,185.2,30.4,185.2,28,185.2,28,73,25.07,77.57,22.04,81.88,19.01,86.18,15.88,90.17,12.74,94.17,9.52,97.83,6.3,101.5,3,104.8,0,102.8,0,102.799,170,30.2,187.6,42.8,187,43.92,186.21,44.72,185.42,45.52,184.3,46.02,183.17,46.53,181.63,46.77,180.1,47,178,47,57.2,47,55.8,42.2,160.8,42.2,170,30.2,169.997,30.2,154.4,58,171.6,70.2,171,71.33,170.21,72.12,169.43,72.92,168.32,73.43,167.22,73.93,165.72,74.17,164.22,74.4,162.2,74.4,69.8,74.4,68.6,69.6,145.6,69.6,154.4,58,154.397,58,69.8,101.8,68.6,97,145.6,97,154.4,85.4,171.6,97.6,171,98.72,170.21,99.52,169.43,100.32,168.32,100.82,167.22,101.33,165.72,101.56,164.22,101.8,162.2,101.8,69.8,101.8,69.799,101.799,153,124.6,159,116.6,176,129,175.55,129.52,174.75,130.07,173.95,130.61,172.9,131.1,171.85,131.59,170.6,131.98,169.35,132.37,168,132.6,168,179,168,179.15,167.23,179.85,166.47,180.56,164.87,181.35,163.28,182.13,160.83,182.77,158.37,183.4,155,183.4,155,171.4,82.6,171.4,82.6,180.4,82.6,180.47,82.15,181.2,81.69,181.93,80.32,182.77,78.96,183.62,76.44,184.31,73.92,185,69.8,185,69.8,118.2,83.8,124.6,153,124.6,152.998,124.598,169,13.8,168.4,14.93,167.61,15.72,166.83,16.52,165.72,17.02,164.62,17.53,163.12,17.77,161.62,18,159.6,18,72.4,18,71.2,13.2,142.6,13.2,151.8,1.4,169,13.8,168.997,13.8,82.6,166.6,155,166.6,155,129.4,82.6,129.4,82.6,166.6,82.599,166.598] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [216.8,18,217.48,16.27,218.83,14.87,220.19,13.47,221.95,12.48,223.71,11.48,225.74,10.94,227.78,10.4,229.8,10.4,233.25,10.4,237.15,11.4,241.06,12.4,244.38,14.2,247.69,16,249.91,18.5,252.13,21,252.2,24,252.2,25.73,251.54,26.98,250.88,28.24,249.9,30,248.92,31.76,247.81,34.52,246.7,37.27,245.8,42,244.75,48.08,243.68,58.04,242.6,68,241.7,79.4,240.8,90.8,240.18,102.41,239.55,114.02,239.4,123.4,239.4,134.8,242.09,141.97,244.77,149.15,249.78,153.2,254.78,157.25,261.93,158.72,269.08,160.2,278,160.2,289.18,160.2,299.51,157.25,309.85,154.29,319.15,148.27,328.45,142.26,336.61,133.11,344.77,123.97,351.6,111.6,355.8,113.8,349.57,129.47,341.22,140.68,332.86,151.89,322.82,159.07,312.79,166.25,301.32,169.63,289.85,173,277.4,173,267.35,173,258.34,170.78,249.34,168.55,242.55,163.02,235.76,157.49,231.78,148.11,227.8,138.72,227.8,124.4,227.8,114.35,228.3,101.91,228.8,89.47,229.55,76.5,230.3,63.52,231.18,50.94,232.05,38.35,232.8,28,232.8,26.8,232.8,25.98,232.57,24.56,232.34,23.14,231.4,21.78,230.46,20.41,228.58,19.4,226.7,18.4,223.4,18.4,222.65,18.4,221.85,18.43,221.04,18.47,220.25,18.53,219.46,18.58,218.73,18.65,218,18.73,217.4,18.8,216.8,18,216.801,18,292.4,33.6,301.4,36.75,307.21,40.2,313.02,43.65,316.4,46.95,319.77,50.25,321.09,53.17,322.4,56.1,322.4,58.2,322.4,59.55,322.04,60.72,321.69,61.89,321.05,62.75,320.41,63.61,319.53,64.11,318.65,64.6,317.6,64.6,316.4,64.6,315.38,64.26,314.37,63.92,313.52,63.23,312.68,62.53,312,61.48,311.32,60.43,310.8,59,309.9,56.75,307.97,53.88,306.04,51,303.32,48,300.6,45,297.21,42.13,293.82,39.25,290,37,292.4,33.6,292.399,33.6,315,18.8,324,21.95,329.81,25.4,335.62,28.86,339,32.17,342.37,35.49,343.69,38.46,345,41.42,345,43.6,345,44.88,344.67,46,344.34,47.13,343.72,47.98,343.1,48.82,342.21,49.31,341.32,49.8,340.2,49.8,339.07,49.8,338.1,49.46,337.12,49.13,336.3,48.45,335.47,47.78,334.8,46.76,334.12,45.75,333.6,44.4,332.7,42.08,330.77,39.19,328.84,36.31,326.12,33.33,323.4,30.34,320.01,27.5,316.62,24.65,312.8,22.4,315,18.8,314.999,18.8] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [379.2,30.4,379.58,32.8,380.77,34.76,381.96,36.71,383.78,38.1,385.6,39.49,387.95,40.24,390.3,41,393,41,394.28,41,396.2,40.86,398.13,40.71,400.3,40.45,402.48,40.19,404.7,39.82,406.93,39.45,408.8,39,414.73,37.8,425.89,35.76,437.06,33.72,450.13,31.53,463.2,29.33,476.5,27.33,489.8,25.32,500,24.2,502.25,23.9,504.35,23.39,506.44,22.89,508.23,22.25,510.01,21.61,511.39,20.88,512.78,20.15,513.6,19.4,519.83,20.6,524.2,21.91,528.57,23.22,531.33,24.77,534.08,26.33,535.34,28.2,536.6,30.07,536.6,32.4,536.6,33.67,535.99,34.49,535.39,35.31,534.3,35.78,533.21,36.24,531.71,36.42,530.2,36.6,528.4,36.6,526.75,36.6,524.87,36.48,522.99,36.35,521,36.2,519.01,36.05,516.98,35.92,514.95,35.8,513,35.8,504.98,35.8,496.25,39.32,487.51,42.84,479.45,48.37,471.39,53.91,464.68,60.69,457.98,67.47,454,74,451.53,77.75,449.37,82.73,447.22,87.72,445.63,93.47,444.03,99.23,443.12,105.53,442.2,111.82,442.2,118.2,442.2,128.85,445.27,135.89,448.35,142.92,453.73,147.35,459.11,151.77,466.42,154.08,473.73,156.4,482.2,157.6,484.3,157.9,486.57,157.95,488.85,158.01,490.93,158.05,493.01,158.08,494.72,158.22,496.43,158.35,497.4,158.8,499.95,159.85,501.74,161.08,503.53,162.3,504.65,163.67,505.78,165.04,506.29,166.53,506.8,168.02,506.8,169.6,506.8,170.87,506.21,171.78,505.62,172.69,504.48,173.27,503.33,173.85,501.65,174.12,499.98,174.4,497.8,174.4,497.13,174.4,496.41,174.36,495.7,174.33,494.95,174.27,494.2,174.22,493.41,174.14,492.63,174.07,491.8,174,473.5,171.9,461.62,167.68,449.74,163.45,442.8,156.72,435.87,149.99,433.13,140.56,430.4,131.12,430.4,118.6,430.4,104.2,435.32,91.42,440.24,78.65,448.3,67.85,456.37,57.05,466.68,48.4,477,39.75,487.8,33.6,487.6,33,478.83,33.9,465.92,36.17,453.01,38.43,440.3,41.37,427.59,44.32,417.23,47.6,406.88,50.87,403.2,53.8,402.15,54.47,401.15,55.12,400.14,55.77,399.05,56.27,397.97,56.78,396.74,57.09,395.5,57.4,394,57.4,390.78,57.4,387.34,55.59,383.91,53.78,381.08,51.02,378.25,48.27,376.43,45,374.6,41.72,374.6,38.8,374.6,37.38,374.83,36.05,375.05,34.72,375.48,33.6,375.91,32.47,376.54,31.6,377.18,30.72,378,30.2,379.2,30.4,379.203,30.4] ) );
    shape.graphics.endFill();

    return shape;
  },
  "1度だけ" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,2,2,3,3,3,3,2,2] ), $.toNumberVector( [-44,-155.6,-44,-168.8,-45,-178.33,-46,-187.85,-48.4,-194,-50.8,-200.15,-54.8,-203.08,-58.8,-206,-64.8,-206,-70.5,-206,-76.59,-204.75,-82.68,-203.5,-89.5,-201.4,-96.32,-199.3,-104.06,-196.55,-111.8,-193.8,-120.8,-190.8,-126.4,-222.8,-99.4,-232.1,-76.8,-240.69,-54.2,-249.28,-34.4,-257.9,-14.6,-266.53,3.2,-275.56,21,-284.6,38.4,-294.8,50.4,-288.4,50.4,195.6,50.4,217.8,52.26,231.07,54.12,244.35,61.7,251.4,69.27,258.45,84.49,260.62,99.7,262.8,126.4,262.8,126.4,294.8,-124.8,294.8,-124.8,262.8,-96.3,262.8,-80.11,260.62,-63.92,258.45,-55.9,251.4,-47.87,244.35,-45.94,231.07,-44,217.8,-44,195.6,-44,-155.6,-44,-155.601] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-447.72,94.88,-446.44,96.97,-444.98,98.58,-443.51,100.19,-441.67,101.27,-439.83,102.36,-437.54,102.92,-435.24,103.47,-432.32,103.47,-429.69,103.47,-426.55,103.23,-423.4,102.99,-420.2,102.57,-416.99,102.16,-413.95,101.62,-410.92,101.07,-408.52,100.47,-408.37,99.95,-407.82,97.42,-407.27,94.89,-406.67,91.32,-406.07,87.76,-405.6,83.66,-405.12,79.55,-405.12,75.88,-405.12,73.03,-405.57,71.11,-406.02,69.19,-406.92,68.03,-407.82,66.86,-409.17,66.37,-410.52,65.88,-412.32,65.88,-413.3,65.88,-414.24,65.89,-415.19,65.91,-416.15,66,-417.1,66.09,-418.09,66.3,-419.07,66.5,-420.12,66.88,-420.92,65.47,-420.32,64.13,-419.4,62.71,-418.49,61.29,-416.9,60.13,-415.3,58.96,-412.85,58.22,-410.4,57.47,-406.72,57.47,-403.65,57.47,-400.07,58.27,-396.5,59.06,-393.45,60.5,-390.39,61.94,-388.36,63.97,-386.32,66,-386.32,68.47,-386.32,69.9,-386.69,70.85,-387.06,71.79,-387.62,72.6,-388.18,73.41,-388.85,74.24,-389.52,75.08,-390.12,76.28,-390.72,77.48,-391.29,79.08,-391.85,80.69,-392.55,83.15,-393.24,85.61,-394.14,89.13,-395.05,92.65,-396.32,97.67,-389.27,95.95,-383.58,94.02,-377.9,92.08,-373.62,89.85,-369.35,87.62,-366.51,85.05,-363.67,82.47,-362.32,79.47,-360.52,79.28,-357.75,79.43,-354.53,79.6,-351.3,79.78,-348.55,80.38,-345.79,80.98,-343.96,82.2,-342.12,83.42,-342.12,85.67,-342.12,87.55,-343.42,89.1,-344.72,90.64,-347.12,92.05,-349.52,93.46,-352.92,94.82,-356.32,96.17,-360.52,97.67,-365.1,99.32,-370.12,100.88,-375.14,102.44,-380.15,103.82,-385.15,105.21,-389.91,106.39,-394.67,107.57,-398.72,108.47,-401.2,117.85,-404.96,130.36,-408.73,142.86,-412.67,155.27,-416.61,167.69,-420.15,178.39,-423.7,189.1,-425.72,194.87,-428.65,203.65,-430.66,209.34,-432.68,215.03,-434.5,218.35,-436.31,221.67,-438.29,222.97,-440.27,224.27,-443.12,224.27,-444.39,224.27,-445.27,223.83,-446.15,223.39,-446.7,222.4,-447.24,221.4,-447.48,219.8,-447.72,218.2,-447.72,215.87,-447.72,214.82,-447.68,213.62,-447.65,212.42,-447.57,211.05,-447.5,209.68,-447.38,208.14,-447.27,206.6,-447.12,204.87,-444.12,200.82,-441.56,196.61,-439.01,192.39,-436.87,188.25,-434.73,184.1,-433,180.15,-431.27,176.2,-429.92,172.67,-427.9,167.42,-425.12,159.53,-422.34,151.63,-419.55,142.95,-416.75,134.27,-414.31,125.73,-411.87,117.2,-410.52,110.67,-413.52,111.27,-416.29,111.72,-419.06,112.17,-421.57,112.47,-424.08,112.77,-426.33,112.92,-428.57,113.07,-430.52,113.07,-436.15,113.07,-439.91,111.44,-443.68,109.8,-445.95,107.32,-448.21,104.85,-449.17,101.94,-450.12,99.02,-450.12,96.47,-447.72,94.88,-447.719,94.875,-361.92,163.87,-363.35,166.35,-364.56,168.95,-365.76,171.55,-366.65,174.2,-367.53,176.84,-368.02,179.48,-368.52,182.12,-368.52,184.67,-368.52,193,-364.31,197.51,-360.11,202.02,-353.77,204.1,-347.43,206.18,-340,206.53,-332.57,206.87,-326.12,206.87,-323.87,206.87,-321.9,206.83,-319.93,206.79,-318.15,206.7,-316.37,206.6,-314.73,206.45,-313.1,206.3,-311.52,206.07,-310.02,206,-308.65,205.77,-307.28,205.54,-306.12,205.3,-304.96,205.05,-304.04,204.86,-303.12,204.67,-302.52,204.67,-300.12,204.67,-297.67,205.34,-295.21,206,-293.22,207.15,-291.23,208.29,-289.98,209.82,-288.72,211.35,-288.72,213.07,-288.72,215.25,-290.55,216.58,-292.38,217.92,-295.85,218.65,-299.32,219.38,-304.33,219.63,-309.35,219.87,-315.72,219.87,-329,219.87,-340,218.72,-351,217.56,-358.9,214.22,-366.79,210.89,-371.16,204.85,-375.52,198.82,-375.52,189.07,-375.52,185.85,-374.88,182.46,-374.23,179.08,-372.92,175.65,-371.61,172.22,-369.61,168.8,-367.62,165.37,-364.92,162.07,-361.92,163.87,-361.921,163.873,-346.52,144.07,-343.67,141.67,-340.42,139.18,-337.18,136.69,-333.9,134.32,-330.61,131.96,-327.48,129.84,-324.35,127.72,-321.72,126.07,-327.27,125.77,-332.74,126.15,-338.21,126.52,-343.75,127.7,-349.28,128.88,-354.94,130.94,-360.6,133,-366.52,136.07,-368.92,133.07,-362.77,127.97,-356.17,124.49,-349.58,121.01,-342.7,118.87,-335.81,116.74,-328.73,115.81,-321.65,114.88,-314.52,114.88,-310.1,114.88,-306.23,115.73,-302.37,116.59,-299.5,117.97,-296.63,119.36,-294.98,121.12,-293.32,122.87,-293.32,124.67,-293.32,125.95,-293.68,126.73,-294.03,127.52,-294.67,127.95,-295.31,128.38,-296.19,128.53,-297.07,128.67,-298.12,128.67,-298.8,128.67,-299.54,128.64,-300.28,128.61,-301.05,128.57,-301.82,128.54,-302.59,128.51,-303.37,128.47,-304.12,128.47,-308.32,128.47,-313.09,130,-317.85,131.52,-322.9,134.05,-327.94,136.58,-333.12,139.86,-338.3,143.15,-343.32,146.67,-346.52,144.07,-346.521,144.074,-336.72,58.27,-327.87,61.2,-322.08,64.56,-316.28,67.92,-312.87,71.2,-309.46,74.48,-308.09,77.43,-306.72,80.37,-306.72,82.47,-306.72,83.75,-307.2,84.88,-307.67,86.01,-308.42,86.85,-309.17,87.69,-310.1,88.18,-311.02,88.67,-311.92,88.67,-313.2,88.67,-314.16,88.34,-315.13,88,-315.9,87.32,-316.66,86.65,-317.29,85.64,-317.92,84.62,-318.52,83.28,-319.5,80.88,-321.37,77.98,-323.25,75.09,-325.9,72.15,-328.54,69.21,-331.88,66.43,-335.22,63.65,-339.12,61.47,-336.72,58.27,-336.721,58.275,-311.12,47.68,-302.27,50.6,-296.48,53.93,-290.68,57.27,-287.27,60.55,-283.86,63.83,-282.49,66.83,-281.12,69.83,-281.12,72.08,-281.12,73.28,-281.56,74.36,-282,75.45,-282.7,76.27,-283.39,77.1,-284.24,77.59,-285.1,78.07,-285.92,78.07,-287.27,78.07,-288.28,77.74,-289.28,77.4,-290.05,76.72,-290.82,76.05,-291.41,75.04,-292,74.02,-292.52,72.67,-293.5,70.28,-295.41,67.38,-297.32,64.49,-300,61.55,-302.68,58.61,-306.05,55.83,-309.42,53.05,-313.32,50.88,-311.12,47.68,-311.122,47.676] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-204.32,141.47,-206.05,146.12,-208.16,151.53,-210.27,156.94,-212.37,162.22,-214.47,167.51,-216.36,172.24,-218.25,176.97,-219.52,180.27,-220.27,182.37,-220.96,184.63,-221.64,186.89,-222.17,189.02,-222.69,191.16,-223.01,193.04,-223.32,194.92,-223.32,196.27,-223.32,196.8,-223.13,198.1,-222.94,199.41,-222.72,200.87,-222.5,202.34,-222.31,203.64,-222.12,204.95,-222.12,205.47,-222.12,206.52,-222.34,207.44,-222.55,208.35,-223.1,209.02,-223.64,209.7,-224.57,210.09,-225.5,210.47,-226.92,210.47,-230.37,210.47,-234.43,207.37,-238.48,204.26,-241.97,197.77,-245.46,191.29,-247.79,181.28,-250.12,171.27,-250.12,157.47,-250.12,151.1,-249.57,145.2,-249.03,139.31,-248.15,133.85,-247.26,128.39,-246.15,123.36,-245.05,118.32,-243.92,113.67,-242.72,109.02,-241.6,104.75,-240.48,100.47,-239.62,96.55,-238.76,92.63,-238.24,89.07,-237.72,85.5,-237.72,82.28,-237.72,80.1,-238.07,77.54,-238.43,74.99,-239.35,72.78,-240.26,70.56,-241.85,69.06,-243.45,67.55,-245.92,67.48,-246.12,66.68,-245.3,65.85,-244.5,65.34,-243.7,64.83,-242.9,64.55,-242.09,64.27,-241.25,64.17,-240.42,64.08,-239.52,64.08,-236.97,64.08,-233.9,65.63,-230.83,67.18,-228.17,70.05,-225.51,72.92,-223.71,76.98,-221.92,81.05,-221.92,86.07,-221.92,87.42,-222.24,88.62,-222.56,89.82,-223.12,91,-223.68,92.18,-224.45,93.42,-225.22,94.65,-226.12,96.07,-227.99,98.92,-230.48,105.59,-232.96,112.26,-235.19,120.9,-237.43,129.54,-238.97,139.25,-240.52,148.95,-240.52,157.87,-240.52,162.97,-240.07,167.58,-239.61,172.19,-238.69,175.67,-237.78,179.16,-236.38,181.22,-234.99,183.27,-233.12,183.27,-232.14,183.27,-229.11,178.26,-226.08,173.25,-222.34,166.27,-218.61,159.3,-214.87,151.89,-211.12,144.47,-208.72,139.67,-204.32,141.47,-204.32,141.475,-157.52,63.08,-156.92,61.35,-155.86,59.98,-154.8,58.61,-153.4,57.65,-151.99,56.69,-150.29,56.19,-148.6,55.68,-146.72,55.68,-143.8,55.68,-139.96,56.58,-136.13,57.49,-132.7,59.18,-129.27,60.86,-126.89,63.27,-124.52,65.68,-124.52,68.67,-124.52,70.03,-124.8,71.22,-125.08,72.41,-125.42,73.88,-125.76,75.34,-126.04,77.28,-126.32,79.22,-126.32,82.07,-126.32,84.85,-126.25,88.07,-126.18,91.3,-126.07,94.82,-125.96,98.35,-125.82,102.1,-125.67,105.85,-125.52,109.67,-122.52,109.07,-118.84,108.25,-115.15,107.42,-111.8,106.22,-108.44,105.02,-105.92,103.37,-103.4,101.73,-102.72,99.48,-99.65,99.92,-96.51,100.26,-93.38,100.59,-90.85,101.22,-88.32,101.86,-86.72,103.02,-85.12,104.17,-85.12,106.28,-85.12,107.85,-85.92,108.96,-86.72,110.06,-88.22,110.93,-89.72,111.79,-91.87,112.52,-94.02,113.25,-96.72,114.08,-99.12,114.75,-102.25,115.48,-105.38,116.22,-109,116.95,-112.61,117.68,-116.61,118.38,-120.6,119.08,-124.72,119.67,-124.57,123.95,-124.46,128.34,-124.35,132.73,-124.27,137.25,-124.2,141.77,-124.16,146.42,-124.12,151.07,-124.12,155.87,-124.12,168.1,-126.56,178.78,-129.01,189.46,-135.57,198.55,-142.13,207.64,-153.65,215.13,-165.17,222.62,-183.32,228.47,-186.12,224.67,-171.94,218.22,-162.33,210.96,-152.72,203.69,-146.87,194.72,-141.02,185.76,-138.53,174.67,-136.05,163.57,-136.12,149.47,-136.12,146.4,-136.12,142.93,-136.13,139.46,-136.15,135.83,-136.16,132.19,-136.21,128.49,-136.25,124.8,-136.32,121.28,-139.92,121.73,-143.7,122.06,-147.47,122.4,-151.07,122.63,-154.67,122.85,-157.92,122.96,-161.17,123.08,-163.72,123.08,-167.92,123.08,-171.93,122.05,-175.93,121.03,-179.42,119.23,-182.91,117.43,-185.71,114.98,-188.52,112.53,-190.32,109.68,-188.12,106.68,-185.65,108.55,-183.03,109.97,-180.42,111.4,-177.57,112.35,-174.72,113.31,-171.58,113.79,-168.44,114.28,-164.92,114.28,-161.62,114.28,-157.76,114.1,-153.9,113.92,-150.07,113.6,-146.25,113.28,-142.76,112.84,-139.27,112.4,-136.72,111.88,-136.95,104.23,-137.26,97.51,-137.58,90.8,-138.05,85.45,-138.52,80.11,-139.17,76.36,-139.82,72.6,-140.72,70.88,-141.7,68.7,-143.05,67.24,-144.41,65.78,-146.02,64.9,-147.63,64.02,-149.44,63.65,-151.25,63.28,-153.12,63.28,-153.57,63.28,-154.05,63.31,-154.54,63.35,-155.05,63.4,-155.55,63.46,-156.07,63.53,-156.6,63.6,-157.12,63.68,-157.52,63.08,-157.521,63.075] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,1,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,2,2,1,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,1,3,3,3,3,3,3,3,3,2,2,1,2,2,2,2,2] ), $.toNumberVector( [141.99,-233.01,141.99,-165.81,141.99,-147.47,140.98,-126.56,139.97,-105.65,135.69,-84.47,131.42,-63.3,122.75,-43,114.09,-22.71,98.79,-5.61,93.99,-8.91,104,-26.24,109.76,-45.4,115.51,-64.57,118.4,-84.62,121.3,-104.68,122.05,-125.14,122.79,-145.6,122.79,-165.51,122.79,-250.11,145.59,-240.21,230.79,-240.21,230.79,-284.01,264.09,-281.01,263.87,-279.33,263.07,-278.06,262.27,-276.79,260.64,-275.84,259.01,-274.88,256.41,-274.18,253.82,-273.48,249.99,-272.91,249.99,-240.21,330.39,-240.21,344.79,-258.81,372.09,-239.31,371.19,-237.63,370.01,-236.43,368.82,-235.23,367.11,-234.48,365.39,-233.72,363.02,-233.36,360.66,-233.01,357.39,-233.01,141.99,-233.01,141.992,-233.013,314.49,-119.91,335.49,-100.11,334.59,-99.1,333.43,-98.41,332.26,-97.72,330.66,-97.3,329.05,-96.88,326.93,-96.69,324.81,-96.51,321.99,-96.51,316.82,-89.42,310.91,-82.95,305.01,-76.48,298.37,-70.6,291.73,-64.72,284.36,-59.43,276.99,-54.14,268.89,-49.41,280.14,-44.91,292.4,-41.34,304.67,-37.77,317.72,-35.01,330.77,-32.25,344.49,-30.26,358.22,-28.26,372.39,-26.91,372.09,-23.31,368.94,-22.75,366.22,-21.31,363.51,-19.88,361.37,-17.69,359.23,-15.49,357.75,-12.6,356.27,-9.7,355.59,-6.21,340.41,-8.69,326.19,-11.88,311.98,-15.07,298.82,-19.15,285.66,-23.23,273.58,-28.28,261.5,-33.32,250.59,-39.51,238.22,-33.66,224.46,-28.75,210.7,-23.84,195.65,-19.79,180.61,-15.74,164.32,-12.51,148.03,-9.29,130.59,-6.81,129.39,-12.51,144.69,-15.44,159.21,-19.1,173.73,-22.77,187.29,-27.21,200.85,-31.65,213.34,-36.9,225.84,-42.14,237.09,-48.21,229.67,-53.27,222.88,-59.07,216.1,-64.87,210.05,-71.42,204.01,-77.98,198.74,-85.29,193.48,-92.61,189.09,-100.71,155.49,-100.71,153.09,-107.91,300.39,-107.91,314.49,-119.91,314.494,-119.912,306.99,-128.91,306.99,-128.01,305.57,-126.82,304.14,-125.63,301.89,-124.56,299.64,-123.49,296.87,-122.75,294.09,-122.01,291.39,-122.01,287.79,-122.01,287.79,-136.41,214.59,-136.41,214.59,-127.11,214.59,-127,213.87,-125.95,213.15,-124.91,211.07,-123.7,208.98,-122.49,205.23,-121.5,201.47,-120.51,195.39,-120.51,195.39,-185.01,145.59,-185.01,143.49,-192.21,195.39,-192.21,195.39,-223.71,226.89,-221.01,226.67,-219.44,225.98,-218.24,225.3,-217.05,223.89,-216.17,222.48,-215.3,220.22,-214.73,217.97,-214.15,214.59,-213.81,214.59,-192.21,287.79,-192.21,287.79,-223.71,319.29,-221.01,319.07,-219.44,318.38,-218.24,317.7,-217.05,316.29,-216.17,314.89,-215.3,312.63,-214.73,310.37,-214.15,306.99,-213.81,306.99,-192.21,330.09,-192.21,343.59,-209.61,368.49,-191.61,367.59,-189.92,366.5,-188.68,365.41,-187.44,363.8,-186.62,362.2,-185.81,359.93,-185.41,357.65,-185.01,354.39,-185.01,306.99,-185.01,306.99,-128.91,306.993,-128.912,196.59,-100.71,201.54,-93.85,207.58,-87.66,213.62,-81.47,220.59,-75.96,227.57,-70.45,235.4,-65.61,243.24,-60.77,251.79,-56.61,258.99,-61.22,265.61,-66.29,272.22,-71.35,278.15,-76.86,284.09,-82.37,289.3,-88.34,294.5,-94.3,298.89,-100.71,196.59,-100.71,196.591,-100.711,214.59,-143.61,287.79,-143.61,287.79,-185.01,214.59,-185.01,214.59,-143.61,214.591,-143.612] ) );
    shape.graphics.endFill();

    return shape;
  },
  "すれ違う" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [-366.76,-176.09,-366.01,-177.82,-364.91,-179.28,-363.8,-180.75,-362.26,-181.82,-360.73,-182.88,-358.72,-183.49,-356.71,-184.09,-354.16,-184.09,-350.49,-184.09,-346.78,-183.13,-343.07,-182.16,-340.09,-180.57,-337.11,-178.97,-335.24,-176.92,-333.36,-174.87,-333.36,-172.69,-333.36,-171.42,-333.66,-170.41,-333.95,-169.4,-334.36,-168.52,-334.78,-167.64,-335.22,-166.81,-335.66,-165.99,-335.96,-165.09,-336.19,-164.19,-336.34,-162.86,-336.5,-161.52,-336.59,-159.52,-336.68,-157.51,-336.72,-154.71,-336.76,-151.92,-336.76,-148.09,-331.89,-148.47,-327.18,-148.77,-322.48,-149.07,-318.31,-149.29,-314.15,-149.52,-310.72,-149.67,-307.29,-149.82,-304.96,-149.89,-301.82,-150.04,-299.41,-150.46,-297,-150.88,-295.14,-151.59,-293.28,-152.3,-291.89,-153.32,-290.49,-154.34,-289.36,-155.69,-285.09,-154.57,-280.9,-153.11,-276.71,-151.66,-273.39,-149.92,-270.07,-148.17,-268.02,-146.16,-265.97,-144.14,-265.97,-141.89,-265.97,-141.14,-266.51,-140.52,-267.05,-139.89,-267.89,-139.44,-268.73,-138.99,-269.76,-138.74,-270.79,-138.49,-271.77,-138.49,-274.09,-138.49,-276.7,-138.88,-279.32,-139.26,-282.32,-139.77,-285.32,-140.27,-288.75,-140.77,-292.19,-141.27,-296.16,-141.49,-297.44,-141.57,-298.89,-141.61,-300.35,-141.65,-301.94,-141.67,-303.53,-141.69,-305.25,-141.69,-306.96,-141.69,-308.76,-141.69,-312.29,-141.69,-316.04,-141.65,-319.78,-141.61,-323.44,-141.52,-327.1,-141.42,-330.51,-141.27,-333.91,-141.12,-336.76,-140.89,-336.76,-138.87,-336.82,-133.58,-336.88,-128.3,-336.91,-122.32,-336.95,-116.34,-336.93,-110.94,-336.91,-105.54,-336.76,-103.29,-335.34,-101.04,-334.19,-98.27,-333.05,-95.5,-332.24,-91.92,-331.43,-88.34,-331,-83.8,-330.56,-79.27,-330.56,-73.49,-330.56,-61.72,-333.91,-51.37,-337.25,-41.03,-344.39,-32.44,-351.53,-23.85,-362.71,-17.19,-373.89,-10.52,-389.56,-6.09,-391.96,-10.09,-380.49,-14.52,-371.81,-20.61,-363.14,-26.69,-357.21,-33.74,-351.29,-40.79,-348.09,-48.46,-344.89,-56.12,-344.36,-63.69,-346.01,-61.14,-348.36,-59.14,-350.71,-57.13,-353.71,-55.74,-356.71,-54.36,-360.34,-53.62,-363.96,-52.89,-368.16,-52.89,-374.84,-52.89,-380.45,-55.29,-386.07,-57.69,-390.14,-61.87,-394.21,-66.05,-396.49,-71.71,-398.76,-77.37,-398.76,-83.89,-398.76,-91.09,-396.19,-97.24,-393.62,-103.39,-389.14,-107.89,-384.66,-112.39,-378.6,-114.94,-372.54,-117.49,-365.56,-117.49,-363.01,-117.49,-360.53,-117.16,-358.05,-116.82,-355.76,-116.14,-353.48,-115.47,-351.45,-114.46,-349.42,-113.44,-347.76,-112.09,-347.76,-115.99,-347.8,-119.87,-347.84,-123.75,-347.91,-127.37,-347.99,-130.99,-348.1,-134.23,-348.21,-137.47,-348.37,-140.09,-356.09,-139.42,-364.66,-138.44,-373.22,-137.46,-381.64,-136.17,-390.06,-134.87,-397.84,-133.26,-405.61,-131.64,-411.76,-129.69,-413.56,-129.09,-414.74,-128.46,-415.91,-127.82,-416.94,-127.29,-417.97,-126.77,-419.1,-126.43,-420.24,-126.09,-421.96,-126.09,-424.74,-126.17,-427.96,-127.89,-431.18,-129.62,-433.94,-132.24,-436.69,-134.87,-438.53,-138.02,-440.36,-141.17,-440.36,-144.09,-440.36,-145.37,-440.11,-146.49,-439.86,-147.62,-439.41,-148.59,-438.96,-149.57,-438.34,-150.39,-437.71,-151.22,-436.96,-151.89,-435.76,-151.89,-435.61,-150.77,-434.99,-148.78,-434.36,-146.8,-432.54,-144.87,-430.72,-142.94,-427.35,-141.51,-423.99,-140.09,-418.36,-140.09,-414.61,-140.09,-404.79,-141.05,-394.96,-142,-383.84,-143.22,-372.72,-144.44,-362.71,-145.58,-352.69,-146.72,-348.57,-147.09,-349.02,-156.24,-349.46,-161.85,-349.9,-167.47,-351.06,-170.54,-352.23,-173.62,-354.47,-174.65,-356.71,-175.69,-360.76,-175.69,-361.44,-175.69,-362.11,-175.66,-362.79,-175.62,-363.46,-175.57,-364.14,-175.51,-364.81,-175.44,-365.49,-175.37,-366.16,-175.29,-366.76,-176.09,-366.764,-176.091,-344.96,-90.09,-344.96,-93.24,-346.25,-96.76,-347.53,-100.28,-350.11,-103.24,-352.7,-106.2,-356.61,-108.15,-360.51,-110.09,-365.76,-110.09,-370.04,-110.09,-373.92,-108.45,-377.8,-106.82,-380.74,-103.59,-383.68,-100.37,-385.42,-95.58,-387.16,-90.79,-387.16,-84.49,-387.16,-79.24,-385.3,-75.15,-383.44,-71.05,-380.51,-68.24,-377.59,-65.43,-374,-63.96,-370.41,-62.49,-366.96,-62.49,-360.44,-62.49,-356.19,-64.44,-351.93,-66.39,-349.44,-69.99,-346.95,-73.59,-345.95,-78.69,-344.96,-83.79,-344.96,-90.09,-344.964,-90.092] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-99.56,-109.49,-99.56,-109.42,-99.73,-107.37,-99.9,-105.32,-100.16,-101.94,-100.43,-98.57,-100.74,-94.19,-101.06,-89.82,-101.36,-85.09,-101.74,-80.37,-102.1,-75.58,-102.46,-70.8,-102.74,-66.62,-103.02,-62.44,-103.19,-59.19,-103.36,-55.94,-103.36,-54.29,-103.36,-49.04,-102.73,-45.23,-102.09,-41.42,-100.81,-38.94,-99.54,-36.47,-97.63,-35.28,-95.71,-34.09,-93.16,-34.09,-90.54,-34.09,-87.63,-34.74,-84.71,-35.39,-81.56,-36.87,-78.41,-38.35,-75.05,-40.76,-71.69,-43.17,-68.16,-46.69,-65.16,-44.49,-68.24,-38.87,-71.61,-34.45,-74.98,-30.03,-78.79,-26.97,-82.59,-23.91,-86.9,-22.3,-91.21,-20.69,-96.16,-20.69,-101.94,-20.69,-105.91,-22.98,-109.88,-25.27,-112.34,-29.39,-114.79,-33.52,-115.88,-39.26,-116.96,-44.99,-116.96,-51.89,-116.96,-59.54,-116.51,-67.63,-116.06,-75.72,-115.44,-83.32,-114.82,-90.91,-114.18,-97.54,-113.54,-104.17,-113.16,-108.89,-113.09,-110.32,-113.02,-111.71,-112.94,-113.1,-112.89,-114.47,-112.83,-115.84,-112.8,-117.19,-112.76,-118.54,-112.76,-119.89,-112.76,-124.24,-113.33,-128.07,-113.89,-131.89,-115.49,-134.74,-117.08,-137.59,-119.93,-139.24,-122.79,-140.89,-127.36,-140.89,-134.41,-140.89,-142.13,-138.05,-149.84,-135.21,-158.01,-130.02,-166.19,-124.82,-174.73,-117.52,-183.26,-110.22,-191.96,-101.29,-192.11,-99.27,-192.26,-96.69,-192.4,-94.12,-192.51,-91.49,-192.63,-88.87,-192.69,-86.44,-192.76,-84.02,-192.76,-82.29,-192.76,-77.34,-192.75,-71.69,-192.74,-66.04,-192.66,-60.02,-192.59,-54,-192.43,-47.78,-192.26,-41.57,-191.96,-35.49,-191.81,-33.77,-191.58,-31.83,-191.34,-29.89,-191.11,-27.92,-190.89,-25.95,-190.73,-24.05,-190.56,-22.14,-190.56,-20.49,-190.56,-18.77,-191.44,-16.77,-192.33,-14.77,-193.71,-13.07,-195.1,-11.36,-196.81,-10.23,-198.51,-9.09,-200.16,-9.09,-201.66,-9.09,-202.76,-10.34,-203.86,-11.59,-204.59,-13.67,-205.32,-15.75,-205.7,-18.46,-206.09,-21.17,-206.16,-24.09,-206.16,-27.24,-206.65,-30.24,-207.14,-33.23,-208.56,-36.79,-209.99,-40.36,-212.58,-44.85,-215.16,-49.34,-219.36,-55.49,-217.16,-57.09,-215.51,-55.07,-213.51,-52.94,-211.51,-50.81,-209.69,-49.07,-207.87,-47.32,-206.5,-46.21,-205.14,-45.09,-204.76,-45.09,-204.39,-45.09,-204.06,-45.38,-203.73,-45.67,-203.49,-46.49,-203.25,-47.32,-203.1,-48.81,-202.96,-50.29,-202.96,-52.69,-202.96,-57.64,-202.9,-62.76,-202.83,-67.87,-202.71,-72.74,-202.6,-77.62,-202.46,-82.06,-202.31,-86.49,-202.16,-90.09,-205.91,-86.12,-209.58,-81.92,-213.26,-77.73,-216.69,-73.49,-220.12,-69.25,-223.23,-65.06,-226.34,-60.87,-228.96,-56.89,-230.24,-55.02,-231.29,-53.16,-232.34,-51.3,-233.46,-49.82,-234.59,-48.34,-235.94,-47.42,-237.29,-46.49,-239.16,-46.49,-240.89,-46.49,-242.13,-47.16,-243.38,-47.83,-244.19,-49.14,-244.99,-50.46,-245.38,-52.4,-245.76,-54.34,-245.76,-56.89,-245.76,-57.94,-245.64,-58.7,-245.51,-59.46,-245.04,-60.27,-244.57,-61.07,-243.65,-62.1,-242.74,-63.12,-241.16,-64.69,-235.01,-70.77,-228.73,-77.22,-222.45,-83.68,-217.01,-89.94,-211.58,-96.21,-207.47,-101.99,-203.36,-107.77,-201.56,-112.49,-201.34,-115.12,-201.18,-117.85,-201.02,-120.59,-200.89,-123.27,-200.76,-125.95,-200.63,-128.5,-200.51,-131.04,-200.36,-133.29,-201.04,-133.22,-201.9,-133.05,-202.76,-132.87,-203.66,-132.67,-204.56,-132.46,-205.43,-132.25,-206.29,-132.04,-206.96,-131.89,-213.49,-130.09,-217.74,-128.32,-221.99,-126.55,-224.49,-124.62,-226.98,-122.69,-227.97,-120.5,-228.96,-118.32,-228.96,-115.69,-228.96,-115.02,-228.89,-114.31,-228.82,-113.6,-228.69,-112.87,-228.56,-112.14,-228.37,-111.39,-228.19,-110.64,-227.96,-109.89,-231.56,-108.29,-232.39,-110.84,-233.34,-112.66,-234.28,-114.47,-235.09,-116.04,-235.89,-117.62,-236.43,-119.21,-236.96,-120.79,-236.96,-122.89,-236.96,-125.52,-236.23,-127.82,-235.51,-130.12,-233.99,-131.99,-232.47,-133.87,-230.13,-135.27,-227.79,-136.67,-224.56,-137.49,-221.49,-138.24,-218.4,-138.98,-215.31,-139.72,-212.46,-140.42,-209.61,-141.11,-207.13,-141.74,-204.64,-142.37,-202.76,-142.89,-202.31,-143.04,-201.87,-143.19,-201.43,-143.34,-201.01,-143.49,-200.6,-143.64,-200.23,-143.79,-199.86,-143.94,-199.56,-144.09,-199.49,-145.97,-199.39,-148.31,-199.28,-150.65,-199.19,-153.09,-199.1,-155.53,-199.03,-157.87,-198.96,-160.22,-198.96,-162.09,-198.96,-166.29,-199.65,-168.74,-200.34,-171.19,-201.76,-172.39,-203.19,-173.59,-205.38,-173.79,-207.56,-173.99,-210.56,-173.69,-210.96,-175.49,-209.99,-176.54,-208.8,-177.42,-207.61,-178.31,-206.26,-178.94,-204.91,-179.58,-203.43,-179.94,-201.94,-180.29,-200.36,-180.29,-197.66,-180.29,-194.54,-179.21,-191.43,-178.12,-188.76,-176.24,-186.1,-174.37,-184.33,-171.86,-182.56,-169.34,-182.56,-166.49,-182.56,-164.62,-183.06,-163.33,-183.55,-162.04,-184.26,-160.69,-184.98,-159.34,-185.77,-157.61,-186.56,-155.87,-187.16,-153.09,-187.31,-152.19,-187.43,-151.15,-187.54,-150.1,-187.64,-149.07,-187.73,-148.04,-187.81,-147.1,-187.89,-146.17,-187.96,-145.49,-186.61,-144.52,-185.35,-143.56,-184.09,-142.61,-183.11,-141.59,-182.14,-140.58,-181.55,-139.47,-180.96,-138.37,-180.96,-137.09,-180.96,-135.74,-181.79,-134.63,-182.61,-133.52,-183.79,-132.27,-184.97,-131.01,-186.28,-129.42,-187.59,-127.82,-188.56,-125.49,-189.31,-123.54,-189.8,-121.8,-190.28,-120.06,-190.61,-118.29,-190.95,-116.53,-191.21,-114.64,-191.46,-112.74,-191.76,-110.49,-183.29,-119.19,-174.11,-126.34,-164.93,-133.49,-156.14,-138.59,-147.35,-143.69,-139.48,-146.49,-131.61,-149.29,-125.76,-149.29,-116.69,-149.37,-111.46,-146.62,-106.23,-143.87,-103.59,-139.32,-100.95,-134.76,-100.26,-128.9,-99.57,-123.04,-99.57,-116.89,-99.57,-109.49,-99.563,-109.492] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,2,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,1,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,1,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,3,3,3,3,2,2,2] ), $.toNumberVector( [169.16,89.69,168.64,90.22,167.8,90.76,166.96,91.31,165.76,91.82,164.56,92.32,162.97,92.76,161.39,93.19,159.36,93.49,159.36,148.09,164.76,154.17,170.7,157.86,176.64,161.56,184.24,163.57,191.83,165.57,201.63,166.23,211.44,166.89,224.56,166.89,233.71,166.89,244.12,166.85,254.52,166.81,265.21,166.72,275.9,166.62,286.38,166.47,296.86,166.32,306.16,166.09,306.16,168.89,303.98,169.27,302.26,170.13,300.54,170.99,299.29,172.34,298.03,173.69,297.24,175.53,296.46,177.37,296.16,179.69,224.76,179.69,210.89,179.69,200.52,178.59,190.16,177.48,182.19,174.44,174.22,171.4,168.09,166.02,161.96,160.64,156.56,152.09,153.79,155.39,150.36,159.13,146.93,162.86,143.39,166.52,139.84,170.17,136.45,173.49,133.06,176.82,130.36,179.29,130.51,180.27,130.44,181,130.37,181.73,130.09,182.29,129.81,182.85,129.32,183.28,128.84,183.72,128.16,184.09,118.76,167.89,121.31,166.69,124.58,164.94,127.84,163.2,131.51,161.12,135.19,159.04,139.13,156.73,143.06,154.42,146.96,152.09,146.96,90.69,120.56,90.69,119.56,85.69,144.16,85.69,151.96,75.29,169.16,89.69,169.162,89.692,124.96,5.29,135.01,8.59,141.8,12.65,148.59,16.7,152.71,20.92,156.84,25.14,158.6,29.23,160.36,33.32,160.36,36.69,160.36,38.79,159.8,40.52,159.23,42.26,158.24,43.49,157.24,44.73,155.89,45.41,154.54,46.09,152.96,46.09,152.29,46.09,151.58,45.97,150.87,45.85,150.14,45.57,149.41,45.29,148.66,44.83,147.91,44.37,147.16,43.69,146.34,39.04,143.98,33.95,141.62,28.86,138.34,23.97,135.06,19.07,131.16,14.7,127.26,10.32,123.36,7.09,124.96,5.29,124.963,5.293,252.76,157.09,252.76,157.62,251.81,158.34,250.87,159.06,249.39,159.72,247.9,160.37,246.1,160.83,244.29,161.29,242.56,161.29,240.16,161.29,240.16,140.49,168.36,140.49,167.16,135.69,193.36,135.69,193.36,114.49,174.36,114.49,172.96,109.69,240.16,109.69,240.16,95.89,259.36,97.29,259.21,98.19,258.84,98.88,258.46,99.56,257.71,100.07,256.96,100.57,255.76,100.92,254.56,101.27,252.76,101.49,252.76,109.69,274.76,109.69,282.76,99.49,298.16,110.29,297.56,111.42,296.81,112.21,296.05,113.01,294.99,113.52,293.92,114.02,292.45,114.26,290.99,114.49,288.96,114.49,252.76,114.49,252.76,135.69,279.76,135.69,288.76,124.29,305.56,136.09,304.96,137.29,304.18,138.13,303.39,138.97,302.29,139.49,301.18,140.02,299.68,140.25,298.19,140.49,296.16,140.49,252.76,140.49,252.76,157.09,252.761,157.092,167.96,42.49,207.16,42.49,207.76,40.47,208.43,38.16,209.1,35.86,209.81,33.34,210.52,30.83,211.27,28.15,212.01,25.47,212.76,22.69,181.76,22.69,180.16,17.89,213.96,17.89,219.16,-1.51,237.76,1.69,237.54,2.67,237.03,3.39,236.52,4.11,235.64,4.59,234.75,5.08,233.46,5.35,232.16,5.62,230.36,5.69,226.76,17.89,261.36,17.89,267.36,10.49,284.36,22.09,283.84,22.69,282.96,23.28,282.09,23.87,280.96,24.39,279.84,24.92,278.51,25.36,277.19,25.79,275.76,26.09,275.76,42.49,282.16,42.49,289.96,32.29,304.96,43.09,304.44,44.22,303.72,45.02,303.01,45.81,301.96,46.32,300.91,46.82,299.45,47.06,297.99,47.29,295.96,47.29,169.36,47.29,167.96,42.49,167.963,42.493,278.56,93.69,278.49,94.14,277.38,94.82,276.27,95.5,274.66,96.14,273.05,96.78,271.19,97.24,269.34,97.69,267.76,97.69,265.76,97.69,265.76,92.09,196.56,92.09,196.56,94.89,196.56,94.97,196.11,95.6,195.66,96.24,194.31,96.97,192.96,97.7,190.49,98.29,188.01,98.89,183.96,98.89,183.96,56.29,197.76,62.29,263.96,62.29,269.76,55.09,286.16,66.49,285.71,67.02,284.94,67.56,284.18,68.1,283.19,68.59,282.19,69.08,281.01,69.47,279.84,69.87,278.56,70.09,278.56,93.69,278.561,93.692,196.56,87.29,265.76,87.29,265.76,67.09,196.56,67.09,196.56,87.29,196.563,87.293,205.76,135.69,240.16,135.69,240.16,114.49,205.76,114.49,205.76,135.69,205.762,135.691,263.36,22.69,225.36,22.69,224.61,25.32,223.83,27.95,223.05,30.59,222.26,33.12,221.47,35.65,220.69,38.02,219.91,40.39,219.16,42.49,263.36,42.49,263.36,22.69,263.361,22.693] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [340.77,64.89,340.17,65.87,339.75,66.77,339.33,67.67,339.07,68.49,338.8,69.32,338.68,70.07,338.57,70.82,338.57,71.49,338.57,72.99,339.14,74.18,339.72,75.37,340.77,76.19,341.82,77.02,343.29,77.46,344.77,77.89,346.57,77.89,350.39,77.89,356.44,75.14,362.5,72.39,370.09,69.09,377.68,65.79,386.47,63.04,395.27,60.29,404.57,60.29,415.74,60.29,422.73,63.88,429.72,67.47,433.64,73.57,437.56,79.66,438.96,87.71,440.36,95.77,440.36,104.69,440.36,117.22,435.41,129.03,430.46,140.85,420.56,150.94,410.67,161.03,395.82,168.87,380.97,176.72,361.17,181.29,358.77,177.09,375.94,171.24,388.43,162.96,400.92,154.67,409.04,145.02,417.16,135.36,421.06,124.86,424.97,114.37,424.97,104.09,424.97,96.67,424.29,90.08,423.61,83.5,421.34,78.57,419.07,73.64,414.76,70.76,410.44,67.89,403.17,67.89,398.06,67.89,392.75,69.34,387.44,70.79,382.12,73.32,376.79,75.85,371.55,79.28,366.32,82.72,361.37,86.69,359.42,88.19,357.83,89.69,356.24,91.19,354.67,92.39,353.09,93.59,351.35,94.34,349.62,95.09,347.37,95.09,344.44,95.09,341.36,93.6,338.27,92.12,335.74,89.64,333.21,87.17,331.59,83.95,329.97,80.74,329.97,77.29,329.97,75.04,330.68,72.94,331.39,70.84,332.52,69.02,333.64,67.2,335.03,65.73,336.42,64.27,337.77,63.29,340.77,64.89,340.766,64.893,369.37,38.49,372.51,36.77,376.81,34.47,381.11,32.18,385.14,30.04,389.17,27.91,392.23,26.29,395.29,24.67,395.97,24.29,396.11,24.14,396.26,24,396.4,23.85,396.51,23.72,396.63,23.59,396.7,23.48,396.76,23.37,396.76,23.29,396.76,23.14,396.66,23.03,396.55,22.92,396.36,22.84,396.18,22.77,395.92,22.73,395.66,22.69,395.37,22.69,386.89,22.69,380,22.28,373.1,21.86,367.67,20.12,362.23,18.37,358.18,14.85,354.14,11.32,351.37,5.09,354.56,2.29,356.21,4.84,358.56,6.6,360.91,8.35,364.19,9.44,367.47,10.53,371.81,11.01,376.14,11.49,381.76,11.49,384.16,11.49,386.57,11.43,388.98,11.37,391.29,11.29,393.6,11.22,395.74,11.15,397.89,11.09,399.76,11.09,404.34,11.17,408.38,12.1,412.42,13.04,415.44,14.69,418.46,16.34,420.21,18.63,421.96,20.92,421.96,23.69,421.96,25.57,420.61,26.66,419.26,27.74,417.14,28.34,415.02,28.94,412.43,29.21,409.84,29.47,407.36,29.69,405.19,29.84,401.52,30.84,397.85,31.84,393.16,33.49,388.48,35.14,383.01,37.34,377.54,39.54,371.76,42.09,369.37,38.49,369.365,38.493] ) );
    shape.graphics.endFill();

    return shape;
  },
  "その場所で" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [-433.9,-109.6,-423.48,-112.6,-412.84,-115.15,-402.21,-117.71,-391.88,-119.82,-381.55,-121.94,-371.77,-123.63,-362,-125.32,-353.3,-126.6,-349.55,-127.05,-347.02,-127.54,-344.49,-128.03,-342.65,-128.72,-340.81,-129.42,-339.41,-130.4,-338,-131.37,-336.5,-132.8,-329.98,-131.6,-325.25,-130.17,-320.53,-128.75,-317.45,-127.1,-314.38,-125.45,-312.88,-123.57,-311.38,-121.7,-311.3,-119.6,-311.3,-118.62,-311.74,-117.78,-312.18,-116.94,-313.03,-116.32,-313.87,-115.71,-315.1,-115.35,-316.33,-115,-317.9,-115,-319.18,-115,-322.52,-115.28,-325.86,-115.56,-329.63,-115.9,-333.4,-116.24,-336.77,-116.52,-340.15,-116.8,-341.5,-116.8,-356.58,-116.8,-368.81,-111.66,-381.03,-106.51,-389.68,-98.3,-398.32,-90.09,-403.01,-79.84,-407.7,-69.6,-407.7,-59.4,-407.7,-49.88,-402.44,-44.72,-397.17,-39.56,-389.73,-37.18,-382.28,-34.79,-374.2,-34.4,-366.13,-34,-360.5,-34,-357.95,-34,-355.66,-33.12,-353.37,-32.23,-351.63,-30.83,-349.88,-29.42,-348.83,-27.67,-347.78,-25.93,-347.7,-24.2,-347.7,-22.7,-348.57,-21.58,-349.44,-20.45,-350.75,-19.7,-352.06,-18.95,-353.61,-18.58,-355.15,-18.2,-356.5,-18.2,-360.4,-18.2,-364.12,-18.48,-367.83,-18.75,-371.38,-19.2,-374.92,-19.65,-378.3,-20.23,-381.68,-20.8,-384.9,-21.4,-393.45,-22.83,-400.02,-25.86,-406.59,-28.89,-411.05,-33.37,-415.51,-37.86,-417.81,-43.7,-420.1,-49.55,-420.1,-56.6,-420.1,-66.05,-416.25,-75.04,-412.41,-84.02,-406.28,-91.75,-400.14,-99.47,-392.51,-105.54,-384.88,-111.6,-377.3,-115.2,-377.7,-115.6,-384.3,-114.47,-393.05,-112.48,-401.81,-110.49,-410.98,-108.07,-420.14,-105.65,-428.86,-103.03,-437.57,-100.4,-444.1,-98,-448,-96.5,-451.08,-94.69,-454.17,-92.87,-456.92,-91.3,-459.68,-89.72,-462.35,-88.66,-465.02,-87.6,-468.1,-87.6,-469.07,-87.6,-470.57,-88.04,-472.07,-88.49,-473.47,-89.37,-474.88,-90.25,-475.89,-91.56,-476.9,-92.87,-476.9,-94.6,-476.9,-95.95,-476.45,-97.33,-476,-98.71,-475.25,-99.95,-474.5,-101.19,-473.52,-102.19,-472.55,-103.2,-471.5,-103.8,-468.35,-104.02,-464.9,-104.79,-461.45,-105.55,-457.7,-106.9,-453.95,-108.25,-449.9,-110.21,-445.85,-112.17,-441.5,-114.8,-428.68,-122.45,-415.88,-132.24,-403.09,-142.04,-392.88,-151.02,-382.66,-160,-376.28,-166.69,-369.9,-173.37,-369.9,-174.8,-369.9,-174.95,-370.01,-175.09,-370.11,-175.23,-370.3,-175.35,-370.49,-175.46,-370.74,-175.53,-371,-175.6,-371.3,-175.6,-372.12,-175.6,-379.38,-173.51,-386.64,-171.42,-395.45,-168.77,-404.26,-166.13,-412.19,-163.7,-420.12,-161.27,-422.3,-160.6,-423.8,-160.07,-425.1,-159.13,-426.4,-158.19,-427.75,-157.27,-429.1,-156.35,-430.62,-155.68,-432.15,-155,-434.1,-155,-437.25,-155,-440.36,-156.83,-443.47,-158.66,-445.95,-161.55,-448.42,-164.43,-449.96,-167.99,-451.5,-171.55,-451.5,-175,-451.5,-176.2,-451.26,-177.38,-451.03,-178.57,-450.52,-179.67,-450.02,-180.78,-449.22,-181.78,-448.42,-182.77,-447.3,-183.6,-446.1,-183.2,-445.42,-179.97,-444.35,-177.69,-443.27,-175.42,-441.67,-173.97,-440.08,-172.53,-437.92,-171.86,-435.75,-171.2,-432.9,-171.2,-428.25,-171.2,-420.58,-172.27,-412.92,-173.33,-404.58,-174.95,-396.23,-176.56,-388.38,-178.45,-380.53,-180.35,-375.5,-182,-373.93,-182.6,-372.71,-183.55,-371.5,-184.5,-370.45,-185.4,-369.4,-186.3,-368.41,-186.95,-367.43,-187.6,-366.3,-187.6,-364.28,-187.6,-361.15,-186.2,-358.02,-184.8,-355.08,-182.7,-352.13,-180.6,-350.02,-178.15,-347.9,-175.7,-347.9,-173.6,-347.9,-171.35,-349.31,-170.1,-350.71,-168.85,-353.3,-167.52,-355.89,-166.19,-359.55,-164.23,-363.2,-162.27,-367.7,-158.6,-374.15,-153.42,-382.44,-147.09,-390.72,-140.77,-399.78,-134.22,-408.83,-127.68,-418.13,-121.39,-427.43,-115.1,-435.9,-110,-433.9,-109.6,-433.901,-109.599] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [-206.3,-31,-185.6,-33.85,-171.2,-40.52,-156.8,-47.19,-147.8,-56.45,-138.8,-65.71,-134.75,-76.96,-130.7,-88.2,-130.7,-100.2,-130.7,-113.85,-134.06,-126.05,-137.43,-138.26,-144.85,-147.45,-152.28,-156.64,-164.11,-162.02,-175.95,-167.4,-192.9,-167.4,-194.33,-167.4,-196.46,-167.25,-198.59,-167.11,-200.95,-166.85,-203.31,-166.59,-205.67,-166.22,-208.03,-165.85,-209.9,-165.4,-208.1,-164.12,-206.69,-162.05,-205.28,-159.97,-204.3,-157.35,-203.32,-154.72,-202.81,-151.67,-202.3,-148.62,-202.3,-145.4,-202.3,-131.6,-206.86,-114.5,-211.42,-97.4,-219.13,-82.4,-226.83,-67.4,-236.98,-57.2,-247.13,-47,-258.3,-47,-263.63,-47,-268.07,-50.02,-272.52,-53.03,-275.72,-58.52,-278.93,-64.02,-280.71,-71.72,-282.5,-79.42,-282.5,-88.8,-282.5,-106.12,-275.77,-121.48,-269.04,-136.83,-257,-148.32,-244.96,-159.82,-228.33,-166.51,-211.7,-173.2,-191.9,-173.2,-173.45,-173.2,-159.3,-167.74,-145.15,-162.28,-135.55,-152.47,-125.95,-142.67,-121.03,-129.07,-116.1,-115.47,-116.1,-99.2,-116.1,-85.17,-120.98,-72.8,-125.85,-60.43,-136.5,-50.77,-147.15,-41.12,-164.03,-34.71,-180.9,-28.3,-204.9,-26.2,-206.3,-31,-206.301,-31,-215.3,-164.2,-226.7,-161.42,-236.75,-154.79,-246.8,-148.15,-254.3,-138.4,-261.8,-128.65,-266.15,-116.16,-270.5,-103.67,-270.5,-89.2,-270.5,-83.35,-269.62,-78.21,-268.74,-73.07,-267.08,-69.25,-265.41,-65.42,-262.99,-63.21,-260.57,-61,-257.5,-61,-248.95,-61,-240.79,-70.45,-232.63,-79.9,-226.25,-93.7,-219.88,-107.5,-215.99,-123.1,-212.1,-138.7,-212.1,-151,-212.1,-153.02,-212.38,-155.09,-212.65,-157.15,-213.1,-158.95,-213.55,-160.75,-214.13,-162.14,-214.7,-163.52,-215.3,-164.2,-215.301,-164.198] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,1,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,2,2,2,2,2,1,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [-57.9,-77.4,-54.3,-78.3,-50.59,-79.3,-46.89,-80.3,-43.1,-81.35,-39.31,-82.4,-35.46,-83.47,-31.6,-84.55,-27.7,-85.6,-26.9,-82.8,-31.62,-80.4,-37.41,-77.45,-43.21,-74.51,-50.12,-71.07,-57.04,-67.64,-65.12,-63.76,-73.2,-59.87,-82.5,-55.6,-82.72,-54.7,-83.13,-53.92,-83.53,-53.14,-84.07,-52.5,-84.62,-51.86,-85.28,-51.38,-85.95,-50.9,-86.7,-50.6,-95.3,-68,-93.27,-68.45,-90.64,-69.05,-88,-69.65,-84.85,-70.4,-81.7,-71.15,-78.09,-72.05,-74.47,-72.95,-70.5,-74,-70.5,-138.8,-92.9,-138.8,-94.3,-143.6,-70.5,-143.6,-70.5,-194.6,-48.5,-192.6,-48.57,-191.4,-49.12,-190.58,-49.67,-189.75,-50.8,-189.17,-51.92,-188.59,-53.67,-188.18,-55.42,-187.77,-57.9,-187.4,-57.9,-143.6,-52.3,-143.6,-44.1,-155.6,-28.3,-143,-28.9,-141.87,-29.65,-141.08,-30.4,-140.28,-31.47,-139.77,-32.54,-139.27,-34.01,-139.03,-35.47,-138.8,-37.5,-138.8,-57.9,-138.8,-57.9,-77.4,-57.898,-77.399,92.7,-107.6,92.1,-106.47,91.32,-105.65,90.53,-104.82,89.42,-104.27,88.32,-103.73,86.82,-103.46,85.33,-103.2,83.3,-103.2,7.1,-103.2,5.98,-100.5,4.7,-97.84,3.43,-95.19,2.03,-92.6,0.62,-90.01,-0.92,-87.51,-2.45,-85,-4.1,-82.6,64.1,-82.6,70.5,-90.4,86.1,-78.2,85.65,-77.67,84.94,-77.23,84.23,-76.78,83.27,-76.42,82.32,-76.07,81.12,-75.81,79.92,-75.55,78.5,-75.4,77.6,-62.27,76.3,-52.07,75.01,-41.87,73.22,-34.45,71.44,-27.02,69.13,-22.3,66.82,-17.57,63.9,-15.4,62.02,-14.05,60.04,-13.1,58.05,-12.15,55.8,-11.55,53.55,-10.95,50.96,-10.67,48.37,-10.4,45.3,-10.4,45.3,-12.65,44.93,-14.52,44.56,-16.39,42.95,-17.85,41.34,-19.31,38.04,-20.36,34.75,-21.4,28.9,-22,29.1,-25.4,31.05,-25.32,33.88,-25.25,36.72,-25.18,39.62,-25.12,42.53,-25.07,45.1,-25.03,47.67,-25,49.1,-25,50.37,-25,51.31,-25.02,52.24,-25.04,52.97,-25.17,53.7,-25.31,54.3,-25.59,54.9,-25.87,55.5,-26.4,57.3,-27.9,58.81,-31.84,60.32,-35.79,61.57,-42.2,62.83,-48.61,63.85,-57.51,64.87,-66.4,65.7,-77.8,51.3,-77.8,47.92,-67.3,43.1,-57.81,38.28,-48.32,31.9,-39.85,25.53,-31.37,17.55,-23.91,9.58,-16.45,-0.1,-10,-2.5,-13.4,4.85,-19.85,10.98,-27.23,17.1,-34.61,22.05,-42.75,27,-50.89,30.8,-59.69,34.6,-68.5,37.3,-77.8,20.9,-77.8,16.78,-68.65,11.29,-60.21,5.81,-51.76,-0.92,-44.15,-7.66,-36.54,-15.58,-29.82,-23.5,-23.1,-32.5,-17.4,-35.1,-20.8,-27.98,-26.5,-21.69,-33.11,-15.41,-39.72,-10.05,-46.97,-4.69,-54.23,-0.28,-62,4.13,-69.77,7.5,-77.8,-7.3,-77.8,-11.2,-72.55,-15.62,-67.65,-20.05,-62.74,-25,-58.22,-29.95,-53.71,-35.42,-49.59,-40.9,-45.47,-46.9,-41.8,-49.3,-45,-42.25,-50.77,-36.05,-57.5,-29.84,-64.22,-24.57,-71.62,-19.31,-79.03,-15.02,-86.99,-10.73,-94.95,-7.5,-103.2,-36.3,-103.2,-37.7,-108,65.9,-108,75.1,-119.8,92.7,-107.6,92.7,-107.599,-4.5,-128.4,-4.5,-121.4,-4.5,-121.32,-4.98,-120.63,-5.46,-119.93,-6.83,-119.12,-8.19,-118.32,-10.66,-117.66,-13.13,-117,-17.1,-117,-17.1,-192,-3.5,-185.8,53.5,-185.8,59.5,-193.8,76.9,-181.4,76.38,-180.8,75.53,-180.21,74.68,-179.62,73.57,-179.1,72.47,-178.57,71.13,-178.13,69.8,-177.7,68.3,-177.4,68.3,-123.6,68.3,-123.45,67.59,-122.68,66.89,-121.91,65.35,-121.05,63.81,-120.19,61.38,-119.49,58.95,-118.8,55.5,-118.8,55.5,-128.4,-4.5,-128.4,-4.5,-128.398,55.5,-181,-4.5,-181,-4.5,-159.8,55.5,-159.8,55.5,-181,55.5,-180.998,-4.5,-133.2,55.5,-133.2,55.5,-155,-4.5,-155,-4.5,-133.2,-4.5,-133.199] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,2,2,2,2,2,2,1,2,2,2,2,2,1,2,3,3,3,3,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2] ), $.toNumberVector( [174.3,-89.8,131.7,-89.8,131.48,-80.12,130.46,-69.66,129.44,-59.2,126.73,-48.85,124.01,-38.5,119.13,-28.71,114.25,-18.93,106.3,-10.6,103.5,-12.8,108.98,-22.4,112.07,-33.06,115.16,-43.72,116.68,-54.87,118.2,-66.03,118.55,-77.4,118.9,-88.77,118.9,-99.8,118.9,-151.4,134.1,-144.8,172.3,-144.8,178.3,-152.8,195.7,-140.4,195.17,-139.8,194.33,-139.21,193.48,-138.62,192.37,-138.1,191.27,-137.57,189.93,-137.14,188.6,-136.7,187.1,-136.4,187.1,-80,187.1,-79.85,186.36,-79.21,185.63,-78.56,184.07,-77.85,182.52,-77.14,180.1,-76.57,177.67,-76,174.3,-76,174.3,-89.8,174.301,-89.799,200.7,-180,200.1,-178.87,199.32,-178.04,198.53,-177.22,197.43,-176.67,196.32,-176.13,194.82,-175.86,193.33,-175.6,191.3,-175.6,106.9,-175.6,105.7,-180.4,174.3,-180.4,183.5,-192.4,200.7,-180,200.701,-179.998,174.3,-140,131.7,-140,131.7,-94.6,174.3,-94.6,174.3,-140,174.301,-139.999,276.5,-137.2,293.7,-124.8,293.1,-123.67,292.32,-122.88,291.53,-122.08,290.42,-121.57,289.32,-121.07,287.82,-120.83,286.32,-120.6,284.3,-120.6,265.7,-120.6,265.7,-14.8,265.7,-14.43,264.94,-13.72,264.17,-13.02,262.75,-12.33,261.33,-11.63,259.29,-11.12,257.25,-10.6,254.7,-10.6,252.7,-10.6,252.7,-120.6,218.7,-120.6,218.7,-111.4,218.7,-97.82,217.31,-83.92,215.93,-70.01,211.2,-56.85,206.48,-43.69,197.44,-31.81,188.4,-19.93,173.1,-10.4,170.5,-13,181.9,-22.98,188.86,-34.28,195.81,-45.59,199.6,-58,203.39,-70.41,204.64,-83.82,205.9,-97.22,205.9,-111.4,205.9,-179.8,221.1,-174.4,227.77,-176.57,234.69,-179.26,241.6,-181.95,248.05,-184.8,254.5,-187.65,260.14,-190.49,265.77,-193.32,269.9,-195.8,287.1,-181.4,286.72,-181.02,286.27,-180.73,285.82,-180.43,285.3,-180.22,284.77,-180.02,284.17,-179.91,283.57,-179.8,282.9,-179.8,282.3,-179.8,281.62,-179.9,280.95,-180.01,280.2,-180.2,279.45,-180.39,278.62,-180.64,277.8,-180.9,276.9,-181.2,271.42,-179.55,264.54,-177.87,257.66,-176.19,250.05,-174.65,242.44,-173.11,234.43,-171.8,226.42,-170.5,218.7,-169.6,218.7,-125.4,267.7,-125.4,276.5,-137.2,276.5,-137.199] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [313.3,-165.4,313.68,-163,314.87,-161.04,316.06,-159.09,317.88,-157.7,319.7,-156.31,322.05,-155.55,324.4,-154.8,327.1,-154.8,328.38,-154.8,330.3,-154.94,332.23,-155.09,334.4,-155.35,336.58,-155.61,338.8,-155.98,341.03,-156.35,342.9,-156.8,348.83,-158,359.99,-160.04,371.16,-162.08,384.23,-164.27,397.3,-166.47,410.6,-168.47,423.9,-170.47,434.1,-171.6,436.35,-171.9,438.45,-172.4,440.54,-172.91,442.33,-173.55,444.11,-174.19,445.49,-174.92,446.88,-175.65,447.7,-176.4,453.93,-175.2,458.3,-173.89,462.67,-172.58,465.43,-171.02,468.18,-169.47,469.44,-167.59,470.7,-165.72,470.7,-163.4,470.7,-162.2,470.06,-161.42,469.41,-160.65,468.25,-160.2,467.09,-159.75,465.47,-159.57,463.85,-159.4,461.9,-159.4,460.25,-159.4,458.44,-159.49,456.62,-159.59,454.73,-159.7,452.83,-159.81,450.9,-159.9,448.98,-160,447.1,-160,439.08,-160,430.34,-156.48,421.61,-152.95,413.55,-147.42,405.49,-141.89,398.78,-135.11,392.08,-128.32,388.1,-121.8,385.63,-118.05,383.47,-113.06,381.32,-108.08,379.73,-102.32,378.13,-96.57,377.22,-90.27,376.3,-83.97,376.3,-77.6,376.3,-66.95,379.37,-59.91,382.45,-52.88,387.83,-48.45,393.21,-44.03,400.52,-41.71,407.83,-39.4,416.3,-38.2,418.4,-37.9,420.67,-37.84,422.94,-37.79,425.03,-37.75,427.11,-37.71,428.82,-37.58,430.53,-37.45,431.5,-37,434.05,-35.95,435.84,-34.72,437.63,-33.49,438.75,-32.13,439.88,-30.76,440.39,-29.27,440.9,-27.78,440.9,-26.2,440.9,-24.93,440.31,-24.02,439.72,-23.11,438.57,-22.53,437.43,-21.94,435.75,-21.67,434.07,-21.4,431.9,-21.4,431.22,-21.4,430.51,-21.44,429.8,-21.47,429.05,-21.53,428.3,-21.58,427.51,-21.65,426.72,-21.73,425.9,-21.8,407.6,-23.9,395.72,-28.12,383.84,-32.34,376.9,-39.08,369.96,-45.81,367.23,-55.24,364.5,-64.67,364.5,-77.2,364.5,-91.6,369.42,-104.37,374.34,-117.15,382.4,-127.95,390.46,-138.75,400.78,-147.4,411.1,-156.05,421.9,-162.2,421.7,-162.8,412.93,-161.9,400.02,-159.63,387.11,-157.37,374.4,-154.42,361.69,-151.48,351.33,-148.2,340.98,-144.92,337.3,-142,336.25,-141.32,335.25,-140.68,334.24,-140.03,333.15,-139.52,332.07,-139.02,330.83,-138.71,329.6,-138.4,328.1,-138.4,324.88,-138.4,321.44,-140.21,318.01,-142.02,315.18,-144.77,312.35,-147.53,310.52,-150.8,308.7,-154.07,308.7,-157,308.7,-158.42,308.92,-159.75,309.15,-161.07,309.58,-162.2,310.01,-163.32,310.64,-164.2,311.28,-165.07,312.1,-165.6,313.3,-165.4,313.303,-165.398,426.7,-126.4,435.55,-123.32,441.31,-119.97,447.08,-116.62,450.45,-113.4,453.83,-110.17,455.16,-107.27,456.5,-104.37,456.5,-102.2,456.5,-100.92,456.09,-99.83,455.68,-98.73,455,-97.92,454.33,-97.12,453.46,-96.66,452.6,-96.2,451.7,-96.2,450.43,-96.2,449.46,-96.56,448.5,-96.93,447.75,-97.62,447,-98.32,446.41,-99.32,445.83,-100.32,445.3,-101.6,444.25,-104,442.36,-106.86,440.47,-109.72,437.83,-112.65,435.18,-115.57,431.83,-118.36,428.48,-121.15,424.5,-123.4,426.7,-126.4,426.701,-126.398,447.3,-143.6,456.15,-140.52,461.88,-137.14,467.61,-133.76,470.95,-130.5,474.29,-127.24,475.59,-124.31,476.9,-121.37,476.9,-119.2,476.9,-117.92,476.52,-116.86,476.14,-115.79,475.5,-115.02,474.86,-114.26,474.03,-113.83,473.2,-113.4,472.3,-113.4,470.95,-113.4,469.97,-113.76,469,-114.13,468.25,-114.82,467.5,-115.52,466.9,-116.52,466.3,-117.52,465.7,-118.8,464.72,-121.2,462.84,-124.03,460.96,-126.86,458.3,-129.75,455.64,-132.64,452.26,-135.39,448.87,-138.15,444.9,-140.4,447.3,-143.6,447.301,-143.599] ) );
    shape.graphics.endFill();

    return shape;
  },
  "始まりの" : function()
  {
    var shape = Shape();
    
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,2,2,3,3,3,3,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [-283.1,48.4,-268.7,61.6,-269.3,62.2,-269.97,62.66,-270.64,63.11,-271.5,63.45,-272.36,63.79,-273.48,64.02,-274.6,64.25,-276.1,64.4,-277.08,74.45,-278.43,84.31,-279.78,94.17,-281.83,103.67,-283.87,113.18,-286.76,122.25,-289.65,131.32,-293.7,139.8,-288.08,143.47,-284.19,147.12,-280.3,150.77,-277.88,154.15,-275.46,157.52,-274.38,160.5,-273.3,163.47,-273.3,165.8,-273.3,167.37,-273.7,168.63,-274.1,169.89,-274.83,170.77,-275.56,171.65,-276.59,172.13,-277.63,172.6,-278.9,172.6,-279.43,172.6,-279.99,172.49,-280.55,172.39,-281.13,172.2,-281.71,172.01,-282.31,171.75,-282.9,171.5,-283.5,171.2,-284.78,168.8,-286.48,166.3,-288.19,163.8,-290.25,161.27,-292.32,158.74,-294.7,156.21,-297.08,153.67,-299.7,151.2,-303.68,157.72,-308.59,163.78,-313.51,169.84,-319.53,175.37,-325.55,180.9,-332.75,185.88,-339.95,190.85,-348.5,195.2,-350.3,191.8,-342.8,187,-336.51,181.58,-330.21,176.15,-324.98,170.17,-319.75,164.19,-315.51,157.68,-311.28,151.17,-307.9,144.2,-310.98,141.72,-314.15,139.37,-317.32,137.02,-320.53,134.85,-323.73,132.67,-326.94,130.7,-330.15,128.72,-333.3,127,-333.6,128.57,-333.93,130.1,-334.27,131.64,-334.6,133.1,-334.94,134.56,-335.27,135.94,-335.6,137.32,-335.9,138.6,-336.5,139.05,-337.25,139.39,-338,139.72,-338.88,139.95,-339.76,140.17,-340.77,140.29,-341.78,140.4,-342.9,140.4,-343.65,140.4,-344.47,140.33,-345.29,140.25,-346.15,140.12,-347.02,139.99,-347.91,139.81,-348.8,139.62,-349.7,139.4,-347.9,132.87,-345.75,123.95,-343.59,115.02,-341.3,104.75,-339.02,94.47,-336.71,83.37,-334.4,72.27,-332.3,61.4,-350.7,61.4,-352.1,56.6,-331.3,56.6,-330.02,49.77,-328.84,43.24,-327.66,36.71,-326.65,30.75,-325.64,24.79,-324.83,19.53,-324.02,14.27,-323.5,10,-303.1,12.6,-303.25,13.57,-303.7,14.33,-304.15,15.08,-305.05,15.62,-305.95,16.17,-307.38,16.51,-308.8,16.85,-310.9,17,-311.5,20.6,-312.31,25.01,-313.12,29.43,-314.08,34.47,-315.03,39.52,-316.1,45.1,-317.17,50.67,-318.3,56.6,-290.9,56.6,-283.1,48.4,-283.102,48.399,-319.3,61.4,-320.88,69.2,-322.54,77.3,-324.21,85.4,-325.88,93.37,-327.54,101.34,-329.17,108.96,-330.8,116.57,-332.3,123.4,-327.95,124.6,-324,125.9,-320.06,127.2,-316.48,128.57,-312.89,129.94,-309.66,131.36,-306.43,132.77,-303.5,134.2,-300.28,126.02,-297.94,117.34,-295.6,108.65,-293.95,99.52,-292.3,90.39,-291.24,80.85,-290.18,71.3,-289.5,61.4,-319.3,61.4,-319.301,61.399,-210.1,16.4,-210.33,17.22,-210.9,17.82,-211.48,18.42,-212.45,18.8,-213.43,19.17,-214.83,19.32,-216.23,19.47,-218.1,19.4,-220.65,26,-224.08,33.7,-227.52,41.4,-231.45,49.5,-235.39,57.6,-239.65,65.75,-243.9,73.9,-248.1,81.4,-241.65,81.17,-234.3,80.88,-226.94,80.58,-218.95,80.22,-210.97,79.87,-202.48,79.46,-194,79.05,-185.3,78.6,-187.33,74.47,-189.76,70.41,-192.19,66.34,-194.85,62.55,-197.52,58.76,-200.32,55.37,-203.13,51.97,-205.9,49.2,-203.9,47.6,-193.18,53.23,-185.99,59.06,-178.81,64.89,-174.48,70.42,-170.15,75.96,-168.33,80.93,-166.5,85.9,-166.5,89.8,-166.5,91.97,-167,93.75,-167.5,95.52,-168.38,96.77,-169.26,98.03,-170.47,98.71,-171.68,99.4,-173.1,99.4,-173.78,99.4,-174.49,99.25,-175.2,99.09,-175.93,98.77,-176.66,98.46,-177.41,97.96,-178.15,97.47,-178.9,96.8,-179.13,95.15,-179.54,93.43,-179.94,91.71,-180.5,89.95,-181.07,88.19,-181.77,86.39,-182.48,84.6,-183.3,82.8,-190.65,84.07,-199.16,85.53,-207.67,86.98,-217.45,88.57,-227.24,90.17,-238.37,91.88,-249.5,93.6,-262.1,95.4,-262.55,96.37,-263.17,97.1,-263.79,97.82,-264.5,98.32,-265.21,98.83,-265.98,99.14,-266.75,99.45,-267.5,99.6,-272.9,82,-271.1,82,-268.94,81.96,-266.78,81.93,-264.3,81.87,-261.83,81.82,-259.06,81.75,-256.3,81.67,-253.3,81.6,-250.45,73.35,-247.55,64.06,-244.65,54.76,-241.93,45.35,-239.21,35.94,-236.79,26.87,-234.38,17.8,-232.5,10,-210.1,16.4,-210.103,16.4,-192.5,114.8,-186.3,107,-170.5,119.2,-170.95,119.8,-171.6,120.32,-172.25,120.84,-173.15,121.27,-174.05,121.71,-175.23,122.04,-176.4,122.37,-177.9,122.6,-177.9,189.8,-177.9,190.1,-178.77,190.76,-179.65,191.42,-181.13,192.1,-182.61,192.77,-184.57,193.29,-186.53,193.8,-188.7,193.8,-190.9,193.8,-190.9,178.6,-247.9,178.6,-247.9,191,-247.9,191.37,-248.63,192.11,-249.36,192.84,-250.73,193.57,-252.09,194.3,-254.06,194.85,-256.03,195.4,-258.5,195.4,-260.3,195.4,-260.3,108.4,-245.5,114.8,-192.5,114.8,-192.503,114.799,-247.9,173.8,-190.9,173.8,-190.9,119.6,-247.9,119.6,-247.9,173.8,-247.901,173.798] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [-94.3,23,-93.78,21.57,-92.65,20.21,-91.53,18.84,-89.98,17.78,-88.42,16.71,-86.51,16.05,-84.6,15.4,-82.5,15.4,-78.3,15.4,-74.31,16.3,-70.31,17.21,-67.2,18.73,-64.09,20.24,-62.2,22.23,-60.3,24.23,-60.3,26.4,-60.3,27.52,-60.81,28.4,-61.33,29.27,-62,30.25,-62.68,31.22,-63.34,32.47,-64,33.72,-64.3,35.6,-64.45,36.57,-64.54,37.91,-64.63,39.25,-64.7,40.9,-64.78,42.55,-64.86,44.49,-64.95,46.42,-65.1,48.6,-60.08,48.15,-55.26,47.5,-50.44,46.85,-46.2,46.1,-41.97,45.35,-38.5,44.55,-35.03,43.75,-32.7,43,-30.08,42.17,-28.33,41.5,-26.59,40.82,-25.5,40.15,-24.42,39.47,-23.87,38.72,-23.33,37.97,-23.1,37,-21.1,36.4,-18.55,37.15,-15.2,37.47,-11.85,37.78,-8.85,38.32,-5.85,38.87,-3.78,39.97,-1.7,41.07,-1.7,43.4,-1.7,45.12,-3.08,46.35,-4.46,47.57,-6.88,48.52,-9.3,49.48,-12.59,50.29,-15.88,51.1,-19.7,52,-23.75,52.9,-29.81,53.87,-35.87,54.84,-42.38,55.7,-48.88,56.56,-55.06,57.23,-61.23,57.9,-65.5,58.2,-65.58,60.22,-65.62,62.4,-65.66,64.57,-65.68,66.87,-65.7,69.18,-65.7,71.62,-65.7,74.05,-65.7,76.6,-65.7,78.62,-65.7,80.71,-65.7,82.79,-65.68,84.87,-65.66,86.96,-65.62,89,-65.58,91.05,-65.5,93,-63.78,92.92,-57.84,92.43,-51.91,91.93,-45.48,90.97,-39.05,90.02,-33.97,88.58,-28.9,87.15,-28.9,85.2,-28.9,84.82,-29.05,84.38,-29.2,83.94,-29.5,83.47,-29.8,83.01,-30.25,82.53,-30.7,82.05,-31.3,81.6,-28.7,79.4,-27.13,80.45,-26.05,81.21,-24.98,81.96,-24,82.45,-23.03,82.94,-21.95,83.17,-20.88,83.4,-19.3,83.4,-17.43,83.47,-15.32,83.66,-13.21,83.85,-11.43,84.3,-9.65,84.75,-8.47,85.54,-7.3,86.32,-7.3,87.6,-7.3,89.62,-8.14,91.01,-8.98,92.39,-10.85,93.42,-12.73,94.46,-15.74,95.28,-18.75,96.1,-23.1,97,-26.55,97.75,-31.35,98.46,-36.15,99.16,-41.7,99.8,-47.25,100.44,-53.25,100.99,-59.25,101.55,-65.1,102,-64.95,106.8,-64.73,111.25,-64.51,115.71,-64.23,119.62,-63.95,123.54,-63.61,126.83,-63.28,130.12,-62.9,132.6,-62.3,138.8,-54.65,140.67,-47.32,143.28,-40,145.88,-33.53,148.82,-27.06,151.77,-21.72,154.86,-16.38,157.95,-12.7,160.8,-10.53,162.45,-9.01,164.04,-7.48,165.64,-6.53,167.25,-5.57,168.86,-5.14,170.53,-4.7,172.2,-4.7,174,-4.7,175.2,-5.13,176.25,-5.55,177.31,-6.3,178.1,-7.05,178.89,-8.08,179.34,-9.1,179.8,-10.3,179.8,-11.43,179.8,-12.74,179.59,-14.06,179.37,-15.58,178.7,-17.1,178.02,-18.82,176.76,-20.55,175.5,-22.5,173.4,-25.73,169.87,-29.8,166.59,-33.88,163.31,-38.75,160.35,-43.63,157.39,-49.28,154.78,-54.93,152.17,-61.3,150,-61.23,151.42,-61.16,152.96,-61.08,154.5,-61.03,156.02,-60.97,157.54,-60.94,158.97,-60.9,160.4,-60.9,161.6,-60.9,167.97,-63,172.64,-65.1,177.32,-69.58,180.37,-74.06,183.43,-81.07,184.91,-88.08,186.4,-97.9,186.4,-107.95,186.4,-115.65,184.23,-123.34,182.07,-128.55,178.4,-133.76,174.72,-136.43,169.86,-139.1,165,-139.1,159.6,-139.1,153.6,-135.46,148.97,-131.83,144.35,-125.75,141.2,-119.68,138.05,-111.76,136.42,-103.85,134.8,-95.3,134.8,-92.75,134.8,-90.02,134.94,-87.28,135.09,-84.53,135.35,-81.77,135.61,-79.07,135.98,-76.38,136.35,-73.9,136.8,-73.9,135,-74.22,130.22,-74.53,125.44,-74.93,120.02,-75.32,114.6,-75.67,109.71,-76.03,104.82,-76.1,102.8,-79.1,103.1,-82.78,103.32,-86.46,103.55,-90.4,103.7,-94.34,103.85,-98.32,103.92,-102.3,104,-105.9,104,-113.7,104,-119.15,102.92,-124.59,101.85,-128,99.9,-131.41,97.95,-132.96,95.22,-134.5,92.5,-134.5,89.2,-134.5,86.87,-133.05,84.38,-131.59,81.89,-129,79.45,-126.41,77.01,-122.86,74.74,-119.3,72.47,-115.1,70.6,-113.1,73.4,-116.78,75.12,-119.46,76.97,-122.13,78.81,-123.88,80.65,-125.62,82.49,-126.46,84.25,-127.3,86.02,-127.3,87.6,-127.3,89.7,-126,91.24,-124.7,92.79,-122.13,93.8,-119.56,94.81,-115.74,95.3,-111.93,95.8,-106.9,95.8,-103.38,95.8,-99.25,95.66,-95.13,95.52,-91,95.3,-86.88,95.07,-83.05,94.79,-79.23,94.5,-76.3,94.2,-76.45,89.85,-76.57,85.35,-76.68,80.85,-76.78,76.37,-76.87,71.89,-76.95,67.51,-77.03,63.12,-77.1,59,-81.23,59.22,-86.08,59.47,-90.93,59.72,-95.65,59.92,-100.38,60.13,-104.55,60.26,-108.73,60.4,-111.5,60.4,-118.25,60.4,-123.46,59.63,-128.66,58.86,-132.75,57.07,-136.84,55.29,-140.02,52.38,-143.2,49.47,-145.9,45.2,-143.3,42,-140.9,44.55,-137.71,46.34,-134.53,48.12,-130.85,49.25,-127.18,50.37,-123.16,50.89,-119.15,51.4,-115.1,51.4,-111.58,51.4,-106.52,51.29,-101.47,51.18,-96.13,50.97,-90.78,50.77,-85.77,50.47,-80.75,50.17,-77.3,49.8,-77.3,48.37,-77.33,46.83,-77.36,45.29,-77.4,43.77,-77.44,42.26,-77.47,40.83,-77.5,39.4,-77.5,38.2,-77.58,34.45,-77.81,31.7,-78.05,28.95,-79.1,27.15,-80.15,25.35,-82.34,24.47,-84.53,23.6,-88.5,23.6,-89.1,23.6,-89.7,23.64,-90.31,23.67,-90.93,23.75,-91.55,23.82,-92.19,23.94,-92.83,24.05,-93.5,24.2,-94.3,23,-94.301,23,-73.5,146,-76.43,145.17,-79.5,144.48,-82.58,143.78,-85.65,143.27,-88.73,142.77,-91.73,142.48,-94.73,142.2,-97.5,142.2,-105.08,142.2,-111.21,143.41,-117.34,144.63,-121.68,146.82,-126.01,149.02,-128.35,152.07,-130.7,155.12,-130.7,158.8,-130.7,163.07,-128.32,166.23,-125.94,169.39,-121.7,171.47,-117.46,173.55,-111.63,174.58,-105.8,175.6,-98.9,175.6,-92.08,175.6,-87.23,174.69,-82.38,173.78,-79.3,171.77,-76.23,169.77,-74.83,166.57,-73.43,163.37,-73.5,158.8,-73.5,158.12,-73.47,156.32,-73.45,154.52,-73.43,152.47,-73.41,150.43,-73.42,148.59,-73.43,146.75,-73.5,146,-73.502,145.998] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [44.3,22,44.75,21.1,45.67,20.33,46.58,19.56,47.73,19,48.87,18.44,50.12,18.12,51.38,17.8,52.5,17.8,55.35,17.8,58.4,19.3,61.44,20.81,63.95,23.37,66.47,25.94,68.08,29.36,69.7,32.77,69.7,36.6,69.7,38.17,69.13,39.74,68.57,41.31,67.7,42.85,66.84,44.39,65.82,45.88,64.8,47.37,63.9,48.8,61.13,53.6,58.94,59.55,56.75,65.51,55.23,71.67,53.71,77.84,52.91,83.76,52.1,89.67,52.1,94.4,52.1,95.75,52.18,96.98,52.25,98.21,52.4,99.3,52.55,100.39,52.78,101.32,53,102.25,53.3,103,53.7,103,56.63,94.82,61.68,83.9,66.73,72.97,73.73,63.12,80.72,53.28,89.56,46.44,98.4,39.6,108.9,39.6,111.38,39.6,114.16,40.13,116.94,40.66,119.75,41.72,122.56,42.79,125.27,44.41,127.98,46.02,130.3,48.2,134.13,51.87,137.11,57.02,140.09,62.17,142.15,69,144.21,75.82,145.32,84.42,146.43,93.02,146.5,103.6,146.5,119.42,142.11,133.43,137.73,147.43,127.6,158.77,117.48,170.12,100.94,178.38,84.4,186.65,60.1,191,57.9,186.8,76.73,182.3,90.67,174.35,104.62,166.4,113.83,155.77,123.03,145.14,127.57,132.21,132.1,119.27,132.1,104.8,132.1,95.12,131.55,87.06,131.01,79,129.68,72.55,128.34,66.1,126.11,61.26,123.88,56.42,120.5,53.2,119.08,51.77,117.43,50.63,115.79,49.48,113.95,48.67,112.11,47.87,110.09,47.43,108.08,47,105.9,47,97.2,47,89.71,53.29,82.23,59.57,76.3,69.4,70.38,79.22,66.19,91.21,62,103.2,59.9,114.6,60.13,115.95,60.34,117.36,60.56,118.77,60.73,120.17,60.89,121.58,61,122.95,61.1,124.32,61.1,125.6,61.1,127.25,60.9,128.64,60.69,130.04,60.23,131.05,59.76,132.06,58.99,132.63,58.23,133.2,57.1,133.2,53.28,133.2,50.33,130.06,47.38,126.92,45.38,122.35,43.37,117.77,42.33,112.61,41.3,107.45,41.3,103.4,41.3,90.42,43.17,79.86,45.05,69.29,47.3,60.87,49.55,52.46,51.42,46.05,53.3,39.65,53.3,35,53.3,31.32,52.41,28.9,51.51,26.47,50.2,25.02,48.89,23.58,47.39,22.99,45.9,22.4,44.7,22.4,44.3,22,44.303,22] ) );
    shape.graphics.endFill();
    shape.graphics.beginFill( 0xFFFFFF,1 );
    shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [261.9,174.8,282.6,171.95,297,165.28,311.4,158.61,320.4,149.35,329.4,140.09,333.45,128.84,337.5,117.6,337.5,105.6,337.5,91.95,334.14,79.74,330.78,67.54,323.35,58.35,315.93,49.16,304.09,43.78,292.25,38.4,275.3,38.4,273.88,38.4,271.75,38.54,269.61,38.69,267.25,38.95,264.89,39.21,262.53,39.58,260.18,39.95,258.3,40.4,260.1,41.68,261.51,43.75,262.93,45.83,263.9,48.45,264.88,51.08,265.39,54.13,265.9,57.18,265.9,60.4,265.9,74.2,261.34,91.3,256.78,108.4,249.08,123.4,241.37,138.4,231.22,148.6,221.08,158.8,209.9,158.8,204.58,158.8,200.13,155.78,195.68,152.77,192.48,147.27,189.27,141.78,187.49,134.08,185.7,126.37,185.7,117,185.7,99.67,192.44,84.32,199.17,68.97,211.2,57.48,223.24,45.98,239.87,39.29,256.5,32.6,276.3,32.6,294.75,32.6,308.9,38.06,323.05,43.52,332.65,53.33,342.25,63.13,347.18,76.73,352.1,90.32,352.1,106.6,352.1,120.62,347.23,133,342.35,145.37,331.7,155.02,321.05,164.68,304.18,171.09,287.3,177.5,263.3,179.6,261.9,174.8,261.901,174.798,252.9,41.6,241.5,44.38,231.45,51.01,221.4,57.65,213.9,67.4,206.4,77.15,202.05,89.64,197.7,102.12,197.7,116.6,197.7,122.45,198.58,127.59,199.46,132.72,201.13,136.55,202.8,140.37,205.21,142.59,207.63,144.8,210.7,144.8,219.25,144.8,227.41,135.35,235.58,125.9,241.95,112.1,248.33,98.3,252.21,82.7,256.1,67.1,256.1,54.8,256.1,52.77,255.83,50.71,255.55,48.65,255.1,46.85,254.65,45.05,254.08,43.66,253.5,42.27,252.9,41.6,252.901,41.6] ) );
    shape.graphics.endFill();

    return shape;
  }
});</d>
<d p="0.2,8,25,16777215,1354861000,2,a0d50318,156322951">/* Comment Art Helper for submission Round and Round - v20121204.1
 * Copyright (C) 2012 EPM
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * For a copy of the GNU General Public License,
 * see &lt;http://www.gnu.org/licenses/&gt;.
 *
 * Documenting convention:
 *
 * For those functions that accept only one Object "params", only the content of the Object is documented.
 */
 
/* Category: Master Control
 * This category contains only a static class Helper for controlling the script.
 */
 
/* Static Class: Helper
 * Provides functions for commanding the helper.
 */
var Helper = Global._get( "__class_helper_helperRnr" );
 
/* Category: Utilities
 * This sort of classes provide utilities not directly related to presenting content.
 */
 
/* Static Class: Factory
 * Provides functions for creating and manipulating objects.
 *
 * As of 11/27, all functions with connection to loaderInfo removed. Factory now serve only as an object cloning utility.
 */
var Factory = Global._get( "__class_factory_helperRnr" );
 
/* Static Class: Timer
 * Improves timing precision over Player.time by sampling time usage for each frame. For retaining both smoothness and seekability.
 */
var Timer = Global._get( "__class_timer_helperRnr" );

/* Class: Binder
 * Provides functions for binding properties. Mainly used in layers.
 *
 * object
 *   An Object to bind.
 * properties
 *   An Object, containing values or Bindings for each property.
 */
var Binder = Global._get( "__class_binder_helperRnr" );

/* Category: Abstractions
 * This sort of classes are abstractions of display objects for use in production.
 */
 
/* Class: Layer
 * Provides functions for animating contents.
 *
 * source
 *   A DisplayObject serving as the layer source.
 * inPoint
 *   A Number, the time (in milliseconds) at which the layers enters.
 * outPoint
 *   A Number, the time (in milliseconds) at which the layers exits.
 * properties
 *   [default] {}
 *   An Object, containing values or Bindings for each AS3 property.
 */
var Layer = Global._get( "__class_layer_helperRnr" );

/* Class: DynamicVectorTextLayer
 * Alias: DVTLayer
 * A type of layer specialized to display basic dynamic vector text (huge sizes over 200px or exotic fonts).
 *
 * dictionary
 *   An Object containing functions to create possible glyphs (due to Flash unable to clone vector content). 
 *   Glyphs should be provided by user, be anchored at top-left and be of 200px in size.
 * textProperties
 *   [default] { horizontalAlign : "left", verticalAlign : "top", letterSpacing : 20, fontSize : 200, lineHeight : 240, text : "" }
 *   An Object, containing values or Bindings for vector text properties: horizontalAlign, verticalAlign, fontSize, letterSpacing, lineHeight, text.
 * inPoint
 *   A Number, the time (in milliseconds) at which the layers enters.
 * outPoint
 *   A Number, the time (in milliseconds) at which the layers exits.
 * properties
 *   [default] {}
 *   An Object, containing values or Bindings for each AS3 property.
 */
var DynamicVectorTextLayer = Global._get( "__class_dvtlayer_helperRnr" );
var DVTLayer = DynamicVectorTextLayer;

/* Class: CompositionLayer
 * Alias: CompLayer
 * A type of layer specialized to nest compositions.
 *
 * composition
 *   A Composition.
 * inPoint
 *   A Number, the time (in milliseconds) at which the layers enters.
 * outPoint
 *   A Number, the time (in milliseconds) at which the layers exits.
 * inPointTime
 *   [default] composition.startTime
 *   A Number, the time (in milliseconds) the Composition is at when the layers enters.
 * outPointTime
 *   [default] composition.startTime + composition.duration
 *   A Number, the time (in milliseconds) the Composition is at when the layers exits.
 * timeRemap
 *   [default] null
 *   A Function or null, depending on whether you need time remapping. Setting this function overrides inPointTime and outPointTime settings.
 *   The function should accept a parameter time (in milliseconds) the current time.
 * properties
 *   [default] {}
 *   An Object, containing values or Bindings for each AS3 property.
 */
var CompositionLayer = Global._get( "__class_complayer_helperRnr" );
var CompLayer = CompositionLayer;

/* Class: Composition
 * Alias: Comp
 * Provides functions as the framework of a scene.
 *
 * width
 *   [default] $.width
 *   A Number specifying stage width.
 * height
 *   [default] $.height
 *   A Number specifying stage height.
 * startTime
 *   [default] 0
 *   A Number, the time (in milliseconds) when the timeline starts.
 * duration
 *   [default] 60000
 *   A Number, the length (in milliseconds) of the timeline.
 * layers
 *   [default] []
 *   An Array of Layers, from top to bottom.
 * hasBoundaries
 *   [default] false
 *   Whether a mask will be put on the canvas so that elements outside become invisible.
 */
var Composition = Global._get( "__class_comp_helperRnr" );
var Comp = Composition;

/* Class: MainComposition
 * Alias: MainComp
 * Provides functions as the framework of the comment art. Only MainCompositions have ability to be presented.
 *
 * width
 *   [default] $.width
 *   A Number specifying stage width.
 * height
 *   [default] $.height
 *   A Number specifying stage height.
 * startTime
 *   [default] 0
 *   A Number, the time (in milliseconds) when the timeline starts.
 * duration
 *   [default] 60000
 *   A Number, the length (in milliseconds) of the timeline.
 * layers
 *   [default] []
 *   An Array of Layers, from top to bottom.
 * hasBoundaries
 *   [default] true
 *   Whether a mask will be put on the canvas so that elements outside become invisible.
 */
var MainComposition = Global._get( "__class_maincomp_helperRnr" );
var MainComp = MainComposition;

/* Category: Sources
 * This sort of classes are DisplayObjects that can serve as layer sources.
 */

/* Class: Sprite
 * Shortcut for AS3 Sprite.
 */
var Sprite = Global._get( "__class_sprite_helperRnr" );

/* Class: Shape
 * Shortcut for AS3 Shape.
 */
var Shape = Global._get( "__class_shape_helperRnr" );

/* Class: Text
 * Shortcut for AS3 TextField.
 *
 * preserveGlow
 *   [default] false
 *   Whether to preserve the original glow filter
 */
var Text = Global._get( "__class_text_helperRnr" );

/* Class: Solid
 * A solid color layer source.
 *
 * width
 *   A Number specifying solid width.
 * height
 *   A Number specifying solid height.
 * color
 *   A Number specifying solid color.
 */
var Solid = Global._get( "__class_solid_helperRnr" );

/* Class: Anchor
 * Anchors the layer source at a specific point
 *
 * source
 *   The DisplayObject to wrap around
 * x
 *   [default] source.width / 2
 *   Anchor X.
 * y
 *   [default] source.height / 2
 *   Anchor Y.
 */
var Anchor = Global._get( "__class_anchor_helperRnr" );

/* Class: Anchor3D
 * Anchors the layer source at a specific point in 3D space
 *
 * source
 *   The DisplayObject to wrap around
 * x
 *   [default] source.width / 2
 *   Anchor X.
 * y
 *   [default] source.height / 2
 *   Anchor Y.
 * z
 *   [default] 0
 *   Anchor Z.
 */
var Anchor3D = Global._get( "__class_anchor3d_helperRnr" );

/* Class: Checkerboard
 * A checkboard layer source.
 *
 * width
 *   A Number specifying checkboard width.
 * height
 *   A Number specifying checkboard height.
 * frequencyX
 *   Number of blocks on X axis.
 * frequencyY
 *   Number of blocks on Y axis.
 * color1
 *   A Number specifying checkboard background color.
 * color2
 *   A Number specifying checkboard foreground color.
 */
var Checkerboard = Global._get( "__class_checkerboard_helperRnr" );

/* Category: Effects
 * This sort of classes are effect to put on layers. Not to be confused with filters.
 */

/* Class: TrackMatte
 * Alias: TrkMat
 * Use another layer as a mask.
 *
 * layer
 *   The Layer to be masked.
 * mask
 *   The mask Layer.
 */
var TrackMatte = Global._get( "__class_trkmat_helperRnr" );
var TrkMat = TrackMatte;

/* Class: ForceMotionBlur
 * Alias: ForceMB
 * An effect dedicated to create motion blur effects which Flash lacks. Use the effect with Replicator.
 *
 * layers
 *   The Layers to use.
 * exposureTime
 *   [default] 20.8333
 *   Exposure time (in milliseconds). Defaults to 1000/48 (double the Player frame rate).
 * shutterPhase
 *   [default] -90
 *   Shutter phase in degrees.
 */
var ForceMotionBlur = Global._get( "__class_forcemb_helperRnr" );
var ForceMB = ForceMotionBlur;
 
/* Category: Animation Helpers
 * This sort of classes are helpers for creating animation.
 */
 
/* Class: Replicator
 * Alias: _
 * Returns an Array of Objects created according to given params. 
 *
 * constructor
 *   Constructor of the Class to replicate.
 * count
 *   Count of result Objects.
 * paramsFunction
 *   A Function accepting index as parameter, returning an Array of parameters.
 */
var Replicator = Global._get( "__class_replicator_helperRnr" );
var _ = Replicator;

/* Static Class: NumberInterpolation
 * Alias: NI
 * Provides functions for interpolating between numbers.
 *
 * Common parameters for functions in this class:
 *
 * t
 *   A Number, time factor indicating position between the values.
 * value1
 *   A Number, the first value ( t = 0 ).
 * value2
 *   A Number, the second value ( t = 1 ).
 */
var NumberInterpolation = Global._get( "__class_ni_helperRnr" );
var NI = NumberInterpolation;

/* Enum: KeyframeMode
 * Alias: KeyMode
 * Modes of keyframe behaviors.
 */
var KeyframeMode = Global._get( "__class_keymode_helperRnr" );
var KeyMode = KeyframeMode;

/* Class: Keyframe
 * Alias: Key
 * A class describing a keyframe.
 *
 * time
 *   Time (in milliseconds) the keyframe is at.
 * value
 *   Value of the keyframe.
 * interpolation
 *   [default] NumberInterpolation.linear
 *   Function used to interpolate between this value and the next.
 * mode
 *   [default] KeyframeMode.affectNext
 *   Interpolation behavior of this keyframe.
 * weight
 *   [default] 1
 *   Weight when KeyframeMode.weightBlend is used.
 */
var Keyframe = Global._get( "__class_key_helperRnr" );
var Key = Keyframe;

/* Enum: KeyframesBindMode
 * Alias: KeysBindMode
 * Modes of keyframe bind behaviors.
 */
var KeyframesBindMode = Global._get( "__class_keysbindmode_helperRnr" );
var KeysBindMode = KeyframesBindMode;

/* Class: KeyframesBind
 * Alias: KeysBind
 * An animation Binding using keyframes.
 *
 * keyframes
 *   An Array containing keyframes to use, in time order.
 * mode
 *   [default] KeyframesBindMode.hold
 *   Behavior when out of range.
 */
var KeyframesBind = Global._get( "__class_keysbind_helperRnr" );
var KeysBind = KeyframesBind;
 
/* Class: WiggleKeyframes
 * Alias: WiggleKeys
 * A set of keyframes that make a wiggle effect.
 *
 * origin
 *   Number or Array of Numbers to wiggle upon.
 * numSteps
 *   Number of keyframes to generate.
 * startTime
 *   Time (in milliseconds) at which the wiggle starts.
 * stepTime
 *   Time (in milliseconds) each step will last for.
 * amount
 *   Strength of the effect.
 * interpolation
 *   [default] NumberInterpolation.cubic.easeInOut
 *   Function used to interpolate between values.
 * returnCenter
 *   [default] false
 *   Indicated whether to return to center before every move
 */
var WiggleKeyframes = Global._get( "__class_wigglekeys_helperRnr" );
var WiggleKeys = WiggleKeyframes;

/* Contest submission Round and Round
 *
 * The following script is a programmatic representation of a Comment Art created by EPM.
 *
 * The work is licensed under Creative Commons Attribution-NoDerivs 3.0 Unported License.
 */

// Check if Helper is already running to prevent issues
if ( Helper.isExecuted() )
{
  // Helper is already running, skip execution by calling nonexistent function
  trace("Execution aborted for helper already running.");
  Helper.stopExecution();
}
 
/* Namespace: Rnr
 * Namespace for Round and Round specific elements
 */
var Rnr = {
  
  /* Namespace: Rnr.Typography
   * Namespace for vector texts used here
   *
   * SVG converted to original AS3 drawing API calls using Miller Medeiros (http://www.millermedeiros.com) SVG To Motifs Parser
   * Converted to drawPath format myself.
   */
  Typography :
  {
    /* Namespace: Rnr.Typography.BookAntiqua
     * Contains functions for creating typography layer sources in Book Anitqua
     */
    BookAntiqua :
    {
      "Round and Round" : function()
      {
        var shape = Shape();
        
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [72.26,90.08,73.78,92.26,75.48,94.63,77.18,96.99,79.07,99.53,80.95,102.08,83.02,104.8,85.08,107.52,87.33,110.42,99.24,125.86,100.03,126.85,100.69,127.63,101.34,128.41,101.87,128.97,102.4,129.54,102.79,129.89,103.19,130.24,103.45,130.38,103.72,130.52,103.98,130.63,104.25,130.73,104.52,130.8,104.79,130.87,105.07,130.91,105.34,130.94,105.62,130.94,107.23,130.94,107.23,134.85,105.95,134.74,104.74,134.66,103.54,134.58,102.41,134.52,101.29,134.47,100.25,134.44,99.2,134.41,98.24,134.41,97.36,134.41,96.45,134.44,95.55,134.47,94.62,134.52,93.69,134.58,92.73,134.66,91.78,134.74,90.8,134.85,68.85,105.21,67.32,103.16,65.73,101.14,64.14,99.11,62.49,97.11,60.85,95.11,59.15,93.14,57.46,91.16,55.7,89.21,56.32,87.1,57.22,87.18,58.01,87.24,58.79,87.29,59.46,87.33,60.12,87.37,60.67,87.39,61.22,87.41,61.66,87.41,64.25,87.41,66.55,87.08,68.86,86.74,70.89,86.08,72.92,85.41,74.66,84.41,76.41,83.41,77.87,82.08,79.34,80.74,80.44,79.19,81.54,77.63,82.27,75.84,83,74.06,83.37,72.05,83.73,70.05,83.73,67.81,83.73,65.81,83.42,64.03,83.11,62.25,82.49,60.69,81.87,59.13,80.94,57.79,80.01,56.44,78.77,55.32,77.53,54.2,76.02,53.35,74.5,52.51,72.71,51.95,70.92,51.39,68.85,51.1,66.79,50.82,64.45,50.82,62.82,50.82,61.19,50.97,59.56,51.13,57.92,51.43,56.28,51.73,54.65,52.18,53.01,52.64,51.36,53.24,51.18,55.71,51.04,58.26,50.9,60.81,50.8,63.44,50.71,66.08,50.67,68.8,50.62,71.52,50.62,74.32,50.62,104.28,50.62,109.75,50.68,114,50.75,118.26,50.88,121.29,51.01,124.33,51.21,126.14,51.41,127.96,51.67,128.55,51.94,129.15,52.49,129.6,53.05,130.05,53.91,130.34,54.76,130.64,55.91,130.79,57.05,130.94,58.49,130.94,63.33,130.94,63.33,134.85,60.76,134.74,58.4,134.66,56.05,134.58,53.92,134.52,51.79,134.47,49.88,134.44,47.97,134.41,46.28,134.41,44.94,134.41,43.07,134.44,41.2,134.47,38.79,134.52,36.38,134.58,33.43,134.66,30.48,134.74,26.99,134.85,26.99,130.94,31.64,130.94,32.98,130.94,34.04,130.8,35.1,130.65,35.89,130.36,36.68,130.07,37.2,129.63,37.72,129.2,37.97,128.62,38.22,128.04,38.4,126.22,38.59,124.4,38.71,121.34,38.84,118.28,38.9,113.98,38.96,109.69,38.96,104.15,38.96,74.33,38.96,69.52,38.89,65.77,38.82,62.02,38.67,59.33,38.53,56.64,38.31,55.01,38.1,53.38,37.81,52.81,37.53,52.23,36.92,51.8,36.31,51.37,35.37,51.09,34.44,50.8,33.18,50.66,31.92,50.51,30.34,50.51,26.99,50.51,26.99,46.61,29.88,46.71,32.42,46.8,34.96,46.88,37.16,46.93,39.36,46.99,41.22,47.01,43.08,47.04,44.6,47.04,45.63,47.04,46.87,47.02,48.12,47,49.6,46.96,51.07,46.92,52.77,46.87,54.46,46.81,56.38,46.73,58.62,46.65,60.54,46.59,62.45,46.54,64.06,46.5,65.66,46.46,66.95,46.44,68.24,46.42,69.22,46.42,71.9,46.42,74.26,46.56,76.62,46.7,78.65,46.99,80.69,47.27,82.4,47.69,84.11,48.12,85.5,48.68,86.89,49.25,88.11,49.94,89.33,50.63,90.38,51.45,91.44,52.27,92.32,53.21,93.21,54.16,93.93,55.23,94.65,56.29,95.19,57.47,95.73,58.64,96.1,59.92,96.46,61.2,96.64,62.59,96.82,63.97,96.82,65.46,96.82,67.64,96.42,69.7,96.03,71.76,95.24,73.69,94.46,75.62,93.28,77.42,92.1,79.22,90.52,80.9,88.95,82.57,87.02,83.98,85.09,85.39,82.81,86.54,80.53,87.69,77.89,88.57,75.25,89.46,72.26,90.08,72.261,90.076] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [112.63,105.08,112.63,102.94,112.88,100.91,113.13,98.87,113.62,96.94,114.12,95,114.86,93.17,115.61,91.34,116.6,89.61,117.59,87.88,118.78,86.34,119.97,84.8,121.37,83.45,122.76,82.1,124.35,80.93,125.94,79.77,127.73,78.79,129.52,77.81,131.43,77.08,133.35,76.35,135.38,75.86,137.42,75.37,139.57,75.13,141.73,74.88,144.01,74.88,147.31,74.88,150.28,75.37,153.26,75.86,155.9,76.84,158.54,77.81,160.86,79.28,163.17,80.74,165.15,82.7,167.14,84.65,168.63,86.93,170.12,89.21,171.11,91.81,172.1,94.42,172.6,97.35,173.09,100.28,173.09,103.53,173.09,107.38,172.44,110.83,171.8,114.28,170.5,117.33,169.21,120.38,167.27,123.04,165.32,125.7,162.74,127.97,160.43,130,157.89,131.52,155.35,133.04,152.58,134.06,149.81,135.07,146.82,135.58,143.82,136.09,140.6,136.09,137.5,136.09,134.69,135.57,131.87,135.05,129.35,134,126.83,132.96,124.59,131.4,122.36,129.83,120.41,127.75,118.47,125.66,117.01,123.2,115.55,120.75,114.58,117.91,113.6,115.08,113.12,111.87,112.63,108.66,112.63,105.08,112.63,105.083,124.29,100.71,124.29,103.9,124.62,106.87,124.94,109.84,125.6,112.57,126.25,115.31,127.24,117.81,128.22,120.32,129.53,122.59,130.84,124.86,132.44,126.57,134.04,128.28,135.92,129.41,137.81,130.55,139.99,131.12,142.16,131.69,144.63,131.69,146.5,131.69,148.2,131.33,149.9,130.97,151.41,130.26,152.93,129.54,154.26,128.47,155.6,127.4,156.75,125.97,157.91,124.55,158.77,122.75,159.64,120.95,160.22,118.79,160.79,116.62,161.08,114.09,161.37,111.55,161.37,108.65,161.37,106.31,161.2,104.12,161.03,101.94,160.69,99.91,160.35,97.88,159.84,96,159.33,94.13,158.64,92.42,157.96,90.7,157.17,89.22,156.38,87.74,155.48,86.49,154.58,85.24,153.57,84.22,152.57,83.21,151.45,82.42,150.33,81.64,149.15,81.05,147.97,80.46,146.72,80.07,145.47,79.68,144.16,79.48,142.85,79.29,141.47,79.29,140.24,79.29,139.08,79.44,137.91,79.6,136.81,79.91,135.7,80.22,134.66,80.68,133.61,81.15,132.63,81.77,131.65,82.39,130.79,83.12,129.94,83.84,129.21,84.67,128.49,85.5,127.89,86.44,127.3,87.37,126.83,88.41,126.2,89.83,125.72,91.3,125.24,92.77,124.92,94.31,124.61,95.85,124.45,97.45,124.29,99.05,124.29,100.71,124.289,100.706] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [229.58,134.85,230.27,123.69,226.61,127.66,225.55,128.82,224.47,129.81,223.39,130.8,222.3,131.62,221.22,132.44,220.12,133.08,219.02,133.73,217.91,134.2,216.81,134.67,215.57,135.03,214.34,135.38,212.97,135.62,211.6,135.85,210.11,135.97,208.61,136.09,206.99,136.09,205.59,136.09,204.3,135.94,203,135.79,201.8,135.5,200.6,135.21,199.5,134.76,198.4,134.32,197.39,133.73,196.38,133.14,195.51,132.47,194.65,131.79,193.91,131.03,193.18,130.26,192.59,129.41,191.99,128.56,191.54,127.62,191.08,126.69,190.74,125.48,190.4,124.26,190.17,122.78,189.94,121.3,189.83,119.54,189.71,117.78,189.71,115.75,189.71,114.7,189.72,113.56,189.73,112.42,189.76,111.19,189.78,109.97,189.82,108.66,189.85,107.35,189.9,105.95,190.08,95.97,190.08,93.35,190.05,91.31,190.01,89.27,189.94,87.81,189.86,86.36,189.75,85.48,189.64,84.6,189.49,84.31,189.35,84.02,189.03,83.79,188.71,83.57,188.22,83.43,187.72,83.28,187.06,83.21,186.39,83.13,185.56,83.13,180.04,83.13,180.04,79.72,182.15,79.53,184.18,79.25,186.22,78.96,188.17,78.57,190.12,78.19,191.99,77.7,193.86,77.21,195.65,76.62,200.81,74.7,201.07,74.7,201.27,74.79,201.47,74.89,201.6,75.09,201.73,75.28,201.8,75.57,201.87,75.86,201.87,76.25,201.43,82.57,201.21,85.86,201.05,89.03,200.89,92.2,200.78,95.25,200.67,98.31,200.62,101.25,200.56,104.18,200.56,107,200.56,109.83,200.62,112.14,200.68,114.45,200.79,116.25,200.91,118.06,201.08,119.35,201.26,120.64,201.49,121.42,201.72,122.21,202.08,122.92,202.44,123.64,202.93,124.29,203.42,124.94,204.03,125.53,204.65,126.11,205.39,126.63,206.13,127.15,206.96,127.54,207.78,127.93,208.68,128.19,209.59,128.45,210.58,128.58,211.56,128.71,212.63,128.71,214.07,128.71,215.45,128.48,216.83,128.24,218.15,127.78,219.46,127.31,220.72,126.62,221.98,125.92,223.18,124.99,224.38,124.06,225.37,123.12,226.36,122.19,227.15,121.25,227.93,120.31,228.51,119.37,229.09,118.43,229.46,117.48,229.66,116.94,229.81,115.85,229.96,114.76,230.06,113.13,230.17,111.49,230.22,109.31,230.27,107.13,230.27,104.4,230.27,99.81,230.22,96.27,230.18,92.73,230.1,90.23,230.01,87.74,229.88,86.29,229.75,84.84,229.58,84.43,229.43,84.11,229,83.86,228.58,83.62,227.88,83.46,227.18,83.29,226.21,83.21,225.24,83.13,224,83.13,219.1,83.13,219.1,79.72,220.7,79.53,222.18,79.33,223.65,79.13,225.01,78.91,226.37,78.7,227.6,78.46,228.84,78.23,229.96,77.98,231.07,77.74,232.22,77.43,233.37,77.12,234.54,76.74,235.72,76.37,236.93,75.94,238.14,75.5,239.38,75.01,239.54,74.93,239.68,74.87,239.83,74.81,239.97,74.77,240.11,74.74,240.24,74.72,240.37,74.7,240.5,74.7,240.76,74.7,240.96,74.77,241.16,74.84,241.29,74.99,241.42,75.14,241.49,75.36,241.55,75.58,241.55,75.87,241.31,81.64,241.07,86.94,240.9,91.93,240.72,96.91,240.61,101.58,240.49,106.25,240.43,110.59,240.37,114.94,240.37,118.97,240.37,121.24,240.43,123.02,240.49,124.79,240.61,126.09,240.72,127.38,240.9,128.19,241.07,129,241.31,129.33,241.65,129.81,242.18,130.17,242.72,130.53,243.46,130.77,244.2,131.01,245.13,131.13,246.06,131.25,247.2,131.25,250.79,131.25,250.79,134.85,248.86,134.74,247.06,134.66,245.27,134.58,243.63,134.52,241.99,134.47,240.49,134.44,239,134.41,237.65,134.41,236.64,134.41,235.63,134.44,234.62,134.47,233.61,134.52,232.61,134.58,231.6,134.66,230.59,134.74,229.58,134.85,229.584,134.849] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2] ), $.toNumberVector( [276.46,86.73,285.84,78.42,286.26,78.05,286.69,77.72,287.12,77.4,287.57,77.13,288.01,76.86,288.46,76.64,288.92,76.42,289.38,76.25,290.41,75.91,291.43,75.65,292.46,75.4,293.48,75.23,294.51,75.05,295.53,74.97,296.55,74.88,297.58,74.88,299.24,74.88,300.79,75.05,302.34,75.22,303.77,75.56,305.21,75.9,306.53,76.4,307.86,76.91,309.07,77.58,310.28,78.26,311.32,79.03,312.36,79.81,313.23,80.68,314.1,81.56,314.8,82.53,315.5,83.51,316.03,84.59,316.55,85.67,316.95,87.05,317.34,88.43,317.61,90.12,317.87,91.8,318,93.79,318.14,95.78,318.14,98.08,317.89,117.61,317.89,120.14,317.94,122.13,318,124.12,318.1,125.58,318.21,127.04,318.37,127.96,318.53,128.88,318.75,129.27,319.04,129.76,319.47,130.14,319.91,130.51,320.48,130.76,321.05,131,321.75,131.13,322.46,131.25,323.31,131.25,327.75,131.25,327.75,134.85,326.09,134.74,324.55,134.66,323.01,134.58,321.58,134.52,320.15,134.47,318.83,134.44,317.51,134.41,316.31,134.41,315.13,134.41,313.92,134.44,312.7,134.47,311.44,134.52,310.18,134.58,308.88,134.66,307.57,134.74,306.23,134.85,306.52,131.83,306.74,128.27,306.97,124.72,307.11,120.63,307.26,116.55,307.33,111.93,307.41,107.32,307.41,102.17,307.41,100.09,307.32,98.32,307.23,96.54,307.04,95.07,306.86,93.6,306.59,92.43,306.31,91.26,305.95,90.39,305.58,89.52,305.09,88.74,304.6,87.95,303.99,87.26,303.38,86.56,302.64,85.95,301.9,85.33,301.04,84.81,300.18,84.28,299.23,83.88,298.28,83.49,297.24,83.23,296.2,82.96,295.08,82.83,293.96,82.7,292.74,82.7,291.24,82.7,289.84,82.89,288.45,83.08,287.17,83.46,285.9,83.84,284.73,84.41,283.57,84.98,282.52,85.74,281.47,86.5,280.62,87.3,279.78,88.09,279.13,88.93,278.48,89.77,278.03,90.64,277.58,91.52,277.33,92.43,277.18,93.04,277.06,94.13,276.95,95.22,276.87,96.81,276.79,98.39,276.75,100.46,276.71,102.53,276.71,105.08,276.71,107.92,276.72,110.66,276.74,113.39,276.76,116.03,276.78,118.66,276.82,121.2,276.85,123.73,276.9,126.17,276.92,126.9,276.98,127.49,277.04,128.08,277.15,128.54,277.26,129,277.41,129.32,277.57,129.64,277.77,129.83,278.16,130.18,278.68,130.45,279.19,130.72,279.83,130.9,280.47,131.08,281.24,131.16,282,131.25,282.89,131.25,287.32,131.25,287.32,134.85,284.69,134.74,282.33,134.66,279.98,134.58,277.89,134.52,275.8,134.47,273.98,134.44,272.16,134.42,270.6,134.42,268.96,134.42,267.2,134.44,265.44,134.47,263.57,134.52,261.69,134.58,259.71,134.66,257.73,134.74,255.63,134.85,255.63,131.25,260.09,131.25,261.24,131.25,262.15,131.12,263.06,130.99,263.73,130.72,264.4,130.45,264.83,130.05,265.26,129.65,265.46,129.12,265.65,128.58,265.8,126.71,265.94,124.83,266.04,121.61,266.14,118.4,266.18,113.84,266.23,109.28,266.23,103.38,266.23,100.74,266.22,98.37,266.2,96.01,266.17,93.94,266.14,91.86,266.09,90.08,266.05,88.29,265.98,86.78,265.95,86.29,265.88,85.87,265.8,85.45,265.67,85.11,265.55,84.77,265.38,84.51,265.21,84.25,264.99,84.06,264.77,83.87,264.36,83.74,263.95,83.6,263.33,83.5,262.72,83.41,261.91,83.36,261.1,83.32,260.09,83.32,255.63,83.32,255.63,79.72,256.96,79.57,258.22,79.38,259.48,79.2,260.67,78.99,261.86,78.78,262.98,78.55,264.1,78.31,265.15,78.05,266.2,77.78,267.32,77.45,268.43,77.12,269.62,76.71,270.8,76.31,272.05,75.84,273.3,75.36,274.61,74.82,274.75,74.76,274.88,74.71,275.02,74.67,275.15,74.64,275.28,74.6,275.41,74.59,275.54,74.57,275.66,74.57,275.91,74.57,276.09,74.66,276.28,74.75,276.4,74.93,276.53,75.11,276.59,75.38,276.65,75.64,276.65,76,276.59,78.35,276.46,86.73,276.465,86.728] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [380.89,78.67,380.89,56.17,380.89,55.19,380.84,54.39,380.78,53.6,380.68,52.98,380.57,52.37,380.4,51.94,380.24,51.51,380.02,51.26,379.81,51.01,379.45,50.82,379.09,50.64,378.6,50.51,378.1,50.39,377.47,50.33,376.83,50.26,376.05,50.26,370.72,50.26,370.72,46.54,373.49,46.36,376.16,45.98,378.84,45.61,381.42,45.04,384,44.48,386.49,43.72,388.97,42.96,391.37,42.02,392.49,42.76,392.38,44.34,392.28,46.09,392.18,47.83,392.09,49.74,391.99,51.65,391.91,53.72,391.82,55.79,391.74,58.03,391.5,74.53,391.37,79.87,391.37,116.92,391.37,119.51,391.41,121.52,391.45,123.54,391.53,124.98,391.6,126.43,391.72,127.3,391.84,128.16,391.99,128.46,392.22,128.88,392.66,129.23,393.1,129.58,393.74,129.86,394.39,130.13,395.24,130.34,396.08,130.55,397.14,130.69,401.54,131.25,401.54,134.85,399.63,134.71,397.83,134.6,396.03,134.5,394.34,134.43,392.65,134.36,391.08,134.32,389.51,134.29,388.05,134.29,387.78,134.29,387.16,134.32,386.54,134.36,385.56,134.43,384.58,134.5,383.24,134.6,381.91,134.71,380.21,134.85,380.32,133.8,380.42,132.53,380.51,131.26,380.6,129.77,380.68,128.28,380.76,126.57,380.83,124.86,380.89,122.93,379.58,123.95,378.08,125.18,376.58,126.4,374.9,127.83,373.22,129.26,371.36,130.89,369.5,132.52,367.45,134.36,366.14,134.79,364.9,135.12,363.66,135.44,362.5,135.66,361.34,135.87,360.25,135.98,359.17,136.09,358.16,136.09,355.55,136.09,353.14,135.6,350.74,135.1,348.55,134.12,346.36,133.13,344.38,131.66,342.4,130.18,340.64,128.21,338.87,126.24,337.55,123.94,336.22,121.64,335.34,119,334.46,116.37,334.02,113.4,333.58,110.43,333.58,107.13,333.58,105.07,333.75,103.16,333.92,101.25,334.26,99.49,334.6,97.73,335.11,96.12,335.62,94.51,336.3,93.05,336.98,91.6,337.73,90.34,338.48,89.08,339.29,88.02,340.1,86.96,340.98,86.11,341.86,85.25,342.81,84.59,343.75,83.93,344.96,83.18,346.16,82.44,347.64,81.6,349.11,80.77,350.84,79.85,352.58,78.93,354.57,77.92,356.11,77.16,357.58,76.59,359.05,76.02,360.47,75.64,361.89,75.26,363.25,75.07,364.6,74.88,365.91,74.88,366.79,74.88,367.68,74.94,368.58,75,369.49,75.11,370.4,75.23,371.32,75.41,372.25,75.58,373.18,75.81,374.12,76.04,375.07,76.34,376.02,76.63,376.98,76.99,377.95,77.35,378.92,77.77,379.9,78.19,380.89,78.67,380.893,78.666,380.89,89.34,379.82,88.2,378.73,87.19,377.65,86.19,376.53,85.32,375.42,84.46,374.29,83.74,373.16,83.03,372.01,82.45,370.86,81.88,369.68,81.45,368.5,81.02,367.3,80.73,366.09,80.44,364.86,80.3,363.64,80.16,362.38,80.16,360.35,80.16,358.52,80.53,356.69,80.9,355.06,81.64,353.43,82.38,351.99,83.49,350.56,84.6,349.32,86.09,348.08,87.57,347.15,89.39,346.22,91.22,345.6,93.39,344.99,95.56,344.68,98.07,344.37,100.58,344.37,103.44,344.37,106.34,344.72,108.93,345.08,111.52,345.78,113.8,346.49,116.08,347.55,118.05,348.62,120.01,350.03,121.66,351.45,123.32,353.02,124.56,354.59,125.8,356.31,126.62,358.03,127.45,359.9,127.86,361.78,128.28,363.81,128.28,365.04,128.28,366.23,128.1,367.42,127.93,368.56,127.59,369.69,127.24,370.78,126.72,371.87,126.21,372.91,125.52,373.94,124.82,374.84,124.03,375.74,123.24,376.5,122.34,377.25,121.44,377.87,120.44,378.49,119.45,378.97,118.34,379.45,117.24,379.81,115.82,380.17,114.41,380.41,112.68,380.65,110.95,380.77,108.9,380.89,106.86,380.89,104.5,380.89,89.34,380.893,89.344] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [283.72,270.25,285.24,272.44,286.94,274.8,288.65,277.17,290.53,279.71,292.41,282.25,294.48,284.97,296.54,287.69,298.79,290.59,310.7,306.03,311.49,307.03,312.15,307.81,312.81,308.58,313.33,309.15,313.86,309.72,314.26,310.07,314.65,310.42,314.92,310.56,315.18,310.7,315.45,310.8,315.71,310.91,315.99,310.98,316.26,311.05,316.53,311.08,316.81,311.12,317.09,311.12,318.7,311.12,318.7,315.03,317.41,314.92,316.21,314.84,315,314.75,313.88,314.7,312.75,314.65,311.71,314.62,310.67,314.59,309.71,314.59,308.82,314.59,307.92,314.62,307.01,314.65,306.08,314.7,305.15,314.75,304.19,314.84,303.24,314.92,302.27,315.03,280.31,285.38,278.78,283.34,277.19,281.31,275.6,279.29,273.96,277.29,272.31,275.29,270.62,273.31,268.92,271.34,267.17,269.38,267.79,267.28,268.69,267.35,269.47,267.41,270.25,267.47,270.92,267.51,271.58,267.55,272.14,267.57,272.69,267.59,273.12,267.59,275.71,267.59,278.02,267.25,280.33,266.92,282.35,266.25,284.38,265.59,286.13,264.59,287.87,263.59,289.34,262.25,290.8,260.92,291.9,259.36,293,257.8,293.73,256.02,294.46,254.24,294.83,252.23,295.2,250.22,295.2,247.99,295.2,245.99,294.89,244.21,294.58,242.43,293.96,240.87,293.34,239.31,292.41,237.96,291.48,236.62,290.24,235.5,288.99,234.37,287.48,233.53,285.96,232.69,284.17,232.12,282.38,231.56,280.32,231.28,278.25,231,275.91,231,274.28,231,272.65,231.15,271.02,231.3,269.38,231.6,267.75,231.91,266.11,232.36,264.47,232.81,262.83,233.42,262.64,235.88,262.5,238.43,262.36,240.98,262.27,243.62,262.18,246.26,262.13,248.98,262.08,251.7,262.08,254.5,262.08,284.45,262.08,289.93,262.15,294.18,262.21,298.43,262.35,301.47,262.48,304.5,262.67,306.32,262.87,308.13,263.14,308.73,263.4,309.33,263.96,309.78,264.52,310.22,265.37,310.52,266.22,310.82,267.37,310.97,268.52,311.12,269.96,311.12,274.79,311.12,274.79,315.02,272.22,314.92,269.87,314.84,267.51,314.75,265.38,314.7,263.25,314.65,261.34,314.62,259.43,314.59,257.74,314.59,256.41,314.59,254.54,314.62,252.66,314.65,250.25,314.7,247.84,314.75,244.89,314.84,241.94,314.92,238.46,315.02,238.46,311.12,243.11,311.12,244.44,311.12,245.5,310.97,246.56,310.83,247.35,310.54,248.14,310.25,248.66,309.81,249.18,309.38,249.43,308.79,249.68,308.21,249.86,306.39,250.05,304.57,250.17,301.51,250.3,298.46,250.36,294.16,250.42,289.86,250.42,284.33,250.42,254.5,250.42,249.7,250.35,245.95,250.28,242.2,250.14,239.51,249.99,236.82,249.78,235.19,249.56,233.56,249.28,232.98,248.99,232.41,248.38,231.98,247.77,231.55,246.83,231.26,245.9,230.98,244.64,230.83,243.39,230.69,241.8,230.69,238.46,230.69,238.46,226.78,241.34,226.89,243.88,226.97,246.42,227.05,248.62,227.11,250.83,227.16,252.69,227.19,254.55,227.22,256.07,227.22,257.09,227.22,258.34,227.2,259.59,227.18,261.06,227.14,262.53,227.1,264.23,227.04,265.93,226.98,267.85,226.91,270.08,226.83,272,226.77,273.92,226.71,275.52,226.67,277.13,226.64,278.42,226.62,279.71,226.6,280.68,226.6,283.37,226.6,285.72,226.74,288.08,226.88,290.12,227.16,292.15,227.45,293.86,227.87,295.57,228.29,296.96,228.86,298.35,229.43,299.57,230.12,300.79,230.81,301.85,231.63,302.9,232.45,303.79,233.39,304.67,234.33,305.4,235.4,306.12,236.47,306.66,237.65,307.2,238.82,307.56,240.1,307.92,241.38,308.1,242.76,308.28,244.15,308.28,245.63,308.28,247.82,307.89,249.88,307.49,251.94,306.71,253.87,305.92,255.8,304.74,257.6,303.56,259.4,301.99,261.07,300.41,262.75,298.48,264.16,296.56,265.57,294.27,266.72,291.99,267.87,289.35,268.75,286.72,269.63,283.72,270.25,283.724,270.254] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [324.09,285.26,324.09,283.12,324.34,281.08,324.59,279.05,325.09,277.11,325.58,275.18,326.33,273.35,327.07,271.52,328.06,269.79,329.05,268.06,330.25,266.52,331.44,264.98,332.83,263.63,334.22,262.27,335.81,261.11,337.4,259.94,339.19,258.97,340.98,257.99,342.9,257.26,344.81,256.53,346.84,256.04,348.88,255.55,351.04,255.31,353.19,255.06,355.47,255.06,358.77,255.06,361.75,255.55,364.72,256.04,367.36,257.01,370.01,257.99,372.32,259.46,374.63,260.92,376.62,262.87,378.6,264.83,380.09,267.11,381.58,269.39,382.57,271.99,383.56,274.59,384.06,277.52,384.56,280.45,384.56,283.71,384.56,287.55,383.91,291,383.26,294.45,381.97,297.51,380.67,300.56,378.73,303.22,376.79,305.88,374.2,308.14,371.89,310.17,369.35,311.7,366.81,313.22,364.05,314.24,361.28,315.25,358.28,315.76,355.29,316.27,352.06,316.27,348.96,316.27,346.15,315.74,343.34,315.22,340.81,314.18,338.29,313.14,336.06,311.58,333.82,310.01,331.88,307.93,329.93,305.84,328.47,303.38,327.01,300.92,326.04,298.09,325.07,295.26,324.58,292.05,324.09,288.84,324.09,285.26,324.094,285.26,335.75,280.88,335.75,284.08,336.08,287.05,336.41,290.01,337.06,292.75,337.72,295.48,338.7,297.99,339.68,300.49,340.99,302.77,342.3,305.04,343.9,306.75,345.5,308.45,347.39,309.59,349.27,310.73,351.45,311.3,353.63,311.86,356.09,311.86,357.97,311.86,359.66,311.51,361.36,311.15,362.87,310.44,364.39,309.72,365.72,308.65,367.06,307.58,368.22,306.15,369.37,304.72,370.24,302.93,371.1,301.13,371.68,298.97,372.26,296.8,372.55,294.27,372.84,291.73,372.84,288.83,372.84,286.49,372.66,284.3,372.49,282.11,372.15,280.08,371.81,278.05,371.3,276.18,370.79,274.31,370.11,272.59,369.42,270.88,368.63,269.4,367.84,267.92,366.94,266.67,366.04,265.42,365.04,264.4,364.03,263.38,362.91,262.6,361.8,261.82,360.61,261.23,359.43,260.64,358.18,260.25,356.94,259.86,355.62,259.66,354.31,259.46,352.93,259.46,351.7,259.46,350.54,259.62,349.38,259.77,348.27,260.09,347.17,260.4,346.12,260.86,345.08,261.33,344.09,261.95,343.11,262.57,342.25,263.29,341.4,264.02,340.67,264.85,339.95,265.68,339.35,266.62,338.76,267.55,338.3,268.59,337.66,270,337.18,271.48,336.71,272.95,336.39,274.49,336.07,276.03,335.91,277.62,335.75,279.22,335.75,280.88,335.752,280.883] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [441.05,315.02,441.73,303.86,438.08,307.83,437.01,309,435.93,309.99,434.85,310.98,433.77,311.79,432.68,312.61,431.58,313.26,430.49,313.9,429.38,314.38,428.27,314.85,427.04,315.2,425.8,315.56,424.43,315.79,423.07,316.03,421.57,316.15,420.08,316.27,418.45,316.27,417.06,316.27,415.76,316.12,414.46,315.97,413.26,315.68,412.06,315.38,410.96,314.94,409.86,314.5,408.85,313.91,407.85,313.32,406.98,312.65,406.11,311.97,405.38,311.21,404.65,310.44,404.05,309.59,403.46,308.74,403,307.8,402.54,306.87,402.2,305.65,401.86,304.44,401.63,302.96,401.4,301.47,401.29,299.72,401.17,297.96,401.17,295.93,401.17,294.87,401.19,293.73,401.2,292.59,401.22,291.37,401.24,290.15,401.28,288.84,401.31,287.53,401.36,286.13,401.55,276.15,401.55,273.53,401.51,271.49,401.47,269.45,401.4,267.99,401.33,266.53,401.22,265.66,401.11,264.78,400.96,264.49,400.81,264.19,400.49,263.97,400.17,263.75,399.68,263.6,399.19,263.46,398.52,263.38,397.86,263.31,397.02,263.31,391.5,263.31,391.5,259.9,393.61,259.71,395.65,259.43,397.68,259.14,399.63,258.75,401.58,258.36,403.45,257.88,405.32,257.39,407.11,256.8,412.27,254.88,412.54,254.88,412.73,254.97,412.93,255.07,413.06,255.26,413.2,255.46,413.26,255.75,413.33,256.04,413.33,256.43,412.89,262.75,412.68,266.04,412.51,269.21,412.35,272.38,412.24,275.43,412.13,278.49,412.08,281.42,412.03,284.36,412.03,287.18,412.03,290.01,412.08,292.32,412.14,294.63,412.26,296.43,412.37,298.23,412.55,299.53,412.72,300.82,412.95,301.6,413.19,302.38,413.55,303.1,413.91,303.82,414.39,304.47,414.88,305.12,415.49,305.71,416.11,306.29,416.85,306.81,417.59,307.33,418.42,307.72,419.24,308.11,420.15,308.37,421.05,308.63,422.04,308.76,423.03,308.89,424.09,308.89,425.53,308.89,426.91,308.66,428.29,308.42,429.61,307.96,430.93,307.49,432.19,306.8,433.45,306.1,434.64,305.17,435.84,304.24,436.83,303.3,437.83,302.37,438.61,301.43,439.4,300.49,439.98,299.55,440.55,298.61,440.92,297.66,441.13,297.12,441.28,296.03,441.43,294.94,441.53,293.31,441.63,291.67,441.68,289.49,441.73,287.31,441.73,284.58,441.73,279.99,441.69,276.45,441.64,272.91,441.56,270.41,441.47,267.91,441.35,266.46,441.22,265.01,441.05,264.61,440.89,264.29,440.47,264.04,440.04,263.8,439.34,263.63,438.64,263.47,437.68,263.39,436.71,263.31,435.47,263.31,430.57,263.31,430.57,259.9,432.16,259.71,433.64,259.51,435.12,259.31,436.47,259.09,437.83,258.87,439.07,258.64,440.3,258.41,441.42,258.16,442.54,257.91,443.68,257.6,444.83,257.29,446.01,256.92,447.19,256.55,448.4,256.12,449.61,255.68,450.85,255.18,451,255.11,451.15,255.05,451.29,254.99,451.43,254.95,451.57,254.91,451.71,254.89,451.84,254.87,451.96,254.87,452.23,254.87,452.42,254.95,452.62,255.02,452.75,255.17,452.88,255.32,452.95,255.54,453.02,255.76,453.02,256.05,452.77,261.82,452.54,267.12,452.36,272.11,452.19,277.09,452.07,281.76,451.95,286.42,451.9,290.77,451.84,295.12,451.84,299.15,451.84,301.41,451.9,303.19,451.95,304.97,452.07,306.27,452.19,307.56,452.36,308.37,452.54,309.18,452.77,309.51,453.11,309.99,453.65,310.35,454.19,310.71,454.92,310.95,455.66,311.19,456.59,311.31,457.53,311.43,458.66,311.43,462.26,311.43,462.26,315.03,460.32,314.92,458.53,314.84,456.74,314.75,455.09,314.7,453.45,314.65,451.96,314.62,450.46,314.59,449.11,314.59,448.1,314.59,447.09,314.62,446.09,314.65,445.08,314.7,444.07,314.75,443.06,314.84,442.06,314.92,441.05,315.02,441.048,315.025] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2] ), $.toNumberVector( [487.93,266.9,497.31,258.59,497.73,258.22,498.16,257.9,498.59,257.58,499.03,257.31,499.47,257.04,499.93,256.82,500.38,256.59,500.85,256.42,501.87,256.08,502.9,255.83,503.92,255.57,504.95,255.4,505.97,255.23,506.99,255.15,508.02,255.06,509.04,255.06,510.7,255.06,512.25,255.23,513.8,255.4,515.24,255.73,516.67,256.07,518,256.58,519.32,257.08,520.53,257.76,521.74,258.43,522.78,259.21,523.82,259.98,524.69,260.86,525.56,261.73,526.26,262.71,526.96,263.69,527.49,264.76,528.02,265.84,528.41,267.22,528.81,268.61,529.07,270.29,529.34,271.98,529.47,273.97,529.6,275.96,529.6,278.25,529.35,297.79,529.35,300.31,529.41,302.3,529.46,304.3,529.57,305.75,529.67,307.21,529.84,308.13,530,309.06,530.21,309.44,530.51,309.94,530.94,310.31,531.37,310.68,531.94,310.93,532.51,311.18,533.22,311.3,533.93,311.43,534.77,311.43,539.21,311.43,539.21,315.02,537.56,314.92,536.02,314.83,534.47,314.75,533.04,314.7,531.61,314.64,530.3,314.62,528.98,314.59,527.77,314.59,526.6,314.59,525.38,314.62,524.16,314.64,522.9,314.7,521.64,314.75,520.34,314.83,519.04,314.92,517.7,315.02,517.99,312,518.21,308.45,518.43,304.89,518.58,300.81,518.73,296.72,518.8,292.11,518.87,287.49,518.87,282.34,518.87,280.27,518.78,278.49,518.69,276.72,518.51,275.24,518.33,273.77,518.05,272.6,517.78,271.43,517.41,270.56,517.05,269.69,516.56,268.91,516.07,268.13,515.46,267.43,514.84,266.73,514.1,266.12,513.37,265.51,512.5,264.98,511.64,264.45,510.69,264.06,509.74,263.66,508.71,263.4,507.67,263.14,506.55,263,505.42,262.87,504.21,262.87,502.7,262.87,501.31,263.06,499.92,263.25,498.64,263.63,497.36,264.01,496.2,264.58,495.04,265.15,493.99,265.91,492.94,266.67,492.09,267.47,491.24,268.27,490.59,269.1,489.94,269.94,489.5,270.82,489.05,271.69,488.8,272.61,488.64,273.21,488.53,274.31,488.41,275.4,488.33,276.98,488.26,278.56,488.22,280.63,488.18,282.7,488.18,285.26,488.18,288.1,488.19,290.83,488.2,293.57,488.22,296.2,488.25,298.84,488.28,301.37,488.32,303.91,488.37,306.34,488.38,307.07,488.44,307.66,488.51,308.26,488.61,308.71,488.72,309.17,488.88,309.49,489.04,309.81,489.24,310,489.63,310.36,490.14,310.63,490.66,310.89,491.3,311.07,491.94,311.25,492.7,311.34,493.46,311.43,494.35,311.43,498.78,311.43,498.78,315.02,496.16,314.92,493.8,314.83,491.44,314.75,489.35,314.7,487.26,314.64,485.44,314.62,483.62,314.59,482.07,314.59,480.42,314.59,478.66,314.62,476.9,314.64,475.03,314.7,473.16,314.75,471.18,314.83,469.19,314.92,467.09,315.02,467.09,311.43,471.56,311.43,472.71,311.43,473.62,311.29,474.52,311.16,475.19,310.89,475.87,310.63,476.3,310.23,476.73,309.82,476.92,309.29,477.12,308.76,477.26,306.88,477.41,305.01,477.5,301.79,477.6,298.57,477.65,294.01,477.7,289.46,477.7,283.56,477.7,280.91,477.68,278.55,477.67,276.19,477.64,274.11,477.6,272.04,477.56,270.25,477.51,268.46,477.45,266.96,477.42,266.46,477.34,266.05,477.26,265.63,477.14,265.29,477.02,264.95,476.85,264.68,476.67,264.42,476.46,264.23,476.24,264.05,475.83,263.91,475.41,263.77,474.8,263.68,474.19,263.58,473.38,263.54,472.57,263.49,471.56,263.49,467.09,263.49,467.09,259.89,468.42,259.74,469.68,259.56,470.94,259.38,472.13,259.17,473.32,258.96,474.44,258.72,475.56,258.48,476.62,258.22,477.67,257.96,478.78,257.62,479.9,257.29,481.08,256.89,482.26,256.48,483.51,256.01,484.76,255.54,486.07,254.99,486.21,254.93,486.35,254.89,486.48,254.84,486.62,254.81,486.75,254.78,486.87,254.76,487,254.75,487.13,254.75,487.37,254.75,487.56,254.84,487.74,254.93,487.87,255.1,487.99,255.28,488.05,255.55,488.12,255.82,488.12,256.17,488.05,258.53,487.93,266.9,487.929,266.904] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [592.36,258.84,592.36,236.35,592.36,235.37,592.3,234.57,592.25,233.77,592.14,233.16,592.03,232.55,591.87,232.12,591.7,231.68,591.49,231.44,591.27,231.19,590.91,231,590.56,230.82,590.06,230.69,589.57,230.57,588.93,230.5,588.29,230.44,587.52,230.44,582.19,230.44,582.19,226.72,584.95,226.54,587.63,226.16,590.3,225.79,592.88,225.22,595.46,224.66,597.95,223.9,600.44,223.14,602.83,222.19,603.95,222.94,603.84,224.52,603.74,226.27,603.64,228.01,603.55,229.92,603.46,231.83,603.37,233.9,603.29,235.97,603.21,238.2,602.96,254.71,602.83,260.05,602.83,297.1,602.83,299.69,602.87,301.7,602.91,303.72,602.99,305.16,603.07,306.61,603.18,307.47,603.3,308.34,603.46,308.64,603.69,309.06,604.13,309.41,604.56,309.76,605.21,310.03,605.85,310.31,606.7,310.52,607.55,310.73,608.6,310.87,613,311.43,613,315.03,611.09,314.89,609.29,314.78,607.49,314.68,605.81,314.61,604.12,314.54,602.54,314.5,600.97,314.47,599.51,314.47,599.25,314.47,598.62,314.5,598,314.54,597.02,314.61,596.04,314.68,594.7,314.78,593.37,314.89,591.67,315.03,591.78,313.98,591.88,312.71,591.97,311.44,592.06,309.95,592.15,308.46,592.22,306.75,592.29,305.04,592.35,303.12,591.04,304.13,589.54,305.36,588.04,306.58,586.36,308.01,584.68,309.44,582.82,311.07,580.96,312.7,578.92,314.54,577.6,314.97,576.36,315.3,575.12,315.62,573.96,315.84,572.8,316.05,571.72,316.16,570.63,316.27,569.63,316.27,567.01,316.27,564.61,315.78,562.2,315.28,560.01,314.3,557.82,313.31,555.84,311.84,553.87,310.36,552.1,308.39,550.34,306.42,549.01,304.12,547.69,301.82,546.81,299.18,545.92,296.55,545.48,293.58,545.04,290.61,545.04,287.31,545.04,285.25,545.21,283.34,545.38,281.43,545.72,279.67,546.06,277.91,546.57,276.3,547.08,274.69,547.76,273.23,548.45,271.78,549.19,270.52,549.94,269.26,550.75,268.2,551.57,267.14,552.44,266.29,553.32,265.43,554.27,264.77,555.21,264.11,556.42,263.36,557.63,262.62,559.1,261.78,560.57,260.95,562.3,260.03,564.04,259.11,566.04,258.1,567.57,257.34,569.04,256.77,570.52,256.2,571.93,255.82,573.35,255.44,574.71,255.25,576.07,255.06,577.37,255.06,578.25,255.06,579.15,255.12,580.04,255.18,580.95,255.3,581.86,255.41,582.79,255.59,583.71,255.76,584.64,255.99,585.58,256.22,586.53,256.52,587.48,256.81,588.45,257.17,589.41,257.53,590.39,257.95,591.36,258.36,592.36,258.84,592.356,258.844,592.36,269.52,591.29,268.37,590.2,267.37,589.11,266.36,588,265.5,586.89,264.64,585.76,263.92,584.62,263.2,583.47,262.63,582.32,262.05,581.14,261.62,579.96,261.19,578.76,260.91,577.56,260.62,576.33,260.47,575.1,260.33,573.85,260.33,571.82,260.33,569.99,260.7,568.16,261.07,566.52,261.81,564.89,262.55,563.46,263.67,562.02,264.78,560.78,266.26,559.54,267.74,558.62,269.57,557.69,271.4,557.07,273.56,556.45,275.73,556.14,278.25,555.83,280.76,555.83,283.62,555.83,286.52,556.18,289.11,556.54,291.7,557.25,293.98,557.95,296.25,559.02,298.22,560.08,300.19,561.5,301.84,562.91,303.49,564.48,304.73,566.05,305.97,567.77,306.8,569.49,307.63,571.37,308.04,573.24,308.45,575.27,308.45,576.51,308.45,577.69,308.28,578.88,308.11,580.02,307.76,581.16,307.42,582.25,306.9,583.33,306.38,584.37,305.69,585.41,305,586.3,304.2,587.2,303.41,587.96,302.51,588.72,301.62,589.34,300.62,589.96,299.62,590.44,298.52,590.92,297.41,591.28,296,591.63,294.58,591.87,292.85,592.11,291.12,592.23,289.07,592.36,287.03,592.36,284.67,592.36,269.52,592.356,269.521] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2] ), $.toNumberVector( [242.34,180.34,242.39,177.07,242.34,173.7,247.66,170.68,248.56,170.16,249.41,169.73,250.26,169.3,251.05,168.94,251.84,168.59,252.57,168.32,253.31,168.04,253.98,167.85,254.66,167.65,255.36,167.5,256.06,167.36,256.79,167.26,257.51,167.16,258.25,167.11,259,167.06,259.77,167.06,261.45,167.06,262.98,167.25,264.5,167.44,265.85,167.82,267.21,168.2,268.41,168.77,269.6,169.33,270.63,170.09,271.67,170.84,272.49,171.7,273.32,172.56,273.94,173.53,274.55,174.49,274.97,175.56,275.38,176.62,275.59,177.79,275.74,178.67,275.86,180.2,275.97,181.73,276.07,183.9,276.16,186.08,276.22,188.91,276.29,191.73,276.32,195.21,276.35,198.49,276.4,201.03,276.44,203.58,276.52,205.39,276.59,207.2,276.69,208.27,276.79,209.35,276.91,209.69,277.03,210.03,277.24,210.29,277.46,210.55,277.76,210.72,278.07,210.89,278.46,210.97,278.86,211.06,279.35,211.06,283.16,211.06,283.16,214.28,281.77,214.19,280.59,214.13,279.4,214.07,278.43,214.02,277.46,213.98,276.7,213.96,275.94,213.94,275.39,213.94,274.71,213.94,273.91,213.96,273.11,213.98,272.2,214.02,271.28,214.07,270.25,214.13,269.22,214.19,268.07,214.28,268.12,209.94,268.12,209.41,268.12,208.89,268.11,208.36,268.11,207.83,268.1,207.3,268.09,206.77,268.08,206.23,268.07,205.7,257.96,213.4,257.62,213.66,257.28,213.88,256.94,214.1,256.61,214.28,256.27,214.45,255.94,214.6,255.61,214.74,255.28,214.84,254.95,214.95,254.55,215.02,254.16,215.1,253.7,215.15,253.24,215.2,252.72,215.23,252.2,215.26,251.61,215.26,250.04,215.26,248.65,215.06,247.26,214.87,246.06,214.48,244.86,214.1,243.84,213.52,242.83,212.94,242,212.16,241.17,211.39,240.54,210.48,239.92,209.57,239.51,208.54,239.09,207.5,238.88,206.32,238.68,205.15,238.68,203.85,238.68,202.62,238.82,201.46,238.97,200.31,239.27,199.24,239.56,198.16,240.01,197.16,240.45,196.17,241.04,195.25,241.64,194.32,242.35,193.52,243.07,192.72,243.91,192.05,244.75,191.37,245.72,190.81,246.69,190.25,247.78,189.81,248.87,189.37,250.69,188.86,252.5,188.36,255.04,187.79,257.57,187.21,260.83,186.57,264.09,185.93,268.07,185.23,268.05,183.68,267.86,182.32,267.68,180.97,267.34,179.81,267,178.65,266.5,177.68,265.99,176.72,265.34,175.95,264.51,174.98,263.5,174.26,262.49,173.54,261.31,173.06,260.12,172.57,258.76,172.33,257.4,172.09,255.86,172.09,255.28,172.09,254.71,172.13,254.14,172.16,253.59,172.24,253.04,172.31,252.51,172.41,251.98,172.52,251.47,172.67,250.96,172.81,250.46,172.99,249.97,173.17,249.49,173.38,249.01,173.6,248.56,173.85,248.1,174.1,247.66,174.39,247.3,175.26,246.97,176.12,246.63,176.97,246.3,177.81,245.98,178.64,245.67,179.46,245.36,180.28,245.07,181.08,242.34,180.34,242.339,180.344,268.07,188.11,264.68,188.84,261.9,189.55,259.13,190.25,256.97,190.94,254.82,191.62,253.29,192.29,251.75,192.95,250.84,193.59,249.92,194.23,249.23,195.04,248.55,195.86,248.09,196.85,247.63,197.84,247.4,199,247.17,200.17,247.17,201.5,247.17,202.41,247.3,203.22,247.44,204.03,247.7,204.75,247.96,205.47,248.35,206.1,248.75,206.74,249.27,207.28,249.8,207.82,250.4,208.22,251,208.63,251.68,208.9,252.35,209.17,253.11,209.31,253.86,209.44,254.69,209.44,255.61,209.44,256.5,209.32,257.4,209.19,258.28,208.93,259.15,208.68,260.01,208.29,260.86,207.91,261.7,207.4,262.54,206.89,263.35,206.25,264.17,205.61,264.97,204.85,265.76,204.09,266.54,203.21,267.32,202.32,268.07,201.31,267.97,190.49,268.07,188.11,268.071,188.107] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2] ), $.toNumberVector( [302.98,176.39,310.37,169.85,310.7,169.55,311.04,169.3,311.38,169.05,311.72,168.83,312.07,168.62,312.43,168.45,312.79,168.27,313.16,168.14,313.96,167.87,314.77,167.67,315.58,167.47,316.38,167.33,317.19,167.2,318,167.13,318.8,167.06,319.61,167.06,320.92,167.06,322.14,167.2,323.36,167.33,324.49,167.59,325.62,167.86,326.66,168.26,327.7,168.66,328.66,169.19,329.61,169.72,330.43,170.33,331.25,170.94,331.93,171.63,332.62,172.32,333.17,173.09,333.72,173.86,334.13,174.7,334.55,175.55,334.86,176.64,335.17,177.73,335.38,179.06,335.59,180.38,335.69,181.95,335.8,183.52,335.8,185.32,335.6,200.71,335.6,202.7,335.64,204.26,335.69,205.83,335.77,206.98,335.86,208.13,335.98,208.85,336.11,209.58,336.28,209.89,336.51,210.28,336.85,210.57,337.19,210.86,337.64,211.06,338.09,211.25,338.65,211.35,339.21,211.45,339.87,211.45,343.37,211.45,343.37,214.28,342.06,214.2,340.85,214.13,339.64,214.07,338.51,214.02,337.38,213.98,336.35,213.96,335.31,213.94,334.36,213.94,333.43,213.94,332.47,213.96,331.52,213.98,330.52,214.02,329.53,214.07,328.51,214.13,327.48,214.2,326.42,214.28,326.65,211.9,326.83,209.1,327,206.3,327.12,203.09,327.23,199.87,327.29,196.24,327.35,192.6,327.35,188.55,327.35,186.91,327.28,185.52,327.21,184.12,327.06,182.96,326.92,181.8,326.7,180.88,326.49,179.96,326.2,179.27,325.91,178.59,325.53,177.97,325.14,177.36,324.66,176.81,324.18,176.26,323.6,175.77,323.01,175.29,322.34,174.88,321.66,174.46,320.91,174.15,320.16,173.84,319.34,173.63,318.53,173.42,317.64,173.32,316.76,173.22,315.8,173.22,314.62,173.22,313.52,173.37,312.42,173.52,311.42,173.82,310.41,174.11,309.5,174.56,308.58,175.01,307.76,175.61,306.93,176.21,306.26,176.84,305.59,177.47,305.08,178.12,304.57,178.78,304.22,179.47,303.87,180.16,303.67,180.88,303.55,181.36,303.46,182.22,303.36,183.08,303.3,184.32,303.24,185.57,303.21,187.2,303.18,188.83,303.18,190.84,303.18,193.08,303.19,195.23,303.2,197.39,303.22,199.46,303.24,201.54,303.26,203.53,303.29,205.53,303.33,207.44,303.34,208.02,303.39,208.49,303.44,208.95,303.53,209.31,303.61,209.67,303.73,209.93,303.86,210.18,304.02,210.33,304.32,210.61,304.73,210.82,305.13,211.03,305.64,211.17,306.14,211.31,306.74,211.38,307.34,211.45,308.04,211.45,311.53,211.45,311.53,214.28,309.46,214.2,307.61,214.13,305.75,214.07,304.11,214.02,302.46,213.98,301.03,213.96,299.59,213.94,298.37,213.94,297.07,213.94,295.69,213.96,294.3,213.98,292.83,214.02,291.36,214.07,289.79,214.13,288.23,214.2,286.58,214.28,286.58,211.45,290.1,211.45,291,211.45,291.71,211.34,292.43,211.24,292.96,211.03,293.49,210.82,293.83,210.5,294.17,210.19,294.32,209.77,294.47,209.35,294.59,207.87,294.7,206.39,294.78,203.86,294.85,201.33,294.89,197.74,294.93,194.15,294.93,189.5,294.93,187.42,294.92,185.56,294.9,183.7,294.88,182.07,294.86,180.43,294.82,179.03,294.78,177.62,294.73,176.44,294.71,176.05,294.65,175.72,294.59,175.39,294.49,175.12,294.39,174.85,294.26,174.64,294.12,174.44,293.95,174.29,293.78,174.14,293.46,174.03,293.13,173.92,292.65,173.85,292.16,173.78,291.53,173.74,290.89,173.7,290.1,173.7,286.58,173.7,286.58,170.87,287.63,170.75,288.62,170.61,289.61,170.46,290.55,170.3,291.48,170.13,292.37,169.95,293.25,169.76,294.08,169.55,294.91,169.35,295.78,169.08,296.66,168.82,297.59,168.5,298.53,168.19,299.51,167.81,300.49,167.44,301.53,167.02,301.64,166.97,301.74,166.93,301.85,166.89,301.95,166.87,302.06,166.84,302.16,166.83,302.26,166.82,302.35,166.82,302.55,166.82,302.69,166.89,302.84,166.96,302.94,167.1,303.04,167.24,303.08,167.45,303.13,167.66,303.13,167.94,303.08,169.8,302.98,176.39,302.983,176.389] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [385.21,170.04,385.21,152.33,385.21,151.56,385.17,150.93,385.12,150.3,385.04,149.82,384.95,149.34,384.83,149,384.7,148.66,384.53,148.46,384.35,148.27,384.07,148.12,383.79,147.97,383.4,147.87,383.01,147.78,382.51,147.73,382.01,147.68,381.4,147.68,377.2,147.68,377.2,144.75,379.38,144.6,381.49,144.31,383.59,144.01,385.62,143.57,387.66,143.12,389.61,142.53,391.57,141.93,393.46,141.18,394.34,141.77,394.26,143.02,394.18,144.39,394.1,145.77,394.02,147.27,393.95,148.77,393.88,150.4,393.82,152.03,393.75,153.79,393.56,166.79,393.46,170.99,393.46,200.16,393.46,202.2,393.49,203.79,393.52,205.38,393.58,206.51,393.65,207.65,393.74,208.33,393.83,209.02,393.95,209.25,394.13,209.58,394.48,209.85,394.82,210.13,395.33,210.35,395.84,210.57,396.5,210.73,397.17,210.9,398,211.01,401.47,211.45,401.47,214.28,399.96,214.17,398.55,214.09,397.13,214,395.8,213.95,394.47,213.89,393.23,213.87,391.99,213.84,390.84,213.84,390.64,213.84,390.15,213.87,389.66,213.89,388.88,213.95,388.11,214,387.06,214.09,386.01,214.17,384.67,214.28,384.76,213.45,384.83,212.45,384.91,211.45,384.98,210.28,385.05,209.11,385.1,207.76,385.16,206.42,385.21,204.9,384.17,205.7,382.99,206.66,381.81,207.63,380.49,208.75,379.17,209.88,377.7,211.16,376.24,212.45,374.63,213.89,373.59,214.23,372.62,214.49,371.64,214.74,370.73,214.91,369.81,215.09,368.96,215.17,368.11,215.25,367.31,215.25,365.25,215.25,363.36,214.87,361.47,214.48,359.74,213.71,358.02,212.93,356.46,211.77,354.9,210.6,353.51,209.05,352.12,207.5,351.08,205.69,350.04,203.88,349.34,201.8,348.65,199.73,348.3,197.39,347.95,195.05,347.95,192.45,347.95,190.83,348.09,189.32,348.22,187.82,348.49,186.43,348.76,185.05,349.16,183.78,349.56,182.52,350.1,181.37,350.64,180.22,351.22,179.23,351.81,178.24,352.45,177.41,353.09,176.57,353.78,175.9,354.48,175.22,355.22,174.7,355.96,174.18,356.91,173.6,357.87,173.01,359.02,172.35,360.18,171.7,361.55,170.97,362.91,170.25,364.49,169.45,365.69,168.86,366.85,168.41,368.01,167.96,369.13,167.66,370.25,167.36,371.32,167.21,372.38,167.06,373.41,167.06,374.1,167.06,374.81,167.11,375.52,167.15,376.23,167.24,376.95,167.34,377.67,167.47,378.4,167.61,379.14,167.79,379.88,167.98,380.62,168.21,381.37,168.44,382.13,168.72,382.89,169,383.66,169.33,384.43,169.66,385.21,170.04,385.21,170.042,385.21,178.45,384.37,177.54,383.51,176.75,382.65,175.96,381.78,175.28,380.9,174.6,380.01,174.04,379.12,173.47,378.21,173.02,377.31,172.57,376.38,172.23,375.45,171.89,374.5,171.67,373.56,171.44,372.59,171.33,371.62,171.21,370.63,171.21,369.04,171.21,367.6,171.5,366.16,171.8,364.87,172.38,363.58,172.96,362.45,173.84,361.32,174.72,360.35,175.88,359.37,177.05,358.64,178.49,357.91,179.92,357.43,181.63,356.94,183.34,356.69,185.32,356.45,187.3,356.45,189.55,356.45,191.83,356.73,193.87,357.01,195.91,357.57,197.71,358.12,199.5,358.96,201.05,359.8,202.6,360.91,203.9,362.03,205.2,363.26,206.18,364.5,207.15,365.85,207.8,367.21,208.45,368.68,208.78,370.16,209.1,371.76,209.1,372.73,209.1,373.67,208.97,374.6,208.83,375.5,208.56,376.39,208.29,377.25,207.88,378.11,207.47,378.92,206.93,379.74,206.39,380.45,205.76,381.15,205.14,381.75,204.43,382.35,203.72,382.84,202.94,383.32,202.15,383.7,201.28,384.08,200.41,384.36,199.3,384.64,198.18,384.83,196.82,385.02,195.46,385.12,193.85,385.21,192.24,385.21,190.38,385.21,178.45,385.21,178.449] ) );
        shape.graphics.endFill();

        return shape;
      },
      
      "Masayoshi Minoshima" : function()
      {
        var shape = Shape();
        
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [93.18,212.6,76.35,247.63,73.98,252.56,71.82,257.19,69.67,261.81,67.73,266.11,65.79,270.42,64.06,274.42,62.33,278.42,60.81,282.1,58.55,282.1,58.02,280.84,57.01,278.59,56,276.34,54.49,273.1,52.99,269.86,51,265.63,49.01,261.41,46.53,256.19,26.23,214.17,26.23,257.97,26.23,261.79,26.31,264.79,26.39,267.79,26.54,269.96,26.69,272.13,26.92,273.47,27.15,274.81,27.46,275.33,27.76,275.85,28.39,276.24,29.02,276.62,29.97,276.88,30.92,277.14,32.19,277.27,33.46,277.4,35.06,277.4,37.16,277.4,37.16,280.97,35.19,280.87,33.4,280.79,31.62,280.72,30.01,280.67,28.41,280.62,26.99,280.59,25.57,280.57,24.34,280.57,23.44,280.57,22.11,280.59,20.77,280.62,18.99,280.67,17.21,280.72,14.98,280.79,12.76,280.87,10.09,280.97,10.09,277.4,13.77,277.4,14.71,277.4,15.49,277.33,16.26,277.26,16.89,277.13,17.51,276.99,17.98,276.79,18.44,276.59,18.76,276.32,19.07,276.05,19.32,275.67,19.57,275.3,19.76,274.81,19.95,274.32,20.08,273.72,20.21,273.12,20.29,272.41,20.47,270.43,20.61,268.37,20.74,266.31,20.84,264.17,20.93,262.03,20.97,259.82,21.02,257.6,21.02,255.31,21.02,223.25,21.02,220.35,20.99,217.94,20.96,215.53,20.89,213.61,20.83,211.69,20.73,210.26,20.64,208.83,20.51,207.9,20.45,207.42,20.32,206.99,20.19,206.57,19.98,206.2,19.77,205.83,19.49,205.52,19.2,205.21,18.84,204.96,18.48,204.7,17.94,204.51,17.4,204.32,16.68,204.19,15.96,204.06,15.06,204,14.17,203.94,13.09,203.94,10.09,203.94,10.09,200.37,12.55,200.47,14.56,200.54,16.57,200.61,18.12,200.66,19.67,200.71,20.76,200.74,21.86,200.76,22.5,200.76,23.3,200.76,24.28,200.74,25.26,200.71,26.4,200.66,27.55,200.61,28.87,200.54,30.19,200.47,31.67,200.37,33.39,204.18,35.24,208.18,37.08,212.19,39.06,216.39,41.04,220.59,43.15,224.99,45.25,229.38,47.49,233.97,62.41,264.63,76.18,236.24,77.99,232.51,79.93,228.41,81.87,224.3,83.94,219.82,86.01,215.33,88.21,210.47,90.4,205.61,92.73,200.37,94.5,200.47,96.01,200.54,97.51,200.61,98.76,200.66,100.01,200.71,100.99,200.74,101.97,200.76,102.7,200.76,103.53,200.76,104.7,200.74,105.88,200.71,107.38,200.66,108.89,200.61,110.74,200.54,112.58,200.47,114.76,200.37,114.76,203.93,111.06,203.93,109.81,203.93,108.8,204.04,107.79,204.15,107.02,204.37,106.26,204.58,105.74,204.91,105.22,205.23,104.94,205.66,104.66,206.09,104.45,207.09,104.25,208.08,104.11,209.63,103.97,211.19,103.9,213.3,103.83,215.42,103.83,218.1,103.83,259.5,103.83,262.96,103.9,265.67,103.97,268.39,104.12,270.38,104.27,272.36,104.49,273.6,104.7,274.85,105,275.36,105.29,275.87,105.84,276.25,106.39,276.63,107.21,276.89,108.02,277.14,109.1,277.27,110.18,277.4,111.52,277.4,114.76,277.4,114.76,280.97,112.79,280.87,110.87,280.79,108.94,280.72,107.06,280.67,105.17,280.62,103.33,280.59,101.49,280.57,99.69,280.57,97.71,280.57,95.68,280.59,93.65,280.62,91.58,280.67,89.51,280.72,87.39,280.79,85.26,280.87,83.1,280.97,83.1,277.4,86.84,277.4,87.95,277.4,88.85,277.28,89.75,277.15,90.43,276.91,91.1,276.67,91.56,276.3,92.01,275.93,92.25,275.44,92.48,274.96,92.65,273.66,92.83,272.37,92.95,270.27,93.06,268.17,93.12,265.26,93.18,262.36,93.18,258.65,93.18,212.6,93.183,212.6] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2] ), $.toNumberVector( [125.24,241.6,125.3,237.81,125.24,233.9,131.41,230.39,132.46,229.79,133.45,229.29,134.43,228.79,135.34,228.38,136.26,227.97,137.11,227.65,137.96,227.33,138.75,227.1,139.54,226.88,140.35,226.71,141.16,226.54,142,226.42,142.84,226.31,143.7,226.25,144.57,226.2,145.46,226.2,147.42,226.2,149.18,226.42,150.95,226.63,152.52,227.07,154.1,227.51,155.48,228.17,156.87,228.83,158.06,229.7,159.26,230.58,160.22,231.58,161.18,232.58,161.89,233.69,162.61,234.81,163.09,236.05,163.57,237.29,163.81,238.64,163.98,239.66,164.12,241.43,164.26,243.2,164.37,245.73,164.47,248.25,164.55,251.53,164.62,254.81,164.66,258.84,164.69,262.65,164.75,265.6,164.81,268.55,164.89,270.65,164.98,272.75,165.09,274,165.2,275.25,165.34,275.64,165.49,276.04,165.73,276.34,165.98,276.64,166.33,276.83,166.69,277.03,167.15,277.13,167.61,277.23,168.18,277.23,172.59,277.23,172.59,280.97,170.98,280.87,169.61,280.79,168.24,280.72,167.11,280.67,165.99,280.62,165.11,280.6,164.23,280.57,163.59,280.57,162.79,280.57,161.87,280.6,160.94,280.62,159.88,280.67,158.82,280.72,157.62,280.79,156.42,280.87,155.09,280.97,155.15,275.93,155.15,275.32,155.15,274.71,155.14,274.1,155.13,273.48,155.13,272.87,155.12,272.25,155.11,271.63,155.09,271.01,143.37,279.95,142.97,280.25,142.58,280.5,142.18,280.75,141.79,280.96,141.41,281.17,141.02,281.33,140.63,281.5,140.25,281.62,139.87,281.74,139.41,281.83,138.96,281.92,138.42,281.98,137.89,282.04,137.29,282.07,136.68,282.1,136,282.1,134.18,282.1,132.57,281.87,130.96,281.65,129.56,281.2,128.17,280.75,126.99,280.08,125.81,279.41,124.85,278.51,123.88,277.61,123.16,276.56,122.44,275.51,121.96,274.3,121.48,273.1,121.23,271.74,120.99,270.38,120.99,268.87,120.99,267.44,121.17,266.1,121.34,264.76,121.68,263.51,122.02,262.27,122.54,261.11,123.05,259.95,123.74,258.89,124.43,257.82,125.26,256.89,126.09,255.96,127.07,255.17,128.05,254.39,129.17,253.74,130.29,253.09,131.56,252.58,132.82,252.07,134.93,251.48,137.03,250.9,139.97,250.23,142.92,249.57,146.7,248.83,150.47,248.08,155.09,247.26,155.06,245.47,154.85,243.9,154.64,242.32,154.24,240.98,153.84,239.63,153.26,238.51,152.68,237.4,151.92,236.5,150.96,235.38,149.79,234.55,148.62,233.71,147.25,233.15,145.87,232.59,144.29,232.31,142.72,232.03,140.93,232.03,140.25,232.03,139.59,232.07,138.93,232.11,138.3,232.19,137.66,232.28,137.04,232.4,136.43,232.53,135.83,232.69,135.24,232.86,134.66,233.07,134.09,233.28,133.54,233.53,132.99,233.78,132.46,234.07,131.92,234.36,131.41,234.69,131,235.7,130.61,236.69,130.22,237.69,129.84,238.66,129.47,239.63,129.11,240.57,128.75,241.52,128.41,242.45,125.24,241.6,125.241,241.602,155.09,250.61,151.15,251.45,147.94,252.28,144.72,253.1,142.22,253.89,139.72,254.69,137.94,255.45,136.16,256.22,135.1,256.96,134.04,257.71,133.24,258.65,132.44,259.6,131.91,260.74,131.38,261.89,131.11,263.24,130.85,264.59,130.85,266.15,130.85,267.19,131,268.13,131.15,269.08,131.46,269.91,131.76,270.75,132.22,271.48,132.68,272.22,133.29,272.84,133.89,273.47,134.59,273.94,135.29,274.42,136.07,274.73,136.86,275.04,137.73,275.2,138.61,275.36,139.57,275.36,140.63,275.36,141.67,275.21,142.71,275.06,143.73,274.77,144.74,274.47,145.74,274.02,146.73,273.58,147.7,272.99,148.67,272.39,149.62,271.65,150.56,270.92,151.49,270.03,152.41,269.15,153.31,268.12,154.21,267.09,155.09,265.92,154.98,253.38,155.09,250.61,155.091,250.607] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2] ), $.toNumberVector( [183.75,263.63,183.75,267.33,183.75,268.44,183.8,269.34,183.85,270.24,183.95,270.93,184.05,271.62,184.2,272.1,184.35,272.58,184.54,272.85,184.91,273.3,185.46,273.75,186,274.2,186.72,274.64,187.44,275.08,188.33,275.51,189.22,275.95,190.29,276.37,191.36,276.8,192.45,277.12,193.53,277.44,194.63,277.65,195.73,277.86,196.85,277.97,197.97,278.08,199.1,278.08,200.56,278.08,201.88,277.88,203.21,277.68,204.4,277.29,205.59,276.9,206.64,276.31,207.7,275.72,208.62,274.93,209.54,274.14,210.23,273.28,210.92,272.42,211.38,271.48,211.84,270.54,212.07,269.52,212.3,268.51,212.3,267.42,212.3,266.55,212.16,265.77,212.03,264.99,211.76,264.3,211.49,263.6,211.09,262.99,210.68,262.38,210.15,261.86,209.61,261.33,208.83,260.86,208.04,260.39,207.02,259.97,205.99,259.56,204.72,259.19,203.45,258.82,201.93,258.51,199.12,257.95,196.78,257.41,194.44,256.88,192.57,256.39,190.71,255.89,189.33,255.43,187.94,254.97,187.04,254.54,186.13,254.12,185.34,253.62,184.55,253.13,183.87,252.56,183.19,251.99,182.62,251.35,182.05,250.72,181.6,250.01,181.15,249.3,180.81,248.52,180.47,247.73,180.24,246.88,180.01,246.02,179.9,245.09,179.79,244.15,179.79,243.15,179.79,241.26,180.13,239.56,180.47,237.85,181.16,236.32,181.84,234.79,182.87,233.43,183.89,232.08,185.26,230.9,186.63,229.72,188.28,228.84,189.94,227.96,191.88,227.37,193.82,226.78,196.04,226.49,198.27,226.19,200.78,226.19,202.76,226.19,204.74,226.39,206.73,226.59,208.7,226.99,210.68,227.38,212.66,227.98,214.63,228.57,216.6,229.37,216.48,230.33,216.37,231.62,216.26,232.91,216.16,234.52,216.06,236.14,215.98,238.08,215.89,240.02,215.81,242.28,212.41,242.28,212.38,241.04,212.3,240,212.22,238.97,212.09,238.15,211.95,237.33,211.77,236.72,211.58,236.11,211.34,235.71,211.01,235.19,210.55,234.69,210.1,234.19,209.5,233.71,208.91,233.24,208.18,232.79,207.45,232.34,206.59,231.92,205.73,231.49,204.84,231.17,203.95,230.85,203.03,230.64,202.11,230.43,201.17,230.32,200.22,230.22,199.25,230.22,197.96,230.22,196.8,230.38,195.65,230.55,194.62,230.88,193.59,231.21,192.69,231.7,191.79,232.2,191.02,232.85,190.25,233.51,189.68,234.26,189.1,235,188.71,235.82,188.33,236.65,188.14,237.56,187.94,238.47,187.94,239.46,187.94,240.41,188.1,241.24,188.25,242.08,188.55,242.79,188.86,243.51,189.31,244.11,189.77,244.71,190.38,245.19,190.99,245.68,192.14,246.2,193.28,246.71,194.97,247.23,196.65,247.75,198.88,248.29,201.1,248.83,203.86,249.38,205.9,249.8,207.59,250.19,209.28,250.59,210.63,250.97,211.97,251.35,212.97,251.72,213.97,252.09,214.62,252.44,215.27,252.8,215.86,253.24,216.45,253.69,216.97,254.23,217.5,254.77,217.96,255.39,218.42,256.02,218.81,256.75,219.21,257.47,219.51,258.24,219.8,259.02,220,259.84,220.2,260.67,220.3,261.55,220.4,262.43,220.4,263.37,220.4,265.28,219.99,267.06,219.58,268.84,218.76,270.48,217.95,272.13,216.72,273.65,215.49,275.17,213.86,276.55,212.22,277.94,210.31,278.98,208.4,280.02,206.22,280.71,204.03,281.41,201.57,281.75,199.12,282.1,196.38,282.1,194.64,282.1,192.79,281.96,190.95,281.83,188.99,281.56,187.04,281.28,184.98,280.88,182.92,280.47,180.75,279.92,180.37,279.83,180.08,279.7,179.79,279.58,179.6,279.43,179.41,279.28,179.32,279.11,179.22,278.94,179.22,278.74,179.39,277.94,179.45,277.73,179.5,277.43,179.55,277.14,179.6,276.76,179.65,276.39,179.7,275.93,179.74,275.47,179.79,274.93,179.91,273.56,180.01,272.33,180.11,271.11,180.17,270.04,180.23,268.96,180.27,268.05,180.3,267.13,180.3,266.36,180.24,263.63,183.75,263.63,183.751,263.635] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2] ), $.toNumberVector( [232.41,241.6,232.46,237.81,232.41,233.9,238.58,230.39,239.63,229.79,240.61,229.29,241.59,228.79,242.51,228.38,243.43,227.97,244.28,227.65,245.13,227.33,245.91,227.1,246.7,226.88,247.51,226.71,248.32,226.54,249.16,226.42,250,226.31,250.87,226.25,251.73,226.2,252.63,226.2,254.58,226.2,256.34,226.42,258.11,226.63,259.68,227.07,261.26,227.51,262.65,228.17,264.03,228.83,265.23,229.7,266.43,230.58,267.38,231.58,268.34,232.58,269.06,233.69,269.78,234.81,270.26,236.05,270.74,237.29,270.98,238.64,271.15,239.66,271.29,241.43,271.42,243.2,271.53,245.73,271.64,248.25,271.71,251.53,271.79,254.81,271.83,258.84,271.86,262.65,271.91,265.6,271.97,268.55,272.05,270.65,272.14,272.75,272.25,274,272.37,275.25,272.51,275.64,272.65,276.04,272.9,276.34,273.14,276.64,273.5,276.83,273.85,277.03,274.31,277.13,274.77,277.23,275.34,277.23,279.76,277.23,279.76,280.97,278.14,280.87,276.77,280.79,275.4,280.72,274.28,280.67,273.15,280.62,272.27,280.6,271.39,280.57,270.75,280.57,269.96,280.57,269.03,280.6,268.1,280.62,267.04,280.67,265.98,280.72,264.78,280.79,263.59,280.87,262.26,280.97,262.31,275.93,262.31,275.32,262.31,274.71,262.31,274.1,262.3,273.48,262.29,272.87,262.28,272.25,262.27,271.63,262.26,271.01,250.53,279.95,250.13,280.25,249.74,280.5,249.35,280.75,248.96,280.96,248.57,281.17,248.18,281.33,247.8,281.5,247.42,281.62,247.03,281.74,246.58,281.83,246.12,281.92,245.59,281.98,245.06,282.04,244.45,282.07,243.85,282.1,243.17,282.1,241.34,282.1,239.73,281.87,238.12,281.65,236.73,281.2,235.33,280.75,234.15,280.08,232.97,279.41,232.01,278.51,231.05,277.61,230.32,276.56,229.6,275.51,229.12,274.3,228.64,273.1,228.4,271.74,228.16,270.38,228.16,268.87,228.16,267.44,228.33,266.1,228.5,264.76,228.84,263.51,229.19,262.27,229.7,261.11,230.22,259.95,230.91,258.89,231.59,257.82,232.42,256.89,233.26,255.96,234.23,255.17,235.21,254.39,236.33,253.74,237.45,253.09,238.72,252.58,239.99,252.07,242.09,251.48,244.2,250.9,247.14,250.23,250.08,249.57,253.86,248.83,257.64,248.08,262.26,247.26,262.23,245.47,262.01,243.9,261.8,242.32,261.41,240.98,261.01,239.63,260.43,238.51,259.85,237.4,259.08,236.5,258.12,235.38,256.95,234.55,255.78,233.71,254.41,233.15,253.04,232.59,251.46,232.31,249.88,232.03,248.1,232.03,247.42,232.03,246.76,232.07,246.1,232.11,245.46,232.19,244.82,232.28,244.21,232.4,243.59,232.53,243,232.69,242.4,232.86,241.83,233.07,241.26,233.28,240.7,233.53,240.15,233.78,239.62,234.07,239.09,234.36,238.58,234.69,238.17,235.7,237.77,236.69,237.38,237.69,237.01,238.66,236.63,239.63,236.27,240.57,235.92,241.52,235.58,242.45,232.41,241.6,232.405,241.602,262.25,250.61,258.32,251.45,255.1,252.28,251.88,253.1,249.38,253.89,246.88,254.69,245.1,255.45,243.32,256.22,242.26,256.96,241.2,257.71,240.4,258.65,239.61,259.6,239.08,260.74,238.54,261.89,238.28,263.24,238.01,264.59,238.01,266.15,238.01,267.19,238.17,268.13,238.32,269.08,238.62,269.91,238.93,270.75,239.38,271.48,239.84,272.22,240.45,272.84,241.06,273.47,241.75,273.94,242.45,274.42,243.24,274.73,244.02,275.04,244.9,275.2,245.77,275.36,246.74,275.36,247.8,275.36,248.84,275.21,249.88,275.06,250.89,274.77,251.91,274.47,252.9,274.02,253.89,273.58,254.86,272.99,255.83,272.39,256.78,271.65,257.73,270.92,258.65,270.03,259.58,269.15,260.48,268.12,261.38,267.09,262.26,265.92,262.14,253.38,262.25,250.61,262.255,250.607] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [285.25,311.33,287.91,302.49,289.22,302.49,289.6,302.95,289.98,303.35,290.37,303.76,290.75,304.1,291.13,304.45,291.51,304.73,291.9,305.02,292.28,305.25,292.66,305.48,293.05,305.65,293.44,305.83,293.83,305.94,294.22,306.06,294.61,306.11,295,306.17,295.4,306.17,296.28,306.17,297.12,305.96,297.96,305.75,298.76,305.32,299.56,304.89,300.32,304.26,301.08,303.62,301.81,302.77,302.53,301.91,303.45,300.3,304.37,298.69,305.48,296.32,306.59,293.95,307.9,290.82,309.21,287.69,310.71,283.8,310.09,282.16,309.15,279.78,308.22,277.39,306.97,274.25,305.73,271.12,304.17,267.24,302.61,263.36,300.74,258.73,295.48,245.77,291.23,235.87,290.73,234.55,290.11,233.57,289.49,232.58,288.75,231.93,288.01,231.27,287.14,230.94,286.27,230.61,285.28,230.61,283.02,230.61,283.02,227.33,284.49,227.43,285.87,227.5,287.26,227.58,288.56,227.63,289.86,227.68,291.08,227.7,292.3,227.73,293.43,227.73,294.31,227.73,295.77,227.7,297.23,227.68,299.28,227.63,301.32,227.58,303.95,227.5,306.58,227.43,309.79,227.33,309.79,230.61,305.6,230.61,305.06,230.61,304.6,230.66,304.13,230.71,303.74,230.8,303.35,230.89,303.03,231.03,302.71,231.17,302.46,231.35,302.21,231.53,302.02,231.74,301.84,231.94,301.71,232.17,301.59,232.4,301.53,232.64,301.47,232.89,301.47,233.16,301.47,233.39,301.53,233.74,301.6,234.1,301.74,234.59,301.87,235.08,302.07,235.7,302.27,236.31,302.54,237.06,303.97,241,305.53,245.07,307.09,249.15,308.78,253.36,310.47,257.58,312.28,261.94,314.09,266.3,316.04,270.8,317.9,266.68,319.65,262.63,321.4,258.59,323.02,254.62,324.65,250.65,326.16,246.76,327.66,242.86,329.05,239.04,329.46,237.93,329.77,237.03,330.08,236.13,330.28,235.45,330.49,234.77,330.59,234.31,330.69,233.85,330.69,233.61,330.69,233.16,330.45,232.78,330.21,232.41,329.73,232.11,329.25,231.82,328.53,231.6,327.8,231.38,326.84,231.24,322.65,230.61,322.65,227.33,324.32,227.43,325.9,227.5,327.48,227.58,328.96,227.63,330.45,227.67,331.85,227.7,333.24,227.72,334.54,227.72,335.77,227.72,337.01,227.7,338.25,227.67,339.48,227.63,340.72,227.58,341.97,227.5,343.21,227.43,344.46,227.33,344.46,230.61,342.47,230.61,342.15,230.61,341.82,230.66,341.49,230.71,341.16,230.8,340.82,230.9,340.49,231.04,340.15,231.19,339.81,231.38,339.47,231.57,339.16,231.8,338.86,232.02,338.58,232.29,338.3,232.56,338.06,232.86,337.81,233.16,337.6,233.5,337.15,234.22,336.27,235.96,335.38,237.69,334.07,240.44,332.76,243.2,331.02,246.96,329.28,250.73,327.11,255.51,326.52,256.82,325.46,259.26,324.4,261.7,322.89,265.27,321.37,268.83,319.39,273.52,317.42,278.21,314.98,284.02,312.83,288.92,311.14,292.72,309.46,296.51,308.24,299.2,307.02,301.89,306.27,303.48,305.52,305.07,305.24,305.55,304.69,306.48,304.06,307.31,303.43,308.14,302.72,308.85,302.01,309.57,301.23,310.18,300.44,310.8,299.58,311.3,298.71,311.8,297.81,312.18,296.92,312.55,295.98,312.81,295.05,313.06,294.08,313.18,293.11,313.31,292.1,313.31,291.69,313.31,291.28,313.28,290.86,313.25,290.44,313.18,290.02,313.12,289.59,313.02,289.17,312.93,288.73,312.8,288.3,312.67,287.87,312.52,287.43,312.36,287,312.18,286.56,311.99,286.13,311.78,285.69,311.57,285.25,311.33,285.251,311.326] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [350.9,253.78,350.9,251.82,351.12,249.96,351.35,248.1,351.8,246.34,352.26,244.57,352.94,242.9,353.62,241.23,354.52,239.65,355.43,238.07,356.52,236.66,357.61,235.25,358.88,234.02,360.15,232.78,361.6,231.72,363.05,230.66,364.69,229.76,366.32,228.87,368.07,228.2,369.82,227.53,371.68,227.09,373.54,226.64,375.51,226.42,377.48,226.19,379.56,226.19,382.57,226.19,385.29,226.64,388,227.09,390.42,227.98,392.83,228.87,394.94,230.21,397.06,231.55,398.87,233.33,400.68,235.12,402.04,237.2,403.4,239.28,404.31,241.66,405.21,244.04,405.67,246.71,406.12,249.39,406.12,252.36,406.12,255.87,405.53,259.03,404.94,262.18,403.76,264.97,402.57,267.76,400.8,270.18,399.03,272.61,396.66,274.68,394.55,276.53,392.23,277.93,389.91,279.32,387.39,280.24,384.86,281.17,382.12,281.64,379.39,282.1,376.44,282.1,373.61,282.1,371.04,281.62,368.47,281.15,366.17,280.19,363.86,279.24,361.82,277.81,359.78,276.39,358,274.48,356.23,272.58,354.9,270.33,353.56,268.08,352.67,265.5,351.79,262.91,351.34,259.98,350.9,257.05,350.9,253.78,350.897,253.779,361.55,249.78,361.55,252.7,361.85,255.41,362.14,258.12,362.74,260.62,363.34,263.12,364.24,265.41,365.14,267.69,366.33,269.77,367.53,271.85,368.99,273.4,370.45,274.96,372.17,276,373.9,277.04,375.88,277.56,377.87,278.08,380.12,278.08,381.84,278.08,383.39,277.75,384.93,277.43,386.32,276.77,387.7,276.12,388.92,275.14,390.14,274.17,391.2,272.86,392.25,271.56,393.04,269.92,393.83,268.27,394.36,266.3,394.89,264.32,395.15,262.01,395.42,259.69,395.42,257.04,395.42,254.9,395.26,252.9,395.11,250.9,394.79,249.05,394.48,247.2,394.02,245.49,393.55,243.78,392.92,242.21,392.3,240.64,391.58,239.29,390.86,237.94,390.04,236.8,389.21,235.65,388.29,234.73,387.37,233.8,386.35,233.08,385.34,232.37,384.26,231.83,383.18,231.29,382.04,230.93,380.9,230.58,379.7,230.4,378.5,230.22,377.24,230.22,376.12,230.22,375.05,230.36,373.99,230.5,372.98,230.78,371.97,231.07,371.02,231.49,370.06,231.92,369.16,232.49,368.27,233.05,367.49,233.72,366.7,234.38,366.04,235.14,365.38,235.9,364.84,236.75,364.29,237.6,363.87,238.55,363.29,239.84,362.85,241.19,362.42,242.54,362.13,243.94,361.84,245.34,361.69,246.8,361.55,248.26,361.55,249.78,361.546,249.781] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2] ), $.toNumberVector( [418.75,263.63,418.75,267.33,418.75,268.44,418.8,269.34,418.85,270.24,418.95,270.93,419.05,271.62,419.2,272.1,419.35,272.58,419.55,272.85,419.91,273.3,420.46,273.75,421,274.2,421.72,274.64,422.44,275.08,423.33,275.51,424.23,275.95,425.3,276.37,426.36,276.8,427.45,277.12,428.53,277.44,429.63,277.65,430.74,277.86,431.85,277.97,432.97,278.08,434.1,278.08,435.56,278.08,436.89,277.88,438.21,277.68,439.4,277.29,440.59,276.9,441.64,276.31,442.7,275.72,443.62,274.93,444.54,274.14,445.23,273.28,445.92,272.42,446.38,271.48,446.84,270.54,447.07,269.52,447.3,268.51,447.3,267.42,447.3,266.55,447.17,265.77,447.03,264.99,446.76,264.3,446.49,263.6,446.09,262.99,445.69,262.38,445.15,261.86,444.61,261.33,443.83,260.86,443.05,260.39,442.02,259.97,440.99,259.56,439.72,259.19,438.45,258.82,436.94,258.51,434.12,257.95,431.78,257.41,429.44,256.88,427.58,256.39,425.71,255.89,424.33,255.43,422.95,254.97,422.04,254.54,421.13,254.12,420.34,253.62,419.55,253.13,418.87,252.56,418.19,251.99,417.62,251.35,417.06,250.72,416.6,250.01,416.15,249.3,415.81,248.52,415.47,247.73,415.24,246.88,415.02,246.02,414.9,245.09,414.79,244.15,414.79,243.15,414.79,241.26,415.13,239.56,415.47,237.85,416.16,236.32,416.84,234.79,417.87,233.43,418.89,232.08,420.26,230.9,421.63,229.72,423.29,228.84,424.94,227.96,426.88,227.37,428.82,226.78,431.04,226.49,433.27,226.19,435.78,226.19,437.76,226.19,439.75,226.39,441.73,226.59,443.71,226.99,445.68,227.38,447.66,227.98,449.63,228.57,451.61,229.37,451.48,230.33,451.37,231.62,451.26,232.91,451.16,234.52,451.06,236.14,450.98,238.08,450.89,240.02,450.81,242.28,447.42,242.28,447.39,241.04,447.31,240,447.22,238.97,447.09,238.15,446.96,237.33,446.77,236.72,446.58,236.11,446.34,235.71,446.02,235.19,445.56,234.69,445.1,234.19,444.5,233.71,443.91,233.24,443.18,232.79,442.46,232.34,441.6,231.92,440.73,231.49,439.84,231.17,438.95,230.85,438.03,230.64,437.12,230.43,436.17,230.32,435.22,230.22,434.25,230.22,432.96,230.22,431.81,230.38,430.65,230.55,429.62,230.88,428.59,231.21,427.69,231.7,426.8,232.2,426.03,232.85,425.26,233.51,424.68,234.26,424.1,235,423.72,235.82,423.33,236.65,423.14,237.56,422.95,238.47,422.95,239.46,422.95,240.41,423.1,241.24,423.25,242.08,423.56,242.79,423.86,243.51,424.32,244.11,424.77,244.71,425.38,245.19,425.99,245.68,427.14,246.2,428.28,246.71,429.97,247.23,431.65,247.75,433.88,248.29,436.1,248.83,438.86,249.38,440.9,249.8,442.59,250.19,444.29,250.59,445.63,250.97,446.98,251.35,447.97,251.72,448.97,252.09,449.62,252.44,450.28,252.8,450.86,253.24,451.45,253.69,451.97,254.23,452.5,254.77,452.96,255.39,453.42,256.02,453.82,256.75,454.21,257.47,454.51,258.24,454.81,259.02,455,259.84,455.2,260.67,455.3,261.55,455.4,262.43,455.4,263.37,455.4,265.28,454.99,267.06,454.58,268.84,453.77,270.48,452.95,272.13,451.72,273.65,450.49,275.17,448.86,276.55,447.22,277.94,445.31,278.98,443.4,280.02,441.22,280.71,439.03,281.41,436.58,281.75,434.12,282.1,431.39,282.1,429.64,282.1,427.8,281.96,425.95,281.83,423.99,281.56,422.04,281.28,419.98,280.88,417.92,280.47,415.75,279.92,415.37,279.83,415.08,279.7,414.8,279.58,414.61,279.43,414.41,279.28,414.32,279.11,414.22,278.94,414.22,278.74,414.39,277.94,414.45,277.73,414.5,277.43,414.56,277.14,414.6,276.76,414.65,276.39,414.7,275.93,414.75,275.47,414.79,274.93,414.92,273.56,415.01,272.33,415.11,271.11,415.17,270.04,415.24,268.96,415.27,268.05,415.3,267.13,415.3,266.36,415.24,263.63,418.75,263.63,418.753,263.635] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,2] ), $.toNumberVector( [479.87,236.96,487.29,230.44,487.94,229.83,488.58,229.32,489.23,228.81,489.87,228.39,490.51,227.97,491.15,227.65,491.78,227.33,492.41,227.1,493.04,226.87,493.74,226.7,494.44,226.53,495.2,226.42,495.96,226.31,496.78,226.25,497.61,226.19,498.5,226.19,500.07,226.19,501.54,226.35,503.01,226.51,504.37,226.83,505.73,227.14,506.99,227.61,508.25,228.09,509.41,228.72,510.56,229.35,511.54,230.07,512.51,230.78,513.31,231.59,514.11,232.4,514.74,233.29,515.36,234.19,515.81,235.17,516.25,236.16,516.59,237.49,516.92,238.82,517.14,240.49,517.37,242.17,517.48,244.18,517.59,246.2,517.59,248.57,517.25,265.33,517.25,266.75,517.28,268.02,517.31,269.29,517.36,270.4,517.42,271.52,517.5,272.49,517.59,273.46,517.7,274.28,517.75,274.62,517.83,274.92,517.9,275.22,518.02,275.47,518.14,275.73,518.29,275.94,518.45,276.15,518.64,276.32,518.83,276.49,519.13,276.63,519.43,276.78,519.85,276.89,520.26,277,520.79,277.09,521.31,277.17,521.95,277.23,526.26,277.68,526.26,280.97,524.88,280.87,523.53,280.79,522.17,280.72,520.83,280.67,519.49,280.62,518.17,280.6,516.85,280.57,515.55,280.57,514.43,280.57,513.32,280.6,512.2,280.62,511.09,280.67,509.98,280.72,508.87,280.79,507.76,280.87,506.66,280.97,506.91,277.41,507.1,273.89,507.3,270.36,507.42,266.86,507.55,263.37,507.61,259.9,507.68,256.43,507.68,252.99,507.68,250.68,507.61,248.74,507.53,246.81,507.39,245.24,507.24,243.68,507.02,242.48,506.81,241.29,506.52,240.47,506.23,239.65,505.82,238.91,505.42,238.18,504.9,237.52,504.38,236.87,503.74,236.31,503.1,235.74,502.35,235.26,501.6,234.78,500.75,234.42,499.9,234.05,498.96,233.81,498.01,233.57,496.96,233.45,495.91,233.33,494.76,233.33,493.59,233.33,492.47,233.47,491.34,233.61,490.27,233.89,489.21,234.17,488.19,234.59,487.17,235.01,486.21,235.57,485.25,236.13,484.43,236.73,483.62,237.34,482.95,237.98,482.29,238.63,481.77,239.32,481.25,240.02,480.89,240.75,480.63,241.28,480.44,242.16,480.25,243.05,480.12,244.29,479.99,245.54,479.93,247.15,479.87,248.75,479.87,250.72,479.87,260.58,479.87,263.95,479.91,266.56,479.94,269.18,480.02,271.04,480.1,272.9,480.22,274.01,480.33,275.12,480.49,275.47,480.65,275.83,481.01,276.11,481.37,276.4,481.93,276.62,482.5,276.84,483.27,276.99,484.04,277.14,485.02,277.23,489.95,277.68,489.95,280.97,487.74,280.87,485.75,280.79,483.75,280.72,481.98,280.67,480.2,280.62,478.64,280.59,477.08,280.57,475.73,280.57,474.33,280.57,472.71,280.59,471.09,280.62,469.26,280.67,467.43,280.72,465.38,280.79,463.33,280.87,461.06,280.97,461.06,277.68,464.63,277.23,465.47,277.13,466.15,277.02,466.82,276.91,467.35,276.8,467.87,276.68,468.24,276.56,468.61,276.43,468.82,276.29,469.03,276.16,469.21,275.94,469.39,275.72,469.53,275.41,469.67,275.1,469.78,274.71,469.88,274.31,469.95,273.83,470.05,273.07,470.13,271.83,470.2,270.59,470.25,268.88,470.3,267.17,470.33,264.98,470.35,262.8,470.35,260.14,470.35,221.93,470.35,218.16,470.3,215.21,470.25,212.26,470.15,210.15,470.05,208.03,469.9,206.75,469.75,205.46,469.56,205.01,469.43,204.7,469.08,204.47,468.73,204.23,468.16,204.08,467.58,203.92,466.79,203.84,465.99,203.76,464.97,203.76,461.06,203.76,461.06,200.31,463.26,200.08,465.23,199.81,467.21,199.54,468.96,199.22,470.72,198.9,472.25,198.54,473.79,198.17,475.11,197.76,479.75,196.17,479.98,196.17,480.15,196.25,480.32,196.32,480.43,196.47,480.55,196.62,480.6,196.84,480.66,197.07,480.66,197.36,480.49,199.68,480.15,209.86,480.08,211.79,480.03,213.49,479.97,215.2,479.94,216.69,479.9,218.18,479.88,219.46,479.87,220.74,479.87,221.8,479.87,236.96,479.868,236.957] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [548.29,225.97,549.65,226.82,549.55,227.88,549.47,229,549.39,230.11,549.32,231.28,549.26,232.45,549.21,233.67,549.17,234.89,549.14,236.16,549.04,240.3,548.97,243.89,548.89,247.49,548.84,250.54,548.79,253.59,548.77,256.1,548.74,258.61,548.74,260.58,548.74,262.42,548.77,264.12,548.81,265.83,548.87,267.4,548.93,268.97,549.03,270.41,549.13,271.85,549.25,273.15,549.31,273.66,549.4,274.09,549.5,274.52,549.63,274.88,549.77,275.23,549.94,275.51,550.12,275.78,550.33,275.98,550.54,276.18,550.9,276.35,551.26,276.53,551.77,276.68,552.28,276.83,552.94,276.95,553.6,277.07,554.41,277.17,558.26,277.68,558.26,280.97,556.19,280.87,554.22,280.79,552.24,280.72,550.36,280.67,548.47,280.62,546.68,280.6,544.89,280.57,543.19,280.57,541.52,280.57,539.84,280.6,538.17,280.62,536.48,280.67,534.8,280.72,533.1,280.79,531.41,280.87,529.71,280.97,529.71,277.68,534.58,277.17,535.29,277.11,535.86,277.02,536.44,276.93,536.87,276.79,537.31,276.66,537.61,276.49,537.9,276.33,538.07,276.12,538.23,275.91,538.36,275.47,538.5,275.02,538.6,274.34,538.7,273.65,538.77,272.73,538.85,271.8,538.89,270.64,538.96,268.84,539.01,266.69,539.06,264.55,539.1,262.07,539.14,259.58,539.15,256.76,539.17,253.93,539.17,250.76,539.17,248.56,539.15,246.62,539.14,244.67,539.1,242.97,539.06,241.27,539.01,239.83,538.96,238.38,538.89,237.19,538.86,236.75,538.78,236.38,538.71,236,538.58,235.69,538.46,235.38,538.29,235.13,538.12,234.88,537.9,234.69,537.68,234.51,537.32,234.37,536.97,234.23,536.47,234.14,535.98,234.05,535.35,234,534.72,233.96,533.96,233.96,529.71,233.96,529.71,230.67,531.44,230.42,532.94,230.18,534.44,229.94,535.71,229.71,536.98,229.48,538.02,229.25,539.06,229.03,539.88,228.82,540.69,228.61,541.63,228.33,542.56,228.05,543.61,227.69,544.66,227.33,545.83,226.9,547,226.47,548.29,225.97,548.29,225.969,543.76,200.88,544.41,200.88,545.02,201,545.62,201.11,546.18,201.35,546.74,201.59,547.25,201.94,547.77,202.3,548.23,202.77,548.7,203.25,549.05,203.77,549.4,204.29,549.64,204.86,549.87,205.43,549.99,206.05,550.1,206.67,550.1,207.33,550.1,208,549.99,208.62,549.87,209.23,549.64,209.8,549.4,210.36,549.05,210.88,548.7,211.4,548.23,211.87,547.77,212.33,547.25,212.68,546.74,213.03,546.18,213.27,545.62,213.5,545.02,213.62,544.41,213.73,543.76,213.73,543.09,213.73,542.48,213.62,541.86,213.5,541.3,213.27,540.73,213.03,540.21,212.68,539.7,212.33,539.23,211.87,538.76,211.4,538.41,210.88,538.06,210.36,537.83,209.8,537.59,209.23,537.48,208.62,537.36,208,537.36,207.33,537.36,206.67,537.48,206.05,537.59,205.43,537.83,204.86,538.06,204.29,538.41,203.77,538.76,203.25,539.23,202.77,539.7,202.3,540.21,201.94,540.73,201.59,541.29,201.35,541.86,201.11,542.48,201,543.09,200.88,543.76,200.88,543.759,200.877] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [132.97,64.9,116.13,99.94,113.76,104.87,111.61,109.49,109.46,114.11,107.51,118.42,105.57,122.73,103.84,126.72,102.12,130.72,100.6,134.4,98.33,134.4,97.81,133.14,96.8,130.89,95.78,128.64,94.28,125.4,92.78,122.16,90.79,117.94,88.79,113.71,86.31,108.49,66.02,66.48,66.02,110.27,66.02,114.09,66.1,117.09,66.17,120.09,66.33,122.26,66.48,124.43,66.71,125.77,66.94,127.12,67.24,127.63,67.55,128.15,68.18,128.54,68.81,128.93,69.76,129.18,70.71,129.44,71.98,129.57,73.25,129.7,74.84,129.7,76.95,129.7,76.95,133.27,74.98,133.17,73.19,133.1,71.4,133.02,69.8,132.97,68.2,132.92,66.78,132.9,65.36,132.87,64.12,132.87,63.23,132.87,61.89,132.9,60.56,132.92,58.77,132.97,56.99,133.02,54.77,133.1,52.54,133.17,49.88,133.27,49.88,129.7,53.56,129.7,54.49,129.7,55.27,129.63,56.05,129.57,56.67,129.43,57.3,129.3,57.76,129.1,58.23,128.89,58.54,128.63,58.85,128.36,59.11,127.98,59.36,127.6,59.55,127.11,59.74,126.62,59.87,126.02,60,125.42,60.07,124.72,60.26,122.73,60.39,120.67,60.53,118.61,60.62,116.48,60.72,114.34,60.76,112.12,60.81,109.91,60.81,107.61,60.81,75.55,60.81,72.65,60.78,70.24,60.74,67.83,60.68,65.91,60.62,63.99,60.52,62.56,60.43,61.14,60.3,60.2,60.24,59.72,60.11,59.3,59.98,58.87,59.77,58.5,59.56,58.14,59.27,57.82,58.99,57.51,58.63,57.26,58.27,57,57.73,56.81,57.19,56.62,56.47,56.49,55.75,56.37,54.85,56.3,53.95,56.24,52.88,56.24,49.88,56.24,49.88,52.67,52.34,52.77,54.35,52.84,56.36,52.92,57.91,52.97,59.46,53.02,60.55,53.04,61.65,53.07,62.28,53.07,63.09,53.07,64.07,53.04,65.04,53.02,66.19,52.97,67.34,52.92,68.66,52.84,69.97,52.77,71.46,52.67,73.18,56.48,75.02,60.49,76.87,64.49,78.85,68.69,80.82,72.9,82.93,77.29,85.04,81.69,87.28,86.28,102.19,116.94,115.96,88.54,117.78,84.82,119.72,80.71,121.66,76.61,123.73,72.12,125.8,67.64,127.99,62.77,130.19,57.91,132.52,52.67,134.29,52.77,135.79,52.84,137.3,52.92,138.55,52.97,139.79,53.02,140.78,53.04,141.76,53.07,142.48,53.07,143.32,53.07,144.49,53.04,145.66,53.02,147.17,52.97,148.68,52.92,150.52,52.84,152.37,52.77,154.55,52.67,154.55,56.24,150.85,56.24,149.59,56.24,148.59,56.34,147.58,56.45,146.81,56.67,146.05,56.89,145.52,57.21,145,57.53,144.73,57.97,144.45,58.4,144.24,59.39,144.03,60.38,143.89,61.94,143.75,63.49,143.69,65.61,143.62,67.72,143.62,70.4,143.62,111.8,143.62,115.26,143.69,117.98,143.76,120.69,143.91,122.68,144.05,124.66,144.27,125.91,144.49,127.15,144.78,127.66,145.07,128.17,145.63,128.55,146.18,128.94,147,129.19,147.81,129.45,148.89,129.57,149.96,129.7,151.3,129.7,154.55,129.7,154.55,133.27,152.58,133.17,150.65,133.09,148.73,133.02,146.84,132.97,144.96,132.92,143.12,132.9,141.28,132.87,139.48,132.87,137.5,132.87,135.47,132.9,133.44,132.92,131.37,132.97,129.29,133.02,127.17,133.09,125.05,133.17,122.88,133.27,122.88,129.7,126.62,129.7,127.74,129.7,128.64,129.58,129.54,129.46,130.21,129.21,130.89,128.97,131.34,128.6,131.8,128.23,132.03,127.75,132.27,127.26,132.44,125.96,132.62,124.67,132.73,122.57,132.85,120.47,132.91,117.57,132.97,114.66,132.97,110.95,132.97,64.9,132.969,64.903] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [178.4,78.27,179.75,79.12,179.65,80.18,179.57,81.3,179.49,82.41,179.43,83.58,179.36,84.75,179.32,85.97,179.27,87.19,179.24,88.47,179.14,92.6,179.07,96.2,179,99.79,178.95,102.84,178.9,105.89,178.87,108.4,178.85,110.91,178.85,112.88,178.85,114.72,178.88,116.43,178.91,118.13,178.98,119.71,179.04,121.28,179.13,122.71,179.23,124.15,179.36,125.45,179.41,125.96,179.51,126.4,179.61,126.83,179.74,127.18,179.87,127.54,180.05,127.81,180.22,128.09,180.43,128.29,180.65,128.48,181.01,128.66,181.37,128.83,181.88,128.98,182.39,129.13,183.05,129.25,183.71,129.38,184.51,129.47,188.36,129.98,188.36,133.27,186.3,133.17,184.32,133.1,182.35,133.02,180.46,132.97,178.58,132.92,176.79,132.9,175,132.87,173.3,132.87,171.63,132.87,169.95,132.9,168.27,132.92,166.59,132.97,164.9,133.02,163.21,133.1,161.52,133.17,159.82,133.27,159.82,129.98,164.69,129.47,165.4,129.42,165.97,129.32,166.54,129.23,166.98,129.1,167.41,128.97,167.71,128.8,168.01,128.63,168.17,128.42,168.33,128.22,168.47,127.77,168.6,127.33,168.7,126.64,168.81,125.96,168.88,125.03,168.95,124.11,168.99,122.94,169.06,121.14,169.12,119,169.17,116.85,169.21,114.37,169.24,111.88,169.26,109.06,169.28,106.23,169.28,103.07,169.28,100.87,169.26,98.92,169.24,96.97,169.21,95.27,169.17,93.58,169.12,92.13,169.06,90.69,168.99,89.49,168.96,89.05,168.89,88.68,168.81,88.3,168.69,87.99,168.56,87.68,168.39,87.43,168.22,87.18,168,87,167.78,86.81,167.43,86.67,167.07,86.54,166.58,86.44,166.09,86.35,165.46,86.31,164.83,86.26,164.07,86.26,159.82,86.26,159.82,82.97,161.54,82.72,163.04,82.48,164.54,82.24,165.81,82.01,167.08,81.78,168.13,81.56,169.17,81.34,169.98,81.13,170.8,80.92,171.73,80.63,172.66,80.35,173.71,79.99,174.77,79.64,175.94,79.21,177.11,78.78,178.4,78.27,178.395,78.272,173.86,53.18,174.51,53.18,175.12,53.3,175.73,53.42,176.29,53.65,176.84,53.89,177.36,54.25,177.87,54.6,178.34,55.08,178.81,55.55,179.16,56.07,179.51,56.6,179.74,57.17,179.97,57.74,180.09,58.35,180.21,58.97,180.21,59.64,180.21,60.3,180.09,60.92,179.97,61.53,179.74,62.1,179.51,62.67,179.16,63.18,178.81,63.7,178.34,64.17,177.87,64.64,177.36,64.99,176.85,65.34,176.29,65.57,175.73,65.8,175.12,65.92,174.52,66.04,173.86,66.04,173.2,66.04,172.58,65.92,171.97,65.8,171.4,65.57,170.83,65.34,170.32,64.99,169.8,64.64,169.33,64.17,168.87,63.7,168.52,63.18,168.16,62.67,167.93,62.1,167.7,61.53,167.58,60.92,167.46,60.3,167.46,59.64,167.46,58.97,167.58,58.35,167.7,57.74,167.93,57.17,168.16,56.6,168.52,56.07,168.87,55.55,169.33,55.08,169.8,54.6,170.32,54.25,170.83,53.89,171.4,53.65,171.97,53.42,172.58,53.3,173.2,53.18,173.86,53.18,173.864,53.18] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2] ), $.toNumberVector( [211.13,89.32,219.7,81.73,220.08,81.39,220.47,81.09,220.87,80.8,221.27,80.55,221.68,80.3,222.09,80.1,222.51,79.9,222.93,79.74,223.87,79.43,224.8,79.2,225.74,78.97,226.68,78.81,227.61,78.65,228.55,78.58,229.48,78.5,230.42,78.5,231.94,78.5,233.35,78.65,234.77,78.81,236.08,79.11,237.39,79.42,238.6,79.88,239.81,80.35,240.91,80.96,242.02,81.58,242.97,82.29,243.92,83,244.71,83.8,245.51,84.6,246.15,85.49,246.79,86.38,247.27,87.36,247.75,88.35,248.11,89.61,248.47,90.87,248.71,92.41,248.95,93.95,249.08,95.77,249.2,97.59,249.2,99.68,248.97,117.52,248.97,119.83,249.02,121.65,249.07,123.47,249.17,124.8,249.26,126.13,249.41,126.98,249.56,127.82,249.76,128.17,250.02,128.63,250.42,128.97,250.81,129.31,251.33,129.53,251.85,129.76,252.5,129.87,253.15,129.98,253.92,129.98,257.98,129.98,257.98,133.27,256.46,133.17,255.06,133.1,253.65,133.02,252.34,132.97,251.04,132.92,249.83,132.9,248.63,132.87,247.53,132.87,246.45,132.87,245.34,132.9,244.23,132.92,243.08,132.97,241.93,133.02,240.74,133.1,239.55,133.17,238.32,133.27,238.59,130.51,238.79,127.26,238.99,124.02,239.13,120.29,239.26,116.55,239.33,112.34,239.4,108.12,239.4,103.42,239.4,101.52,239.31,99.9,239.23,98.28,239.06,96.93,238.9,95.59,238.65,94.52,238.4,93.45,238.06,92.66,237.73,91.87,237.28,91.15,236.84,90.44,236.28,89.8,235.72,89.16,235.04,88.6,234.37,88.04,233.58,87.56,232.79,87.08,231.93,86.72,231.06,86.36,230.11,86.12,229.16,85.88,228.14,85.75,227.11,85.63,226,85.63,224.63,85.63,223.36,85.81,222.08,85.98,220.92,86.33,219.75,86.68,218.69,87.2,217.62,87.72,216.67,88.41,215.71,89.1,214.93,89.83,214.16,90.56,213.57,91.33,212.97,92.09,212.56,92.89,212.15,93.69,211.93,94.53,211.79,95.08,211.68,96.08,211.57,97.07,211.5,98.52,211.43,99.96,211.4,101.85,211.36,103.74,211.36,106.08,211.36,108.67,211.37,111.17,211.38,113.67,211.4,116.08,211.43,118.49,211.46,120.8,211.49,123.12,211.53,125.34,211.55,126,211.6,126.55,211.66,127.09,211.76,127.51,211.86,127.92,212,128.22,212.14,128.51,212.33,128.68,212.69,129.01,213.16,129.25,213.63,129.5,214.21,129.66,214.79,129.82,215.49,129.9,216.19,129.98,217,129.98,221.05,129.98,221.05,133.27,218.65,133.17,216.5,133.1,214.34,133.02,212.43,132.97,210.53,132.92,208.86,132.9,207.2,132.87,205.78,132.87,204.27,132.87,202.67,132.9,201.06,132.92,199.35,132.97,197.64,133.02,195.83,133.1,194.02,133.17,192.1,133.27,192.1,129.98,196.18,129.98,197.23,129.98,198.06,129.86,198.89,129.74,199.5,129.5,200.11,129.25,200.51,128.89,200.9,128.52,201.08,128.03,201.26,127.55,201.39,125.83,201.52,124.12,201.61,121.18,201.7,118.24,201.74,114.08,201.79,109.92,201.79,104.53,201.79,102.11,201.77,99.95,201.76,97.8,201.73,95.9,201.7,94.01,201.66,92.37,201.62,90.74,201.56,89.37,201.53,88.92,201.46,88.53,201.39,88.15,201.28,87.84,201.16,87.53,201.01,87.29,200.85,87.05,200.65,86.88,200.46,86.71,200.08,86.58,199.7,86.46,199.14,86.37,198.58,86.29,197.84,86.24,197.1,86.2,196.18,86.2,192.1,86.2,192.1,82.92,193.31,82.77,194.47,82.61,195.62,82.44,196.7,82.25,197.79,82.06,198.81,81.84,199.84,81.63,200.8,81.39,201.76,81.15,202.78,80.84,203.8,80.54,204.88,80.17,205.96,79.8,207.1,79.37,208.24,78.94,209.44,78.44,209.57,78.39,209.69,78.34,209.81,78.3,209.93,78.27,210.05,78.24,210.17,78.23,210.29,78.21,210.4,78.21,210.62,78.21,210.79,78.3,210.96,78.38,211.08,78.54,211.19,78.7,211.25,78.95,211.3,79.19,211.3,79.52,211.24,81.67,211.13,89.32,211.133,89.317] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [262.28,106.08,262.28,104.13,262.51,102.27,262.73,100.41,263.19,98.64,263.64,96.88,264.32,95.2,265,93.53,265.9,91.95,266.81,90.37,267.9,88.97,268.99,87.56,270.26,86.32,271.53,85.09,272.98,84.02,274.44,82.96,276.07,82.07,277.71,81.17,279.45,80.51,281.2,79.84,283.06,79.39,284.92,78.94,286.89,78.72,288.86,78.5,290.94,78.5,293.96,78.5,296.67,78.95,299.39,79.39,301.8,80.28,304.21,81.18,306.33,82.51,308.44,83.85,310.25,85.64,312.07,87.42,313.43,89.5,314.79,91.58,315.69,93.96,316.6,96.34,317.05,99.02,317.5,101.69,317.5,104.67,317.5,108.18,316.91,111.33,316.32,114.48,315.14,117.27,313.96,120.06,312.18,122.49,310.41,124.92,308.04,126.98,305.93,128.84,303.62,130.23,301.3,131.62,298.77,132.55,296.24,133.48,293.51,133.94,290.77,134.4,287.82,134.4,284.99,134.4,282.42,133.93,279.85,133.45,277.55,132.5,275.25,131.55,273.2,130.12,271.16,128.69,269.39,126.78,267.61,124.88,266.28,122.63,264.95,120.39,264.06,117.8,263.17,115.21,262.72,112.28,262.28,109.35,262.28,106.08,262.28,106.083,272.93,102.08,272.93,105,273.23,107.71,273.53,110.42,274.12,112.92,274.72,115.42,275.62,117.71,276.52,120,277.71,122.07,278.91,124.15,280.37,125.71,281.83,127.27,283.55,128.3,285.28,129.34,287.27,129.86,289.25,130.38,291.51,130.38,293.22,130.38,294.77,130.05,296.32,129.73,297.7,129.08,299.08,128.42,300.3,127.45,301.52,126.47,302.58,125.16,303.63,123.86,304.43,122.22,305.22,120.58,305.74,118.6,306.27,116.62,306.54,114.31,306.8,111.99,306.8,109.34,306.8,107.2,306.64,105.2,306.49,103.21,306.18,101.35,305.86,99.5,305.4,97.79,304.93,96.08,304.31,94.51,303.68,92.95,302.96,91.59,302.24,90.24,301.42,89.1,300.6,87.96,299.68,87.03,298.76,86.1,297.74,85.38,296.72,84.67,295.64,84.13,294.56,83.59,293.42,83.24,292.28,82.88,291.08,82.7,289.88,82.52,288.62,82.52,287.5,82.52,286.44,82.66,285.37,82.8,284.36,83.09,283.35,83.37,282.4,83.8,281.45,84.22,280.55,84.79,279.65,85.36,278.87,86.02,278.09,86.68,277.42,87.44,276.76,88.2,276.22,89.05,275.68,89.91,275.25,90.86,274.67,92.15,274.23,93.49,273.8,94.84,273.51,96.24,273.22,97.65,273.07,99.11,272.93,100.57,272.93,102.08,272.928,102.084] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2] ), $.toNumberVector( [330.13,115.94,330.13,119.63,330.13,120.74,330.18,121.64,330.23,122.54,330.33,123.23,330.43,123.92,330.58,124.4,330.73,124.88,330.93,125.15,331.3,125.61,331.84,126.05,332.38,126.5,333.1,126.94,333.82,127.38,334.71,127.82,335.61,128.25,336.68,128.68,337.75,129.1,338.83,129.42,339.92,129.74,341.02,129.95,342.12,130.17,343.23,130.27,344.35,130.38,345.49,130.38,346.94,130.38,348.27,130.18,349.59,129.99,350.78,129.59,351.97,129.2,353.03,128.61,354.08,128.02,355,127.23,355.92,126.45,356.61,125.58,357.3,124.72,357.76,123.78,358.22,122.84,358.45,121.83,358.68,120.81,358.68,119.72,358.68,118.86,358.55,118.08,358.41,117.3,358.15,116.6,357.88,115.91,357.47,115.3,357.07,114.69,356.53,114.16,355.99,113.64,355.21,113.17,354.43,112.7,353.4,112.28,352.37,111.86,351.1,111.49,349.83,111.13,348.32,110.82,345.5,110.25,343.16,109.72,340.82,109.19,338.96,108.69,337.1,108.19,335.71,107.73,334.33,107.27,333.42,106.85,332.52,106.42,331.72,105.93,330.93,105.43,330.25,104.86,329.57,104.3,329,103.66,328.44,103.02,327.98,102.31,327.53,101.6,327.19,100.82,326.85,100.04,326.62,99.18,326.4,98.32,326.28,97.39,326.17,96.46,326.17,95.45,326.17,93.57,326.51,91.86,326.86,90.15,327.54,88.62,328.22,87.09,329.25,85.73,330.28,84.38,331.65,83.2,333.01,82.03,334.67,81.15,336.32,80.26,338.26,79.67,340.2,79.09,342.43,78.79,344.65,78.5,347.16,78.5,349.15,78.5,351.13,78.7,353.11,78.89,355.09,79.29,357.07,79.69,359.04,80.28,361.02,80.88,362.99,81.67,362.87,82.63,362.76,83.92,362.64,85.21,362.55,86.82,362.45,88.44,362.36,90.38,362.27,92.32,362.2,94.58,358.8,94.58,358.77,93.34,358.69,92.3,358.61,91.27,358.47,90.45,358.34,89.63,358.15,89.02,357.96,88.41,357.73,88.01,357.4,87.49,356.94,86.99,356.48,86.49,355.89,86.02,355.29,85.54,354.57,85.09,353.84,84.64,352.98,84.22,352.11,83.79,351.22,83.48,350.33,83.16,349.42,82.94,348.5,82.73,347.55,82.63,346.61,82.52,345.63,82.52,344.34,82.52,343.19,82.68,342.03,82.85,341,83.18,339.98,83.51,339.08,84,338.18,84.5,337.41,85.16,336.64,85.82,336.06,86.56,335.48,87.3,335.1,88.13,334.71,88.95,334.52,89.86,334.33,90.77,334.33,91.76,334.33,92.71,334.48,93.55,334.63,94.38,334.94,95.09,335.24,95.81,335.7,96.41,336.16,97.01,336.76,97.49,337.37,97.99,338.52,98.5,339.67,99.01,341.35,99.53,343.04,100.06,345.26,100.6,347.48,101.14,350.24,101.69,352.28,102.1,353.98,102.5,355.67,102.89,357.01,103.27,358.36,103.66,359.36,104.02,360.35,104.39,361.01,104.75,361.66,105.1,362.24,105.55,362.83,105.99,363.36,106.53,363.88,107.07,364.34,107.7,364.8,108.33,365.2,109.05,365.59,109.77,365.89,110.55,366.19,111.32,366.39,112.15,366.58,112.97,366.68,113.86,366.78,114.74,366.78,115.67,366.78,117.58,366.37,119.36,365.97,121.14,365.15,122.79,364.33,124.44,363.1,125.95,361.88,127.47,360.24,128.86,358.61,130.24,356.7,131.28,354.79,132.32,352.6,133.02,350.42,133.71,347.96,134.06,345.5,134.4,342.77,134.4,341.03,134.4,339.18,134.27,337.33,134.13,335.38,133.86,333.42,133.59,331.36,133.18,329.3,132.77,327.13,132.23,326.75,132.13,326.46,132.01,326.18,131.88,325.99,131.73,325.8,131.59,325.7,131.41,325.61,131.24,325.61,131.04,325.78,130.24,325.83,130.03,325.88,129.74,325.94,129.44,325.99,129.07,326.04,128.69,326.08,128.23,326.13,127.77,326.17,127.23,326.3,125.86,326.39,124.63,326.49,123.41,326.55,122.34,326.62,121.27,326.65,120.35,326.68,119.43,326.68,118.66,326.62,115.94,330.13,115.94,330.135,115.938] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,2] ), $.toNumberVector( [391.25,89.26,398.67,82.75,399.32,82.14,399.97,81.62,400.61,81.11,401.25,80.69,401.89,80.28,402.53,79.95,403.17,79.63,403.8,79.4,404.43,79.18,405.12,79.01,405.82,78.84,406.58,78.72,407.34,78.61,408.17,78.55,408.99,78.5,409.89,78.5,411.46,78.5,412.92,78.66,414.39,78.81,415.75,79.13,417.12,79.44,418.38,79.92,419.63,80.39,420.79,81.02,421.94,81.65,422.92,82.37,423.9,83.09,424.7,83.89,425.5,84.7,426.12,85.6,426.74,86.49,427.19,87.48,427.63,88.46,427.97,89.79,428.3,91.12,428.53,92.79,428.75,94.47,428.86,96.49,428.97,98.51,428.97,100.87,428.63,117.64,428.63,119.05,428.66,120.32,428.69,121.59,428.74,122.71,428.8,123.83,428.89,124.8,428.97,125.77,429.09,126.59,429.13,126.93,429.21,127.22,429.29,127.52,429.4,127.78,429.52,128.03,429.68,128.24,429.83,128.46,430.02,128.63,430.21,128.8,430.51,128.94,430.82,129.08,431.23,129.19,431.65,129.31,432.17,129.39,432.7,129.48,433.33,129.53,437.64,129.99,437.64,133.27,436.27,133.17,434.91,133.1,433.55,133.02,432.22,132.97,430.88,132.92,429.56,132.9,428.24,132.87,426.93,132.87,425.82,132.87,424.7,132.9,423.59,132.92,422.47,132.97,421.36,133.02,420.25,133.1,419.15,133.17,418.04,133.27,418.3,129.72,418.49,126.19,418.68,122.66,418.81,119.17,418.93,115.67,419,112.2,419.06,108.73,419.06,105.29,419.06,102.98,418.99,101.05,418.92,99.11,418.77,97.54,418.63,95.98,418.41,94.79,418.19,93.59,417.9,92.77,417.61,91.95,417.2,91.21,416.8,90.48,416.28,89.83,415.76,89.18,415.12,88.61,414.49,88.04,413.74,87.56,412.99,87.08,412.14,86.72,411.29,86.36,410.34,86.12,409.39,85.88,408.34,85.76,407.29,85.64,406.15,85.64,404.97,85.64,403.85,85.77,402.73,85.91,401.66,86.19,400.59,86.47,399.57,86.89,398.56,87.31,397.59,87.87,396.63,88.43,395.82,89.04,395,89.64,394.34,90.29,393.67,90.93,393.16,91.63,392.64,92.32,392.27,93.06,392.02,93.58,391.82,94.46,391.63,95.35,391.51,96.6,391.38,97.84,391.31,99.45,391.25,101.06,391.25,103.02,391.25,112.88,391.25,116.25,391.29,118.87,391.33,121.48,391.41,123.34,391.48,125.21,391.6,126.31,391.72,127.42,391.87,127.78,392.03,128.13,392.39,128.42,392.75,128.7,393.32,128.92,393.88,129.14,394.66,129.29,395.43,129.45,396.4,129.53,401.33,129.98,401.33,133.27,399.12,133.17,397.13,133.1,395.14,133.02,393.36,132.97,391.58,132.92,390.02,132.9,388.46,132.87,387.12,132.87,385.71,132.87,384.1,132.9,382.48,132.92,380.64,132.97,378.81,133.02,376.76,133.1,374.71,133.17,372.45,133.27,372.45,129.98,376.01,129.53,376.85,129.43,377.53,129.32,378.21,129.22,378.73,129.1,379.26,128.98,379.62,128.86,379.99,128.73,380.2,128.6,380.42,128.46,380.59,128.24,380.77,128.02,380.91,127.71,381.05,127.41,381.16,127.01,381.27,126.62,381.34,126.14,381.44,125.37,381.51,124.13,381.58,122.9,381.63,121.18,381.68,119.47,381.71,117.28,381.73,115.1,381.73,112.44,381.73,74.24,381.73,70.46,381.68,67.51,381.63,64.57,381.53,62.45,381.44,60.33,381.29,59.05,381.14,57.77,380.94,57.31,380.81,57,380.46,56.77,380.11,56.54,379.54,56.38,378.96,56.22,378.17,56.15,377.37,56.07,376.35,56.07,372.44,56.07,372.44,52.61,374.64,52.39,376.61,52.12,378.59,51.84,380.35,51.52,382.1,51.21,383.64,50.84,385.17,50.48,386.49,50.06,391.14,48.48,391.36,48.48,391.53,48.55,391.7,48.63,391.82,48.78,391.93,48.92,391.99,49.15,392.04,49.37,392.04,49.67,391.87,51.99,391.53,62.17,391.46,64.09,391.41,65.8,391.35,67.51,391.32,69,391.28,70.49,391.27,71.77,391.25,73.04,391.25,74.1,391.25,89.26,391.25,89.26] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [459.67,78.27,461.03,79.12,460.93,80.18,460.85,81.3,460.77,82.41,460.71,83.58,460.64,84.75,460.6,85.97,460.55,87.19,460.52,88.47,460.42,92.6,460.35,96.2,460.27,99.79,460.22,102.84,460.17,105.89,460.15,108.4,460.13,110.91,460.13,112.88,460.13,114.72,460.16,116.43,460.19,118.13,460.25,119.71,460.32,121.28,460.41,122.71,460.51,124.15,460.63,125.45,460.69,125.96,460.79,126.4,460.88,126.83,461.02,127.18,461.15,127.54,461.33,127.81,461.5,128.09,461.71,128.29,461.92,128.48,462.28,128.66,462.65,128.83,463.16,128.98,463.67,129.13,464.32,129.25,464.98,129.38,465.79,129.47,469.64,129.98,469.64,133.27,467.57,133.17,465.6,133.1,463.62,133.02,461.74,132.97,459.86,132.92,458.07,132.9,456.27,132.87,454.57,132.87,452.9,132.87,451.23,132.9,449.55,132.92,447.86,132.97,446.18,133.02,444.49,133.1,442.79,133.17,441.09,133.27,441.09,129.98,445.97,129.47,446.67,129.42,447.25,129.32,447.82,129.23,448.25,129.1,448.69,128.97,448.99,128.8,449.29,128.63,449.45,128.42,449.61,128.22,449.75,127.77,449.88,127.33,449.98,126.64,450.08,125.96,450.16,125.03,450.23,124.11,450.27,122.94,450.34,121.14,450.39,119,450.45,116.85,450.48,114.37,450.52,111.88,450.54,109.06,450.55,106.23,450.55,103.07,450.55,100.87,450.54,98.92,450.52,96.97,450.48,95.27,450.45,93.58,450.39,92.13,450.34,90.69,450.27,89.49,450.24,89.05,450.17,88.68,450.09,88.3,449.97,87.99,449.84,87.68,449.67,87.43,449.5,87.18,449.28,87,449.06,86.81,448.7,86.67,448.35,86.54,447.86,86.44,447.36,86.35,446.74,86.31,446.11,86.26,445.34,86.26,441.09,86.26,441.09,82.97,442.82,82.72,444.32,82.48,445.82,82.24,447.09,82.01,448.36,81.78,449.4,81.56,450.45,81.34,451.26,81.13,452.08,80.92,453.01,80.63,453.94,80.35,454.99,79.99,456.04,79.64,457.21,79.21,458.38,78.78,459.67,78.27,459.672,78.272,455.14,53.18,455.79,53.18,456.4,53.3,457,53.42,457.56,53.65,458.12,53.89,458.64,54.25,459.15,54.6,459.62,55.08,460.08,55.55,460.43,56.07,460.78,56.6,461.02,57.17,461.25,57.74,461.37,58.35,461.49,58.97,461.49,59.64,461.49,60.3,461.37,60.92,461.25,61.53,461.02,62.1,460.78,62.67,460.43,63.18,460.08,63.7,459.62,64.17,459.15,64.64,458.64,64.99,458.12,65.34,457.56,65.57,457,65.8,456.4,65.92,455.79,66.04,455.14,66.04,454.48,66.04,453.86,65.92,453.24,65.8,452.68,65.57,452.11,65.34,451.59,64.99,451.08,64.64,450.61,64.17,450.14,63.7,449.79,63.18,449.44,62.67,449.21,62.1,448.97,61.53,448.86,60.92,448.74,60.3,448.74,59.64,448.74,58.97,448.86,58.35,448.97,57.74,449.21,57.17,449.44,56.6,449.79,56.07,450.14,55.55,450.61,55.08,451.08,54.6,451.59,54.25,452.11,53.89,452.68,53.65,453.24,53.42,453.86,53.3,454.48,53.18,455.14,53.18,455.141,53.18] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2] ), $.toNumberVector( [493.77,88.64,501.36,81.84,501.81,81.43,502.28,81.08,502.75,80.73,503.23,80.44,503.71,80.15,504.21,79.92,504.7,79.69,505.21,79.52,505.95,79.26,506.68,79.07,507.41,78.88,508.14,78.75,508.87,78.63,509.6,78.56,510.32,78.5,511.05,78.5,512.65,78.5,514.09,78.64,515.53,78.79,516.82,79.07,518.1,79.36,519.23,79.79,520.36,80.22,521.33,80.79,522.3,81.37,523.23,82.17,524.15,82.97,525.04,84,525.93,85.03,526.78,86.29,527.63,87.55,528.43,89.04,535.75,82.35,536.22,81.93,536.74,81.55,537.26,81.18,537.84,80.85,538.41,80.52,539.04,80.25,539.67,79.97,540.35,79.75,541.24,79.43,542.12,79.2,543,78.97,543.86,78.81,544.73,78.65,545.58,78.58,546.43,78.5,547.27,78.5,548.54,78.5,549.76,78.65,550.98,78.8,552.13,79.09,553.29,79.39,554.38,79.84,555.48,80.28,556.51,80.88,557.55,81.48,558.45,82.16,559.35,82.84,560.12,83.62,560.89,84.39,561.53,85.25,562.17,86.11,562.67,87.06,563.17,88.01,563.55,89.13,563.93,90.25,564.18,91.54,564.43,92.83,564.56,94.29,564.68,95.75,564.68,97.38,564.46,119.55,564.46,121.41,564.51,122.88,564.56,124.36,564.67,125.46,564.78,126.55,564.94,127.26,565.1,127.98,565.31,128.31,565.53,128.65,565.91,128.91,566.29,129.17,566.84,129.35,567.38,129.54,568.1,129.66,568.82,129.77,569.7,129.81,573.86,129.98,573.86,133.27,571.13,133.14,569.47,133.07,568.09,133.02,566.7,132.97,565.59,132.94,564.47,132.91,563.62,132.89,562.77,132.87,562.18,132.87,561.28,132.87,560.31,132.9,559.34,132.92,558.29,132.97,557.25,133.02,556.13,133.1,555,133.17,553.81,133.27,554.01,130.65,554.16,127.81,554.3,124.97,554.4,121.91,554.5,118.84,554.55,115.56,554.6,112.27,554.6,108.77,554.6,105.8,554.54,103.35,554.47,100.9,554.35,98.95,554.22,97,554.03,95.56,553.84,94.13,553.58,93.2,553.33,92.27,552.96,91.44,552.59,90.61,552.1,89.88,551.61,89.15,551.01,88.52,550.41,87.89,549.69,87.36,548.97,86.83,548.15,86.43,547.34,86.03,546.44,85.77,545.53,85.5,544.54,85.37,543.54,85.24,542.45,85.24,541.22,85.24,540.08,85.4,538.94,85.57,537.89,85.9,536.84,86.24,535.87,86.74,534.91,87.24,534.03,87.9,533.15,88.57,532.44,89.3,531.73,90.03,531.19,90.83,530.65,91.63,530.27,92.5,529.89,93.36,529.68,94.29,529.54,94.88,529.43,96.43,529.33,97.99,529.26,100.51,529.18,103.03,529.15,106.52,529.11,110,529.11,114.46,529.11,117.08,529.12,119.14,529.14,121.19,529.16,122.69,529.18,124.18,529.21,125.11,529.24,126.04,529.28,126.4,529.33,126.77,529.41,127.08,529.49,127.39,529.6,127.65,529.72,127.91,529.87,128.11,530.03,128.32,530.22,128.47,530.41,128.62,530.81,128.76,531.21,128.9,531.83,129.03,532.44,129.16,533.26,129.29,534.08,129.41,535.12,129.53,538.91,129.98,538.91,133.27,536.41,133.17,534.23,133.1,532.06,133.02,530.22,132.97,528.38,132.92,526.87,132.9,525.36,132.87,524.19,132.87,523.25,132.87,521.88,132.9,520.5,132.92,518.69,132.97,516.88,133.02,514.63,133.1,512.38,133.17,509.69,133.27,509.69,129.98,513.48,129.98,514.33,129.98,515.03,129.92,515.73,129.86,516.28,129.74,516.84,129.62,517.24,129.44,517.64,129.26,517.9,129.02,518.15,128.78,518.36,128.37,518.56,127.97,518.71,127.4,518.85,126.84,518.95,126.11,519.05,125.38,519.09,124.48,519.2,122.16,519.29,119.78,519.37,117.41,519.43,114.98,519.48,112.56,519.51,110.08,519.54,107.61,519.54,105.09,519.54,102.83,519.46,100.93,519.39,99.02,519.24,97.47,519.08,95.91,518.86,94.7,518.63,93.5,518.32,92.64,518.02,91.78,517.61,91.01,517.2,90.25,516.68,89.57,516.16,88.89,515.54,88.31,514.92,87.72,514.19,87.22,513.46,86.73,512.66,86.36,511.86,85.98,510.98,85.74,510.11,85.49,509.16,85.36,508.21,85.24,507.19,85.24,506.1,85.24,505.06,85.39,504.02,85.54,503.03,85.85,502.04,86.15,501.1,86.61,500.16,87.07,499.26,87.68,498.37,88.29,497.62,88.96,496.87,89.63,496.26,90.37,495.65,91.11,495.19,91.91,494.72,92.71,494.39,93.57,494.18,94.17,494.02,95.31,493.86,96.45,493.75,98.14,493.65,99.83,493.6,102.06,493.54,104.29,493.54,107.07,493.54,110.12,493.56,112.77,493.57,115.41,493.6,117.65,493.63,119.89,493.67,121.73,493.71,123.56,493.77,124.99,493.8,125.66,493.86,126.21,493.93,126.75,494.04,127.18,494.14,127.6,494.29,127.91,494.43,128.21,494.62,128.4,494.8,128.58,495.2,128.74,495.6,128.91,496.2,129.05,496.81,129.19,497.64,129.31,498.46,129.43,499.49,129.53,503.4,129.98,503.4,133.27,501.63,133.17,499.91,133.1,498.19,133.02,496.52,132.97,494.84,132.92,493.22,132.9,491.6,132.87,490.03,132.87,488.25,132.87,486.38,132.9,484.52,132.92,482.58,132.97,480.64,133.02,478.62,133.1,476.61,133.17,474.51,133.27,474.51,129.98,478.82,129.98,479.74,129.98,480.47,129.86,481.21,129.74,481.76,129.49,482.31,129.25,482.68,128.88,483.05,128.52,483.23,128.02,483.42,127.54,483.56,125.96,483.69,124.38,483.79,121.71,483.88,119.05,483.92,115.3,483.97,111.54,483.97,106.7,483.97,103.15,483.96,100.33,483.95,97.51,483.93,95.42,483.91,93.32,483.87,91.95,483.84,90.59,483.8,89.95,483.76,89.31,483.68,88.79,483.59,88.27,483.47,87.86,483.35,87.46,483.19,87.17,483.04,86.88,482.84,86.71,482.64,86.54,482.24,86.41,481.84,86.29,481.24,86.2,480.64,86.12,479.83,86.07,479.03,86.03,478.02,86.03,474.51,86.03,474.51,82.92,476.59,82.63,478.53,82.3,480.47,81.96,482.26,81.57,484.05,81.18,485.69,80.74,487.34,80.3,488.84,79.8,492.98,78.21,493.23,78.21,493.42,78.3,493.61,78.39,493.74,78.56,493.87,78.73,493.93,78.98,494,79.24,494,79.58,493.88,81.63,493.84,82.42,493.81,83.25,493.78,84.08,493.77,84.95,493.76,85.83,493.76,86.75,493.76,87.67,493.77,88.64,493.77,88.642] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2] ), $.toNumberVector( [582.47,93.91,582.53,90.11,582.47,86.2,588.64,82.69,589.69,82.1,590.67,81.59,591.66,81.09,592.57,80.68,593.49,80.27,594.34,79.95,595.19,79.63,595.98,79.41,596.77,79.18,597.58,79.01,598.39,78.84,599.23,78.73,600.07,78.61,600.93,78.56,601.8,78.5,602.69,78.5,604.64,78.5,606.41,78.72,608.17,78.94,609.75,79.38,611.32,79.81,612.71,80.47,614.1,81.13,615.29,82.01,616.49,82.88,617.45,83.88,618.4,84.88,619.12,86,619.84,87.11,620.32,88.35,620.8,89.59,621.04,90.95,621.21,91.96,621.35,93.74,621.49,95.51,621.59,98.03,621.7,100.56,621.77,103.84,621.85,107.11,621.89,111.14,621.92,114.95,621.98,117.9,622.03,120.85,622.12,122.95,622.2,125.06,622.32,126.3,622.43,127.55,622.57,127.95,622.71,128.34,622.96,128.64,623.21,128.94,623.56,129.14,623.92,129.33,624.38,129.43,624.84,129.53,625.4,129.53,629.82,129.53,629.82,133.27,628.21,133.17,626.84,133.1,625.47,133.02,624.34,132.97,623.22,132.92,622.33,132.9,621.45,132.87,620.82,132.87,620.02,132.87,619.1,132.9,618.17,132.92,617.11,132.97,616.04,133.02,614.85,133.1,613.65,133.17,612.32,133.27,612.38,128.23,612.38,127.63,612.37,127.01,612.37,126.4,612.36,125.79,612.36,125.17,612.34,124.55,612.33,123.93,612.32,123.31,600.6,132.25,600.2,132.55,599.81,132.8,599.41,133.05,599.02,133.26,598.63,133.47,598.25,133.64,597.86,133.8,597.48,133.92,597.1,134.04,596.64,134.13,596.18,134.22,595.65,134.28,595.12,134.34,594.52,134.37,593.91,134.4,593.23,134.4,591.41,134.4,589.79,134.18,588.18,133.95,586.79,133.5,585.39,133.06,584.22,132.38,583.04,131.71,582.07,130.81,581.11,129.91,580.39,128.86,579.67,127.81,579.19,126.6,578.7,125.4,578.46,124.04,578.22,122.68,578.22,121.17,578.22,119.74,578.39,118.4,578.57,117.07,578.91,115.82,579.25,114.57,579.77,113.41,580.28,112.26,580.97,111.19,581.66,110.12,582.49,109.19,583.32,108.27,584.3,107.48,585.27,106.69,586.4,106.04,587.52,105.39,588.79,104.88,590.05,104.37,592.16,103.79,594.26,103.2,597.2,102.54,600.14,101.87,603.92,101.13,607.7,100.39,612.32,99.57,612.29,97.77,612.08,96.2,611.87,94.63,611.47,93.28,611.07,91.94,610.49,90.82,609.91,89.7,609.15,88.81,608.18,87.69,607.02,86.85,605.85,86.01,604.47,85.45,603.1,84.89,601.52,84.61,599.94,84.33,598.16,84.33,597.48,84.33,596.82,84.37,596.16,84.41,595.52,84.5,594.89,84.58,594.27,84.71,593.66,84.83,593.06,85,592.47,85.16,591.89,85.37,591.32,85.58,590.77,85.83,590.21,86.08,589.68,86.37,589.15,86.66,588.64,86.99,588.23,88.01,587.84,89,587.45,89.99,587.07,90.96,586.7,91.93,586.34,92.88,585.98,93.83,585.64,94.75,582.47,93.91,582.469,93.905,612.32,102.91,608.38,103.76,605.16,104.58,601.95,105.4,599.45,106.2,596.95,106.99,595.17,107.76,593.39,108.53,592.32,109.27,591.26,110.01,590.47,110.96,589.67,111.9,589.14,113.05,588.61,114.2,588.34,115.55,588.08,116.9,588.08,118.45,588.08,119.5,588.23,120.44,588.38,121.38,588.69,122.22,588.99,123.05,589.45,123.79,589.9,124.52,590.51,125.15,591.12,125.78,591.82,126.25,592.52,126.72,593.3,127.03,594.09,127.35,594.96,127.51,595.84,127.66,596.8,127.66,597.86,127.66,598.9,127.51,599.94,127.37,600.95,127.07,601.97,126.77,602.96,126.33,603.96,125.88,604.93,125.29,605.9,124.7,606.84,123.96,607.79,123.22,608.71,122.34,609.64,121.45,610.54,120.43,611.44,119.4,612.32,118.23,612.21,105.68,612.32,102.91,612.318,102.911] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2] ), $.toNumberVector( [240.4,174.85,240.44,172.39,240.4,169.87,244.4,167.6,245.07,167.21,245.71,166.89,246.34,166.56,246.94,166.3,247.53,166.03,248.08,165.82,248.63,165.62,249.14,165.47,249.65,165.32,250.17,165.21,250.7,165.11,251.24,165.03,251.78,164.96,252.34,164.92,252.9,164.89,253.48,164.89,254.74,164.89,255.88,165.03,257.02,165.17,258.04,165.45,259.06,165.74,259.96,166.16,260.85,166.59,261.63,167.15,262.4,167.72,263.02,168.36,263.64,169.01,264.1,169.73,264.57,170.45,264.88,171.25,265.19,172.05,265.34,172.93,265.45,173.59,265.54,174.74,265.63,175.88,265.7,177.51,265.77,179.15,265.82,181.27,265.86,183.38,265.89,185.99,265.91,188.45,265.95,190.36,265.98,192.27,266.04,193.63,266.09,194.99,266.17,195.79,266.24,196.6,266.33,196.86,266.42,197.11,266.58,197.3,266.74,197.5,266.97,197.62,267.2,197.75,267.5,197.82,267.8,197.88,268.16,197.88,271.02,197.88,271.02,200.3,269.97,200.23,269.09,200.18,268.2,200.14,267.48,200.1,266.75,200.07,266.18,200.06,265.61,200.04,265.19,200.04,264.68,200.04,264.08,200.06,263.48,200.07,262.8,200.1,262.11,200.14,261.34,200.18,260.56,200.23,259.7,200.3,259.74,197.04,259.74,196.65,259.74,196.25,259.73,195.86,259.73,195.46,259.72,195.06,259.72,194.66,259.71,194.26,259.7,193.86,252.12,199.64,251.86,199.83,251.61,199.99,251.36,200.16,251.1,200.29,250.85,200.43,250.6,200.53,250.35,200.64,250.11,200.72,249.86,200.8,249.56,200.85,249.27,200.91,248.93,200.95,248.58,200.99,248.19,201.01,247.8,201.03,247.36,201.03,246.18,201.03,245.14,200.88,244.1,200.74,243.19,200.45,242.29,200.16,241.53,199.72,240.77,199.29,240.15,198.71,239.52,198.13,239.06,197.45,238.59,196.77,238.28,195.99,237.97,195.21,237.81,194.33,237.66,193.45,237.66,192.47,237.66,191.55,237.77,190.69,237.88,189.82,238.1,189.01,238.32,188.21,238.66,187.46,238.99,186.71,239.43,186.02,239.88,185.33,240.41,184.73,240.95,184.13,241.58,183.62,242.21,183.11,242.94,182.69,243.67,182.27,244.49,181.94,245.31,181.62,246.67,181.24,248.03,180.86,249.93,180.43,251.83,180,254.27,179.52,256.72,179.04,259.7,178.51,259.68,177.34,259.55,176.33,259.41,175.31,259.15,174.44,258.9,173.57,258.52,172.85,258.15,172.13,257.65,171.55,257.03,170.83,256.27,170.28,255.52,169.74,254.63,169.38,253.74,169.02,252.72,168.84,251.7,168.66,250.55,168.66,250.11,168.66,249.68,168.68,249.26,168.71,248.84,168.76,248.43,168.82,248.03,168.9,247.64,168.98,247.25,169.09,246.87,169.19,246.5,169.33,246.12,169.46,245.77,169.62,245.41,169.79,245.07,169.97,244.72,170.16,244.4,170.38,244.13,171.03,243.88,171.67,243.62,172.31,243.38,172.94,243.14,173.57,242.9,174.18,242.67,174.79,242.45,175.39,240.4,174.85,240.404,174.847,259.7,180.67,257.16,181.22,255.08,181.75,253,182.28,251.38,182.79,249.77,183.31,248.61,183.8,247.46,184.3,246.78,184.78,246.09,185.26,245.58,185.87,245.06,186.48,244.72,187.22,244.37,187.97,244.2,188.84,244.03,189.71,244.03,190.72,244.03,191.39,244.13,192,244.23,192.61,244.42,193.15,244.62,193.69,244.92,194.17,245.21,194.64,245.61,195.05,246,195.45,246.45,195.76,246.9,196.06,247.41,196.27,247.92,196.47,248.48,196.57,249.05,196.67,249.67,196.67,250.36,196.67,251.03,196.58,251.7,196.48,252.36,196.29,253.01,196.1,253.66,195.81,254.3,195.52,254.93,195.14,255.55,194.76,256.16,194.28,256.78,193.8,257.37,193.23,257.97,192.66,258.55,191.99,259.14,191.33,259.7,190.57,259.63,182.46,259.7,180.67,259.704,180.67] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [286.55,173.2,286.91,172.85,287.3,172.45,287.68,172.04,288.08,171.59,288.48,171.13,288.89,170.62,289.31,170.1,289.74,169.53,290.26,168.87,290.75,168.3,291.25,167.74,291.72,167.28,292.2,166.83,292.66,166.47,293.12,166.12,293.56,165.87,294,165.63,294.45,165.44,294.9,165.26,295.37,165.13,295.83,165.01,296.31,164.95,296.78,164.88,297.27,164.88,297.77,164.88,298.22,164.91,298.66,164.94,299.05,165,299.43,165.06,299.76,165.15,300.08,165.24,300.35,165.36,300.48,165.42,300.58,165.49,300.67,165.56,300.74,165.64,300.8,165.73,300.83,165.84,300.87,165.94,300.87,166.06,300.83,166.42,300.68,167.16,300.57,168.06,300.45,168.95,300.37,169.98,300.29,171.02,300.24,172.21,300.19,173.4,300.17,174.74,298.52,174.74,298.31,174.27,298.08,173.87,297.85,173.47,297.6,173.14,297.35,172.81,297.09,172.55,296.82,172.29,296.53,172.1,296.24,171.91,295.93,171.76,295.61,171.62,295.27,171.52,294.92,171.43,294.55,171.38,294.18,171.33,293.78,171.33,293.24,171.33,292.72,171.42,292.2,171.51,291.7,171.7,291.2,171.88,290.72,172.15,290.24,172.43,289.78,172.79,289.32,173.16,288.93,173.6,288.55,174.04,288.24,174.55,287.93,175.06,287.7,175.65,287.47,176.23,287.31,176.89,287.16,177.55,287.04,178.52,286.92,179.5,286.85,180.79,286.77,182.09,286.73,183.7,286.69,185.31,286.69,187.24,286.69,188.51,286.72,189.68,286.74,190.85,286.79,191.92,286.84,192.99,286.92,193.96,286.99,194.93,287.1,195.8,287.13,196.12,287.2,196.38,287.26,196.64,287.35,196.84,287.44,197.04,287.56,197.18,287.68,197.32,287.83,197.4,288.18,197.6,288.61,197.74,289.04,197.88,289.55,197.98,290.06,198.08,290.66,198.12,291.25,198.17,291.93,198.17,294.13,198.17,294.13,200.3,292.73,200.23,291.36,200.19,290,200.14,288.67,200.1,287.34,200.07,286.05,200.06,284.76,200.04,283.51,200.04,282.29,200.04,281.08,200.06,279.87,200.07,278.66,200.1,277.46,200.14,276.26,200.19,275.06,200.23,273.88,200.3,273.88,198.17,277.39,197.88,277.86,197.84,278.24,197.78,278.62,197.72,278.92,197.63,279.21,197.55,279.42,197.43,279.63,197.32,279.75,197.18,279.88,197.05,279.98,196.76,280.08,196.47,280.16,196.02,280.24,195.58,280.3,194.98,280.36,194.38,280.39,193.63,280.46,192.31,280.51,190.87,280.55,189.43,280.59,187.86,280.62,186.3,280.63,184.61,280.65,182.92,280.65,181.11,280.65,178.9,280.61,177.15,280.56,175.4,280.48,174.1,280.39,172.81,280.26,171.97,280.13,171.13,279.95,170.74,279.84,170.5,279.59,170.31,279.34,170.13,278.97,170,278.59,169.88,278.09,169.82,277.58,169.76,276.95,169.76,273.88,169.76,273.88,167.63,274.76,167.53,275.6,167.42,276.44,167.3,277.23,167.17,278.03,167.04,278.77,166.89,279.51,166.75,280.21,166.59,280.91,166.43,281.56,166.25,282.22,166.06,282.84,165.86,283.46,165.66,284.03,165.43,284.61,165.21,285.15,164.96,285.28,164.9,285.4,164.85,285.52,164.8,285.62,164.77,285.73,164.74,285.82,164.72,285.91,164.7,286,164.7,286.1,164.7,286.18,164.72,286.27,164.73,286.34,164.76,286.4,164.79,286.46,164.83,286.51,164.87,286.55,164.92,286.58,164.98,286.61,165.07,286.64,165.16,286.65,165.28,286.67,165.41,286.68,165.57,286.69,165.72,286.69,165.92,286.55,173.2,286.547,173.196] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,2,2,2] ), $.toNumberVector( [315.92,171.51,315.92,185.89,315.92,187.29,315.94,188.44,315.96,189.59,316.01,190.49,316.05,191.39,316.12,192.04,316.19,192.68,316.28,193.08,316.37,193.47,316.51,193.82,316.65,194.17,316.84,194.48,317.02,194.79,317.25,195.05,317.49,195.32,317.77,195.54,318.04,195.76,318.36,195.92,318.68,196.09,319.03,196.2,319.39,196.31,319.78,196.36,320.17,196.42,320.6,196.42,320.87,196.42,321.13,196.39,321.39,196.36,321.65,196.31,321.91,196.26,322.17,196.18,322.42,196.1,322.67,196,322.92,195.89,323.18,195.76,323.43,195.63,323.68,195.47,323.92,195.31,324.17,195.13,324.42,194.94,324.67,194.73,325.73,196,322.16,200.19,321.87,200.29,321.58,200.38,321.29,200.47,321,200.55,320.72,200.62,320.44,200.69,320.16,200.76,319.88,200.81,319.61,200.86,319.33,200.91,319.06,200.95,318.8,200.98,318.53,201,318.27,201.02,318.01,201.03,317.75,201.03,317.07,201.03,316.44,200.97,315.81,200.91,315.24,200.79,314.66,200.67,314.14,200.48,313.62,200.3,313.15,200.06,312.68,199.82,312.28,199.54,311.87,199.26,311.53,198.94,311.19,198.63,310.91,198.27,310.64,197.92,310.43,197.53,310.22,197.14,310.06,196.66,309.9,196.17,309.79,195.58,309.69,194.99,309.63,194.3,309.58,193.62,309.58,192.83,309.73,185.76,309.73,171.84,309.02,171.84,308.31,171.86,307.59,171.88,306.86,171.91,306.13,171.94,305.39,171.99,304.65,172.04,303.9,172.1,303.9,170.53,304.69,170.22,305.45,169.91,306.21,169.6,306.93,169.29,307.66,168.97,308.36,168.65,309.06,168.33,309.73,168,309.72,166.69,309.7,165.32,309.67,163.96,309.64,162.54,309.6,161.12,309.55,159.65,309.5,158.17,309.43,156.65,310.5,156.2,311.42,155.79,312.34,155.39,313.11,155.02,313.87,154.66,314.49,154.34,315.11,154.03,315.58,153.75,316.54,154.48,316.47,155.2,316.39,156.4,316.31,157.6,316.24,159.29,316.16,160.98,316.08,163.16,316,165.33,315.92,168,317.03,168,318.05,167.99,319.06,167.98,319.97,167.97,320.88,167.96,321.69,167.93,322.5,167.91,323.2,167.89,326.13,167.74,325.73,171.51,324.23,171.48,317.2,171.51,315.92,171.51,315.917,171.514] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [340.64,164.74,341.52,165.29,341.45,165.97,341.4,166.7,341.35,167.42,341.3,168.17,341.26,168.93,341.23,169.72,341.2,170.51,341.19,171.33,341.12,174,341.07,176.33,341.03,178.65,340.99,180.62,340.96,182.6,340.95,184.22,340.93,185.84,340.93,187.11,340.93,188.3,340.95,189.41,340.97,190.51,341.01,191.53,341.05,192.54,341.11,193.47,341.18,194.4,341.26,195.24,341.3,195.57,341.36,195.85,341.42,196.13,341.51,196.36,341.59,196.59,341.71,196.77,341.82,196.95,341.96,197.07,342.09,197.2,342.33,197.32,342.56,197.43,342.89,197.52,343.22,197.62,343.64,197.7,344.07,197.78,344.59,197.84,347.08,198.17,347.08,200.3,345.75,200.23,344.47,200.19,343.19,200.14,341.97,200.11,340.75,200.07,339.6,200.06,338.44,200.04,337.34,200.04,336.26,200.04,335.17,200.06,334.09,200.07,333,200.11,331.91,200.14,330.82,200.19,329.72,200.23,328.63,200.3,328.63,198.17,331.77,197.84,332.23,197.81,332.6,197.75,332.97,197.68,333.25,197.6,333.53,197.52,333.73,197.41,333.92,197.3,334.03,197.16,334.13,197.03,334.22,196.74,334.3,196.46,334.37,196.01,334.44,195.57,334.48,194.97,334.53,194.37,334.56,193.62,334.6,192.45,334.64,191.07,334.67,189.68,334.69,188.08,334.72,186.47,334.73,184.64,334.74,182.82,334.74,180.77,334.74,179.35,334.73,178.09,334.72,176.83,334.69,175.73,334.67,174.63,334.64,173.7,334.6,172.76,334.56,171.99,334.54,171.71,334.49,171.47,334.44,171.22,334.36,171.02,334.28,170.82,334.17,170.66,334.06,170.5,333.92,170.38,333.77,170.26,333.54,170.17,333.31,170.08,332.99,170.02,332.68,169.96,332.27,169.93,331.86,169.9,331.37,169.9,328.62,169.9,328.62,167.78,329.74,167.61,330.71,167.46,331.68,167.3,332.5,167.15,333.32,167,334,166.86,334.67,166.72,335.2,166.58,335.72,166.45,336.33,166.27,336.93,166.08,337.61,165.85,338.29,165.62,339.05,165.34,339.8,165.06,340.64,164.74,340.637,164.739,337.71,148.52,338.13,148.52,338.52,148.59,338.91,148.67,339.27,148.82,339.63,148.98,339.97,149.21,340.3,149.44,340.6,149.74,340.9,150.05,341.13,150.39,341.36,150.72,341.51,151.09,341.66,151.46,341.73,151.86,341.81,152.26,341.81,152.69,341.81,153.12,341.73,153.52,341.66,153.92,341.51,154.28,341.36,154.65,341.13,154.98,340.9,155.32,340.6,155.62,340.3,155.92,339.97,156.15,339.63,156.38,339.27,156.53,338.91,156.68,338.52,156.75,338.13,156.83,337.71,156.83,337.28,156.83,336.88,156.75,336.48,156.68,336.11,156.53,335.75,156.38,335.41,156.15,335.08,155.92,334.78,155.62,334.47,155.32,334.25,154.98,334.02,154.65,333.87,154.28,333.72,153.92,333.64,153.52,333.57,153.12,333.57,152.69,333.57,152.26,333.64,151.86,333.72,151.46,333.87,151.09,334.02,150.73,334.25,150.39,334.47,150.05,334.78,149.74,335.08,149.44,335.41,149.21,335.75,148.98,336.11,148.82,336.48,148.67,336.88,148.59,337.28,148.52,337.71,148.52,337.707,148.516] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2] ), $.toNumberVector( [354.15,189.09,354.15,191.48,354.15,192.2,354.18,192.78,354.21,193.36,354.28,193.81,354.34,194.25,354.44,194.56,354.53,194.87,354.66,195.05,354.9,195.34,355.25,195.63,355.6,195.92,356.07,196.21,356.53,196.49,357.11,196.77,357.69,197.05,358.38,197.33,359.07,197.6,359.77,197.81,360.47,198.02,361.19,198.16,361.9,198.29,362.62,198.36,363.34,198.43,364.07,198.43,365.02,198.43,365.87,198.3,366.73,198.18,367.5,197.92,368.27,197.67,368.95,197.29,369.63,196.91,370.23,196.4,370.82,195.89,371.27,195.33,371.71,194.77,372.01,194.16,372.31,193.56,372.46,192.9,372.61,192.24,372.61,191.54,372.61,190.98,372.52,190.48,372.43,189.97,372.26,189.52,372.08,189.07,371.82,188.68,371.56,188.28,371.21,187.95,370.87,187.61,370.36,187.3,369.85,187,369.19,186.73,368.53,186.46,367.71,186.22,366.88,185.98,365.9,185.78,364.08,185.42,362.57,185.07,361.06,184.73,359.85,184.41,358.65,184.09,357.75,183.79,356.86,183.49,356.27,183.22,355.69,182.94,355.17,182.62,354.66,182.3,354.22,181.93,353.78,181.57,353.42,181.15,353.05,180.74,352.76,180.28,352.46,179.83,352.24,179.32,352.02,178.81,351.88,178.26,351.73,177.7,351.66,177.1,351.58,176.5,351.58,175.85,351.58,174.63,351.81,173.52,352.03,172.42,352.47,171.43,352.91,170.44,353.57,169.57,354.24,168.69,355.12,167.93,356.01,167.17,357.08,166.6,358.15,166.03,359.4,165.65,360.65,165.27,362.09,165.08,363.53,164.89,365.15,164.89,366.44,164.89,367.72,165.02,369,165.14,370.28,165.4,371.56,165.66,372.84,166.04,374.11,166.43,375.39,166.94,375.31,167.56,375.24,168.39,375.17,169.23,375.1,170.27,375.04,171.31,374.98,172.57,374.92,173.82,374.87,175.29,372.68,175.29,372.66,174.48,372.61,173.81,372.55,173.15,372.47,172.61,372.38,172.08,372.26,171.69,372.14,171.3,371.98,171.04,371.77,170.7,371.48,170.38,371.18,170.06,370.8,169.75,370.41,169.44,369.94,169.15,369.47,168.86,368.91,168.59,368.36,168.31,367.78,168.11,367.21,167.9,366.61,167.76,366.02,167.62,365.41,167.56,364.79,167.49,364.16,167.49,363.33,167.49,362.58,167.59,361.84,167.7,361.17,167.91,360.51,168.13,359.93,168.45,359.35,168.77,358.85,169.19,358.35,169.62,357.98,170.1,357.6,170.58,357.36,171.11,357.11,171.65,356.98,172.23,356.86,172.82,356.86,173.46,356.86,174.08,356.96,174.62,357.05,175.15,357.25,175.62,357.45,176.08,357.74,176.47,358.04,176.85,358.43,177.17,358.83,177.49,359.57,177.82,360.31,178.15,361.4,178.49,362.49,178.83,363.93,179.17,365.36,179.52,367.15,179.88,368.47,180.14,369.56,180.4,370.66,180.66,371.52,180.91,372.39,181.15,373.04,181.39,373.68,181.63,374.11,181.86,374.53,182.09,374.91,182.37,375.29,182.66,375.63,183.01,375.97,183.36,376.26,183.76,376.56,184.17,376.82,184.64,377.07,185.1,377.27,185.61,377.46,186.11,377.59,186.64,377.71,187.18,377.78,187.75,377.84,188.32,377.84,188.92,377.84,190.15,377.58,191.3,377.31,192.46,376.78,193.52,376.26,194.59,375.46,195.57,374.67,196.55,373.61,197.45,372.55,198.34,371.32,199.01,370.09,199.69,368.67,200.13,367.26,200.58,365.67,200.81,364.08,201.03,362.31,201.03,361.19,201.03,359.99,200.94,358.8,200.85,357.54,200.68,356.27,200.5,354.94,200.24,353.61,199.97,352.21,199.62,351.96,199.56,351.78,199.48,351.59,199.4,351.47,199.3,351.34,199.21,351.28,199.1,351.22,198.98,351.22,198.86,351.33,198.34,351.37,198.2,351.4,198.01,351.43,197.82,351.47,197.58,351.5,197.34,351.53,197.04,351.56,196.74,351.58,196.4,351.67,195.51,351.73,194.71,351.79,193.92,351.83,193.23,351.87,192.54,351.89,191.94,351.91,191.35,351.91,190.85,351.88,189.09,354.15,189.09,354.149,189.092] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,2,2,2] ), $.toNumberVector( [393.99,171.51,393.99,185.89,393.99,187.29,394.02,188.44,394.04,189.59,394.08,190.49,394.13,191.39,394.2,192.04,394.27,192.68,394.36,193.08,394.45,193.47,394.59,193.82,394.73,194.17,394.91,194.48,395.1,194.79,395.33,195.05,395.56,195.32,395.84,195.54,396.12,195.76,396.44,195.92,396.75,196.09,397.11,196.2,397.46,196.31,397.86,196.36,398.25,196.42,398.68,196.42,398.95,196.42,399.21,196.39,399.47,196.36,399.73,196.31,399.99,196.26,400.24,196.18,400.5,196.1,400.75,196,401,195.89,401.25,195.76,401.5,195.63,401.75,195.47,402,195.31,402.25,195.13,402.5,194.94,402.75,194.73,403.81,196,400.24,200.19,399.94,200.29,399.65,200.38,399.36,200.47,399.08,200.55,398.79,200.62,398.51,200.69,398.23,200.76,397.96,200.81,397.68,200.86,397.41,200.91,397.14,200.95,396.87,200.98,396.61,201,396.34,201.02,396.08,201.03,395.82,201.03,395.14,201.03,394.52,200.97,393.89,200.91,393.31,200.79,392.74,200.67,392.22,200.48,391.69,200.3,391.23,200.06,390.76,199.82,390.35,199.54,389.95,199.26,389.61,198.94,389.27,198.63,388.99,198.27,388.71,197.92,388.5,197.53,388.29,197.14,388.13,196.66,387.97,196.17,387.87,195.58,387.76,194.99,387.71,194.3,387.66,193.62,387.66,192.83,387.8,185.76,387.8,171.84,387.1,171.84,386.38,171.86,385.66,171.88,384.94,171.91,384.21,171.94,383.47,171.99,382.73,172.04,381.98,172.1,381.98,170.53,382.77,170.22,383.53,169.91,384.28,169.6,385.01,169.29,385.74,168.97,386.44,168.65,387.13,168.33,387.8,168,387.79,166.69,387.77,165.32,387.75,163.96,387.71,162.54,387.67,161.12,387.62,159.65,387.57,158.17,387.51,156.65,388.58,156.2,389.5,155.79,390.41,155.39,391.18,155.02,391.95,154.66,392.57,154.34,393.19,154.03,393.66,153.75,394.61,154.48,394.54,155.2,394.46,156.4,394.39,157.6,394.31,159.29,394.23,160.98,394.15,163.16,394.07,165.33,393.99,168,395.11,168,396.12,167.99,397.14,167.98,398.05,167.97,398.96,167.96,399.77,167.93,400.57,167.91,401.28,167.89,404.21,167.74,403.81,171.51,402.31,171.48,395.27,171.51,393.99,171.51,393.993,171.514] ) );
        shape.graphics.endFill();
        
        return shape;
      },
      
      "HYPER ELECTRO" : function()
      {
        var shape = Shape();
        
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [78.43,277.45,78.43,291.35,78.48,299.35,78.48,301.22,78.5,302.84,78.51,304.47,78.53,305.83,78.55,307.2,78.58,308.32,78.61,309.44,78.66,310.3,80.73,310.46,82.87,310.57,85.02,310.69,87.23,310.77,89.45,310.85,91.75,310.89,94.04,310.93,96.41,310.93,98,310.93,99.46,310.89,100.92,310.86,102.25,310.78,103.59,310.71,104.79,310.61,106,310.5,107.08,310.36,107.77,310.27,108.49,310.14,109.2,310.01,109.94,309.82,110.68,309.64,111.44,309.4,112.2,309.17,112.97,308.89,113.33,307.64,113.69,306.24,114.05,304.84,114.41,303.28,114.77,301.72,115.13,300.01,115.5,298.3,115.87,296.43,119.61,296.43,119.22,299.54,118.94,302.13,118.65,304.72,118.46,306.79,118.27,308.87,118.17,310.42,118.08,311.98,118.08,313.01,118.19,315.57,116.56,315.71,114.95,315.82,113.33,315.92,111.73,316,110.13,316.07,108.55,316.1,106.96,316.14,105.39,316.14,96.5,315.97,92.81,315.87,89.62,315.79,86.43,315.72,83.72,315.67,81.02,315.62,78.8,315.6,76.59,315.57,74.86,315.57,73.2,315.57,71.27,315.6,69.34,315.62,67.14,315.67,64.94,315.72,62.47,315.79,59.99,315.87,57.24,315.97,57.24,312.4,59,312.4,60.23,312.4,61.24,312.34,62.24,312.28,63.01,312.16,63.79,312.04,64.34,311.86,64.88,311.68,65.2,311.44,65.52,311.2,65.79,310.79,66.05,310.39,66.26,309.82,66.48,309.26,66.64,308.53,66.79,307.8,66.9,306.9,67.01,306.01,67.09,304.58,67.17,303.15,67.22,301.18,67.27,299.22,67.3,296.71,67.33,294.2,67.33,291.16,67.33,260.06,67.33,258.15,67.3,256.41,67.28,254.67,67.23,253.11,67.19,251.55,67.12,250.15,67.05,248.76,66.96,247.54,66.87,246.33,66.77,245.36,66.67,244.38,66.58,243.66,66.48,242.93,66.37,242.45,66.27,241.97,66.16,241.74,66.06,241.51,65.93,241.3,65.8,241.09,65.65,240.91,65.5,240.73,65.32,240.58,65.15,240.42,64.95,240.29,64.75,240.17,64.35,240.05,63.94,239.93,63.33,239.81,62.72,239.7,61.91,239.59,61.1,239.49,60.08,239.39,55.71,238.94,55.71,235.37,61.83,235.37,67.84,235.57,69.1,235.62,70.2,235.65,71.31,235.69,72.27,235.71,73.22,235.74,74.03,235.75,74.83,235.76,75.48,235.76,97.23,235.43,107.54,235.37,108.86,235.35,110.18,235.37,111.51,235.39,112.84,235.44,114.17,235.49,115.51,235.57,116.84,235.65,118.19,235.76,117.65,237.45,117.23,239.38,116.81,241.32,116.52,243.5,116.22,245.69,116.04,248.13,115.87,250.57,115.81,253.27,111.96,253.27,111.96,251.71,111.92,250.28,111.88,248.86,111.8,247.56,111.72,246.26,111.61,245.1,111.49,243.93,111.33,242.9,109.66,242.28,107.8,241.81,105.94,241.34,103.89,241.03,101.83,240.72,99.59,240.56,97.34,240.41,94.91,240.41,92.97,240.41,90.98,240.45,89,240.49,86.96,240.58,84.93,240.66,82.85,240.79,80.78,240.92,78.65,241.09,78.67,242.42,78.67,243.75,78.67,245.07,78.65,246.4,78.64,247.73,78.61,249.06,78.58,250.39,78.54,251.72,78.43,260.42,78.43,271.9,79.83,272,81.15,272.08,82.47,272.15,83.71,272.2,84.95,272.25,86.11,272.27,87.26,272.3,88.34,272.3,91.71,272.3,94.35,272.24,96.99,272.18,98.89,272.06,100.8,271.95,101.98,271.77,103.16,271.6,103.6,271.36,104.05,271.13,104.38,270.65,104.72,270.17,104.94,269.44,105.17,268.72,105.28,267.75,105.39,266.78,105.39,265.56,105.39,261.88,109.24,261.88,109.14,264.01,109.07,265.94,108.99,267.86,108.94,269.56,108.89,271.27,108.87,272.76,108.84,274.25,108.84,275.52,108.84,276.87,108.87,278.34,108.89,279.8,108.94,281.39,108.99,282.97,109.07,284.68,109.14,286.39,109.24,288.21,105.39,288.21,105.39,284.93,105.39,283.57,105.26,282.47,105.12,281.38,104.86,280.55,104.59,279.71,104.19,279.15,103.79,278.58,103.26,278.27,102.73,277.97,101.53,277.74,100.33,277.51,98.46,277.36,96.58,277.21,94.04,277.13,91.5,277.05,88.28,277.05,87.09,277.06,85.88,277.08,84.67,277.11,83.44,277.15,82.21,277.2,80.96,277.28,79.7,277.35,78.43,277.45,78.428,277.452] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,2,2] ), $.toNumberVector( [148.72,310.42,150.11,310.49,151.48,310.54,152.85,310.59,154.2,310.63,155.55,310.66,156.89,310.68,158.22,310.7,159.54,310.7,162.2,310.7,164.57,310.66,166.94,310.63,169.02,310.56,171.11,310.49,172.9,310.38,174.69,310.28,176.19,310.13,177.24,310.02,178.3,309.86,179.37,309.7,180.45,309.5,181.53,309.29,182.64,309.04,183.74,308.79,184.86,308.49,188.25,295.18,191.94,295.18,191.58,297.86,191.27,300.44,190.95,303.03,190.67,305.53,190.4,308.03,190.16,310.44,189.92,312.85,189.73,315.17,188.45,315.39,186.94,315.55,185.44,315.7,183.69,315.81,181.95,315.92,179.98,315.97,178,316.02,175.79,316.02,148.83,315.57,147.47,315.57,145.73,315.61,144,315.65,141.88,315.73,139.76,315.8,137.27,315.92,134.77,316.04,131.9,316.19,131.9,313.19,133.03,312.7,133.93,312.18,134.83,311.67,135.5,311.14,136.17,310.61,136.61,310.06,137.04,309.51,137.25,308.94,137.45,308.38,137.61,306.97,137.76,305.57,137.86,303.32,137.97,301.08,138.02,297.99,138.07,294.91,138.07,290.99,138.07,259.84,138.07,255.59,138.02,252.28,137.97,248.97,137.86,246.6,137.76,244.24,137.61,242.81,137.45,241.38,137.25,240.89,137.04,240.4,136.65,240.04,136.26,239.67,135.68,239.43,135.11,239.18,134.34,239.06,133.58,238.94,132.63,238.94,126.46,238.94,126.46,235.37,129.83,235.47,132.63,235.54,135.44,235.62,137.67,235.67,139.91,235.72,141.58,235.74,143.25,235.77,144.36,235.77,145.83,235.77,147.56,235.74,149.3,235.72,151.29,235.67,153.29,235.62,155.55,235.54,157.81,235.47,160.33,235.37,160.33,238.94,153.31,238.94,152.56,238.94,151.94,239.05,151.33,239.15,150.86,239.37,150.38,239.59,150.05,239.91,149.71,240.23,149.51,240.67,149.31,241.1,149.16,242.21,149.02,243.32,148.92,245.12,148.82,246.91,148.77,249.39,148.72,251.87,148.72,255.02,148.72,291.1,148.89,307.08,148.72,310.42,148.719,310.417] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [220.14,277.45,220.14,291.35,220.2,299.35,220.2,301.22,220.21,302.84,220.22,304.47,220.24,305.83,220.26,307.2,220.3,308.32,220.33,309.44,220.37,310.3,222.44,310.46,224.59,310.57,226.73,310.69,228.95,310.77,231.17,310.85,233.46,310.89,235.76,310.93,238.13,310.93,239.71,310.93,241.18,310.89,242.64,310.86,243.97,310.78,245.3,310.71,246.51,310.61,247.71,310.5,248.79,310.36,249.49,310.27,250.2,310.14,250.92,310.01,251.66,309.82,252.39,309.64,253.15,309.4,253.91,309.17,254.69,308.89,255.04,307.64,255.4,306.24,255.76,304.84,256.12,303.28,256.48,301.72,256.85,300.01,257.21,298.3,257.58,296.43,261.32,296.43,260.94,299.54,260.65,302.13,260.37,304.72,260.17,306.79,259.98,308.87,259.89,310.42,259.79,311.98,259.79,313.01,259.9,315.57,258.28,315.71,256.66,315.82,255.05,315.92,253.45,316,251.85,316.07,250.26,316.1,248.68,316.14,247.1,316.14,238.21,315.97,234.53,315.87,231.34,315.79,228.14,315.72,225.44,315.67,222.73,315.62,220.52,315.6,218.3,315.57,216.57,315.57,214.92,315.57,212.99,315.6,211.06,315.62,208.86,315.67,206.65,315.72,204.18,315.79,201.71,315.87,198.96,315.97,198.96,312.4,200.71,312.4,201.95,312.4,202.95,312.34,203.95,312.28,204.73,312.16,205.5,312.04,206.05,311.86,206.6,311.68,206.92,311.44,207.24,311.2,207.5,310.79,207.77,310.39,207.98,309.82,208.19,309.26,208.35,308.53,208.51,307.8,208.62,306.9,208.72,306.01,208.8,304.58,208.88,303.15,208.93,301.18,208.99,299.22,209.01,296.71,209.04,294.2,209.04,291.16,209.04,260.06,209.04,258.15,209.02,256.41,208.99,254.67,208.95,253.11,208.9,251.55,208.83,250.15,208.76,248.76,208.67,247.54,208.58,246.33,208.49,245.36,208.39,244.38,208.29,243.66,208.19,242.93,208.09,242.45,207.99,241.97,207.88,241.74,207.77,241.51,207.64,241.3,207.52,241.09,207.36,240.91,207.21,240.73,207.04,240.58,206.86,240.42,206.66,240.29,206.46,240.17,206.06,240.05,205.66,239.93,205.05,239.81,204.44,239.7,203.62,239.59,202.81,239.49,201.79,239.39,197.43,238.94,197.43,235.37,203.55,235.37,209.55,235.57,210.81,235.62,211.92,235.65,213.03,235.69,213.98,235.71,214.94,235.74,215.74,235.75,216.55,235.76,217.2,235.76,238.95,235.43,249.26,235.37,250.57,235.35,251.9,235.37,253.22,235.39,254.55,235.44,255.88,235.49,257.22,235.57,258.56,235.65,259.9,235.76,259.37,237.45,258.95,239.38,258.53,241.32,258.23,243.5,257.93,245.69,257.76,248.13,257.58,250.57,257.52,253.27,253.67,253.27,253.67,251.71,253.63,250.28,253.6,248.86,253.52,247.56,253.44,246.26,253.32,245.1,253.21,243.93,253.05,242.9,251.38,242.28,249.52,241.81,247.65,241.34,245.6,241.03,243.55,240.72,241.3,240.56,239.06,240.41,236.62,240.41,234.68,240.41,232.7,240.45,230.71,240.49,228.68,240.58,226.65,240.66,224.57,240.79,222.49,240.92,220.37,241.09,220.38,242.42,220.38,243.75,220.38,245.07,220.37,246.4,220.35,247.73,220.33,249.06,220.3,250.39,220.25,251.72,220.14,260.42,220.14,271.9,221.54,272,222.86,272.08,224.18,272.15,225.42,272.2,226.66,272.25,227.82,272.27,228.98,272.3,230.05,272.3,233.42,272.3,236.06,272.24,238.7,272.18,240.61,272.06,242.52,271.95,243.7,271.77,244.87,271.6,245.32,271.36,245.77,271.13,246.1,270.65,246.43,270.17,246.66,269.44,246.88,268.72,246.99,267.75,247.1,266.78,247.1,265.56,247.1,261.88,250.96,261.88,250.86,264.01,250.78,265.94,250.71,267.86,250.66,269.56,250.61,271.27,250.58,272.76,250.56,274.25,250.56,275.52,250.56,276.87,250.58,278.34,250.61,279.8,250.66,281.39,250.71,282.97,250.78,284.68,250.86,286.39,250.96,288.21,247.1,288.21,247.1,284.93,247.1,283.57,246.97,282.47,246.84,281.38,246.57,280.55,246.31,279.71,245.91,279.15,245.51,278.58,244.98,278.27,244.45,277.97,243.25,277.74,242.04,277.51,240.17,277.36,238.3,277.21,235.76,277.13,233.21,277.05,230,277.05,228.81,277.06,227.6,277.08,226.39,277.11,225.16,277.15,223.92,277.2,222.67,277.28,221.42,277.35,220.14,277.45,220.143,277.452] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [338.13,255.81,337.67,245.73,336.41,244.9,335.12,244.17,333.83,243.44,332.51,242.82,331.19,242.19,329.84,241.68,328.49,241.16,327.11,240.75,325.73,240.34,324.32,240.03,322.91,239.72,321.47,239.52,320.03,239.31,318.55,239.21,317.08,239.11,315.58,239.11,311.76,239.11,308.32,239.69,304.87,240.27,301.81,241.43,298.75,242.59,296.07,244.33,293.39,246.07,291.09,248.39,288.78,250.72,287.06,253.43,285.33,256.15,284.18,259.26,283.03,262.36,282.46,265.86,281.88,269.37,281.88,273.26,281.88,275.99,282.17,278.58,282.47,281.16,283.05,283.6,283.63,286.03,284.51,288.32,285.39,290.61,286.56,292.74,287.72,294.88,289.14,296.8,290.55,298.71,292.21,300.4,293.87,302.1,295.78,303.57,297.68,305.04,299.84,306.28,301.99,307.53,304.2,308.46,306.41,309.4,308.69,310.02,310.96,310.64,313.29,310.95,315.63,311.26,318.02,311.26,319.92,311.26,321.8,311.16,323.69,311.05,325.57,310.83,327.44,310.61,329.31,310.28,331.17,309.95,333.03,309.51,334.42,309.18,335.81,308.68,337.2,308.18,338.59,307.5,339.99,306.82,341.39,305.96,342.79,305.1,344.19,304.07,345.38,305.2,345.08,305.86,344.79,306.51,344.51,307.17,344.23,307.82,343.95,308.48,343.69,309.14,343.42,309.81,343.17,310.47,341.51,311.29,339.85,312.01,338.19,312.73,336.52,313.35,334.85,313.97,333.18,314.49,331.51,315.01,329.83,315.43,328.15,315.85,326.47,316.16,324.78,316.47,323.09,316.68,321.41,316.89,319.71,316.99,318.02,317.1,316.32,317.1,312.84,317.1,309.56,316.76,306.29,316.43,303.23,315.75,300.17,315.08,297.31,314.07,294.46,313.06,291.82,311.72,289.18,310.37,286.85,308.77,284.51,307.17,282.48,305.31,280.45,303.45,278.73,301.34,277.01,299.22,275.59,296.85,274.18,294.48,273.12,291.95,272.05,289.43,271.35,286.75,270.64,284.07,270.28,281.23,269.93,278.4,269.93,275.41,269.93,272.42,270.29,269.59,270.64,266.76,271.36,264.09,272.07,261.42,273.15,258.9,274.22,256.39,275.65,254.03,277.08,251.67,278.81,249.58,280.53,247.49,282.55,245.66,284.58,243.83,286.89,242.27,289.21,240.71,291.82,239.42,294.43,238.12,297.35,237.15,300.26,236.18,303.47,235.53,306.68,234.88,310.19,234.56,313.7,234.23,317.51,234.23,319.51,234.23,321.67,234.4,323.84,234.56,326.18,234.89,328.51,235.21,331.02,235.7,333.52,236.19,336.2,236.84,337.53,237.15,338.74,237.42,339.95,237.7,341.03,237.93,342.11,238.16,343.07,238.36,344.03,238.55,344.87,238.71,344.23,240.22,343.73,242.05,343.22,243.88,342.85,246.01,342.49,248.15,342.25,250.6,342.02,253.05,341.92,255.81,338.13,255.81,338.125,255.815] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [389.05,240.52,388.89,242.65,388.77,244.83,388.66,247.01,388.58,249.24,388.5,251.48,388.46,253.78,388.42,256.07,388.42,258.42,388.42,290.71,388.42,295.21,388.48,298.7,388.54,302.19,388.65,304.67,388.76,307.16,388.93,308.63,389.1,310.1,389.33,310.56,389.55,311.02,390.07,311.36,390.59,311.71,391.4,311.94,392.2,312.17,393.3,312.28,394.4,312.4,395.79,312.4,400.03,312.4,400.03,315.97,397.53,315.87,395.21,315.79,392.9,315.72,390.77,315.67,388.65,315.62,386.72,315.6,384.78,315.57,383.04,315.57,381.28,315.57,379.35,315.6,377.42,315.62,375.31,315.67,373.2,315.72,370.91,315.79,368.63,315.87,366.16,315.97,366.16,312.4,370.92,312.4,371.85,312.4,372.63,312.34,373.4,312.28,374.01,312.15,374.62,312.03,375.06,311.84,375.51,311.66,375.79,311.41,376.07,311.16,376.3,310.79,376.53,310.43,376.71,309.94,376.89,309.46,377.01,308.85,377.14,308.25,377.21,307.53,377.35,305.87,377.45,303.97,377.56,302.08,377.63,299.94,377.7,297.8,377.74,295.42,377.77,293.04,377.77,290.42,377.77,258.08,377.77,255.69,377.75,253.39,377.72,251.1,377.67,248.91,377.62,246.71,377.55,244.61,377.48,242.52,377.38,240.52,371.61,240.52,368.12,240.52,365.42,240.56,362.71,240.6,360.79,240.69,358.87,240.77,357.73,240.89,356.6,241.01,356.24,241.17,355.89,241.34,355.6,241.73,355.3,242.13,355.07,242.77,354.84,243.4,354.66,244.27,354.49,245.14,354.38,246.24,353.59,253.83,350.02,253.83,350.13,247.09,350.13,246.07,350.09,244.83,350.05,243.59,349.96,242.12,349.88,240.66,349.75,238.97,349.62,237.28,349.45,235.37,357.1,235.47,363.17,235.54,369.24,235.61,373.74,235.66,378.23,235.71,381.15,235.74,384.07,235.76,385.42,235.76,416.74,235.37,416.47,237.76,416.26,240.11,416.05,242.46,415.89,244.77,415.74,247.08,415.64,249.34,415.54,251.61,415.49,253.83,411.93,253.83,411.36,246.41,411.28,245.45,411.17,244.68,411.07,243.92,410.95,243.35,410.83,242.78,410.69,242.4,410.55,242.03,410.4,241.85,410.24,241.68,409.99,241.53,409.74,241.39,409.39,241.28,409.05,241.17,408.6,241.09,408.16,241.02,407.62,240.97,406.07,240.86,404.4,240.78,402.74,240.69,400.97,240.63,399.2,240.58,397.32,240.55,395.45,240.52,393.46,240.52,389.05,240.52,389.045,240.522] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [463.3,275.07,464.69,277.07,466.24,279.23,467.8,281.39,469.52,283.71,471.24,286.03,473.12,288.52,475.01,291,477.06,293.65,487.94,307.75,488.66,308.66,489.26,309.37,489.87,310.08,490.35,310.6,490.83,311.12,491.19,311.44,491.55,311.76,491.79,311.89,492.03,312.02,492.28,312.11,492.52,312.21,492.77,312.27,493.02,312.34,493.27,312.37,493.52,312.4,493.77,312.4,495.25,312.4,495.25,315.97,494.07,315.87,492.97,315.79,491.87,315.72,490.84,315.67,489.82,315.62,488.86,315.6,487.91,315.57,487.03,315.57,486.23,315.57,485.4,315.6,484.57,315.62,483.72,315.67,482.87,315.72,482,315.79,481.13,315.87,480.24,315.97,460.19,288.89,458.78,287.02,457.33,285.18,455.88,283.33,454.38,281.5,452.88,279.68,451.33,277.87,449.78,276.07,448.18,274.28,448.74,272.35,449.56,272.43,450.28,272.48,450.99,272.53,451.6,272.57,452.21,272.6,452.72,272.62,453.22,272.64,453.61,272.64,455.98,272.64,458.09,272.33,460.2,272.03,462.05,271.42,463.9,270.81,465.49,269.9,467.09,268.98,468.43,267.77,469.76,266.55,470.77,265.13,471.77,263.7,472.44,262.07,473.11,260.45,473.45,258.61,473.78,256.78,473.78,254.74,473.78,252.91,473.5,251.29,473.21,249.66,472.65,248.23,472.08,246.81,471.23,245.58,470.38,244.35,469.25,243.33,468.12,242.3,466.73,241.53,465.35,240.76,463.71,240.25,462.08,239.73,460.19,239.48,458.3,239.22,456.16,239.22,454.68,239.22,453.19,239.36,451.7,239.5,450.2,239.77,448.71,240.05,447.21,240.46,445.71,240.88,444.21,241.43,444.04,243.68,443.92,246.01,443.79,248.34,443.7,250.75,443.62,253.16,443.58,255.64,443.53,258.13,443.53,260.69,443.53,288.04,443.53,293.04,443.59,296.93,443.65,300.81,443.77,303.59,443.89,306.36,444.08,308.02,444.26,309.68,444.5,310.22,444.74,310.77,445.25,311.17,445.76,311.58,446.54,311.86,447.31,312.13,448.36,312.26,449.41,312.4,450.73,312.4,455.14,312.4,455.14,315.97,452.79,315.87,450.65,315.8,448.5,315.72,446.55,315.67,444.6,315.62,442.86,315.6,441.11,315.57,439.57,315.57,438.35,315.57,436.64,315.6,434.93,315.62,432.73,315.67,430.53,315.72,427.83,315.8,425.14,315.87,421.95,315.97,421.95,312.4,426.2,312.4,427.42,312.4,428.39,312.27,429.36,312.14,430.08,311.87,430.8,311.6,431.28,311.21,431.75,310.81,431.98,310.28,432.21,309.75,432.38,308.08,432.55,306.42,432.66,303.63,432.77,300.84,432.83,296.91,432.88,292.99,432.88,287.93,432.88,260.69,432.88,256.3,432.82,252.88,432.75,249.45,432.62,247,432.49,244.54,432.3,243.05,432.1,241.56,431.84,241.03,431.57,240.51,431.02,240.12,430.46,239.72,429.61,239.46,428.75,239.2,427.6,239.07,426.46,238.94,425.01,238.94,421.95,238.94,421.95,235.37,424.59,235.47,426.91,235.54,429.23,235.62,431.24,235.67,433.25,235.72,434.95,235.74,436.65,235.77,438.04,235.77,438.97,235.77,440.11,235.75,441.25,235.73,442.6,235.7,443.94,235.66,445.49,235.61,447.04,235.55,448.8,235.48,450.84,235.41,452.59,235.36,454.35,235.31,455.81,235.27,457.28,235.24,458.46,235.22,459.63,235.2,460.53,235.2,462.98,235.2,465.13,235.33,467.28,235.46,469.14,235.72,471,235.98,472.56,236.36,474.13,236.75,475.39,237.27,476.66,237.78,477.78,238.42,478.89,239.05,479.85,239.79,480.82,240.54,481.63,241.4,482.44,242.27,483.1,243.24,483.76,244.22,484.25,245.29,484.74,246.37,485.07,247.53,485.4,248.7,485.57,249.97,485.73,251.23,485.73,252.59,485.73,254.59,485.37,256.47,485.01,258.34,484.29,260.11,483.57,261.87,482.5,263.52,481.42,265.16,479.98,266.69,478.54,268.22,476.78,269.51,475.02,270.8,472.94,271.85,470.85,272.89,468.44,273.7,466.03,274.51,463.3,275.07,463.301,275.073] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [498.7,275.64,498.7,270.98,499.45,266.78,500.2,262.57,501.7,258.82,503.21,255.07,505.46,251.77,507.71,248.47,510.72,245.62,513.72,242.77,517.22,240.64,520.73,238.5,524.73,237.08,528.73,235.66,533.24,234.95,537.74,234.23,542.74,234.23,547.64,234.23,552.02,234.9,556.39,235.56,560.23,236.88,564.07,238.2,567.39,240.18,570.7,242.16,573.49,244.8,576.27,247.44,578.36,250.51,580.45,253.59,581.84,257.1,583.23,260.6,583.93,264.55,584.63,268.49,584.63,272.86,584.63,277.58,583.82,281.91,583.01,286.24,581.39,290.18,579.78,294.12,577.36,297.68,574.93,301.24,571.7,304.41,568.47,307.58,564.82,309.96,561.17,312.34,557.09,313.93,553.02,315.51,548.52,316.31,544.03,317.1,539.11,317.1,536.04,317.1,533.18,316.79,530.31,316.48,527.66,315.85,525.01,315.23,522.58,314.3,520.14,313.36,517.91,312.12,515.69,310.87,513.7,309.34,511.71,307.8,509.95,305.99,508.19,304.17,506.67,302.06,505.15,299.95,503.86,297.56,502.57,295.17,501.6,292.6,500.64,290.03,499.99,287.29,499.35,284.55,499.02,281.64,498.7,278.73,498.7,275.64,498.701,275.64,510.2,271,510.2,274.2,510.47,277.19,510.75,280.18,511.3,282.97,511.85,285.75,512.67,288.33,513.49,290.91,514.59,293.28,515.69,295.65,516.98,297.73,518.26,299.8,519.73,301.58,521.2,303.36,522.86,304.84,524.51,306.32,526.36,307.5,528.2,308.68,530.17,309.57,532.15,310.46,534.25,311.05,536.36,311.64,538.59,311.93,540.83,312.23,543.19,312.23,545.39,312.23,547.45,311.98,549.51,311.73,551.43,311.22,553.35,310.72,555.13,309.97,556.91,309.21,558.56,308.21,560.2,307.2,561.67,305.95,563.14,304.7,564.43,303.2,565.73,301.69,566.84,299.95,567.96,298.2,568.9,296.2,569.85,294.2,570.55,291.99,571.26,289.78,571.73,287.35,572.2,284.92,572.44,282.28,572.67,279.63,572.67,276.77,572.67,273.77,572.41,270.99,572.15,268.2,571.63,265.64,571.11,263.07,570.33,260.72,569.55,258.37,568.51,256.24,567.47,254.11,566.23,252.24,565,250.37,563.57,248.77,562.14,247.17,560.52,245.83,558.9,244.49,557.08,243.41,555.27,242.34,553.29,241.53,551.31,240.72,549.16,240.18,547.01,239.64,544.7,239.38,542.39,239.11,539.91,239.11,537.64,239.11,535.53,239.34,533.41,239.58,531.46,240.06,529.5,240.53,527.7,241.24,525.9,241.95,524.26,242.9,522.62,243.85,521.15,245.02,519.68,246.19,518.39,247.58,517.1,248.97,515.99,250.58,514.88,252.2,513.94,254.03,513.01,255.87,512.3,257.84,511.6,259.82,511.13,261.94,510.67,264.06,510.43,266.32,510.2,268.59,510.2,271,510.199,270.995] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [79.06,104.58,79.06,120.41,79.06,121.43,79.08,122.54,79.1,123.65,79.13,124.85,79.17,126.05,79.22,127.33,79.27,128.62,79.34,130,79.43,131.93,79.51,133.42,79.59,134.92,79.66,135.99,79.73,137.06,79.79,137.69,79.85,138.33,79.91,138.53,79.97,138.74,80.1,138.95,80.23,139.15,80.43,139.36,80.64,139.57,80.92,139.78,81.2,140,81.55,140.21,81.91,140.42,82.37,140.58,82.83,140.74,83.41,140.85,83.98,140.95,84.67,141.01,85.35,141.06,86.14,141.06,89.99,141.06,89.99,144.63,88.15,144.53,86.34,144.45,84.54,144.38,82.76,144.33,80.98,144.28,79.24,144.26,77.49,144.23,75.78,144.23,74.12,144.23,72.11,144.26,70.09,144.28,67.72,144.33,65.35,144.38,62.62,144.45,59.89,144.53,56.8,144.63,56.8,141.06,60.31,141.06,61.8,141.06,62.98,140.93,64.17,140.81,65.04,140.56,65.92,140.31,66.49,139.93,67.07,139.55,67.34,139.05,67.61,138.55,67.81,137.14,68.01,135.74,68.14,133.43,68.28,131.13,68.35,127.92,68.41,124.72,68.41,120.61,68.41,86.46,68.41,82.75,68.34,79.84,68.28,76.93,68.14,74.82,68,72.72,67.79,71.41,67.58,70.11,67.31,69.61,67.03,69.1,66.5,68.73,65.97,68.35,65.18,68.1,64.39,67.85,63.34,67.72,62.3,67.59,60.99,67.59,56.8,67.59,56.8,64.03,59.14,64.13,61.39,64.2,63.65,64.27,65.82,64.32,68,64.37,70.09,64.4,72.18,64.42,74.19,64.42,76.22,64.42,78.22,64.4,80.22,64.37,82.19,64.32,84.17,64.27,86.12,64.2,88.07,64.13,89.99,64.03,89.99,67.59,87.56,67.59,86.24,67.59,85.18,67.65,84.11,67.7,83.3,67.81,82.48,67.91,81.92,68.07,81.36,68.23,81.05,68.45,80.73,68.66,80.48,68.94,80.23,69.22,80.04,69.57,79.85,69.91,79.72,70.33,79.59,70.74,79.52,71.23,79.4,72.01,79.32,73.34,79.23,74.68,79.18,76.57,79.12,78.47,79.09,80.92,79.06,83.37,79.06,86.38,79.06,99.31,81.58,99.41,84.45,99.49,87.31,99.56,90.52,99.61,93.73,99.66,97.28,99.69,100.83,99.71,104.72,99.71,108.02,99.71,111.01,99.69,114,99.66,116.69,99.61,119.37,99.56,121.74,99.49,124.12,99.41,126.19,99.31,126.19,88.25,126.19,85.82,126.15,83.59,126.1,81.36,126.02,79.33,125.93,77.29,125.81,75.45,125.68,73.61,125.51,71.97,125.45,71.38,125.33,70.88,125.2,70.38,125.01,69.97,124.82,69.55,124.56,69.21,124.3,68.87,123.98,68.62,123.65,68.36,123.16,68.17,122.66,67.98,122,67.85,121.33,67.72,120.5,67.66,119.66,67.6,118.66,67.6,114.58,67.6,114.58,64.03,116.74,64.13,118.85,64.2,120.96,64.28,123.02,64.33,125.07,64.37,127.07,64.4,129.06,64.42,131,64.42,133.1,64.42,135.24,64.4,137.37,64.37,139.56,64.33,141.74,64.28,143.96,64.2,146.18,64.13,148.45,64.03,148.45,67.6,144.14,67.6,143.05,67.6,142.16,67.66,141.26,67.72,140.57,67.84,139.87,67.96,139.37,68.14,138.87,68.32,138.56,68.56,138.26,68.8,138.01,69.14,137.77,69.48,137.59,69.93,137.4,70.37,137.28,70.91,137.15,71.45,137.09,72.1,137.03,72.74,136.98,74.08,136.93,75.42,136.9,77.45,136.87,79.47,136.85,82.19,136.84,84.91,136.84,88.33,136.84,119.65,136.84,124,136.9,127.38,136.96,130.77,137.08,133.19,137.21,135.62,137.39,137.08,137.58,138.55,137.83,139.05,138.07,139.55,138.59,139.93,139.1,140.31,139.87,140.56,140.65,140.81,141.69,140.93,142.73,141.06,144.03,141.06,148.45,141.06,148.45,144.63,146.49,144.53,144.51,144.45,142.52,144.38,140.5,144.33,138.49,144.28,136.44,144.26,134.39,144.23,132.3,144.23,129.92,144.23,127.63,144.26,125.33,144.28,123.11,144.33,120.9,144.38,118.76,144.45,116.63,144.53,114.57,144.63,114.57,141.06,118.48,141.06,119.56,141.06,120.44,141,121.33,140.94,122.02,140.81,122.72,140.69,123.22,140.5,123.72,140.32,124.03,140.07,124.35,139.82,124.6,139.46,124.85,139.11,125.04,138.64,125.23,138.18,125.36,137.6,125.49,137.03,125.56,136.35,125.72,134.89,125.84,133.1,125.95,131.3,126.03,129.17,126.11,127.05,126.15,124.59,126.19,122.13,126.19,119.33,126.19,104.58,124.19,104.48,121.92,104.41,119.64,104.33,117.1,104.28,114.55,104.24,111.72,104.21,108.9,104.19,105.79,104.19,101.38,104.19,97.5,104.21,93.62,104.24,90.28,104.28,86.93,104.33,84.13,104.41,81.33,104.48,79.06,104.58,79.062,104.582] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [227.65,104.75,228.52,103.45,229.63,101.66,230.75,99.87,232.11,97.61,233.48,95.34,235.1,92.59,236.72,89.83,238.58,86.6,251.56,64.03,260.33,64.03,260.33,65.44,258.61,67.39,256.69,69.82,254.76,72.26,252.65,75.18,250.53,78.11,248.22,81.53,245.91,84.95,243.4,88.87,240.89,92.78,238.89,96.05,236.88,99.32,235.38,101.94,233.88,104.56,232.88,106.54,231.89,108.52,231.39,109.85,231.22,110.32,231.09,111.15,230.97,111.98,230.88,113.17,230.8,114.37,230.75,115.92,230.71,117.48,230.71,119.41,230.71,121.96,230.74,124.26,230.77,126.55,230.84,128.58,230.9,130.61,231,132.37,231.09,134.13,231.22,135.63,231.31,136.44,231.42,137.08,231.54,137.73,231.68,138.21,231.83,138.7,232,139.02,232.18,139.34,232.38,139.51,232.59,139.67,233.05,139.82,233.52,139.97,234.24,140.11,234.97,140.24,235.96,140.37,236.94,140.5,238.19,140.61,242.49,141.06,242.49,144.63,240.02,144.53,237.83,144.45,235.63,144.38,233.7,144.33,231.77,144.28,230.11,144.26,228.45,144.23,227.06,144.23,208.79,144.63,208.79,141.06,213.63,141.06,214.84,141.06,215.81,140.94,216.77,140.81,217.5,140.57,218.23,140.32,218.71,139.95,219.19,139.58,219.43,139.08,219.68,138.59,219.86,137.22,220.04,135.86,220.16,133.63,220.28,131.39,220.34,128.29,220.4,125.19,220.4,121.22,220.4,120.06,220.39,118.85,220.37,117.63,220.33,116.37,220.3,115.1,220.24,113.79,220.19,112.47,220.12,111.1,218.29,107.75,216.54,104.62,214.78,101.5,213.1,98.6,211.41,95.7,209.8,93.03,208.18,90.35,206.64,87.91,205.1,85.46,203.67,83.34,202.25,81.23,200.95,79.44,199.64,77.65,198.46,76.19,197.28,74.73,196.22,73.6,195.64,72.97,195.09,72.46,194.55,71.94,194.04,71.53,193.54,71.12,193.07,70.82,192.6,70.51,192.17,70.31,191.74,70.12,191.16,69.97,190.58,69.82,189.85,69.72,189.13,69.62,188.25,69.57,187.38,69.52,186.36,69.52,186.36,65.95,186.94,65.84,187.8,65.67,188.66,65.5,189.8,65.28,190.94,65.05,192.36,64.77,193.78,64.48,195.48,64.14,199.96,63.24,200.61,63.48,201.19,63.75,201.78,64.02,202.31,64.33,202.83,64.63,203.29,64.97,203.75,65.3,204.15,65.67,204.85,66.34,205.75,67.43,206.65,68.53,207.73,70.05,208.81,71.57,210.08,73.52,211.35,75.47,212.81,77.85,213.93,79.68,215.42,82.27,216.9,84.86,218.76,88.23,220.62,91.59,222.84,95.72,225.06,99.85,227.65,104.75,227.653,104.752] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [322.94,70.2,322.85,72.24,322.77,74.35,322.7,76.45,322.65,78.63,322.6,80.8,322.57,83.04,322.55,85.28,322.55,87.59,322.55,119.93,322.55,124.19,322.61,127.52,322.68,130.84,322.8,133.23,322.93,135.61,323.12,137.06,323.31,138.51,323.57,139.02,323.82,139.53,324.37,139.91,324.91,140.29,325.75,140.55,326.59,140.8,327.71,140.93,328.84,141.06,330.25,141.06,334.16,141.06,334.16,144.63,331.65,144.53,329.41,144.45,327.17,144.38,325.2,144.33,323.22,144.28,321.51,144.26,319.8,144.23,318.36,144.23,317.08,144.23,315.32,144.26,313.55,144.28,311.29,144.33,309.03,144.38,306.28,144.45,303.53,144.53,300.29,144.63,300.29,141.06,305.39,141.06,306.28,141.06,307.01,141,307.75,140.95,308.32,140.84,308.89,140.73,309.31,140.57,309.72,140.4,309.98,140.18,310.23,139.96,310.44,139.63,310.65,139.3,310.81,138.85,310.97,138.4,311.09,137.85,311.21,137.29,311.28,136.61,311.35,135.94,311.42,134.58,311.5,133.21,311.58,131.15,311.65,129.1,311.74,126.35,311.82,123.6,311.9,120.16,311.9,89.91,311.73,78.19,311.7,76.36,311.59,74.89,311.48,73.42,311.29,72.3,311.09,71.18,310.81,70.41,310.54,69.65,310.17,69.24,309.81,68.83,309.19,68.52,308.57,68.21,307.69,68.01,306.81,67.8,305.67,67.7,304.52,67.6,303.12,67.6,300.29,67.6,300.29,64.03,302.06,64.1,304.07,64.15,306.07,64.2,308.32,64.24,310.56,64.27,313.04,64.29,315.53,64.31,318.25,64.31,319.85,64.31,321.53,64.29,323.22,64.27,325,64.23,326.78,64.18,328.64,64.12,330.51,64.06,332.46,63.97,333.75,63.91,334.88,63.87,336.02,63.83,336.99,63.8,337.97,63.77,338.79,63.76,339.61,63.74,340.28,63.74,343.7,63.74,346.66,64.05,349.62,64.37,352.12,64.99,354.61,65.61,356.63,66.55,358.66,67.48,360.22,68.73,361.76,69.97,362.92,71.44,364.07,72.9,364.85,74.59,365.62,76.27,366,78.18,366.39,80.08,366.39,82.21,366.39,83.75,366.17,85.26,365.94,86.78,365.5,88.26,365.05,89.74,364.38,91.2,363.71,92.65,362.82,94.07,361.93,95.5,360.85,96.78,359.77,98.06,358.51,99.21,357.25,100.35,355.8,101.35,354.35,102.36,352.71,103.22,351.08,104.08,349.39,104.73,347.7,105.38,345.95,105.81,344.21,106.24,342.4,106.46,340.6,106.68,338.75,106.68,337.9,106.68,336.94,106.61,335.99,106.54,334.93,106.41,333.86,106.27,332.7,106.07,331.53,105.87,330.25,105.6,329.12,101.35,330.37,101.66,331.51,101.9,332.65,102.13,333.69,102.29,334.74,102.44,335.67,102.52,336.61,102.6,337.45,102.6,339.4,102.6,341.15,102.3,342.91,102.01,344.46,101.41,346.01,100.82,347.36,99.94,348.7,99.05,349.85,97.87,351,96.69,351.86,95.29,352.72,93.89,353.29,92.27,353.87,90.65,354.15,88.81,354.44,86.98,354.44,84.93,354.44,82.94,354.13,81.18,353.83,79.41,353.21,77.87,352.6,76.32,351.68,74.99,350.76,73.66,349.54,72.55,348.31,71.44,346.79,70.6,345.27,69.77,343.44,69.22,341.62,68.66,339.5,68.38,337.38,68.1,334.96,68.1,333.58,68.1,332.14,68.24,330.71,68.37,329.2,68.63,327.7,68.89,326.14,69.28,324.57,69.68,322.94,70.2,322.945,70.201] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [428.32,106.11,428.32,120.01,428.38,128.01,428.38,129.88,428.39,131.5,428.4,133.12,428.42,134.49,428.44,135.86,428.47,136.98,428.5,138.1,428.55,138.96,430.62,139.12,432.76,139.23,434.91,139.35,437.13,139.43,439.35,139.51,441.64,139.55,443.93,139.59,446.3,139.59,447.89,139.59,449.35,139.55,450.81,139.51,452.14,139.44,453.48,139.37,454.68,139.27,455.89,139.16,456.97,139.02,457.66,138.93,458.38,138.8,459.09,138.66,459.83,138.48,460.57,138.3,461.33,138.06,462.09,137.83,462.87,137.55,463.22,136.3,463.58,134.9,463.94,133.5,464.3,131.94,464.66,130.38,465.02,128.67,465.39,126.95,465.76,125.08,469.5,125.08,469.11,128.2,468.83,130.79,468.54,133.38,468.35,135.45,468.16,137.53,468.06,139.08,467.97,140.64,467.97,141.67,468.08,144.23,466.45,144.37,464.84,144.48,463.22,144.58,461.62,144.65,460.02,144.73,458.44,144.76,456.85,144.8,455.28,144.8,446.39,144.63,442.71,144.53,439.51,144.45,436.32,144.38,433.61,144.33,430.91,144.28,428.69,144.25,426.48,144.23,424.75,144.23,423.09,144.23,421.16,144.25,419.23,144.28,417.03,144.33,414.83,144.38,412.36,144.45,409.88,144.53,407.14,144.63,407.14,141.06,408.89,141.06,410.12,141.06,411.13,141,412.13,140.94,412.91,140.82,413.68,140.7,414.23,140.52,414.77,140.34,415.09,140.09,415.41,139.85,415.68,139.45,415.94,139.05,416.16,138.48,416.37,137.91,416.53,137.19,416.69,136.46,416.79,135.56,416.9,134.67,416.98,133.24,417.06,131.81,417.11,129.84,417.16,127.88,417.19,125.37,417.22,122.86,417.22,119.82,417.22,88.72,417.22,86.81,417.19,85.07,417.17,83.33,417.12,81.77,417.08,80.21,417.01,78.81,416.94,77.42,416.85,76.2,416.76,74.99,416.66,74.02,416.57,73.04,416.47,72.32,416.37,71.59,416.26,71.11,416.16,70.63,416.06,70.4,415.95,70.17,415.82,69.96,415.69,69.75,415.54,69.57,415.39,69.39,415.21,69.24,415.04,69.08,414.84,68.95,414.64,68.83,414.24,68.71,413.83,68.59,413.22,68.47,412.61,68.36,411.8,68.25,410.99,68.15,409.97,68.05,405.61,67.6,405.61,64.03,411.72,64.03,417.73,64.23,418.99,64.28,420.09,64.31,421.2,64.35,422.16,64.37,423.11,64.4,423.92,64.41,424.72,64.42,425.37,64.42,447.12,64.09,457.43,64.03,458.75,64.01,460.07,64.03,461.4,64.05,462.73,64.1,464.06,64.15,465.4,64.23,466.73,64.31,468.08,64.42,467.54,66.11,467.12,68.04,466.71,69.98,466.41,72.16,466.11,74.35,465.93,76.79,465.76,79.23,465.7,81.93,461.85,81.93,461.85,80.37,461.81,78.94,461.77,77.52,461.69,76.22,461.62,74.92,461.5,73.76,461.38,72.59,461.23,71.56,459.56,70.94,457.69,70.47,455.83,70,453.78,69.69,451.72,69.38,449.48,69.22,447.24,69.07,444.8,69.07,442.86,69.07,440.87,69.11,438.89,69.15,436.86,69.24,434.82,69.32,432.75,69.45,430.67,69.58,428.54,69.75,428.56,71.08,428.56,72.41,428.56,73.73,428.54,75.06,428.53,76.39,428.5,77.72,428.47,79.05,428.43,80.38,428.32,89.08,428.32,100.56,429.72,100.66,431.04,100.74,432.36,100.81,433.6,100.86,434.84,100.91,436,100.93,437.15,100.96,438.23,100.96,441.6,100.96,444.24,100.9,446.88,100.84,448.79,100.72,450.69,100.61,451.87,100.43,453.05,100.26,453.5,100.02,453.94,99.79,454.28,99.31,454.61,98.83,454.83,98.1,455.06,97.38,455.17,96.41,455.28,95.43,455.28,94.22,455.28,90.53,459.13,90.53,459.03,92.67,458.96,94.6,458.88,96.52,458.83,98.22,458.78,99.93,458.76,101.42,458.74,102.91,458.74,104.18,458.74,105.53,458.76,107,458.78,108.46,458.83,110.05,458.88,111.63,458.96,113.34,459.03,115.05,459.13,116.87,455.28,116.87,455.28,113.59,455.28,112.23,455.15,111.13,455.01,110.04,454.75,109.21,454.48,108.37,454.08,107.81,453.69,107.24,453.16,106.93,452.62,106.63,451.42,106.4,450.22,106.17,448.35,106.02,446.47,105.87,443.93,105.79,441.39,105.71,438.17,105.71,436.98,105.71,435.77,105.74,434.56,105.76,433.33,105.81,432.1,105.86,430.85,105.94,429.59,106.01,428.32,106.11,428.319,106.111] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [552.95,103.73,554.34,105.73,555.89,107.89,557.45,110.05,559.17,112.37,560.89,114.69,562.78,117.18,564.66,119.66,566.72,122.31,577.59,136.41,578.31,137.32,578.91,138.03,579.52,138.74,580,139.26,580.48,139.78,580.84,140.1,581.2,140.42,581.44,140.55,581.68,140.68,581.93,140.77,582.17,140.87,582.42,140.93,582.67,141,582.92,141.03,583.17,141.06,583.42,141.06,584.9,141.06,584.9,144.63,583.72,144.53,582.62,144.45,581.52,144.38,580.49,144.33,579.47,144.28,578.51,144.26,577.56,144.23,576.68,144.23,575.88,144.23,575.05,144.26,574.22,144.28,573.37,144.33,572.52,144.38,571.65,144.45,570.78,144.53,569.89,144.63,549.84,117.55,548.43,115.68,546.98,113.84,545.53,111.99,544.03,110.16,542.53,108.34,540.98,106.53,539.43,104.72,537.83,102.94,538.39,101.01,539.21,101.08,539.93,101.14,540.64,101.19,541.25,101.23,541.86,101.26,542.37,101.28,542.87,101.3,543.26,101.3,545.63,101.3,547.74,100.99,549.85,100.69,551.7,100.08,553.55,99.47,555.14,98.56,556.74,97.64,558.08,96.43,559.42,95.21,560.42,93.79,561.42,92.36,562.09,90.73,562.76,89.11,563.1,87.27,563.43,85.44,563.43,83.4,563.43,81.57,563.15,79.95,562.86,78.32,562.3,76.89,561.73,75.47,560.88,74.24,560.03,73.01,558.9,71.99,557.77,70.96,556.38,70.19,555,69.42,553.36,68.91,551.73,68.39,549.84,68.14,547.95,67.88,545.81,67.88,544.33,67.88,542.84,68.02,541.35,68.16,539.85,68.43,538.36,68.71,536.86,69.12,535.36,69.54,533.86,70.09,533.69,72.34,533.57,74.67,533.44,77,533.35,79.41,533.27,81.81,533.23,84.3,533.18,86.78,533.18,89.35,533.18,116.7,533.18,121.7,533.24,125.59,533.3,129.47,533.42,132.25,533.54,135.02,533.73,136.68,533.91,138.33,534.15,138.88,534.39,139.42,534.9,139.83,535.41,140.24,536.19,140.51,536.97,140.79,538.01,140.92,539.06,141.06,540.38,141.06,544.79,141.06,544.79,144.63,542.44,144.53,540.3,144.45,538.15,144.38,536.2,144.33,534.25,144.28,532.51,144.26,530.76,144.23,529.22,144.23,528,144.23,526.29,144.26,524.58,144.28,522.38,144.33,520.18,144.38,517.48,144.45,514.79,144.53,511.6,144.63,511.6,141.06,515.85,141.06,517.07,141.06,518.04,140.93,519.01,140.79,519.73,140.53,520.45,140.26,520.93,139.87,521.4,139.47,521.63,138.94,521.86,138.41,522.02,136.74,522.19,135.08,522.31,132.29,522.42,129.49,522.48,125.57,522.53,121.65,522.53,116.59,522.53,89.35,522.53,84.96,522.47,81.53,522.4,78.11,522.27,75.65,522.14,73.2,521.95,71.71,521.75,70.22,521.49,69.69,521.23,69.17,520.67,68.78,520.11,68.38,519.26,68.12,518.4,67.86,517.25,67.73,516.11,67.6,514.66,67.6,511.6,67.6,511.6,64.03,514.24,64.13,516.56,64.2,518.88,64.28,520.89,64.33,522.9,64.37,524.6,64.4,526.3,64.42,527.69,64.42,528.62,64.42,529.76,64.41,530.9,64.39,532.25,64.35,533.59,64.32,535.14,64.26,536.7,64.21,538.45,64.14,540.49,64.07,542.24,64.02,544,63.96,545.46,63.93,546.93,63.89,548.11,63.88,549.28,63.86,550.18,63.86,552.63,63.86,554.78,63.99,556.93,64.12,558.79,64.37,560.65,64.63,562.21,65.02,563.78,65.41,565.04,65.93,566.31,66.44,567.43,67.07,568.54,67.71,569.51,68.45,570.47,69.2,571.28,70.06,572.09,70.92,572.75,71.9,573.41,72.88,573.9,73.95,574.39,75.02,574.72,76.19,575.05,77.36,575.22,78.62,575.38,79.89,575.38,81.25,575.38,83.24,575.02,85.12,574.66,87,573.94,88.77,573.23,90.53,572.15,92.18,571.07,93.82,569.63,95.35,568.2,96.88,566.43,98.17,564.67,99.46,562.59,100.5,560.5,101.55,558.09,102.36,555.68,103.17,552.95,103.73,552.951,103.732] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [259.36,171.7,259.57,172.28,259.72,172.82,259.88,173.35,259.99,173.84,260.09,174.32,260.15,174.75,260.2,175.17,260.2,175.55,260.2,176.37,260.07,177.17,259.95,177.97,259.7,178.76,259.46,179.54,259.08,180.32,258.71,181.09,258.22,181.85,257.72,182.6,257.12,183.29,256.52,183.97,255.82,184.58,255.11,185.19,254.3,185.73,253.49,186.26,252.58,186.73,251.66,187.19,250.71,187.54,249.75,187.88,248.76,188.12,247.78,188.35,246.75,188.46,245.72,188.58,244.66,188.58,242.94,188.54,242.34,188.99,241.84,189.38,241.35,189.77,240.97,190.1,240.59,190.43,240.32,190.71,240.05,190.98,239.89,191.2,239.73,191.42,239.61,191.64,239.49,191.85,239.41,192.07,239.33,192.28,239.29,192.49,239.25,192.71,239.25,192.92,239.25,193.26,239.34,193.57,239.43,193.88,239.61,194.16,239.79,194.43,240.05,194.67,240.32,194.9,240.68,195.1,241.03,195.3,241.58,195.45,242.12,195.6,242.85,195.7,243.58,195.8,244.49,195.85,245.4,195.91,246.5,195.91,246.92,195.91,247.43,195.9,247.95,195.89,248.55,195.87,249.16,195.86,249.85,195.84,250.55,195.81,251.33,195.78,252.46,195.73,253.43,195.69,254.4,195.65,255.22,195.63,256.03,195.6,256.69,195.59,257.35,195.58,257.85,195.58,258.58,195.58,259.22,195.63,259.85,195.69,260.41,195.81,260.96,195.93,261.43,196.1,261.9,196.28,262.28,196.51,262.67,196.74,263.03,197.07,263.38,197.39,263.71,197.79,264.04,198.2,264.34,198.7,264.65,199.19,264.92,199.78,265.2,200.36,265.4,200.98,265.61,201.6,265.75,202.26,265.88,202.91,265.95,203.61,266.02,204.31,266.02,205.04,266.02,206.07,265.87,207.07,265.71,208.08,265.4,209.06,265.09,210.04,264.62,211,264.15,211.97,263.53,212.91,262.91,213.85,262.14,214.69,261.38,215.54,260.47,216.29,259.57,217.05,258.52,217.71,257.47,218.37,256.28,218.94,255.09,219.51,253.81,219.93,252.53,220.36,251.16,220.64,249.79,220.93,248.34,221.07,246.88,221.21,245.33,221.21,243.44,221.21,241.78,221.01,240.11,220.8,238.66,220.39,237.2,219.98,235.97,219.37,234.74,218.75,233.72,217.93,232.7,217.11,231.94,216.2,231.18,215.28,230.67,214.28,230.16,213.27,229.91,212.16,229.66,211.06,229.66,209.86,229.66,209.12,229.79,208.37,229.92,207.62,230.19,206.87,230.45,206.12,230.85,205.37,231.25,204.61,231.78,203.85,232.73,203.4,233.61,202.95,234.48,202.5,235.28,202.05,236.08,201.6,236.81,201.14,237.54,200.68,238.18,200.23,237.43,199.98,236.82,199.74,236.2,199.51,235.72,199.28,235.24,199.06,234.89,198.84,234.54,198.62,234.32,198.42,234.11,198.21,233.95,197.98,233.79,197.75,233.68,197.48,233.57,197.22,233.52,196.93,233.46,196.64,233.46,196.32,233.46,195.94,233.52,195.56,233.57,195.17,233.68,194.8,233.78,194.42,233.94,194.04,234.1,193.66,234.31,193.29,234.43,193.06,234.64,192.81,234.85,192.56,235.15,192.28,235.45,192,235.84,191.7,236.24,191.39,236.72,191.06,240.27,188.54,239.17,188.27,238.23,187.94,237.28,187.6,236.49,187.21,235.7,186.82,235.06,186.38,234.42,185.93,233.94,185.43,233.3,184.75,232.82,183.97,232.34,183.2,232.02,182.34,231.7,181.47,231.54,180.51,231.38,179.55,231.38,178.49,231.38,177.57,231.5,176.68,231.62,175.8,231.85,174.95,232.09,174.11,232.45,173.31,232.81,172.51,233.28,171.74,233.76,170.98,234.35,170.3,234.93,169.62,235.63,169.02,236.33,168.42,237.15,167.9,237.96,167.38,238.88,166.94,240.06,166.38,241.23,165.96,242.39,165.54,243.53,165.26,244.67,164.98,245.78,164.84,246.9,164.7,248,164.7,248.7,164.7,249.35,164.75,250.01,164.79,250.62,164.89,251.23,164.98,251.8,165.11,252.37,165.25,252.89,165.43,253.42,165.62,253.95,165.86,254.48,166.11,255.02,166.42,255.56,166.73,256.1,167.11,256.65,167.48,257.19,167.92,260.27,167.92,261.46,167.92,262.52,167.9,263.58,167.88,264.5,167.84,265.43,167.8,266.22,167.74,267.01,167.68,267.67,167.59,268.07,168.37,267.8,168.77,267.54,169.17,267.28,169.58,267.04,170,266.79,170.41,266.57,170.84,266.34,171.26,266.13,171.7,259.36,171.7,259.356,171.697,243.82,200.81,243.17,200.81,242.62,200.85,242.07,200.88,241.63,200.96,241.19,201.03,240.85,201.14,240.51,201.25,240.27,201.4,239.5,201.89,238.88,202.34,238.27,202.79,237.8,203.19,237.33,203.59,237.02,203.94,236.7,204.29,236.54,204.59,236.26,205.07,236.06,205.61,235.85,206.15,235.72,206.75,235.58,207.35,235.51,208.01,235.44,208.67,235.44,209.4,235.44,210.4,235.63,211.31,235.81,212.22,236.18,213.05,236.55,213.88,237.11,214.61,237.66,215.35,238.4,216,239.14,216.65,240.03,217.14,240.91,217.63,241.94,217.96,242.97,218.28,244.14,218.45,245.32,218.61,246.63,218.61,247.65,218.61,248.6,218.51,249.55,218.42,250.44,218.23,251.34,218.04,252.17,217.76,253,217.48,253.76,217.1,254.53,216.73,255.21,216.28,255.89,215.84,256.49,215.32,257.09,214.8,257.6,214.22,258.11,213.63,258.53,212.98,258.96,212.32,259.28,211.65,259.6,210.99,259.81,210.31,260.02,209.63,260.13,208.95,260.24,208.26,260.24,207.56,260.24,206.97,260.16,206.41,260.09,205.85,259.94,205.32,259.79,204.8,259.57,204.32,259.34,203.83,259.05,203.38,258.75,202.93,258.42,202.56,258.1,202.19,257.74,201.9,257.39,201.61,257.01,201.4,256.62,201.2,256.21,201.07,256,201,255.66,200.95,255.31,200.91,254.83,200.87,254.35,200.84,253.74,200.83,253.12,200.81,252.37,200.81,243.82,200.81,243.816,200.811,253.83,177.49,253.83,176.34,253.68,175.3,253.53,174.27,253.24,173.34,252.94,172.42,252.5,171.61,252.06,170.8,251.48,170.1,250.89,169.4,250.23,168.87,249.56,168.35,248.82,168,248.09,167.65,247.27,167.48,246.46,167.3,245.57,167.3,244.69,167.3,243.89,167.45,243.1,167.59,242.39,167.87,241.68,168.16,241.06,168.59,240.43,169.01,239.9,169.58,239.36,170.15,238.96,170.83,238.55,171.51,238.29,172.3,238.02,173.09,237.88,173.99,237.75,174.89,237.75,175.91,237.75,177.13,237.89,178.22,238.04,179.31,238.33,180.27,238.62,181.23,239.06,182.05,239.5,182.88,240.08,183.57,240.66,184.27,241.32,184.79,241.98,185.31,242.71,185.65,243.44,186,244.25,186.17,245.05,186.35,245.94,186.35,246.82,186.35,247.61,186.2,248.41,186.05,249.12,185.76,249.84,185.47,250.47,185.03,251.1,184.6,251.64,184.01,252.19,183.43,252.6,182.73,253.01,182.03,253.28,181.21,253.55,180.4,253.69,179.47,253.83,178.53,253.83,177.49,253.826,177.486] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [277.37,182.57,277.42,184.38,277.67,185.96,277.93,187.55,278.39,188.92,278.85,190.29,279.52,191.44,280.19,192.59,281.07,193.52,281.94,194.46,282.96,195.16,283.97,195.86,285.13,196.32,286.28,196.79,287.57,197.02,288.86,197.26,290.28,197.26,290.92,197.26,291.56,197.21,292.2,197.15,292.83,197.05,293.47,196.94,294.1,196.78,294.73,196.63,295.36,196.42,295.99,196.2,296.62,195.94,297.25,195.68,297.88,195.36,298.5,195.05,299.13,194.68,299.75,194.31,300.37,193.89,301,194.44,299.82,197.52,299.06,197.95,298.29,198.34,297.52,198.72,296.74,199.05,295.95,199.38,295.16,199.66,294.37,199.93,293.56,200.15,292.76,200.37,291.94,200.54,291.12,200.7,290.29,200.81,289.46,200.92,288.62,200.98,287.78,201.03,286.93,201.03,285.07,201.03,283.4,200.74,281.72,200.44,280.22,199.85,278.72,199.27,277.4,198.38,276.08,197.5,274.94,196.33,273.8,195.15,272.94,193.76,272.09,192.38,271.52,190.78,270.95,189.19,270.66,187.38,270.38,185.58,270.38,183.56,270.38,182.02,270.54,180.59,270.7,179.15,271.02,177.82,271.34,176.49,271.82,175.26,272.3,174.03,272.94,172.91,273.36,172.16,273.96,171.45,274.56,170.73,275.34,170.05,276.12,169.36,277.08,168.7,278.03,168.04,279.17,167.41,280.3,166.78,281.42,166.31,282.54,165.83,283.65,165.52,284.75,165.2,285.84,165.04,286.92,164.89,288,164.89,289.62,164.89,291.07,165.12,292.52,165.36,293.8,165.84,295.09,166.31,296.2,167.03,297.32,167.74,298.27,168.69,299.21,169.65,299.92,170.79,300.64,171.93,301.11,173.26,301.58,174.6,301.82,176.12,302.06,177.64,302.06,179.35,301.98,181.51,301.38,181.66,300.79,181.78,300.2,181.9,299.63,182,299.05,182.09,298.49,182.16,297.93,182.24,297.38,182.28,296.4,182.36,295.23,182.41,294.06,182.46,292.71,182.5,291.35,182.54,289.8,182.56,288.25,182.58,286.52,182.58,277.37,182.58,277.374,182.574,277.45,179.83,278.87,179.89,280.36,179.94,281.85,179.99,283.42,180.02,284.98,180.05,286.62,180.07,288.26,180.08,289.97,180.08,290.66,180.08,291.33,180.07,292.01,180.05,292.67,180.02,293.34,179.99,293.99,179.94,294.64,179.89,295.28,179.83,295.28,177.78,295.28,176.97,295.2,176.19,295.12,175.4,294.96,174.64,294.8,173.87,294.56,173.13,294.32,172.38,294,171.66,293.8,171.21,293.52,170.8,293.24,170.39,292.89,170.02,292.54,169.64,292.11,169.31,291.68,168.97,291.18,168.68,290.68,168.38,290.13,168.15,289.59,167.93,289.01,167.78,288.43,167.63,287.81,167.56,287.19,167.49,286.53,167.49,285.5,167.49,284.58,167.67,283.66,167.86,282.84,168.24,282.02,168.61,281.3,169.17,280.59,169.74,279.97,170.49,279.36,171.24,278.9,172.2,278.43,173.16,278.12,174.33,277.8,175.49,277.63,176.87,277.47,178.24,277.45,179.83,277.447,179.827] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2] ), $.toNumberVector( [317.44,171.88,322.98,166.97,323.22,166.75,323.48,166.56,323.73,166.37,323.99,166.21,324.25,166.05,324.52,165.92,324.79,165.79,325.07,165.69,325.67,165.49,326.28,165.34,326.88,165.19,327.49,165.09,328.09,164.99,328.7,164.94,329.3,164.88,329.91,164.88,330.89,164.88,331.8,164.98,332.72,165.08,333.57,165.28,334.41,165.48,335.2,165.78,335.98,166.08,336.69,166.48,337.41,166.88,338.02,167.33,338.64,167.79,339.15,168.31,339.66,168.83,340.08,169.4,340.49,169.98,340.8,170.62,341.11,171.25,341.35,172.07,341.58,172.89,341.74,173.88,341.89,174.88,341.97,176.05,342.05,177.23,342.05,178.58,341.9,190.12,341.9,191.61,341.93,192.79,341.96,193.96,342.03,194.82,342.09,195.68,342.19,196.23,342.28,196.77,342.41,197,342.58,197.3,342.84,197.52,343.09,197.73,343.43,197.88,343.77,198.03,344.18,198.1,344.6,198.17,345.1,198.17,347.72,198.17,347.72,200.3,346.75,200.23,345.84,200.19,344.93,200.14,344.08,200.11,343.24,200.07,342.46,200.06,341.68,200.04,340.97,200.04,340.27,200.04,339.55,200.06,338.84,200.07,338.09,200.11,337.35,200.14,336.58,200.19,335.81,200.23,335.02,200.3,335.19,198.51,335.32,196.41,335.45,194.32,335.54,191.9,335.62,189.49,335.67,186.77,335.71,184.04,335.71,181,335.71,179.77,335.66,178.72,335.6,177.68,335.5,176.81,335.39,175.94,335.23,175.25,335.06,174.55,334.85,174.04,334.63,173.53,334.34,173.07,334.06,172.6,333.69,172.19,333.33,171.78,332.89,171.42,332.46,171.06,331.95,170.74,331.44,170.43,330.88,170.2,330.32,169.97,329.71,169.81,329.1,169.66,328.43,169.58,327.77,169.5,327.05,169.5,326.16,169.5,325.34,169.61,324.52,169.72,323.76,169.95,323.01,170.17,322.32,170.51,321.64,170.85,321.02,171.29,320.4,171.74,319.9,172.21,319.39,172.69,319.01,173.18,318.63,173.67,318.36,174.19,318.1,174.71,317.95,175.25,317.86,175.61,317.79,176.25,317.72,176.9,317.68,177.83,317.63,178.76,317.61,179.99,317.58,181.21,317.58,182.72,317.58,184.4,317.59,186.01,317.6,187.63,317.61,189.18,317.63,190.74,317.65,192.24,317.67,193.73,317.69,195.17,317.7,195.6,317.74,195.95,317.78,196.3,317.84,196.57,317.91,196.84,318,197.03,318.09,197.22,318.21,197.33,318.44,197.54,318.75,197.7,319.05,197.86,319.43,197.96,319.8,198.07,320.26,198.12,320.71,198.17,321.23,198.17,323.85,198.17,323.85,200.3,322.3,200.23,320.9,200.19,319.51,200.14,318.28,200.1,317.05,200.07,315.97,200.06,314.89,200.04,313.98,200.04,313,200.04,311.96,200.06,310.93,200.07,309.82,200.1,308.71,200.14,307.54,200.19,306.37,200.23,305.13,200.3,305.13,198.17,307.77,198.17,308.45,198.17,308.98,198.09,309.52,198.02,309.92,197.86,310.31,197.7,310.57,197.46,310.82,197.23,310.94,196.91,311.05,196.6,311.14,195.49,311.22,194.38,311.28,192.48,311.34,190.58,311.37,187.89,311.4,185.2,311.4,181.71,311.4,180.15,311.39,178.76,311.38,177.36,311.36,176.14,311.34,174.91,311.31,173.86,311.29,172.8,311.25,171.91,311.23,171.62,311.18,171.37,311.14,171.13,311.07,170.93,310.99,170.72,310.89,170.57,310.79,170.41,310.66,170.3,310.53,170.19,310.29,170.11,310.04,170.03,309.68,169.97,309.32,169.92,308.84,169.89,308.37,169.86,307.77,169.86,305.13,169.86,305.13,167.74,305.92,167.65,306.66,167.54,307.41,167.43,308.11,167.31,308.81,167.19,309.47,167.05,310.14,166.91,310.76,166.75,311.38,166.6,312.04,166.4,312.7,166.2,313.39,165.96,314.09,165.73,314.83,165.45,315.57,165.17,316.34,164.85,316.42,164.81,316.5,164.78,316.58,164.76,316.66,164.74,316.74,164.72,316.81,164.71,316.89,164.7,316.96,164.7,317.11,164.7,317.22,164.75,317.33,164.81,317.4,164.91,317.47,165.02,317.51,165.18,317.55,165.33,317.55,165.54,317.51,166.94,317.44,171.88,317.437,171.88] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [361.75,173.2,362.12,172.85,362.5,172.45,362.88,172.04,363.28,171.59,363.68,171.13,364.1,170.62,364.51,170.1,364.94,169.53,365.46,168.87,365.95,168.3,366.45,167.74,366.92,167.28,367.4,166.83,367.86,166.47,368.32,166.12,368.76,165.87,369.2,165.63,369.65,165.44,370.1,165.26,370.57,165.13,371.03,165.01,371.51,164.95,371.98,164.88,372.47,164.88,372.97,164.88,373.42,164.91,373.86,164.94,374.25,165,374.63,165.06,374.96,165.15,375.29,165.24,375.55,165.36,375.68,165.42,375.78,165.49,375.87,165.56,375.94,165.64,376,165.73,376.03,165.84,376.07,165.94,376.07,166.06,376.03,166.42,375.89,167.16,375.77,168.06,375.66,168.95,375.57,169.98,375.49,171.02,375.44,172.21,375.39,173.4,375.37,174.74,373.72,174.74,373.51,174.27,373.28,173.87,373.06,173.47,372.81,173.14,372.56,172.81,372.29,172.55,372.02,172.29,371.74,172.1,371.45,171.91,371.13,171.76,370.81,171.62,370.47,171.52,370.13,171.43,369.75,171.38,369.38,171.33,368.98,171.33,368.44,171.33,367.92,171.42,367.4,171.51,366.9,171.7,366.4,171.88,365.92,172.15,365.44,172.43,364.98,172.79,364.52,173.16,364.14,173.6,363.75,174.04,363.44,174.55,363.13,175.06,362.9,175.65,362.67,176.23,362.52,176.89,362.36,177.55,362.24,178.52,362.13,179.5,362.05,180.79,361.97,182.09,361.93,183.7,361.9,185.31,361.9,187.24,361.9,188.51,361.92,189.68,361.95,190.85,362,191.92,362.05,192.99,362.12,193.96,362.2,194.93,362.3,195.8,362.33,196.12,362.4,196.38,362.46,196.64,362.55,196.84,362.65,197.04,362.76,197.18,362.88,197.32,363.03,197.4,363.38,197.6,363.81,197.74,364.24,197.88,364.75,197.98,365.26,198.08,365.86,198.12,366.45,198.17,367.13,198.17,369.33,198.17,369.33,200.3,367.93,200.23,366.56,200.19,365.2,200.14,363.87,200.1,362.55,200.07,361.25,200.06,359.96,200.04,358.71,200.04,357.49,200.04,356.28,200.06,355.07,200.07,353.87,200.1,352.66,200.14,351.46,200.19,350.27,200.23,349.08,200.3,349.08,198.17,352.59,197.88,353.06,197.84,353.44,197.78,353.82,197.72,354.12,197.63,354.41,197.55,354.62,197.43,354.83,197.32,354.96,197.18,355.08,197.05,355.18,196.76,355.28,196.47,355.36,196.02,355.44,195.58,355.5,194.98,355.56,194.38,355.6,193.63,355.66,192.31,355.71,190.87,355.76,189.43,355.79,187.86,355.82,186.3,355.84,184.61,355.85,182.92,355.85,181.11,355.85,178.9,355.81,177.15,355.77,175.4,355.68,174.1,355.59,172.81,355.46,171.97,355.33,171.13,355.16,170.74,355.04,170.5,354.79,170.31,354.54,170.13,354.17,170,353.79,169.88,353.29,169.82,352.79,169.76,352.16,169.76,349.08,169.76,349.08,167.63,349.97,167.53,350.81,167.42,351.65,167.3,352.44,167.17,353.23,167.04,353.97,166.89,354.72,166.75,355.41,166.59,356.11,166.43,356.77,166.25,357.42,166.06,358.04,165.86,358.66,165.66,359.24,165.43,359.82,165.21,360.36,164.96,360.49,164.9,360.6,164.85,360.72,164.8,360.82,164.77,360.93,164.74,361.02,164.72,361.12,164.7,361.2,164.7,361.3,164.7,361.39,164.72,361.47,164.73,361.54,164.76,361.61,164.79,361.66,164.83,361.71,164.87,361.75,164.92,361.79,164.98,361.81,165.07,361.84,165.16,361.86,165.28,361.88,165.41,361.89,165.57,361.9,165.72,361.9,165.92,361.75,173.2,361.748,173.196] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [386.58,182.57,386.62,184.38,386.88,185.96,387.13,187.55,387.59,188.92,388.05,190.29,388.72,191.44,389.39,192.59,390.27,193.52,391.15,194.46,392.16,195.16,393.18,195.86,394.33,196.32,395.48,196.79,396.77,197.02,398.06,197.26,399.48,197.26,400.12,197.26,400.76,197.21,401.4,197.15,402.03,197.05,402.67,196.94,403.3,196.78,403.94,196.63,404.57,196.42,405.2,196.2,405.83,195.94,406.45,195.68,407.08,195.36,407.71,195.05,408.33,194.68,408.95,194.31,409.58,193.89,410.2,194.44,409.03,197.52,408.27,197.95,407.49,198.34,406.72,198.72,405.94,199.05,405.16,199.38,404.36,199.66,403.57,199.93,402.76,200.15,401.96,200.37,401.14,200.54,400.32,200.7,399.49,200.81,398.67,200.92,397.83,200.98,396.99,201.03,396.14,201.03,394.28,201.03,392.6,200.74,390.92,200.44,389.42,199.85,387.92,199.27,386.6,198.38,385.28,197.5,384.14,196.33,383,195.15,382.15,193.76,381.29,192.38,380.72,190.78,380.15,189.19,379.87,187.38,379.58,185.58,379.58,183.56,379.58,182.02,379.74,180.59,379.9,179.15,380.22,177.82,380.54,176.49,381.02,175.26,381.5,174.03,382.15,172.91,382.57,172.16,383.17,171.45,383.77,170.73,384.54,170.05,385.32,169.36,386.28,168.7,387.24,168.04,388.37,167.41,389.51,166.78,390.63,166.31,391.74,165.83,392.85,165.52,393.95,165.2,395.04,165.04,396.13,164.89,397.2,164.89,398.82,164.89,400.27,165.12,401.72,165.36,403.01,165.84,404.29,166.31,405.41,167.03,406.52,167.74,407.47,168.69,408.42,169.65,409.13,170.79,409.84,171.93,410.31,173.26,410.78,174.6,411.02,176.12,411.26,177.64,411.26,179.35,411.19,181.51,410.58,181.66,409.99,181.78,409.4,181.9,408.83,182,408.25,182.09,407.69,182.16,407.13,182.24,406.58,182.28,405.6,182.36,404.43,182.41,403.26,182.46,401.91,182.5,400.55,182.54,399,182.56,397.46,182.58,395.72,182.58,386.58,182.58,386.578,182.574,386.65,179.83,388.07,179.89,389.56,179.94,391.05,179.99,392.62,180.02,394.19,180.05,395.82,180.07,397.46,180.08,399.17,180.08,399.86,180.08,400.54,180.07,401.21,180.05,401.88,180.02,402.54,179.99,403.19,179.94,403.84,179.89,404.48,179.83,404.48,177.78,404.48,176.97,404.4,176.19,404.32,175.4,404.16,174.64,404,173.87,403.76,173.13,403.52,172.38,403.2,171.66,403,171.21,402.72,170.8,402.45,170.39,402.1,170.02,401.74,169.64,401.32,169.31,400.89,168.97,400.38,168.68,399.88,168.38,399.34,168.15,398.8,167.93,398.21,167.78,397.63,167.63,397.01,167.56,396.39,167.49,395.73,167.49,394.71,167.49,393.79,167.67,392.86,167.86,392.04,168.24,391.22,168.61,390.51,169.17,389.79,169.74,389.18,170.49,388.56,171.24,388.1,172.2,387.63,173.16,387.32,174.33,387,175.49,386.84,176.87,386.67,178.24,386.65,179.83,386.65,179.827] ) );
        shape.graphics.endFill();
        
        return shape;
      },
      
      "Beatmania IIDX" : function()
      {
        var shape = Shape();
        
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,2,2] ), $.toNumberVector( [188.68,297.42,190.07,297.49,191.44,297.54,192.81,297.59,194.16,297.63,195.51,297.66,196.85,297.68,198.18,297.7,199.5,297.7,202.16,297.7,204.53,297.66,206.9,297.63,208.98,297.56,211.07,297.49,212.86,297.38,214.65,297.28,216.15,297.13,217.2,297.02,218.26,296.86,219.33,296.7,220.41,296.5,221.49,296.29,222.6,296.04,223.7,295.79,224.81,295.49,228.21,282.18,231.89,282.18,231.54,284.86,231.23,287.44,230.91,290.03,230.63,292.53,230.36,295.03,230.12,297.44,229.88,299.85,229.69,302.17,228.41,302.39,226.9,302.55,225.4,302.7,223.65,302.81,221.91,302.92,219.94,302.97,217.96,303.02,215.75,303.02,188.79,302.57,187.43,302.57,185.69,302.61,183.96,302.65,181.84,302.73,179.72,302.8,177.23,302.92,174.73,303.04,171.85,303.19,171.85,300.19,172.99,299.7,173.89,299.18,174.79,298.67,175.46,298.14,176.13,297.61,176.57,297.06,177,296.51,177.21,295.94,177.41,295.38,177.57,293.97,177.72,292.57,177.82,290.32,177.93,288.08,177.98,284.99,178.03,281.91,178.03,277.99,178.03,246.84,178.03,242.59,177.98,239.28,177.93,235.97,177.82,233.6,177.72,231.24,177.57,229.81,177.41,228.38,177.21,227.89,177,227.4,176.61,227.04,176.22,226.67,175.64,226.43,175.07,226.18,174.3,226.06,173.54,225.94,172.59,225.94,166.42,225.94,166.42,222.37,169.79,222.47,172.59,222.54,175.4,222.62,177.63,222.67,179.87,222.72,181.54,222.74,183.21,222.77,184.32,222.77,185.79,222.77,187.52,222.74,189.26,222.72,191.25,222.67,193.25,222.62,195.51,222.54,197.77,222.47,200.29,222.37,200.29,225.94,193.27,225.94,192.52,225.94,191.9,226.05,191.29,226.15,190.82,226.37,190.34,226.59,190.01,226.91,189.67,227.23,189.47,227.67,189.27,228.1,189.12,229.21,188.98,230.32,188.88,232.12,188.78,233.91,188.73,236.39,188.68,238.87,188.68,242.02,188.68,278.1,188.85,294.08,188.68,297.42,188.679,297.417] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [255.85,247.97,257.21,248.82,257.11,249.88,257.03,251,256.95,252.11,256.89,253.28,256.82,254.45,256.78,255.67,256.73,256.89,256.7,258.17,256.6,262.3,256.53,265.89,256.46,269.49,256.41,272.54,256.36,275.59,256.33,278.1,256.31,280.61,256.31,282.58,256.31,284.42,256.34,286.13,256.37,287.83,256.43,289.4,256.5,290.98,256.59,292.41,256.69,293.85,256.82,295.15,256.87,295.66,256.97,296.09,257.06,296.53,257.2,296.88,257.33,297.23,257.51,297.51,257.68,297.79,257.89,297.98,258.11,298.18,258.47,298.36,258.83,298.53,259.34,298.68,259.85,298.83,260.51,298.95,261.16,299.07,261.97,299.17,265.82,299.68,265.82,302.97,263.76,302.87,261.78,302.79,259.8,302.72,257.92,302.67,256.04,302.62,254.25,302.6,252.46,302.57,250.76,302.57,249.09,302.57,247.41,302.6,245.73,302.62,244.05,302.67,242.36,302.72,240.67,302.79,238.98,302.87,237.28,302.97,237.28,299.68,242.15,299.17,242.86,299.12,243.43,299.02,244,298.93,244.43,298.8,244.87,298.66,245.17,298.5,245.47,298.33,245.63,298.12,245.79,297.92,245.93,297.47,246.06,297.02,246.16,296.34,246.26,295.65,246.34,294.73,246.41,293.8,246.45,292.64,246.52,290.84,246.58,288.69,246.63,286.55,246.66,284.07,246.7,281.58,246.72,278.76,246.73,275.93,246.73,272.76,246.73,270.56,246.72,268.62,246.7,266.67,246.66,264.97,246.63,263.27,246.58,261.83,246.52,260.39,246.45,259.19,246.42,258.75,246.35,258.38,246.27,258,246.15,257.69,246.02,257.38,245.85,257.13,245.68,256.88,245.46,256.69,245.24,256.51,244.89,256.37,244.53,256.23,244.04,256.14,243.55,256.05,242.92,256,242.29,255.96,241.52,255.96,237.28,255.96,237.28,252.67,239,252.42,240.5,252.18,242,251.94,243.27,251.71,244.54,251.48,245.59,251.26,246.63,251.04,247.44,250.83,248.26,250.62,249.19,250.33,250.12,250.05,251.17,249.69,252.23,249.33,253.4,248.9,254.57,248.47,255.85,247.97,255.854,247.97,251.32,222.88,251.97,222.88,252.58,223,253.18,223.12,253.74,223.35,254.3,223.59,254.82,223.95,255.33,224.3,255.8,224.77,256.27,225.25,256.62,225.77,256.97,226.29,257.2,226.86,257.43,227.43,257.55,228.05,257.67,228.67,257.67,229.33,257.67,230,257.55,230.62,257.43,231.23,257.2,231.8,256.97,232.37,256.62,232.88,256.27,233.4,255.8,233.87,255.33,234.33,254.82,234.68,254.3,235.03,253.74,235.27,253.19,235.5,252.58,235.62,251.97,235.73,251.32,235.73,250.66,235.73,250.04,235.62,249.43,235.5,248.86,235.27,248.29,235.03,247.78,234.68,247.26,234.33,246.79,233.87,246.32,233.4,245.97,232.88,245.62,232.37,245.39,231.8,245.16,231.23,245.04,230.62,244.92,230,244.92,229.33,244.92,228.67,245.04,228.05,245.16,227.43,245.39,226.86,245.62,226.29,245.97,225.77,246.32,225.25,246.79,224.77,247.26,224.3,247.78,223.95,248.29,223.59,248.86,223.35,249.43,223.12,250.04,223,250.66,222.88,251.32,222.88,251.323,222.878] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2] ), $.toNumberVector( [288.59,259.01,297.16,251.42,297.54,251.09,297.93,250.79,298.33,250.5,298.73,250.25,299.14,250,299.55,249.8,299.97,249.6,300.39,249.44,301.33,249.13,302.26,248.9,303.2,248.66,304.14,248.51,305.07,248.35,306.01,248.27,306.94,248.2,307.88,248.2,309.4,248.2,310.81,248.35,312.23,248.5,313.54,248.81,314.85,249.12,316.06,249.58,317.27,250.04,318.37,250.66,319.48,251.28,320.43,251.99,321.38,252.69,322.17,253.49,322.97,254.29,323.61,255.19,324.25,256.08,324.73,257.06,325.21,258.05,325.57,259.31,325.93,260.57,326.17,262.11,326.41,263.65,326.54,265.47,326.66,267.28,326.66,269.38,326.43,287.22,326.43,289.53,326.48,291.35,326.53,293.17,326.63,294.5,326.72,295.83,326.87,296.67,327.02,297.52,327.22,297.87,327.48,298.32,327.88,298.66,328.27,299,328.79,299.23,329.31,299.46,329.96,299.57,330.61,299.68,331.38,299.68,335.44,299.68,335.44,302.97,333.92,302.87,332.52,302.79,331.11,302.72,329.8,302.67,328.5,302.62,327.29,302.6,326.09,302.57,324.99,302.57,323.91,302.57,322.8,302.6,321.69,302.62,320.54,302.67,319.39,302.72,318.2,302.79,317.01,302.87,315.78,302.97,316.05,300.21,316.25,296.96,316.45,293.71,316.59,289.98,316.72,286.25,316.79,282.04,316.86,277.82,316.86,273.12,316.86,271.22,316.77,269.6,316.69,267.98,316.52,266.63,316.36,265.29,316.11,264.22,315.86,263.15,315.52,262.36,315.19,261.56,314.74,260.85,314.3,260.13,313.74,259.5,313.18,258.86,312.5,258.3,311.83,257.74,311.04,257.26,310.25,256.78,309.39,256.42,308.52,256.05,307.57,255.81,306.62,255.57,305.6,255.45,304.57,255.33,303.46,255.33,302.09,255.33,300.82,255.51,299.54,255.68,298.38,256.03,297.21,256.37,296.15,256.89,295.08,257.41,294.13,258.11,293.17,258.8,292.39,259.53,291.62,260.26,291.03,261.02,290.43,261.79,290.02,262.59,289.61,263.39,289.39,264.22,289.25,264.78,289.14,265.77,289.03,266.77,288.96,268.22,288.89,269.66,288.86,271.55,288.82,273.44,288.82,275.78,288.82,278.37,288.83,280.87,288.84,283.37,288.86,285.78,288.89,288.18,288.92,290.5,288.95,292.81,288.99,295.04,289.01,295.7,289.06,296.24,289.12,296.79,289.22,297.2,289.32,297.62,289.46,297.92,289.6,298.21,289.79,298.38,290.15,298.7,290.62,298.95,291.09,299.19,291.67,299.36,292.25,299.52,292.95,299.6,293.65,299.68,294.46,299.68,298.51,299.68,298.51,302.97,296.11,302.87,293.96,302.79,291.8,302.72,289.89,302.67,287.99,302.62,286.32,302.6,284.66,302.57,283.24,302.57,281.73,302.57,280.13,302.6,278.52,302.62,276.81,302.67,275.1,302.72,273.29,302.79,271.48,302.87,269.56,302.97,269.56,299.68,273.64,299.68,274.69,299.68,275.52,299.56,276.35,299.44,276.96,299.19,277.57,298.95,277.97,298.58,278.36,298.22,278.54,297.73,278.72,297.24,278.85,295.53,278.98,293.82,279.07,290.88,279.16,287.94,279.2,283.78,279.25,279.61,279.25,274.23,279.25,271.81,279.23,269.65,279.22,267.5,279.19,265.6,279.16,263.71,279.12,262.07,279.08,260.44,279.02,259.07,278.99,258.61,278.92,258.23,278.85,257.85,278.74,257.54,278.62,257.23,278.47,256.99,278.31,256.75,278.11,256.58,277.92,256.41,277.54,256.28,277.16,256.15,276.6,256.07,276.04,255.98,275.3,255.94,274.56,255.9,273.64,255.9,269.56,255.9,269.56,252.61,270.77,252.47,271.93,252.31,273.08,252.14,274.16,251.95,275.25,251.76,276.27,251.54,277.3,251.33,278.26,251.08,279.22,250.84,280.24,250.54,281.26,250.24,282.34,249.87,283.42,249.5,284.56,249.07,285.7,248.64,286.9,248.14,287.03,248.08,287.15,248.04,287.27,248,287.39,247.97,287.51,247.94,287.63,247.93,287.75,247.91,287.86,247.91,288.08,247.91,288.25,247.99,288.42,248.08,288.54,248.24,288.65,248.4,288.71,248.65,288.76,248.89,288.76,249.22,288.71,251.37,288.59,259.01,288.593,259.015] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [381.54,294.93,383.07,296.28,380.75,299.91,379.78,300.43,378.81,300.89,377.83,301.35,376.84,301.74,375.85,302.14,374.84,302.46,373.84,302.79,372.82,303.05,371.8,303.32,370.77,303.51,369.74,303.71,368.7,303.84,367.66,303.97,366.6,304.04,365.55,304.1,364.49,304.1,362.41,304.1,360.49,303.9,358.56,303.7,356.79,303.31,355.03,302.91,353.42,302.32,351.81,301.72,350.36,300.93,348.91,300.14,347.62,299.17,346.33,298.2,345.21,297.05,344.09,295.9,343.13,294.58,342.17,293.25,341.38,291.75,340.59,290.25,339.99,288.61,339.4,286.97,339,285.18,338.61,283.4,338.41,281.47,338.21,279.55,338.21,277.48,338.21,275.65,338.36,273.95,338.51,272.24,338.82,270.65,339.12,269.06,339.58,267.59,340.04,266.12,340.64,264.76,341.25,263.41,341.98,262.21,342.72,261,343.57,259.94,344.42,258.88,345.4,257.97,346.37,257.06,347.47,256.3,348.57,255.53,349.8,254.77,351.03,254.02,352.4,253.27,353.77,252.52,355.28,251.77,356.79,251.03,358.43,250.29,359.59,249.77,360.82,249.38,362.05,248.98,363.34,248.72,364.64,248.46,366,248.33,367.36,248.2,368.79,248.2,369.89,248.2,370.9,248.24,371.91,248.28,372.85,248.37,373.79,248.46,374.65,248.6,375.51,248.73,376.3,248.91,377.09,249.08,377.9,249.33,378.72,249.58,379.56,249.89,380.41,250.21,381.29,250.59,382.16,250.98,383.07,251.43,382.71,253.31,382.44,255.18,382.17,257.06,381.98,258.93,381.79,260.81,381.68,262.68,381.57,264.56,381.54,266.43,377.97,266.43,377.97,263.6,377.97,262.7,377.91,261.92,377.84,261.15,377.71,260.51,377.58,259.87,377.38,259.36,377.19,258.85,376.92,258.48,376.66,258.1,376.23,257.73,375.8,257.35,375.2,256.98,374.61,256.61,373.84,256.24,373.07,255.87,372.14,255.5,371.2,255.13,370.23,254.86,369.25,254.58,368.23,254.4,367.21,254.21,366.15,254.12,365.09,254.03,363.98,254.03,362.07,254.03,360.38,254.32,358.69,254.61,357.21,255.2,355.74,255.78,354.49,256.65,353.23,257.53,352.2,258.7,351.17,259.86,350.39,261.32,349.62,262.77,349.1,264.52,348.58,266.26,348.32,268.29,348.07,270.32,348.07,272.64,348.07,275.62,348.45,278.31,348.83,281,349.6,283.39,350.36,285.78,351.51,287.87,352.65,289.96,354.18,291.76,355.56,293.39,357.13,294.61,358.7,295.83,360.47,296.64,362.24,297.45,364.21,297.86,366.18,298.26,368.34,298.26,369.19,298.26,370.04,298.21,370.88,298.16,371.71,298.05,372.55,297.95,373.38,297.79,374.21,297.63,375.03,297.41,375.85,297.2,376.67,296.94,377.48,296.68,378.3,296.37,379.11,296.06,379.92,295.7,380.73,295.34,381.54,294.93,381.54,294.925] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2] ), $.toNumberVector( [409.75,218.86,409.51,223,409.33,226.96,409.14,230.91,409.02,234.66,408.9,238.41,408.84,241.97,408.78,245.52,408.78,248.88,408.78,277.99,408.78,282.32,408.83,285.72,408.88,289.11,408.97,291.57,409.06,294.03,409.2,295.54,409.34,297.06,409.52,297.64,409.62,297.94,409.9,298.18,410.19,298.43,410.65,298.62,411.12,298.81,411.77,298.95,412.42,299.09,413.26,299.17,418.07,299.68,418.07,302.97,416.53,302.87,415.01,302.79,413.5,302.72,412.03,302.67,410.55,302.62,409.11,302.6,407.67,302.57,406.27,302.57,404.71,302.57,402.9,302.6,401.1,302.62,399.06,302.67,397.02,302.72,394.73,302.79,392.45,302.87,389.92,302.97,389.92,299.68,394.79,299.29,395.6,299.22,396.23,299.08,396.87,298.94,397.33,298.73,397.79,298.53,398.07,298.26,398.36,297.98,398.47,297.64,398.66,297.09,398.8,295.56,398.93,294.02,399.03,291.51,399.12,289,399.16,285.5,399.21,282.01,399.21,277.54,399.21,248.59,399.15,237.72,398.98,230.3,398.98,229.6,398.94,229.05,398.91,228.49,398.83,228.06,398.75,227.64,398.63,227.35,398.52,227.06,398.36,226.9,398.13,226.67,397.78,226.5,397.43,226.33,396.96,226.22,396.48,226.11,395.89,226.05,395.29,225.99,394.56,225.99,389.92,225.99,389.92,222.6,392.87,222.33,395.53,221.92,398.18,221.51,400.54,220.95,402.9,220.4,404.96,219.71,407.02,219.01,408.78,218.18,409.75,218.86,409.747,218.856] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [434.95,275.55,435.02,278.34,435.41,280.8,435.81,283.25,436.52,285.37,437.24,287.48,438.27,289.26,439.31,291.05,440.66,292.49,442.02,293.93,443.59,295.02,445.16,296.1,446.94,296.82,448.72,297.55,450.72,297.91,452.71,298.27,454.92,298.27,455.91,298.27,456.89,298.19,457.88,298.1,458.86,297.94,459.84,297.78,460.82,297.53,461.8,297.29,462.77,296.96,463.75,296.64,464.72,296.23,465.69,295.82,466.66,295.34,467.63,294.85,468.6,294.28,469.56,293.71,470.52,293.06,471.49,293.91,469.67,298.66,468.5,299.34,467.3,299.94,466.11,300.53,464.9,301.04,463.69,301.55,462.46,301.98,461.23,302.4,459.99,302.74,458.74,303.08,457.48,303.34,456.21,303.59,454.93,303.76,453.65,303.93,452.35,304.02,451.05,304.1,449.73,304.1,446.86,304.1,444.26,303.65,441.67,303.19,439.35,302.28,437.03,301.37,434.99,300.01,432.95,298.64,431.18,296.82,429.42,295,428.1,292.86,426.78,290.72,425.9,288.25,425.01,285.78,424.57,282.99,424.13,280.2,424.13,277.08,424.13,274.7,424.38,272.49,424.63,270.27,425.12,268.21,425.62,266.15,426.36,264.24,427.11,262.34,428.1,260.6,428.75,259.45,429.68,258.35,430.6,257.25,431.81,256.18,433.01,255.12,434.49,254.1,435.97,253.08,437.73,252.11,439.48,251.13,441.21,250.4,442.94,249.66,444.65,249.18,446.36,248.69,448.04,248.44,449.72,248.2,451.38,248.2,453.88,248.2,456.13,248.57,458.37,248.93,460.36,249.67,462.35,250.41,464.07,251.51,465.8,252.62,467.26,254.09,468.73,255.56,469.83,257.33,470.93,259.1,471.66,261.16,472.39,263.22,472.76,265.57,473.13,267.92,473.13,270.57,473.01,273.91,472.08,274.14,471.17,274.33,470.26,274.51,469.36,274.66,468.47,274.81,467.6,274.92,466.74,275.03,465.89,275.1,464.37,275.22,462.57,275.3,460.76,275.39,458.66,275.44,456.56,275.5,454.17,275.53,451.78,275.55,449.09,275.55,434.95,275.55,434.952,275.554,435.06,271.31,437.26,271.41,439.57,271.48,441.88,271.55,444.3,271.6,446.72,271.65,449.25,271.68,451.79,271.7,454.44,271.7,455.5,271.7,456.54,271.68,457.59,271.65,458.61,271.6,459.64,271.55,460.65,271.48,461.66,271.4,462.65,271.31,462.65,268.13,462.65,266.89,462.53,265.67,462.4,264.46,462.15,263.28,461.91,262.09,461.53,260.94,461.16,259.79,460.67,258.67,460.36,257.98,459.93,257.35,459.5,256.71,458.95,256.13,458.41,255.56,457.75,255.04,457.08,254.52,456.31,254.06,455.53,253.6,454.69,253.25,453.85,252.91,452.95,252.68,452.05,252.45,451.09,252.33,450.13,252.22,449.11,252.22,447.53,252.22,446.1,252.51,444.67,252.8,443.41,253.38,442.14,253.96,441.03,254.83,439.92,255.7,438.97,256.86,438.02,258.02,437.31,259.51,436.59,260.99,436.1,262.8,435.61,264.6,435.35,266.73,435.09,268.86,435.06,271.31,435.065,271.306] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [92.64,98.05,95.69,98.25,98.31,98.7,100.93,99.15,103.12,99.86,105.32,100.56,107.09,101.52,108.86,102.48,110.2,103.69,111.55,104.9,112.56,106.35,113.57,107.79,114.24,109.47,114.91,111.14,115.25,113.05,115.58,114.96,115.58,117.1,115.58,119.8,115.02,122.33,114.46,124.85,113.33,127.18,112.2,129.52,110.5,131.66,108.81,133.81,106.55,135.78,104.29,137.74,101.73,139.21,99.16,140.68,96.29,141.66,93.42,142.65,90.24,143.14,87.07,143.63,83.58,143.63,79.11,143.5,77.69,143.43,76.39,143.38,75.08,143.33,73.88,143.3,72.69,143.26,71.6,143.25,70.51,143.23,69.54,143.23,68.83,143.23,68.04,143.25,67.25,143.26,66.38,143.29,65.51,143.32,64.55,143.36,63.6,143.4,62.57,143.46,57.87,143.63,57.87,141.08,58.75,140.65,59.45,140.28,60.14,139.9,60.66,139.58,61.19,139.25,61.53,138.98,61.87,138.7,62.03,138.47,62.19,138.25,62.32,137.95,62.45,137.65,62.55,137.27,62.64,136.9,62.71,136.45,62.77,136,62.8,135.47,62.89,133.79,62.97,131.99,63.04,130.18,63.09,128.27,63.14,126.35,63.17,124.31,63.19,122.27,63.19,120.12,63.19,84.83,63.19,81.29,63.13,78.52,63.06,75.75,62.94,73.75,62.81,71.74,62.62,70.51,62.43,69.27,62.17,68.81,61.86,68.25,61.33,67.84,60.79,67.42,60.03,67.15,59.28,66.87,58.29,66.73,57.31,66.6,56.11,66.6,52.26,66.6,52.26,63.03,56.96,63.03,62.17,63.23,63.19,63.28,64.1,63.31,65.01,63.35,65.81,63.37,66.61,63.4,67.3,63.41,67.99,63.42,68.57,63.42,69.46,63.42,70.79,63.4,72.12,63.38,73.88,63.34,75.65,63.29,77.84,63.22,80.04,63.16,82.68,63.07,90.95,62.86,93.38,62.86,95.51,63.07,97.64,63.28,99.46,63.71,101.28,64.14,102.79,64.78,104.3,65.42,105.5,66.27,107.02,67.35,108.15,68.65,109.29,69.96,110.05,71.48,110.81,73.01,111.19,74.76,111.56,76.52,111.56,78.49,111.56,80.11,111.3,81.63,111.03,83.15,110.49,84.58,109.96,86,109.16,87.32,108.36,88.64,107.29,89.86,106.22,91.09,104.77,92.21,103.32,93.33,101.49,94.35,99.66,95.38,97.45,96.3,95.24,97.23,92.64,98.05,92.645,98.05,73.84,96.44,74.55,96.49,75.23,96.52,75.91,96.55,76.56,96.57,77.21,96.59,77.83,96.6,78.46,96.61,79.05,96.61,81.87,96.61,84.29,96.37,86.7,96.12,88.72,95.62,90.74,95.12,92.36,94.37,93.98,93.62,95.19,92.62,96.41,91.62,97.32,90.4,98.24,89.18,98.85,87.74,99.46,86.3,99.76,84.64,100.06,82.98,100.06,81.1,100.06,79.47,99.81,78.03,99.56,76.59,99.05,75.34,98.54,74.09,97.77,73.03,97.01,71.97,95.99,71.1,94.97,70.23,93.64,69.58,92.32,68.92,90.69,68.49,89.06,68.05,87.13,67.83,85.2,67.62,82.96,67.62,81.97,67.62,80.93,67.66,79.9,67.71,78.82,67.8,77.75,67.89,76.63,68.03,75.51,68.17,74.35,68.35,74.22,70.08,74.13,72.25,74.03,74.42,73.97,77.03,73.9,79.64,73.87,82.7,73.84,85.75,73.84,89.25,73.84,96.44,73.84,96.445,73.84,137.96,75.16,138.16,76.36,138.31,77.56,138.46,78.65,138.56,79.74,138.66,80.72,138.71,81.7,138.76,82.56,138.76,85.07,138.76,87.29,138.42,89.52,138.09,91.46,137.42,93.41,136.75,95.07,135.75,96.73,134.74,98.11,133.4,99.49,132.06,100.53,130.49,101.56,128.91,102.25,127.09,102.94,125.28,103.29,123.22,103.63,121.17,103.63,118.87,103.63,117.35,103.48,115.95,103.33,114.55,103.02,113.29,102.72,112.03,102.26,110.89,101.81,109.76,101.2,108.76,100.59,107.77,99.86,106.9,99.13,106.04,98.27,105.31,97.42,104.58,96.44,103.99,95.47,103.39,94.37,102.93,93.27,102.47,91.85,102.13,90.42,101.78,88.67,101.55,86.92,101.32,84.84,101.21,82.76,101.09,80.35,101.09,79.63,101.09,78.86,101.1,78.09,101.11,77.28,101.13,76.47,101.15,75.61,101.19,74.75,101.22,73.84,101.26,73.84,121.37,73.9,128.5,73.94,129.47,73.97,130.32,74,131.17,74.02,131.9,74.04,132.64,74.06,133.26,74.07,133.88,74.07,134.39,74.07,134.78,74.05,135.19,74.04,135.61,74.01,136.05,73.98,136.5,73.94,136.98,73.9,137.45,73.84,137.96,73.84,137.963] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [133.94,116.21,134.01,119,134.4,121.46,134.79,123.91,135.5,126.03,136.22,128.14,137.25,129.92,138.29,131.7,139.65,133.15,141.01,134.59,142.57,135.68,144.14,136.76,145.93,137.48,147.71,138.2,149.7,138.57,151.69,138.93,153.9,138.93,154.89,138.93,155.87,138.84,156.86,138.76,157.84,138.6,158.83,138.44,159.8,138.19,160.78,137.95,161.76,137.62,162.73,137.3,163.71,136.89,164.68,136.48,165.65,135.99,166.62,135.51,167.58,134.94,168.55,134.37,169.51,133.72,170.47,134.56,168.66,139.32,167.48,140,166.29,140.6,165.09,141.19,163.88,141.7,162.67,142.21,161.44,142.64,160.22,143.06,158.97,143.4,157.72,143.74,156.46,144,155.2,144.25,153.91,144.42,152.63,144.59,151.33,144.68,150.04,144.76,148.72,144.76,145.84,144.76,143.25,144.31,140.65,143.85,138.33,142.94,136.01,142.03,133.97,140.67,131.93,139.3,130.17,137.48,128.41,135.66,127.08,133.52,125.76,131.38,124.88,128.91,124,126.44,123.56,123.65,123.12,120.86,123.12,117.74,123.12,115.36,123.36,113.14,123.61,110.92,124.11,108.86,124.6,106.8,125.35,104.9,126.09,103,127.08,101.26,127.73,100.11,128.66,99.01,129.59,97.9,130.79,96.84,131.99,95.78,133.47,94.76,134.95,93.74,136.71,92.77,138.47,91.79,140.2,91.06,141.93,90.32,143.63,89.83,145.34,89.35,147.02,89.1,148.7,88.86,150.36,88.86,152.87,88.86,155.11,89.23,157.36,89.59,159.34,90.33,161.33,91.07,163.06,92.17,164.78,93.28,166.25,94.75,167.71,96.22,168.81,97.99,169.91,99.75,170.64,101.81,171.38,103.87,171.74,106.23,172.11,108.58,172.11,111.23,172,114.57,171.06,114.8,170.15,114.99,169.24,115.17,168.35,115.32,167.46,115.47,166.59,115.58,165.72,115.69,164.87,115.76,163.36,115.87,161.55,115.96,159.75,116.04,157.65,116.1,155.55,116.16,153.15,116.19,150.76,116.21,148.07,116.21,133.94,116.21,133.936,116.213,134.05,111.97,136.24,112.06,138.55,112.14,140.86,112.21,143.28,112.26,145.7,112.31,148.24,112.34,150.77,112.36,153.42,112.36,154.48,112.36,155.53,112.34,156.57,112.31,157.6,112.26,158.62,112.21,159.63,112.14,160.64,112.06,161.63,111.97,161.63,108.79,161.63,107.55,161.51,106.33,161.39,105.12,161.14,103.94,160.89,102.75,160.52,101.6,160.15,100.45,159.65,99.33,159.34,98.64,158.91,98,158.48,97.37,157.94,96.79,157.39,96.22,156.73,95.7,156.07,95.18,155.29,94.72,154.51,94.26,153.67,93.91,152.83,93.57,151.93,93.34,151.03,93.11,150.08,92.99,149.12,92.88,148.1,92.88,146.51,92.88,145.08,93.17,143.66,93.46,142.39,94.04,141.12,94.62,140.01,95.49,138.91,96.36,137.96,97.52,137.01,98.68,136.29,100.17,135.57,101.65,135.08,103.45,134.59,105.26,134.34,107.39,134.08,109.52,134.05,111.97,134.049,111.965] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2] ), $.toNumberVector( [183.55,104.26,183.61,100.47,183.55,96.56,189.73,93.05,190.77,92.45,191.76,91.95,192.74,91.45,193.66,91.04,194.57,90.63,195.42,90.31,196.28,89.99,197.06,89.76,197.85,89.54,198.66,89.37,199.47,89.2,200.31,89.08,201.15,88.97,202.02,88.91,202.88,88.86,203.77,88.86,205.73,88.86,207.49,89.08,209.26,89.29,210.83,89.73,212.41,90.17,213.79,90.83,215.18,91.49,216.38,92.36,217.57,93.24,218.53,94.24,219.49,95.24,220.21,96.35,220.93,97.47,221.41,98.71,221.88,99.95,222.13,101.3,222.3,102.32,222.43,104.09,222.57,105.86,222.68,108.39,222.78,110.91,222.86,114.19,222.93,117.47,222.98,121.5,223,125.31,223.06,128.26,223.12,131.21,223.2,133.31,223.29,135.41,223.4,136.66,223.51,137.91,223.66,138.31,223.8,138.7,224.05,139,224.29,139.3,224.65,139.49,225,139.69,225.46,139.79,225.92,139.89,226.49,139.89,230.91,139.89,230.91,143.63,229.29,143.53,227.92,143.45,226.55,143.38,225.43,143.33,224.3,143.28,223.42,143.26,222.54,143.23,221.9,143.23,221.11,143.23,220.18,143.26,219.25,143.28,218.19,143.33,217.13,143.38,215.93,143.45,214.73,143.53,213.4,143.63,213.46,138.59,213.46,137.98,213.46,137.37,213.45,136.76,213.45,136.14,213.44,135.53,213.43,134.91,213.42,134.29,213.4,133.67,201.68,142.61,201.28,142.91,200.89,143.16,200.5,143.41,200.11,143.62,199.72,143.83,199.33,143.99,198.95,144.16,198.56,144.28,198.18,144.4,197.72,144.49,197.27,144.58,196.74,144.64,196.21,144.7,195.6,144.73,195,144.76,194.32,144.76,192.49,144.76,190.88,144.53,189.27,144.31,187.87,143.86,186.48,143.41,185.3,142.74,184.12,142.07,183.16,141.17,182.2,140.27,181.47,139.22,180.75,138.17,180.27,136.96,179.79,135.76,179.55,134.4,179.31,133.04,179.31,131.53,179.31,130.1,179.48,128.76,179.65,127.42,179.99,126.17,180.34,124.93,180.85,123.77,181.37,122.61,182.05,121.55,182.74,120.48,183.57,119.55,184.4,118.62,185.38,117.83,186.36,117.05,187.48,116.4,188.6,115.75,189.87,115.24,191.14,114.73,193.24,114.14,195.35,113.56,198.29,112.89,201.23,112.23,205.01,111.49,208.79,110.74,213.4,109.92,213.37,108.13,213.16,106.56,212.95,104.98,212.55,103.64,212.16,102.29,211.58,101.17,211,100.06,210.23,99.16,209.27,98.04,208.1,97.21,206.93,96.37,205.56,95.81,204.18,95.25,202.61,94.97,201.03,94.69,199.24,94.69,198.56,94.69,197.9,94.73,197.25,94.77,196.61,94.85,195.97,94.94,195.36,95.06,194.74,95.19,194.14,95.35,193.55,95.52,192.98,95.73,192.4,95.94,191.85,96.19,191.3,96.44,190.77,96.73,190.24,97.02,189.73,97.35,189.32,98.36,188.92,99.35,188.53,100.35,188.15,101.32,187.78,102.29,187.42,103.23,187.06,104.18,186.72,105.11,183.55,104.26,183.553,104.262,213.4,113.27,209.47,114.12,206.25,114.94,203.03,115.76,200.53,116.55,198.03,117.35,196.25,118.12,194.47,118.88,193.41,119.63,192.35,120.37,191.55,121.31,190.75,122.26,190.22,123.41,189.69,124.55,189.43,125.9,189.16,127.25,189.16,128.81,189.16,129.85,189.31,130.8,189.46,131.74,189.77,132.57,190.07,133.41,190.53,134.14,190.99,134.88,191.6,135.5,192.2,136.13,192.9,136.61,193.6,137.08,194.39,137.39,195.17,137.71,196.05,137.86,196.92,138.02,197.88,138.02,198.94,138.02,199.98,137.87,201.02,137.72,202.04,137.43,203.05,137.13,204.05,136.68,205.04,136.24,206.01,135.65,206.98,135.05,207.93,134.31,208.87,133.58,209.8,132.69,210.72,131.81,211.62,130.78,212.52,129.76,213.4,128.58,213.29,116.04,213.4,113.27,213.402,113.268] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,2,2,2] ), $.toNumberVector( [254.52,99.11,254.52,121.34,254.52,123.51,254.56,125.29,254.59,127.07,254.66,128.46,254.73,129.85,254.84,130.85,254.95,131.85,255.09,132.46,255.23,133.07,255.44,133.61,255.66,134.16,255.95,134.63,256.23,135.11,256.59,135.51,256.95,135.92,257.38,136.26,257.81,136.6,258.3,136.86,258.79,137.11,259.34,137.28,259.89,137.45,260.5,137.54,261.11,137.62,261.77,137.62,262.18,137.62,262.59,137.58,262.99,137.54,263.39,137.46,263.79,137.38,264.19,137.26,264.58,137.13,264.97,136.97,265.36,136.81,265.75,136.6,266.14,136.4,266.52,136.16,266.91,135.91,267.29,135.63,267.68,135.34,268.06,135.02,269.7,136.99,264.18,143.46,263.73,143.61,263.28,143.75,262.83,143.89,262.39,144.01,261.95,144.13,261.52,144.23,261.08,144.33,260.66,144.42,260.23,144.51,259.81,144.57,259.39,144.63,258.98,144.68,258.57,144.72,258.16,144.74,257.76,144.76,257.36,144.76,256.3,144.76,255.33,144.67,254.36,144.57,253.47,144.38,252.58,144.2,251.78,143.92,250.97,143.63,250.24,143.26,249.52,142.88,248.89,142.45,248.27,142.02,247.74,141.53,247.21,141.04,246.79,140.5,246.36,139.95,246.03,139.35,245.71,138.75,245.46,137.99,245.22,137.24,245.05,136.33,244.89,135.42,244.81,134.35,244.72,133.29,244.72,132.07,244.95,121.14,244.95,99.62,243.86,99.62,242.75,99.64,241.65,99.67,240.52,99.72,239.39,99.77,238.25,99.84,237.11,99.91,235.95,100.01,235.95,97.58,237.16,97.11,238.34,96.63,239.51,96.15,240.63,95.67,241.76,95.18,242.84,94.68,243.92,94.18,244.95,93.67,244.94,91.64,244.9,89.53,244.87,87.42,244.81,85.23,244.75,83.04,244.68,80.76,244.6,78.48,244.5,76.11,246.15,75.42,247.57,74.79,248.99,74.16,250.18,73.6,251.37,73.04,252.32,72.55,253.28,72.06,254.01,71.64,255.49,72.77,255.37,73.87,255.26,75.73,255.14,77.59,255.02,80.2,254.9,82.81,254.78,86.18,254.65,89.55,254.52,93.67,256.25,93.67,257.82,93.66,259.39,93.65,260.8,93.63,262.21,93.6,263.45,93.57,264.7,93.54,265.79,93.5,270.33,93.27,269.7,99.11,267.38,99.05,256.51,99.11,254.52,99.11,254.523,99.107] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2] ), $.toNumberVector( [293.1,99,300.69,92.2,301.14,91.79,301.61,91.44,302.07,91.09,302.56,90.8,303.04,90.51,303.53,90.28,304.03,90.05,304.54,89.88,305.27,89.62,306.01,89.43,306.74,89.24,307.47,89.11,308.2,88.98,308.92,88.92,309.65,88.86,310.37,88.86,311.97,88.86,313.41,89,314.86,89.14,316.14,89.43,317.43,89.72,318.55,90.15,319.68,90.58,320.65,91.15,321.62,91.72,322.55,92.53,323.48,93.33,324.37,94.36,325.26,95.39,326.11,96.65,326.95,97.91,327.76,99.4,335.08,92.71,335.55,92.28,336.07,91.91,336.59,91.53,337.16,91.21,337.74,90.88,338.36,90.6,338.99,90.33,339.67,90.1,340.57,89.79,341.45,89.56,342.32,89.32,343.19,89.17,344.05,89.01,344.91,88.93,345.76,88.86,346.59,88.86,347.87,88.86,349.09,89,350.3,89.15,351.46,89.45,352.61,89.75,353.71,90.19,354.8,90.64,355.84,91.24,356.88,91.83,357.78,92.52,358.68,93.2,359.45,93.97,360.22,94.75,360.86,95.61,361.49,96.47,362,97.42,362.5,98.37,362.88,99.49,363.25,100.61,363.51,101.9,363.76,103.19,363.88,104.65,364.01,106.11,364.01,107.74,363.78,129.91,363.78,131.77,363.84,133.24,363.89,134.72,364,135.81,364.1,136.91,364.26,137.62,364.42,138.34,364.64,138.67,364.85,139,365.23,139.26,365.61,139.52,366.16,139.71,366.71,139.9,367.43,140.01,368.14,140.13,369.02,140.17,373.19,140.34,373.19,143.63,370.45,143.49,368.8,143.43,367.41,143.38,366.03,143.33,364.91,143.3,363.79,143.26,362.94,143.25,362.09,143.23,361.51,143.23,360.61,143.23,359.64,143.25,358.67,143.28,357.62,143.33,356.57,143.38,355.45,143.45,354.33,143.53,353.14,143.63,353.33,141.01,353.48,138.17,353.63,135.33,353.73,132.26,353.83,129.2,353.88,125.92,353.93,122.63,353.93,119.12,353.93,116.16,353.86,113.71,353.8,111.25,353.67,109.31,353.55,107.36,353.36,105.92,353.16,104.48,352.91,103.55,352.66,102.62,352.28,101.79,351.91,100.96,351.43,100.23,350.94,99.5,350.33,98.87,349.73,98.24,349.01,97.71,348.29,97.18,347.48,96.79,346.67,96.39,345.76,96.12,344.86,95.86,343.86,95.73,342.87,95.59,341.78,95.59,340.55,95.59,339.41,95.76,338.27,95.93,337.21,96.26,336.16,96.59,335.2,97.09,334.23,97.59,333.36,98.26,332.48,98.93,331.77,99.66,331.06,100.39,330.52,101.19,329.97,101.99,329.6,102.85,329.22,103.72,329.01,104.65,328.86,105.24,328.76,106.79,328.65,108.34,328.58,110.86,328.51,113.38,328.48,116.87,328.44,120.36,328.44,124.81,328.44,127.44,328.45,129.49,328.46,131.55,328.48,133.04,328.5,134.54,328.54,135.47,328.57,136.4,328.61,136.76,328.65,137.13,328.73,137.44,328.81,137.75,328.93,138.01,329.05,138.26,329.2,138.47,329.35,138.67,329.55,138.82,329.74,138.97,330.14,139.11,330.54,139.26,331.15,139.39,331.76,139.52,332.59,139.64,333.41,139.77,334.44,139.88,338.24,140.34,338.24,143.63,335.73,143.53,333.56,143.45,331.39,143.38,329.54,143.33,327.7,143.28,326.2,143.25,324.69,143.23,323.51,143.23,322.58,143.23,321.2,143.25,319.83,143.28,318.02,143.33,316.21,143.38,313.95,143.45,311.7,143.53,309.01,143.63,309.01,140.34,312.81,140.34,313.66,140.34,314.36,140.28,315.06,140.22,315.61,140.1,316.16,139.98,316.57,139.8,316.97,139.62,317.23,139.38,317.48,139.14,317.68,138.73,317.88,138.33,318.03,137.76,318.18,137.19,318.28,136.46,318.37,135.73,318.41,134.84,318.53,132.51,318.61,130.14,318.7,127.77,318.75,125.34,318.81,122.92,318.84,120.44,318.87,117.97,318.87,115.44,318.87,113.19,318.79,111.28,318.71,109.38,318.56,107.82,318.41,106.27,318.18,105.06,317.95,103.85,317.65,103,317.34,102.14,316.93,101.37,316.52,100.6,316.01,99.93,315.49,99.25,314.87,98.66,314.24,98.08,313.51,97.58,312.78,97.08,311.98,96.71,311.18,96.34,310.31,96.09,309.43,95.84,308.49,95.72,307.54,95.6,306.52,95.6,305.43,95.6,304.39,95.75,303.35,95.9,302.36,96.21,301.36,96.51,300.42,96.97,299.48,97.43,298.59,98.03,297.7,98.64,296.95,99.32,296.2,99.99,295.59,100.73,294.98,101.47,294.51,102.27,294.04,103.07,293.72,103.93,293.51,104.53,293.35,105.67,293.19,106.81,293.08,108.5,292.97,110.18,292.92,112.42,292.87,114.65,292.87,117.43,292.87,120.48,292.88,123.12,292.9,125.77,292.92,128.01,292.95,130.25,293,132.08,293.04,133.92,293.1,135.35,293.12,136.02,293.19,136.56,293.26,137.11,293.36,137.53,293.47,137.96,293.62,138.26,293.76,138.57,293.95,138.75,294.13,138.94,294.53,139.1,294.92,139.26,295.53,139.41,296.14,139.55,296.96,139.67,297.78,139.79,298.82,139.89,302.72,140.34,302.72,143.63,300.95,143.53,299.23,143.45,297.51,143.38,295.84,143.33,294.17,143.28,292.55,143.25,290.93,143.23,289.36,143.23,287.57,143.23,285.71,143.25,283.85,143.28,281.91,143.33,279.97,143.38,277.95,143.45,275.93,143.53,273.84,143.63,273.84,140.34,278.14,140.34,279.06,140.34,279.8,140.22,280.53,140.1,281.09,139.85,281.64,139.61,282.01,139.24,282.38,138.87,282.56,138.38,282.74,137.89,282.88,136.31,283.02,134.74,283.11,132.07,283.2,129.41,283.25,125.65,283.3,121.9,283.3,117.06,283.3,113.51,283.29,110.69,283.27,107.87,283.25,105.77,283.23,103.68,283.2,102.31,283.17,100.95,283.13,100.31,283.08,99.67,283,99.15,282.92,98.62,282.8,98.22,282.68,97.82,282.52,97.53,282.36,97.24,282.16,97.07,281.96,96.9,281.56,96.77,281.16,96.64,280.56,96.56,279.96,96.47,279.16,96.43,278.35,96.39,277.35,96.39,273.84,96.39,273.84,93.27,275.92,92.99,277.85,92.65,279.79,92.32,281.58,91.93,283.37,91.54,285.02,91.1,286.67,90.65,288.17,90.16,292.3,88.57,292.56,88.57,292.75,88.66,292.94,88.74,293.07,88.91,293.19,89.08,293.26,89.34,293.32,89.6,293.32,89.94,293.21,91.99,293.17,92.77,293.14,93.6,293.11,94.43,293.1,95.31,293.08,96.19,293.08,97.11,293.08,98.03,293.1,99,293.096,98.999] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2] ), $.toNumberVector( [381.8,104.26,381.85,100.47,381.8,96.56,387.97,93.05,389.02,92.45,390,91.95,390.98,91.45,391.9,91.04,392.82,90.63,393.67,90.31,394.52,89.99,395.3,89.76,396.09,89.54,396.9,89.37,397.71,89.2,398.55,89.08,399.39,88.97,400.26,88.91,401.12,88.86,402.02,88.86,403.97,88.86,405.73,89.08,407.5,89.29,409.07,89.73,410.65,90.17,412.04,90.83,413.42,91.49,414.62,92.36,415.82,93.24,416.77,94.24,417.73,95.24,418.45,96.35,419.17,97.47,419.65,98.71,420.13,99.95,420.37,101.3,420.54,102.32,420.68,104.09,420.81,105.86,420.92,108.39,421.03,110.91,421.1,114.19,421.18,117.47,421.22,121.5,421.25,125.31,421.3,128.26,421.36,131.21,421.44,133.31,421.53,135.41,421.64,136.66,421.76,137.91,421.9,138.31,422.04,138.7,422.29,139,422.53,139.3,422.89,139.49,423.24,139.69,423.7,139.79,424.16,139.89,424.73,139.89,429.15,139.89,429.15,143.63,427.53,143.53,426.16,143.45,424.79,143.38,423.67,143.33,422.54,143.28,421.66,143.26,420.78,143.23,420.14,143.23,419.35,143.23,418.42,143.26,417.49,143.28,416.43,143.33,415.37,143.38,414.17,143.45,412.98,143.53,411.65,143.63,411.7,138.59,411.7,137.98,411.7,137.37,411.7,136.76,411.69,136.14,411.68,135.53,411.67,134.91,411.66,134.29,411.65,133.67,399.92,142.61,399.52,142.91,399.13,143.16,398.74,143.41,398.35,143.62,397.96,143.83,397.57,143.99,397.19,144.16,396.81,144.28,396.42,144.4,395.97,144.49,395.51,144.58,394.98,144.64,394.45,144.7,393.84,144.73,393.24,144.76,392.56,144.76,390.73,144.76,389.12,144.53,387.51,144.31,386.12,143.86,384.72,143.41,383.54,142.74,382.36,142.07,381.4,141.17,380.44,140.27,379.71,139.22,378.99,138.17,378.51,136.96,378.03,135.76,377.79,134.4,377.55,133.04,377.55,131.53,377.55,130.1,377.72,128.76,377.89,127.42,378.23,126.17,378.58,124.93,379.09,123.77,379.61,122.61,380.3,121.55,380.98,120.48,381.81,119.55,382.65,118.62,383.62,117.83,384.6,117.05,385.72,116.4,386.84,115.75,388.11,115.24,389.38,114.73,391.48,114.14,393.59,113.56,396.53,112.89,399.47,112.23,403.25,111.49,407.03,110.74,411.65,109.92,411.62,108.13,411.4,106.56,411.19,104.98,410.8,103.64,410.4,102.29,409.82,101.17,409.24,100.06,408.47,99.16,407.51,98.04,406.34,97.21,405.17,96.37,403.8,95.81,402.43,95.25,400.85,94.97,399.27,94.69,397.49,94.69,396.81,94.69,396.15,94.73,395.49,94.77,394.85,94.85,394.21,94.94,393.6,95.06,392.98,95.19,392.39,95.35,391.79,95.52,391.22,95.73,390.65,95.94,390.09,96.19,389.54,96.44,389.01,96.73,388.48,97.02,387.97,97.35,387.56,98.36,387.16,99.35,386.77,100.35,386.4,101.32,386.02,102.29,385.66,103.23,385.31,104.18,384.97,105.11,381.8,104.26,381.795,104.262,411.64,113.27,407.71,114.12,404.49,114.94,401.27,115.76,398.77,116.55,396.27,117.35,394.49,118.12,392.71,118.88,391.65,119.63,390.59,120.37,389.79,121.31,389,122.26,388.46,123.41,387.93,124.55,387.67,125.9,387.4,127.25,387.4,128.81,387.4,129.85,387.56,130.8,387.71,131.74,388.01,132.57,388.32,133.41,388.77,134.14,389.23,134.88,389.84,135.5,390.45,136.13,391.14,136.61,391.84,137.08,392.63,137.39,393.41,137.71,394.29,137.86,395.16,138.02,396.13,138.02,397.19,138.02,398.23,137.87,399.27,137.72,400.28,137.43,401.3,137.13,402.29,136.68,403.28,136.24,404.25,135.65,405.22,135.05,406.17,134.31,407.12,133.58,408.04,132.69,408.97,131.81,409.87,130.78,410.77,129.76,411.65,128.58,411.53,116.04,411.64,113.27,411.645,113.268] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2] ), $.toNumberVector( [452.14,99.67,460.71,92.08,461.09,91.74,461.48,91.45,461.88,91.16,462.28,90.91,462.69,90.66,463.1,90.46,463.52,90.26,463.94,90.1,464.88,89.79,465.81,89.56,466.75,89.32,467.68,89.17,468.62,89.01,469.56,88.93,470.49,88.86,471.43,88.86,472.95,88.86,474.36,89.01,475.77,89.16,477.09,89.47,478.4,89.78,479.61,90.24,480.82,90.7,481.92,91.32,483.03,91.94,483.98,92.64,484.93,93.35,485.72,94.15,486.52,94.95,487.16,95.84,487.79,96.74,488.28,97.72,488.76,98.7,489.12,99.97,489.48,101.23,489.72,102.77,489.96,104.31,490.08,106.13,490.2,107.94,490.2,110.04,489.98,127.88,489.98,130.19,490.03,132.01,490.08,133.83,490.17,135.16,490.27,136.49,490.42,137.33,490.57,138.18,490.76,138.53,491.03,138.98,491.43,139.32,491.82,139.66,492.34,139.89,492.86,140.12,493.51,140.23,494.16,140.34,494.93,140.34,498.98,140.34,498.98,143.63,497.47,143.53,496.07,143.45,494.66,143.38,493.35,143.33,492.04,143.28,490.84,143.26,489.64,143.23,488.54,143.23,487.46,143.23,486.35,143.26,485.24,143.28,484.09,143.33,482.94,143.38,481.75,143.45,480.56,143.53,479.33,143.63,479.6,140.87,479.8,137.62,480,134.37,480.14,130.64,480.27,126.91,480.34,122.69,480.41,118.48,480.41,113.78,480.41,111.88,480.32,110.26,480.24,108.64,480.07,107.29,479.91,105.95,479.66,104.88,479.41,103.81,479.07,103.02,478.74,102.22,478.29,101.51,477.84,100.79,477.28,100.16,476.72,99.52,476.05,98.96,475.38,98.4,474.59,97.92,473.8,97.44,472.93,97.07,472.07,96.71,471.12,96.47,470.17,96.23,469.15,96.11,468.12,95.99,467.01,95.99,465.64,95.99,464.36,96.16,463.09,96.34,461.93,96.69,460.76,97.03,459.7,97.55,458.63,98.07,457.68,98.77,456.72,99.46,455.94,100.19,455.17,100.92,454.58,101.68,453.98,102.45,453.57,103.25,453.16,104.05,452.94,104.88,452.79,105.44,452.69,106.43,452.58,107.43,452.51,108.88,452.44,110.32,452.41,112.21,452.37,114.1,452.37,116.44,452.37,119.03,452.38,121.53,452.39,124.03,452.41,126.44,452.43,128.84,452.47,131.16,452.5,133.47,452.54,135.7,452.56,136.36,452.61,136.9,452.67,137.45,452.77,137.86,452.87,138.28,453.01,138.57,453.15,138.87,453.34,139.04,453.69,139.36,454.16,139.61,454.63,139.85,455.22,140.02,455.8,140.18,456.5,140.26,457.2,140.34,458.01,140.34,462.06,140.34,462.06,143.63,459.66,143.53,457.5,143.45,455.35,143.38,453.44,143.33,451.54,143.28,449.87,143.25,448.21,143.23,446.79,143.23,445.28,143.23,443.68,143.25,442.07,143.28,440.36,143.33,438.65,143.38,436.84,143.45,435.03,143.53,433.11,143.63,433.11,140.34,437.19,140.34,438.24,140.34,439.07,140.22,439.9,140.1,440.51,139.85,441.12,139.61,441.52,139.24,441.91,138.88,442.09,138.39,442.27,137.9,442.4,136.19,442.53,134.48,442.62,131.54,442.71,128.6,442.75,124.44,442.8,120.27,442.8,114.89,442.8,112.47,442.78,110.31,442.77,108.15,442.74,106.26,442.71,104.36,442.67,102.73,442.63,101.1,442.57,99.73,442.54,99.27,442.47,98.89,442.4,98.51,442.29,98.2,442.17,97.89,442.02,97.65,441.86,97.41,441.66,97.24,441.47,97.07,441.09,96.94,440.71,96.81,440.15,96.73,439.59,96.64,438.85,96.6,438.11,96.56,437.19,96.56,433.11,96.56,433.11,93.27,434.32,93.13,435.48,92.97,436.63,92.8,437.71,92.61,438.8,92.42,439.82,92.2,440.85,91.98,441.81,91.74,442.77,91.5,443.79,91.2,444.81,90.89,445.89,90.53,446.97,90.16,448.11,89.73,449.25,89.29,450.45,88.8,450.58,88.74,450.7,88.7,450.82,88.66,450.94,88.63,451.06,88.6,451.18,88.59,451.3,88.57,451.41,88.57,451.63,88.57,451.8,88.65,451.97,88.74,452.09,88.9,452.2,89.06,452.26,89.31,452.31,89.55,452.31,89.88,452.26,92.03,452.14,99.67,452.143,99.674] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [520.68,88.63,522.04,89.48,521.94,90.54,521.86,91.66,521.77,92.77,521.71,93.94,521.65,95.11,521.6,96.33,521.56,97.55,521.53,98.83,521.43,102.96,521.35,106.55,521.28,110.15,521.23,113.2,521.18,116.25,521.16,118.76,521.13,121.27,521.13,123.24,521.13,125.08,521.16,126.78,521.19,128.49,521.26,130.06,521.32,131.63,521.42,133.07,521.51,134.51,521.64,135.81,521.7,136.32,521.79,136.75,521.89,137.18,522.02,137.54,522.16,137.89,522.33,138.17,522.5,138.44,522.72,138.64,522.93,138.84,523.29,139.01,523.65,139.19,524.16,139.34,524.67,139.49,525.33,139.61,525.99,139.73,526.8,139.83,530.65,140.34,530.65,143.63,528.58,143.53,526.6,143.45,524.63,143.38,522.75,143.33,520.86,143.28,519.07,143.26,517.28,143.23,515.58,143.23,513.91,143.23,512.23,143.26,510.55,143.28,508.87,143.33,507.18,143.38,505.49,143.45,503.8,143.53,502.1,143.63,502.1,140.34,506.97,139.83,507.68,139.77,508.25,139.68,508.82,139.59,509.26,139.45,509.69,139.32,509.99,139.15,510.29,138.99,510.45,138.78,510.62,138.57,510.75,138.13,510.88,137.68,510.99,137,511.09,136.31,511.16,135.39,511.23,134.46,511.28,133.3,511.35,131.5,511.4,129.35,511.45,127.21,511.49,124.73,511.52,122.24,511.54,119.42,511.56,116.59,511.56,113.42,511.56,111.22,511.54,109.28,511.52,107.33,511.49,105.63,511.45,103.93,511.4,102.49,511.35,101.04,511.28,99.85,511.25,99.41,511.17,99.04,511.1,98.66,510.97,98.35,510.85,98.04,510.68,97.79,510.5,97.54,510.29,97.35,510.07,97.17,509.71,97.03,509.35,96.89,508.86,96.8,508.37,96.71,507.74,96.66,507.11,96.62,506.35,96.62,502.1,96.62,502.1,93.33,503.83,93.08,505.33,92.84,506.83,92.6,508.1,92.36,509.37,92.13,510.41,91.91,511.45,91.69,512.27,91.48,513.08,91.27,514.01,90.99,514.95,90.71,516,90.35,517.05,89.99,518.22,89.56,519.39,89.13,520.68,88.63,520.678,88.629,516.15,63.54,516.8,63.54,517.4,63.66,518.01,63.77,518.57,64.01,519.13,64.25,519.64,64.6,520.15,64.96,520.62,65.43,521.09,65.91,521.44,66.43,521.79,66.95,522.02,67.52,522.26,68.09,522.37,68.71,522.49,69.33,522.49,69.99,522.49,70.66,522.37,71.28,522.26,71.89,522.02,72.46,521.79,73.02,521.44,73.54,521.09,74.06,520.62,74.53,520.15,74.99,519.64,75.34,519.13,75.69,518.57,75.93,518.01,76.16,517.4,76.28,516.8,76.39,516.15,76.39,515.48,76.39,514.86,76.28,514.25,76.16,513.68,75.93,513.12,75.69,512.6,75.34,512.08,74.99,511.61,74.53,511.15,74.06,510.8,73.54,510.45,73.02,510.21,72.46,509.98,71.89,509.86,71.28,509.75,70.66,509.75,69.99,509.75,69.33,509.86,68.71,509.98,68.09,510.21,67.52,510.45,66.95,510.8,66.43,511.15,65.91,511.61,65.43,512.08,64.96,512.6,64.6,513.12,64.25,513.68,64.01,514.25,63.77,514.86,63.66,515.48,63.54,516.15,63.54,516.146,63.537] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2] ), $.toNumberVector( [541.07,104.26,541.13,100.47,541.07,96.56,547.24,93.05,548.29,92.45,549.27,91.95,550.25,91.45,551.17,91.04,552.09,90.63,552.94,90.31,553.79,89.99,554.58,89.76,555.36,89.54,556.18,89.37,556.99,89.2,557.83,89.08,558.67,88.97,559.53,88.91,560.4,88.86,561.29,88.86,563.24,88.86,565.01,89.08,566.77,89.29,568.35,89.73,569.92,90.17,571.31,90.83,572.69,91.49,573.89,92.36,575.09,93.24,576.05,94.24,577,95.24,577.72,96.35,578.44,97.47,578.92,98.71,579.4,99.95,579.64,101.3,579.81,102.32,579.95,104.09,580.09,105.86,580.19,108.39,580.3,110.91,580.37,114.19,580.45,117.47,580.49,121.5,580.52,125.31,580.58,128.26,580.63,131.21,580.72,133.31,580.8,135.41,580.92,136.66,581.03,137.91,581.17,138.31,581.31,138.7,581.56,139,581.81,139.3,582.16,139.49,582.52,139.69,582.98,139.79,583.44,139.89,584,139.89,588.42,139.89,588.42,143.63,586.81,143.53,585.44,143.45,584.07,143.38,582.94,143.33,581.82,143.28,580.93,143.26,580.05,143.23,579.41,143.23,578.62,143.23,577.69,143.26,576.77,143.28,575.7,143.33,574.64,143.38,573.45,143.45,572.25,143.53,570.92,143.63,570.98,138.59,570.98,137.98,570.97,137.37,570.97,136.76,570.96,136.14,570.95,135.53,570.94,134.91,570.93,134.29,570.92,133.67,559.19,142.61,558.8,142.91,558.4,143.16,558.01,143.41,557.62,143.62,557.23,143.83,556.85,143.99,556.46,144.16,556.08,144.28,555.7,144.4,555.24,144.49,554.78,144.58,554.25,144.64,553.72,144.7,553.12,144.73,552.51,144.76,551.83,144.76,550,144.76,548.39,144.53,546.78,144.31,545.39,143.86,543.99,143.41,542.81,142.74,541.64,142.07,540.67,141.17,539.71,140.27,538.99,139.22,538.27,138.17,537.78,136.96,537.3,135.76,537.06,134.4,536.82,133.04,536.82,131.53,536.82,130.1,536.99,128.76,537.16,127.42,537.51,126.17,537.85,124.93,538.37,123.77,538.88,122.61,539.57,121.55,540.25,120.48,541.09,119.55,541.92,118.62,542.9,117.83,543.87,117.05,544.99,116.4,546.12,115.75,547.38,115.24,548.65,114.73,550.76,114.14,552.86,113.56,555.8,112.89,558.74,112.23,562.52,111.49,566.3,110.74,570.92,109.92,570.89,108.13,570.68,106.56,570.46,104.98,570.07,103.64,569.67,102.29,569.09,101.17,568.51,100.06,567.75,99.16,566.78,98.04,565.61,97.21,564.45,96.37,563.07,95.81,561.7,95.25,560.12,94.97,558.54,94.69,556.76,94.69,556.08,94.69,555.42,94.73,554.76,94.77,554.12,94.85,553.49,94.94,552.87,95.06,552.25,95.19,551.66,95.35,551.07,95.52,550.49,95.73,549.92,95.94,549.37,96.19,548.81,96.44,548.28,96.73,547.75,97.02,547.24,97.35,546.83,98.36,546.44,99.35,546.04,100.35,545.67,101.32,545.29,102.29,544.94,103.23,544.58,104.18,544.24,105.11,541.07,104.26,541.068,104.262,570.92,113.27,566.98,114.12,563.76,114.94,560.55,115.76,558.05,116.55,555.55,117.35,553.77,118.12,551.99,118.88,550.92,119.63,549.86,120.37,549.07,121.31,548.27,122.26,547.74,123.41,547.21,124.55,546.94,125.9,546.68,127.25,546.68,128.81,546.68,129.85,546.83,130.8,546.98,131.74,547.28,132.57,547.59,133.41,548.05,134.14,548.5,134.88,549.11,135.5,549.72,136.13,550.42,136.61,551.12,137.08,551.9,137.39,552.69,137.71,553.56,137.86,554.44,138.02,555.4,138.02,556.46,138.02,557.5,137.87,558.54,137.72,559.55,137.43,560.57,137.13,561.56,136.68,562.56,136.24,563.53,135.65,564.5,135.05,565.44,134.31,566.39,133.58,567.31,132.69,568.24,131.81,569.14,130.78,570.04,129.76,570.92,128.58,570.81,116.04,570.92,113.27,570.918,113.268] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [242.93,207.99,245.24,207.99,246.09,207.99,246.77,207.89,247.45,207.78,247.96,207.58,248.47,207.37,248.81,207.06,249.15,206.76,249.32,206.34,249.49,205.93,249.62,204.74,249.75,203.55,249.83,201.57,249.92,199.6,249.96,196.85,250,194.09,250,190.56,250,178.15,250,174.48,249.96,171.64,249.93,168.8,249.85,166.78,249.78,164.77,249.67,163.57,249.56,162.37,249.41,162,249.27,161.62,248.97,161.34,248.68,161.06,248.24,160.87,247.8,160.68,247.22,160.59,246.63,160.49,245.9,160.49,242.93,160.49,242.93,158.19,244.45,158.25,245.97,158.3,247.48,158.35,248.99,158.38,250.49,158.41,251.98,158.43,253.48,158.44,254.96,158.44,256.2,158.44,257.38,158.43,258.56,158.41,259.69,158.38,260.81,158.35,261.88,158.3,262.94,158.25,263.95,158.19,263.95,160.49,261.12,160.49,260.47,160.49,259.93,160.53,259.4,160.57,258.99,160.65,258.58,160.73,258.3,160.84,258.01,160.96,257.84,161.12,257.68,161.27,257.55,161.55,257.41,161.82,257.32,162.22,257.22,162.61,257.16,163.12,257.1,163.63,257.07,164.27,257.02,165.25,256.99,166.61,256.95,167.97,256.93,169.71,256.91,171.46,256.9,173.58,256.89,175.71,256.89,178.22,256.89,190.85,256.89,194.41,256.93,197.18,256.96,199.94,257.04,201.9,257.12,203.86,257.24,205.02,257.35,206.18,257.51,206.55,257.67,206.91,258,207.18,258.33,207.45,258.83,207.63,259.33,207.81,260,207.9,260.68,207.99,261.52,207.99,263.95,207.99,263.95,210.3,262.83,210.23,261.65,210.19,260.47,210.14,259.24,210.11,258.01,210.07,256.73,210.06,255.45,210.04,254.12,210.04,252.57,210.04,251.1,210.06,249.62,210.07,248.22,210.11,246.83,210.14,245.5,210.19,244.18,210.23,242.93,210.3,242.93,207.99,242.932,207.991] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [268.2,207.99,270.51,207.99,271.36,207.99,272.04,207.89,272.72,207.78,273.23,207.58,273.74,207.37,274.08,207.06,274.42,206.76,274.59,206.34,274.76,205.93,274.89,204.74,275.01,203.55,275.1,201.57,275.18,199.6,275.23,196.85,275.27,194.09,275.27,190.56,275.27,178.15,275.27,174.48,275.23,171.64,275.19,168.8,275.12,166.78,275.05,164.77,274.94,163.57,274.83,162.37,274.68,162,274.54,161.62,274.24,161.34,273.95,161.06,273.51,160.87,273.07,160.68,272.48,160.59,271.9,160.49,271.17,160.49,268.2,160.49,268.2,158.19,269.72,158.25,271.24,158.3,272.75,158.35,274.25,158.38,275.76,158.41,277.25,158.43,278.75,158.44,280.23,158.44,281.47,158.44,282.65,158.43,283.83,158.41,284.96,158.38,286.08,158.35,287.15,158.3,288.21,158.25,289.22,158.19,289.22,160.49,286.39,160.49,285.73,160.49,285.2,160.53,284.67,160.57,284.26,160.65,283.85,160.73,283.56,160.84,283.28,160.96,283.11,161.12,282.95,161.27,282.81,161.55,282.68,161.82,282.59,162.22,282.49,162.61,282.43,163.12,282.37,163.63,282.34,164.27,282.29,165.25,282.26,166.61,282.22,167.97,282.2,169.71,282.18,171.46,282.17,173.58,282.15,175.71,282.15,178.22,282.15,190.85,282.15,194.41,282.19,197.18,282.23,199.94,282.31,201.9,282.39,203.86,282.51,205.02,282.62,206.18,282.78,206.55,282.94,206.91,283.26,207.18,283.59,207.45,284.1,207.63,284.6,207.81,285.27,207.9,285.95,207.99,286.79,207.99,289.22,207.99,289.22,210.3,288.09,210.23,286.91,210.19,285.74,210.14,284.51,210.11,283.28,210.07,282,210.06,280.72,210.04,279.39,210.04,277.84,210.04,276.37,210.06,274.89,210.07,273.49,210.11,272.09,210.14,270.77,210.19,269.45,210.23,268.2,210.3,268.2,207.99,268.2,207.991] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2] ), $.toNumberVector( [299.37,206.64,299.51,205.22,299.62,203.27,299.73,201.32,299.8,198.84,299.88,196.36,299.91,193.34,299.95,190.33,299.95,186.79,299.95,176.17,299.95,174.54,299.92,173.02,299.9,171.5,299.84,170.1,299.79,168.69,299.7,167.4,299.62,166.11,299.51,164.92,299.45,164.24,299.37,163.69,299.3,163.15,299.21,162.75,299.13,162.36,299.03,162.1,298.94,161.85,298.83,161.74,298.73,161.63,298.49,161.52,298.25,161.42,297.87,161.32,297.49,161.22,296.98,161.12,296.46,161.02,295.81,160.93,292.88,160.49,292.88,158.19,294.39,158.23,295.66,158.27,296.92,158.3,297.94,158.32,298.95,158.35,299.72,158.36,300.49,158.37,301.01,158.37,310.86,158.3,318.88,158.15,320.09,158.13,321.32,158.18,322.54,158.23,323.78,158.35,325.02,158.47,326.28,158.66,327.54,158.85,328.81,159.1,330.08,159.36,331.29,159.74,332.51,160.13,333.66,160.64,334.81,161.16,335.91,161.8,337,162.45,338.04,163.22,339.07,164,339.98,164.87,340.89,165.74,341.68,166.71,342.47,167.68,343.13,168.75,343.8,169.82,344.34,170.99,344.88,172.15,345.28,173.41,345.69,174.67,345.96,176.02,346.23,177.37,346.36,178.8,346.5,180.24,346.5,181.77,346.5,184.87,345.98,187.69,345.46,190.52,344.41,193.08,343.37,195.64,341.81,197.93,340.25,200.22,338.16,202.24,336.08,204.27,333.68,205.78,331.28,207.3,328.56,208.31,325.84,209.33,322.79,209.83,319.75,210.34,316.39,210.34,311.89,210.23,310.23,210.16,308.88,210.11,307.53,210.07,306.48,210.03,305.43,210,304.69,209.99,303.94,209.97,303.5,209.97,302.76,209.97,301.92,210,301.08,210.02,300.13,210.08,299.19,210.13,298.15,210.22,297.1,210.3,295.96,210.41,295.96,208.65,299.37,206.64,299.365,206.637,307.27,206.45,308.51,206.64,309.67,206.77,310.84,206.91,311.93,207,313.02,207.09,314.03,207.14,315.05,207.19,315.99,207.19,318.55,207.19,320.83,206.86,323.11,206.53,325.1,205.87,327.09,205.21,328.8,204.22,330.5,203.23,331.92,201.91,333.63,200.31,334.92,198.34,336.2,196.37,337.06,194.04,337.91,191.7,338.34,189,338.77,186.3,338.77,183.24,338.77,180.56,338.41,178.21,338.06,175.85,337.35,173.81,336.63,171.78,335.57,170.06,334.5,168.34,333.07,166.94,331.65,165.54,329.9,164.49,328.14,163.44,326.06,162.74,323.97,162.04,321.56,161.69,319.14,161.34,316.39,161.34,315.43,161.34,314.38,161.38,313.33,161.43,312.19,161.53,311.05,161.62,309.82,161.77,308.59,161.91,307.27,162.11,307.17,162.98,307.08,163.92,307,164.86,306.95,165.86,306.89,166.86,306.86,167.91,306.84,168.97,306.84,170.09,306.84,194.04,306.84,195.7,306.86,197.3,306.89,198.9,306.95,200.46,307,202.01,307.08,203.51,307.17,205.01,307.27,206.45,307.275,206.453] ) );
        shape.graphics.endFill();
        shape.graphics.beginFill( 0xFFFFFF,1 );
        shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [371.39,184.15,365.91,175.03,364.61,172.85,363.43,171.03,362.25,169.2,361.2,167.72,360.15,166.24,359.22,165.11,358.29,163.98,357.48,163.2,357.03,162.78,356.57,162.47,356.11,162.15,355.64,161.94,355.17,161.73,354.69,161.62,354.21,161.52,353.71,161.52,353.54,161.52,353.31,161.53,353.08,161.54,352.79,161.56,352.5,161.59,352.15,161.62,351.81,161.66,351.4,161.7,351.4,159.4,362.17,157.67,362.62,158.04,363.03,158.42,363.45,158.79,363.83,159.18,364.21,159.57,364.56,159.96,364.91,160.36,365.23,160.77,365.55,161.18,365.98,161.82,366.42,162.46,366.97,163.34,367.53,164.21,368.21,165.32,368.88,166.44,369.68,167.78,375.9,178.27,389.6,158.19,397.22,158.19,397.22,160.46,395.79,160.46,395.41,160.46,395.08,160.49,394.75,160.52,394.46,160.58,394.17,160.64,393.92,160.74,393.67,160.83,393.46,160.95,393.26,161.08,392.84,161.5,392.43,161.93,391.81,162.65,391.19,163.38,390.36,164.41,389.54,165.43,388.5,166.76,386.54,169.27,384.87,171.43,383.21,173.59,381.83,175.39,380.46,177.19,379.37,178.64,378.29,180.09,377.5,181.19,389.6,200.59,390.52,202.07,391.26,203.22,392,204.37,392.56,205.2,393.13,206.03,393.52,206.54,393.91,207.05,394.12,207.24,394.34,207.43,394.6,207.57,394.86,207.71,395.17,207.8,395.48,207.9,395.84,207.94,396.19,207.99,396.59,207.99,398.13,207.99,398.13,210.3,397.07,210.23,396.13,210.19,395.2,210.14,394.39,210.11,393.58,210.07,392.89,210.06,392.21,210.04,391.65,210.04,391.09,210.04,390.53,210.06,389.97,210.07,389.4,210.11,388.83,210.14,388.26,210.19,387.69,210.23,387.11,210.3,373.2,187.15,372.49,188.13,371.64,189.36,370.79,190.6,369.79,192.08,368.79,193.57,367.65,195.32,366.5,197.06,365.21,199.07,363.92,201.07,362.85,202.77,361.77,204.47,360.91,205.88,360.05,207.28,359.4,208.39,358.76,209.49,358.33,210.3,357.89,210.23,357.45,210.19,357.02,210.14,356.59,210.1,356.16,210.07,355.73,210.06,355.31,210.04,354.89,210.04,354.38,210.04,353.85,210.06,353.33,210.07,352.78,210.1,352.23,210.14,351.66,210.19,351.08,210.23,350.49,210.3,350.49,207.99,352.14,207.99,352.51,207.99,352.85,207.94,353.19,207.88,353.5,207.77,353.81,207.66,354.08,207.5,354.35,207.33,354.59,207.11,354.83,206.89,355.45,206.11,356.07,205.33,357.07,203.99,358.07,202.64,359.46,200.74,360.84,198.84,362.61,196.37,371.39,184.15,371.393,184.145] ) );
        shape.graphics.endFill();
        
        return shape;
      }
    },
    
    /* Namespace: Rnr.Typography.Mincho
     * Contains functions for creating typography layer sources in Kozuka Mincho
     */
    Mincho :
    {
    
      /* Namespace: Rnr.Typography.Mincho.Dynamic
       * Contains single glyphs for DVTLayer. Could be used directly as dictionary.
       */
      Dynamic :
      {
        "だ" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [17,52.8,18.27,54.9,19.75,56.54,21.22,58.18,23.1,59.3,24.97,60.43,27.35,61.02,29.72,61.6,32.8,61.6,35.35,61.6,38.46,61.33,41.57,61.06,44.77,60.63,47.98,60.2,51.05,59.66,54.12,59.13,56.6,58.6,57.12,56.35,57.78,53.1,58.44,49.85,59.02,46.38,59.61,42.91,60,39.62,60.4,36.33,60.4,34,60.4,30.1,59.75,27.99,59.09,25.88,57.87,24.9,56.66,23.93,54.92,23.77,53.17,23.6,51,23.6,50.33,23.6,49.65,23.62,48.97,23.63,48.27,23.7,47.58,23.78,46.87,23.94,46.15,24.1,45.4,24.4,44.6,23,45.12,21.95,45.96,20.67,46.79,19.38,48.27,18.25,49.76,17.13,52.05,16.37,54.35,15.6,57.8,15.6,60.65,15.6,64.1,16.39,67.55,17.19,70.55,18.63,73.55,20.07,75.57,22.1,77.6,24.13,77.6,26.6,77.6,28.03,77.2,28.98,76.8,29.92,76.2,30.73,75.6,31.54,74.9,32.37,74.2,33.2,73.6,34.4,73.07,35.53,72.18,38.6,71.29,41.67,70.35,45.15,69.41,48.64,68.59,51.78,67.77,54.93,67.4,56.2,77.82,53.8,84.32,51.36,90.82,48.92,94.62,46.55,98.43,44.19,100.16,41.97,101.9,39.75,102.8,37.8,104.6,37.6,107.22,37.75,110.27,37.86,113.32,37.97,115.92,38.48,118.53,38.99,120.26,40.11,122,41.23,122,43.4,122,45.05,120.7,46.45,119.4,47.84,117,49.15,114.6,50.47,111.2,51.79,107.8,53.1,103.6,54.6,99.02,56.25,94,57.81,88.98,59.37,83.97,60.75,78.97,62.14,74.21,63.32,69.45,64.5,65.4,65.4,62.77,74.85,58.86,87.47,54.94,100.09,50.87,112.65,46.81,125.22,43.15,136.11,39.5,147,37.4,153,34.63,161.4,32.67,166.95,30.71,172.5,28.93,175.8,27.14,179.1,25.22,180.45,23.3,181.8,20.6,181.8,19.48,181.8,18.71,181.41,17.94,181.01,17.48,180.15,17.01,179.29,16.8,177.92,16.6,176.55,16.6,174.6,16.6,173.55,16.67,172.34,16.74,171.13,16.85,169.73,16.96,168.32,17.11,166.7,17.25,165.08,17.4,163.2,20.4,159.15,22.96,154.91,25.51,150.66,27.65,146.5,29.79,142.34,31.52,138.4,33.25,134.45,34.6,131,36.78,125.53,39.7,117.36,42.62,109.18,45.52,100.28,48.43,91.37,50.94,82.71,53.45,74.05,54.8,67.6,51.65,68.2,48.7,68.68,45.75,69.17,43.05,69.5,40.35,69.84,37.92,70.02,35.5,70.2,33.4,70.2,28.15,70.2,24.53,68.66,20.9,67.12,18.65,64.78,16.4,62.43,15.4,59.66,14.4,56.88,14.4,54.4,17,52.8,17,52.803,102.6,121.8,101.1,124.35,99.82,127.06,98.54,129.78,97.6,132.55,96.66,135.33,96.13,138.11,95.6,140.9,95.6,143.6,95.6,152,99.91,156.55,104.21,161.1,110.7,163.2,117.19,165.3,124.79,165.65,132.4,166,139,166,141.25,166,143.25,165.96,145.25,165.92,147.07,165.83,148.89,165.73,150.56,165.58,152.22,165.43,153.8,165.2,155.3,165.13,156.64,164.9,157.97,164.67,159.1,164.43,160.22,164.18,161.11,163.99,162,163.8,162.6,163.8,164.92,163.8,167.28,164.37,169.63,164.93,171.52,165.93,173.42,166.92,174.61,168.27,175.8,169.63,175.8,171.2,175.8,173.23,173.97,174.45,172.14,175.67,168.67,176.33,165.2,176.98,160.19,177.19,155.17,177.4,148.8,177.4,142.5,177.4,135.3,177.11,128.1,176.83,121.2,175.85,114.3,174.88,108.3,173.01,102.3,171.15,98.4,168,96.07,166.13,94.28,163.79,92.49,161.45,91.27,158.75,90.06,156.05,89.43,153.04,88.8,150.03,88.8,146.8,88.8,143.65,89.44,140.31,90.08,136.96,91.37,133.55,92.67,130.14,94.62,126.72,96.57,123.3,99.2,120,102.6,121.8,102.599,121.802,118.2,101.2,121.12,98.8,124.47,96.25,127.82,93.69,131.17,91.25,134.53,88.81,137.69,86.63,140.85,84.45,143.4,82.8,137.7,82.58,132.23,83.03,126.77,83.48,121.27,84.75,115.78,86.03,110.13,88.2,104.47,90.38,98.4,93.6,95.8,90.4,102.1,85.3,108.74,81.91,115.39,78.53,122.25,76.5,129.11,74.48,136.13,73.64,143.15,72.8,150.2,72.8,154.47,72.8,158.22,73.62,161.98,74.44,164.77,75.75,167.56,77.06,169.18,78.71,170.8,80.35,170.8,82,170.8,83.05,170.55,83.71,170.3,84.38,169.85,84.75,169.4,85.13,168.77,85.26,168.15,85.4,167.4,85.4,166.57,85.4,165.68,85.31,164.78,85.21,163.85,85.1,162.91,84.99,161.94,84.9,160.97,84.8,160,84.8,155.87,84.8,151.04,86.56,146.21,88.33,141.15,91.1,136.09,93.88,131.03,97.29,125.97,100.7,121.4,104,118.2,101.2,118.198,101.202,127.8,15.8,137.02,19.1,142.86,22.69,148.7,26.28,152.02,29.65,155.34,33.03,156.57,35.94,157.8,38.85,157.8,40.8,157.8,42,157.3,43.03,156.8,44.05,156.07,44.8,155.34,45.55,154.51,45.98,153.67,46.4,153,46.4,151.65,46.4,150.7,46.1,149.76,45.79,149.05,45.15,148.33,44.52,147.77,43.53,147.2,42.55,146.6,41.2,145.55,38.8,143.59,35.91,141.64,33.02,138.92,30.05,136.2,27.09,132.79,24.27,129.37,21.45,125.4,19.2,127.8,15.8,127.798,15.803,153.8,5.4,162.95,8.7,168.78,12.26,174.61,15.82,177.95,19.18,181.28,22.54,182.54,25.46,183.8,28.38,183.8,30.4,183.8,31.6,183.33,32.63,182.86,33.65,182.15,34.4,181.43,35.15,180.59,35.58,179.75,36,179,36,177.72,36,176.79,35.7,175.86,35.39,175.15,34.75,174.43,34.12,173.88,33.14,173.32,32.15,172.8,30.8,171.75,28.4,169.73,25.51,167.72,22.62,164.95,19.65,162.17,16.69,158.74,13.87,155.3,11.05,151.4,8.8,153.8,5.4,153.798,5.404] ) );
          shape.graphics.endFill();

          return shape;
        },
        "ら" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [43.4,178,66.12,176.95,83.75,174.13,101.37,171.31,113.42,166.08,125.48,160.84,131.74,152.89,138,144.93,138,133.6,138,124.38,135.45,118.13,132.89,111.88,128.22,108.08,123.56,104.27,116.99,102.64,110.42,101,102.4,101,95.72,101,88.24,102.79,80.76,104.58,72.85,108.28,64.94,111.97,56.78,117.62,48.62,123.28,40.6,131,39.47,132.05,38.59,133.37,37.7,134.69,36.8,135.85,35.9,137.01,34.86,137.81,33.83,138.6,32.4,138.6,29.55,138.6,27.1,137.5,24.65,136.39,22.85,134.7,21.05,133.01,20.03,131.01,19,129,19,127.2,19,126.15,19.28,125.38,19.55,124.61,20,123.88,20.45,123.15,21.03,122.34,21.6,121.53,22.2,120.4,22.88,119.13,23.56,117.46,24.25,115.8,24.85,113.83,25.45,111.86,25.91,109.63,26.38,107.4,26.6,105,26.9,102.68,27.25,99.62,27.6,96.56,27.9,93.15,28.2,89.74,28.4,86.16,28.6,82.58,28.6,79.2,28.6,77.48,28.53,75.84,28.45,74.21,28.3,72.73,28.15,71.25,27.93,69.95,27.7,68.65,27.4,67.6,27.25,67.08,27.14,66.55,27.03,66.03,26.95,65.5,26.88,64.98,26.84,64.45,26.8,63.93,26.8,63.4,26.8,61.45,27.38,59.44,27.96,57.42,29.33,55.38,30.69,53.33,32.96,51.28,35.23,49.23,38.6,47.2,41.3,45.55,45.61,43.77,49.92,41.98,54.8,40.43,59.67,38.87,64.59,37.72,69.5,36.58,73.4,36.2,73.2,36,66.52,35.48,60.89,33.96,55.25,32.45,50.75,29.88,46.25,27.31,42.94,23.66,39.63,20,37.6,15.2,42.2,12.6,45.65,18.15,50.85,21.16,56.06,24.17,62.67,25.55,69.29,26.94,77.16,27.17,85.02,27.4,93.8,27.4,98,27.4,101.75,28.44,105.49,29.49,108.32,31.23,111.16,32.97,112.84,35.25,114.52,37.53,114.6,40,114.6,41.35,113.88,42.24,113.17,43.13,112.02,43.65,110.88,44.18,109.45,44.39,108.02,44.6,106.6,44.6,105.77,44.6,104.36,44.19,102.94,43.77,101.27,43.23,99.61,42.69,97.85,42.16,96.1,41.63,94.6,41.4,93.25,41.18,91.87,41.03,90.49,40.87,89.1,40.78,87.71,40.69,86.33,40.64,84.95,40.6,83.6,40.6,77.9,40.6,72.35,41.31,66.8,42.02,61.7,43.25,56.6,44.49,52.1,46.17,47.6,47.85,44,49.8,41.83,50.85,39.99,51.94,38.16,53.02,36.83,54.28,35.49,55.54,34.75,57.03,34,58.53,34,60.4,34,61.3,34.21,62.29,34.43,63.27,34.8,64.2,35.18,65.14,35.69,65.97,36.2,66.8,36.8,67.4,37.4,67.93,37.91,68.85,38.43,69.77,38.8,70.85,39.18,71.94,39.39,73.09,39.6,74.23,39.6,75.2,39.6,77.15,39.23,79.69,38.87,82.22,38.33,85.73,37.78,89.24,37.15,93.91,36.53,98.58,36,104.8,35.77,107.5,35.47,109.84,35.17,112.17,34.77,114.18,34.38,116.18,33.89,117.88,33.4,119.58,32.8,121,32.73,121.08,32.68,121.19,32.64,121.29,32.63,121.4,32.61,121.52,32.6,121.62,32.6,121.73,32.6,121.8,32.6,122.03,32.67,122.24,32.74,122.46,32.88,122.63,33.01,122.8,33.19,122.9,33.38,123,33.6,123,34.13,123,34.76,122.95,35.39,122.89,36.1,122.7,36.81,122.52,37.59,122.16,38.38,121.8,39.2,121.2,46.4,116.03,54.51,111.19,62.63,106.36,70.95,102.63,79.28,98.9,87.46,96.65,95.65,94.41,103,94.41,113.88,94.41,122.61,96.74,131.34,99.07,137.47,103.93,143.61,108.79,146.9,116.26,150.2,123.73,150.2,134,150.2,147.95,143,157.24,135.8,166.53,122.15,172.15,108.5,177.78,88.78,180.24,69.05,182.7,44,183,43.4,178,43.4,178.001] ) );
          shape.graphics.endFill();

          return shape;
        },
        "と" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [110.2,58.2,110.65,57.15,111.58,56.21,112.51,55.27,113.73,54.55,114.94,53.84,116.36,53.42,117.78,53,119.2,53,122.28,53,125.6,54.57,128.92,56.15,131.68,58.53,134.43,60.91,136.22,63.72,138,66.53,138,69,138,70.65,137.18,72.02,136.36,73.39,134.73,74.55,133.09,75.72,130.66,76.71,128.23,77.7,125,78.6,108.13,83.7,90.8,91.02,73.47,98.34,59.43,107.15,45.38,115.97,36.49,125.91,27.6,135.85,27.6,146.2,27.6,154.9,31.73,159.9,35.87,164.89,42.95,167.4,50.04,169.91,59.5,170.56,68.95,171.2,79.6,171.2,89.28,171.2,97.18,170.62,105.08,170.04,111.03,169.1,116.97,168.16,120.86,166.98,124.75,165.8,126.4,164.6,130.15,164.98,133.59,165.28,137.03,165.58,139.65,166.25,142.28,166.93,143.84,168.2,145.4,169.48,145.4,171.8,145.4,173.15,144.06,174.15,142.73,175.15,140.4,175.9,138.08,176.65,134.94,177.2,131.8,177.75,128.2,178.2,124.75,178.65,119.88,179.18,115.01,179.7,108.9,180.15,102.79,180.6,95.52,180.9,88.25,181.2,80,181.2,64.18,181.2,52.57,179.32,40.97,177.43,33.38,173.33,25.78,169.22,22.09,162.72,18.4,156.23,18.4,147,18.4,140.7,21.75,134.07,25.1,127.45,30.93,120.98,36.76,114.51,44.64,108.44,52.53,102.38,61.6,97.2,57.1,94.28,54.66,90.38,52.23,86.48,51.1,80.88,49.98,75.27,49.79,67.59,49.6,59.9,49.6,49.4,49.6,48.65,49.66,46.65,49.73,44.65,49.8,42.38,49.88,40.11,49.94,38.07,50,36.03,50,35.2,50,33.85,49.85,31.97,49.7,30.08,48.78,28.35,47.86,26.63,45.87,25.42,43.88,24.2,40.2,24.2,39.68,24.2,39.15,24.24,38.61,24.27,38.05,24.33,37.49,24.39,36.88,24.46,36.28,24.53,35.6,24.6,35.2,23.4,35.88,22.13,37.02,20.88,38.16,19.62,39.55,18.63,40.94,17.64,42.46,17.02,43.98,16.4,45.4,16.4,48.93,16.4,52.52,17.3,56.12,18.2,59.03,19.83,61.93,21.46,63.77,23.74,65.6,26.03,65.6,28.8,65.6,29.7,65.03,30.9,64.46,32.09,63.73,33.55,62.99,35.02,62.31,36.74,61.63,38.45,61.4,40.4,61.03,43.33,60.76,46.42,60.5,49.5,60.33,52.65,60.16,55.8,60.08,58.97,60,62.13,60,65.2,60,66.85,60.04,68.46,60.07,70.07,60.13,71.63,60.18,73.19,60.25,74.68,60.33,76.18,60.4,77.6,60.55,80.3,61.51,82.76,62.47,85.21,63.88,87.18,65.28,89.15,66.95,90.51,68.63,91.88,70.2,92.4,74.18,90.23,79.32,87.64,84.47,85.05,90.08,82.35,95.68,79.65,101.39,76.99,107.1,74.33,112.2,72,114.45,70.95,116.14,69.97,117.83,68.98,118.95,68,120.08,67.03,120.64,66.04,121.2,65.05,121.2,64,121.2,63.1,120.4,62.1,119.59,61.09,118.23,60.3,116.86,59.52,115.04,59.11,113.23,58.7,111.2,59,110.2,58.2,110.201,58.203] ) );
          shape.graphics.endFill();

          return shape;
        },
        "真" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [176.4,133.6,193.6,145.6,193,146.65,192.21,147.47,191.42,148.29,190.3,148.85,189.17,149.41,187.63,149.71,186.1,150,184,150,8.6,150,7.2,145,167.2,145,176.4,133.6,176.397,133.602,83.8,162.6,83.42,163.13,82.93,163.5,82.44,163.88,81.82,164.13,81.21,164.37,80.45,164.49,79.7,164.6,78.8,164.6,78.35,164.6,77.86,164.59,77.38,164.59,76.87,164.55,76.37,164.51,75.85,164.43,75.32,164.35,74.8,164.2,69.25,167.8,61.91,171.76,54.56,175.71,46.2,179.5,37.84,183.29,28.84,186.64,19.85,190,11,192.4,9.6,189.2,17.7,185.98,26.17,181.55,34.65,177.13,42.45,172.28,50.25,167.42,56.85,162.51,63.45,157.6,67.8,153.4,83.8,162.6,83.799,162.601,17.2,35.2,15.8,30,94,30,94,6.8,114.6,8.6,114.52,9.88,114,10.77,113.47,11.67,112.35,12.3,111.22,12.94,109.42,13.38,107.62,13.83,105,14.2,105,30,159.8,30,168.6,18.8,185.8,30.6,185.2,31.73,184.41,32.59,183.62,33.45,182.47,34.03,181.33,34.61,179.75,34.91,178.17,35.2,176,35.2,105,35.2,105,54.8,143.8,54.8,149.6,47.4,165.6,59,165.07,59.6,164.19,60.19,163.32,60.78,162.17,61.3,161.03,61.83,159.66,62.27,158.3,62.7,156.8,63,156.8,131.4,156.8,131.55,156.15,132.23,155.5,132.9,154.15,133.65,152.8,134.4,150.72,135,148.65,135.6,145.8,135.6,145.8,127.6,54,127.6,54,132.8,54,132.88,53.63,133.51,53.27,134.15,52.12,134.88,50.98,135.61,48.85,136.21,46.72,136.8,43.2,136.8,43.2,49,55.2,54.8,94,54.8,94,35.2,17.2,35.2,17.2,35.203,145.8,59.8,54,59.8,54,77,145.8,77,145.8,59.8,145.798,59.803,54,82,54,99.6,145.8,99.6,145.8,82,54,82,53.999,82.002,54,122.6,145.8,122.6,145.8,104.6,54,104.6,54,122.6,53.999,122.602,120,155.6,139.42,159.2,152.1,163.52,164.78,167.84,172.22,172.15,179.67,176.46,182.63,180.41,185.6,184.35,185.6,187.2,185.6,188.4,185.18,189.36,184.75,190.33,184.02,191,183.29,191.68,182.31,192.04,181.32,192.4,180.2,192.4,179.52,192.4,178.84,192.25,178.17,192.11,177.47,191.83,176.78,191.54,176.06,191.13,175.35,190.73,174.6,190.2,170.85,186.3,165.43,182.26,160.02,178.22,153.02,174.23,146.03,170.23,137.5,166.38,128.97,162.53,119,159,120,155.6,119.998,155.601] ) );
          shape.graphics.endFill();

          return shape;
        },
        "実" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,2,2,3,3,3,3,2,3,3,3,3,2,2,2,2] ), $.toNumberVector( [191.4,131.4,190.8,132.53,190.04,133.36,189.28,134.18,188.17,134.73,187.06,135.27,185.52,135.54,183.97,135.8,181.8,135.8,110,135.8,115.85,144.73,124.41,151.88,132.98,159.03,143.57,164.53,154.17,170.02,166.44,173.91,178.72,177.8,192,180.2,191.8,182.4,189.92,182.7,188.32,183.51,186.72,184.32,185.45,185.58,184.17,186.83,183.25,188.5,182.32,190.18,181.8,192.2,168.45,188.68,156.75,183.53,145.05,178.38,135.3,171.43,125.55,164.47,117.9,155.61,110.25,146.75,105,135.8,96.4,135.8,92.12,144.95,85.23,153.25,78.33,161.55,67.92,168.75,57.52,175.95,43.16,181.93,28.8,187.9,9.6,192.4,8.2,188.4,24.85,183.68,37.47,177.93,50.09,172.19,59.37,165.55,68.65,158.91,74.94,151.45,81.22,143.98,85.2,135.8,10.6,135.8,9.2,130.8,87.4,130.8,88.6,127.8,89.55,124.76,90.49,121.71,91.22,118.6,91.96,115.49,92.49,112.3,93.02,109.1,93.4,105.8,36.6,105.8,35.2,100.8,94,100.8,94.07,99.08,94.15,97.35,94.22,95.63,94.27,93.9,94.33,92.18,94.36,90.45,94.4,88.73,94.4,87,94.4,76.6,28.6,76.6,27.2,71.6,94.4,71.6,94.4,48,113.6,49.6,113.52,50.73,113.13,51.53,112.74,52.34,111.82,52.9,110.9,53.46,109.35,53.82,107.8,54.18,105.4,54.4,105.4,71.6,151.2,71.6,159.2,61.6,161.8,63.4,162.92,61.3,164.13,58.55,165.34,55.8,166.52,52.8,167.71,49.8,168.8,46.75,169.9,43.7,170.8,41,35.4,41,35.02,46.7,33.1,51.41,31.18,56.13,28.27,59.5,25.37,62.88,21.76,64.74,18.15,66.6,14.4,66.6,12.6,66.6,11.37,66.13,10.15,65.65,9.4,64.9,8.65,64.15,8.32,63.23,8,62.3,8,61.4,8,60.43,8.39,59.44,8.78,58.45,9.45,57.53,10.13,56.61,11.04,55.81,11.95,55,13,54.4,16.38,52.9,19.51,50.13,22.65,47.35,25.05,43.6,27.45,39.85,28.86,35.28,30.27,30.7,30.2,25.6,33.8,25.4,34.18,26.83,34.44,28.21,34.71,29.6,34.9,30.93,35.09,32.26,35.21,33.53,35.32,34.8,35.4,36,94.4,36,94.4,6.6,115,8.4,114.92,9.6,114.4,10.49,113.87,11.37,112.75,12.03,111.62,12.69,109.82,13.16,108.02,13.63,105.4,14,105.4,36,170.2,36,178.2,28,192.4,41.8,191.87,42.33,191.15,42.68,190.44,43.03,189.5,43.25,188.56,43.48,187.39,43.6,186.22,43.73,184.8,43.8,183,46.28,180.63,49.18,178.27,52.07,175.65,54.98,173.02,57.89,170.28,60.59,167.55,63.3,165,65.4,175.2,72,174.6,73.2,173.84,74.07,173.08,74.94,172,75.5,170.91,76.07,169.4,76.34,167.9,76.6,165.8,76.6,105.4,76.6,105.4,87,105.4,88.73,105.36,90.45,105.32,92.18,105.25,93.9,105.17,95.63,105.06,97.35,104.95,99.08,104.8,100.8,144.8,100.8,153.2,90.6,169.6,101.4,169,102.6,168.24,103.44,167.48,104.28,166.4,104.8,165.31,105.33,163.8,105.57,162.3,105.8,160.2,105.8,104.4,105.8,104.02,109.03,103.49,112.21,102.95,115.4,102.22,118.53,101.49,121.66,100.54,124.73,99.6,127.8,98.4,130.8,165.6,130.8,174.4,119.6,191.4,131.4,191.397,131.402] ) );
          shape.graphics.endFill();

          return shape;
        },
        "ど" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [110.2,58.2,110.65,57.15,111.58,56.21,112.51,55.27,113.73,54.55,114.94,53.84,116.36,53.42,117.78,53,119.2,53,122.28,53,125.6,54.57,128.92,56.15,131.68,58.53,134.43,60.91,136.22,63.72,138,66.53,138,69,138,70.65,137.18,72.02,136.36,73.39,134.73,74.55,133.09,75.72,130.66,76.71,128.23,77.7,125,78.6,108.13,83.7,90.8,91.02,73.47,98.34,59.43,107.15,45.38,115.97,36.49,125.91,27.6,135.85,27.6,146.2,27.6,154.9,31.73,159.9,35.87,164.89,42.95,167.4,50.04,169.91,59.5,170.56,68.95,171.2,79.6,171.2,89.28,171.2,97.18,170.62,105.08,170.04,111.03,169.1,116.97,168.16,120.86,166.98,124.75,165.8,126.4,164.6,130.15,164.98,133.59,165.28,137.03,165.58,139.65,166.25,142.28,166.93,143.84,168.2,145.4,169.48,145.4,171.8,145.4,173.15,144.06,174.15,142.73,175.15,140.4,175.9,138.08,176.65,134.94,177.2,131.8,177.75,128.2,178.2,124.75,178.65,119.88,179.18,115.01,179.7,108.9,180.15,102.79,180.6,95.52,180.9,88.25,181.2,80,181.2,64.18,181.2,52.57,179.32,40.97,177.43,33.38,173.33,25.78,169.22,22.09,162.72,18.4,156.23,18.4,147,18.4,140.7,21.75,134.07,25.1,127.45,30.93,120.98,36.76,114.51,44.64,108.44,52.53,102.38,61.6,97.2,57.1,94.28,54.66,90.38,52.23,86.48,51.1,80.88,49.98,75.27,49.79,67.59,49.6,59.9,49.6,49.4,49.6,48.65,49.66,46.65,49.73,44.65,49.8,42.38,49.88,40.11,49.94,38.07,50,36.03,50,35.2,50,33.85,49.85,31.97,49.7,30.08,48.78,28.35,47.86,26.63,45.87,25.42,43.88,24.2,40.2,24.2,39.68,24.2,39.15,24.24,38.61,24.27,38.05,24.33,37.49,24.39,36.88,24.46,36.28,24.53,35.6,24.6,35.2,23.4,35.88,22.13,37.02,20.88,38.16,19.62,39.55,18.63,40.94,17.64,42.46,17.02,43.98,16.4,45.4,16.4,48.93,16.4,52.52,17.3,56.12,18.2,59.03,19.83,61.93,21.46,63.77,23.74,65.6,26.03,65.6,28.8,65.6,29.7,65.03,30.9,64.46,32.09,63.73,33.55,62.99,35.02,62.31,36.74,61.63,38.45,61.4,40.4,61.03,43.33,60.76,46.42,60.5,49.5,60.33,52.65,60.16,55.8,60.08,58.97,60,62.13,60,65.2,60,66.85,60.04,68.46,60.07,70.07,60.13,71.63,60.18,73.19,60.25,74.68,60.33,76.18,60.4,77.6,60.55,80.3,61.51,82.76,62.47,85.21,63.88,87.18,65.28,89.15,66.95,90.51,68.63,91.88,70.2,92.4,74.18,90.23,79.32,87.64,84.47,85.05,90.08,82.35,95.68,79.65,101.39,76.99,107.1,74.33,112.2,72,114.45,70.95,116.14,69.97,117.83,68.98,118.95,68,120.08,67.03,120.64,66.04,121.2,65.05,121.2,64,121.2,63.1,120.4,62.1,119.59,61.09,118.23,60.3,116.86,59.52,115.04,59.11,113.23,58.7,111.2,59,110.2,58.2,110.201,58.203,103.6,16,112.3,18.7,117.92,22.12,123.54,25.54,126.8,28.95,130.06,32.37,131.33,35.41,132.6,38.45,132.6,40.4,132.6,41.68,132.23,42.71,131.85,43.75,131.25,44.48,130.65,45.21,129.9,45.61,129.15,46,128.4,46,127.05,46,126.11,45.67,125.16,45.33,124.45,44.68,123.74,44.02,123.17,43.05,122.6,42.08,122,40.8,120.95,38.4,119.06,35.6,117.17,32.8,114.53,29.93,111.88,27.06,108.53,24.29,105.18,21.53,101.2,19.2,103.6,16,103.601,16.003,128.2,7.2,136.9,9.9,142.52,13.35,148.14,16.8,151.4,20.25,154.66,23.7,155.93,26.78,157.2,29.85,157.2,31.8,157.2,33,156.8,34,156.39,34.99,155.77,35.7,155.16,36.42,154.42,36.81,153.67,37.2,153,37.2,151.65,37.2,150.71,36.87,149.76,36.54,149.05,35.88,148.34,35.22,147.77,34.25,147.2,33.28,146.6,32,145.55,29.6,143.66,26.8,141.77,24,139.13,21.15,136.48,18.3,133.13,15.58,129.78,12.85,125.8,10.6,128.2,7.2,128.2,7.204] ) );
          shape.graphics.endFill();

          return shape;
        },
        "こ" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [49.8,87.2,45.23,91.85,41.62,96.86,38.02,101.86,35.53,106.98,33.03,112.1,31.72,117.21,30.4,122.33,30.4,127.2,30.4,134.1,33.27,140.18,36.14,146.26,42.28,150.8,48.41,155.34,57.99,157.97,67.58,160.6,81,160.6,90.45,160.6,98.3,160.16,106.14,159.72,112.13,158.88,118.11,158.03,122.09,156.8,126.08,155.58,127.8,154,132.53,154.6,136.21,155.44,139.89,156.28,142.43,157.43,144.96,158.57,146.28,160.05,147.6,161.53,147.6,163.4,147.6,166.1,142.93,167.72,138.27,169.34,129.78,170.2,121.28,171.06,109.38,171.33,97.48,171.6,83,171.6,63.73,171.6,51.75,167.51,39.78,163.43,33.13,157.5,26.47,151.58,24.14,144.94,21.8,138.3,21.8,133.2,21.8,127.8,22.81,122.09,23.83,116.38,26.6,110.3,29.38,104.23,34.29,97.77,39.2,91.3,47,84.4,49.8,87.2,49.801,87.202,104.2,46.2,97.22,47.18,89.7,48.64,82.17,50.11,75.05,51.48,67.93,52.85,61.68,53.82,55.43,54.8,51,54.8,46.58,54.8,43.02,53.29,39.46,51.77,36.93,49.43,34.39,47.08,32.97,44.26,31.55,41.43,31.4,38.8,31.4,38.05,31.57,37.26,31.75,36.46,32.05,35.73,32.35,35,32.75,34.39,33.15,33.78,33.6,33.4,35,33.6,35.15,35.03,36.26,36.86,37.37,38.7,39.82,40.33,42.28,41.96,46.28,43.08,50.27,44.2,56.2,44.2,61.82,44.2,70.62,43.26,79.42,42.32,88.02,40.88,96.63,39.43,103.36,37.71,110.1,35.98,111.6,34.4,117.67,35.45,121.49,36.76,125.32,38.07,127.47,39.63,129.63,41.18,130.41,42.98,131.2,44.78,131.2,46.8,131.2,47.93,130.25,48.79,129.3,49.66,127.8,50.28,126.3,50.9,124.45,51.27,122.6,51.65,120.8,51.8,115.85,52.03,108.87,54.34,101.89,56.66,94.37,59.98,86.86,63.3,79.54,67.07,72.22,70.85,66.6,74,64,70.8,67.67,67.88,72.88,64.64,78.08,61.4,83.57,58.25,89.07,55.1,94.23,52.24,99.4,49.38,103,47.2,104.2,46.2,104.199,46.203] ) );
          shape.graphics.endFill();

          return shape;
        },
        "？" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [64,141.8,64,131.6,64.71,123.97,65.42,116.33,68.2,110.13,70.98,103.92,76.49,98.57,82,93.23,91.6,87.6,95.2,85.5,98.18,82.76,101.16,80.01,103.3,76.75,105.44,73.49,106.62,69.77,107.8,66.05,107.8,62,107.8,52.78,104.28,46.78,100.77,40.78,95.42,37.28,90.08,33.77,83.75,32.39,77.42,31,71.8,31,65.95,31,61.24,32.01,56.52,33.01,52.85,34.55,49.17,36.09,46.49,37.92,43.8,39.75,42,41.4,39.15,44.03,37.61,46.71,36.06,49.39,35.35,52.05,34.64,54.71,34.52,57.32,34.4,59.93,34.4,62.4,34.4,64.43,34.05,66.3,33.69,68.18,32.77,69.63,31.86,71.07,30.27,71.94,28.67,72.8,26.2,72.8,24.47,72.8,22.85,72.22,21.23,71.64,19.97,70.4,18.72,69.16,17.96,67.23,17.2,65.3,17.2,62.6,17.2,55.55,20.97,48.86,24.75,42.17,31.8,36.95,38.85,31.74,48.92,28.57,59,25.4,71.6,25.4,83.3,25.4,92.76,28.31,102.22,31.22,108.9,36.2,115.57,41.19,119.19,47.85,122.8,54.5,122.8,62,122.8,67.78,120.96,72.43,119.11,77.09,116.15,80.8,113.19,84.52,109.47,87.37,105.75,90.23,102,92.4,91.5,98.1,85.31,102.48,79.12,106.86,75.9,112,72.67,117.14,71.74,124.07,70.8,131,70.8,141.8,64,141.8,64,141.801,55.8,167.8,55.8,165.48,56.71,163.4,57.62,161.33,59.17,159.78,60.73,158.22,62.8,157.31,64.87,156.4,67.2,156.4,69.52,156.4,71.56,157.31,73.61,158.22,75.12,159.78,76.64,161.33,77.52,163.4,78.4,165.48,78.4,167.8,78.4,170.05,77.52,172.08,76.64,174.11,75.12,175.65,73.61,177.19,71.56,178.09,69.52,179,67.2,179,64.72,179,62.63,178.04,60.54,177.08,59.02,175.5,57.51,173.93,56.65,171.91,55.8,169.9,55.8,167.8,55.8,167.801] ) );
          shape.graphics.endFill();

          return shape;
        },
        "夢" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,2,1,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [179.4,95.8,193,109,192.47,109.53,191.75,109.85,191.03,110.16,190.1,110.35,189.16,110.54,187.99,110.63,186.82,110.73,185.4,110.8,183.9,112.98,181.85,115.57,179.8,118.17,177.55,120.78,175.3,123.38,173.02,125.79,170.75,128.2,168.8,130,165.6,128.4,166.42,126.68,167.4,124.26,168.38,121.85,169.37,119.13,170.37,116.41,171.31,113.58,172.25,110.75,173,108.2,92.4,108.2,104.2,111.2,103.97,111.95,103.36,112.49,102.75,113.02,101.7,113.38,100.65,113.73,99.14,113.93,97.62,114.13,95.6,114.2,94.17,115.55,92.6,116.94,91.04,118.32,89.35,119.73,87.66,121.13,85.87,122.55,84.07,123.98,82.2,125.4,138.6,125.4,145.6,119,158.6,130.6,158,131.13,157.16,131.51,156.33,131.89,155.22,132.15,154.12,132.41,152.72,132.57,151.32,132.73,149.6,132.8,138.05,146.08,125.7,155.9,113.36,165.71,98.4,172.8,83.44,179.89,64.94,184.61,46.45,189.33,22.6,192.4,21.6,188.2,41.47,184.6,58.04,179.79,74.6,174.98,88.55,168.15,102.5,161.33,114.18,152.09,125.87,142.85,136,130.4,75.2,130.4,73.62,131.45,72.01,132.53,70.4,133.61,68.75,134.68,67.1,135.75,65.41,136.79,63.72,137.83,62,138.8,71.22,140.53,77.5,143.18,83.78,145.83,87.62,148.78,91.47,151.72,93.13,154.64,94.8,157.55,94.8,159.8,94.8,160.85,94.48,161.7,94.16,162.55,93.57,163.15,92.99,163.75,92.18,164.08,91.37,164.4,90.4,164.4,90.1,164.4,89.73,164.36,89.36,164.32,88.95,164.23,88.54,164.13,88.09,163.98,87.65,163.83,87.2,163.6,85.1,160.68,81.7,157.52,78.3,154.36,74.25,151.38,70.2,148.4,65.82,145.8,61.45,143.2,57.4,141.4,53.72,143.43,49.91,145.3,46.09,147.17,42.15,148.85,38.21,150.54,34.17,152.03,30.13,153.53,26,154.8,24.2,152,33.2,148.33,42.05,143.19,50.9,138.05,58.85,132.2,66.8,126.35,73.47,120.17,80.15,113.98,84.8,108.2,31,108.2,30.85,112.93,29.49,116.99,28.14,121.05,25.85,124.03,23.56,127.01,20.48,128.71,17.4,130.4,13.8,130.4,12.68,130.4,11.57,130.19,10.46,129.97,9.57,129.43,8.69,128.89,8.15,127.96,7.6,127.03,7.6,125.6,7.6,124.55,7.99,123.55,8.38,122.55,9.05,121.63,9.73,120.71,10.64,119.89,11.55,119.08,12.6,118.4,15.23,117.05,17.64,114.66,20.06,112.27,21.9,109.15,23.74,106.04,24.81,102.37,25.88,98.7,25.8,94.8,29.4,94.8,29.7,95.93,29.93,97.02,30.16,98.1,30.33,99.15,30.49,100.2,30.61,101.22,30.73,102.23,30.8,103.2,172.2,103.2,179.4,95.8,179.397,95.802,61.4,32.4,9,32.4,8,27.4,61.4,27.4,61.4,7,80.2,8.4,80.12,9.53,79.74,10.31,79.35,11.08,78.45,11.63,77.55,12.17,76.04,12.54,74.52,12.9,72.2,13.2,72.2,27.4,126.8,27.4,126.8,7,145.4,8.4,145.32,9.53,144.94,10.27,144.55,11.02,143.67,11.53,142.79,12.03,141.32,12.37,139.85,12.7,137.6,13,137.6,27.4,166.8,27.4,175.2,16.2,192.2,28.2,191.52,29.25,190.73,30.04,189.93,30.83,188.85,31.35,187.76,31.88,186.29,32.14,184.82,32.4,182.8,32.4,137.6,32.4,137.6,45.2,137.6,45.43,137.23,46.05,136.87,46.67,135.72,47.33,134.58,47.98,132.45,48.49,130.32,49,126.8,49,126.8,32.4,72.2,32.4,72.2,46.2,72.2,46.58,71.75,47.04,71.29,47.5,70.52,47.95,69.75,48.4,68.74,48.79,67.72,49.18,66.6,49.4,153.2,49.4,158.6,42.4,174.4,53.6,173.87,54.2,173,54.79,172.12,55.38,171,55.9,169.87,56.43,168.55,56.87,167.22,57.3,165.8,57.6,165.8,90,165.72,90.3,165.04,90.97,164.36,91.63,163.05,92.3,161.73,92.98,159.78,93.49,157.82,94,155.2,94,155.2,87.4,44.6,87.4,44.6,92.2,44.6,92.28,44.15,92.85,43.71,93.42,42.52,94.08,41.34,94.73,39.28,95.27,37.22,95.8,34,95.8,34,44,45.8,49.4,61.4,49.4,61.4,32.4,61.399,32.403,73.8,82.4,73.8,54.4,44.6,54.4,44.6,82.4,73.8,82.4,73.799,82.402,114.4,54.4,84.2,54.4,84.2,82.4,114.4,82.4,114.4,54.4,114.398,54.403,155.2,54.4,124.8,54.4,124.8,82.4,155.2,82.4,155.2,54.4,155.197,54.403] ) );
          shape.graphics.endFill();

          return shape;
        },
        "の" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [91.8,171.8,112.87,169.25,127.54,162.83,142.21,156.41,151.37,147.3,160.54,138.19,164.67,126.97,168.8,115.75,168.8,103.6,168.8,90.1,165.33,77.85,161.86,65.6,154.25,56.3,146.64,47,134.54,41.5,122.45,36,105.2,36,103.85,36,101.73,36.14,99.61,36.28,97.25,36.53,94.89,36.77,92.54,37.1,90.2,37.43,88.4,37.8,89.97,39.08,91.14,41.17,92.31,43.25,93.07,45.8,93.84,48.35,94.22,51.19,94.6,54.03,94.6,56.8,94.6,70.53,90.01,87.68,85.42,104.83,77.7,119.93,69.97,135.02,59.84,145.31,49.7,155.6,38.6,155.6,33.5,155.6,29.24,152.63,24.97,149.66,21.9,144.28,18.82,138.89,17.11,131.39,15.4,123.88,15.4,114.8,15.4,97.18,22.22,81.79,29.03,66.4,41.12,54.98,53.22,43.56,69.82,36.98,86.42,30.4,106,30.4,124.45,30.4,138.5,35.89,152.56,41.38,162.05,51.23,171.54,61.07,176.37,74.7,181.2,88.33,181.2,104.6,181.2,118.48,176.34,130.71,171.47,142.93,160.9,152.48,150.32,162.02,133.61,168.36,116.9,174.7,93.2,176.8,91.8,171.8,91.8,171.801,83,39,71.45,41.63,61.1,48.17,50.75,54.71,42.95,64.48,35.15,74.25,30.58,86.9,26,99.55,26,114.4,26,120.4,26.91,125.75,27.83,131.09,29.55,135.1,31.28,139.11,33.76,141.46,36.25,143.8,39.4,143.8,48.4,143.8,56.84,134.07,65.27,124.35,71.8,110.23,78.32,96.11,82.26,80.27,86.2,64.43,86.2,52.2,86.2,50.25,85.95,48.2,85.71,46.15,85.27,44.33,84.84,42.51,84.26,41.09,83.67,39.68,83,39,83,39.003] ) );
          shape.graphics.endFill();

          return shape;
        },
        "中" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [170,41,186,52.4,185.47,53,184.63,53.62,183.78,54.24,182.67,54.8,181.57,55.37,180.23,55.83,178.9,56.3,177.4,56.6,177.4,135,177.32,135.23,176.58,135.88,175.83,136.53,174.45,137.23,173.06,137.92,171.04,138.46,169.02,139,166.4,139,166.4,120.6,105,120.6,105,187.6,105,187.83,104.63,188.6,104.25,189.38,103.07,190.23,101.89,191.07,99.68,191.74,97.47,192.4,93.8,192.4,93.8,120.6,33.4,120.6,33.4,136.8,33.4,136.8,33.09,137.43,32.78,138.05,31.67,138.8,30.57,139.55,28.42,140.18,26.27,140.8,22.6,140.8,22.6,42.4,34.6,48.2,93.8,48.2,93.8,7.6,113.6,9.4,113.45,10.45,112.96,11.25,112.47,12.05,111.47,12.63,110.48,13.21,108.9,13.59,107.32,13.98,105,14.2,105,48.2,164.4,48.2,170,41,169.997,41.003,33.4,115.6,93.8,115.6,93.8,53.4,33.4,53.4,33.4,115.6,33.399,115.602,105,115.6,166.4,115.6,166.4,53.4,105,53.4,105,115.6,104.998,115.602] ) );
          shape.graphics.endFill();

          return shape;
        },
        "本" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,2,3,3,3,3,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,2,2] ), $.toNumberVector( [191.2,56,190.6,57.13,189.84,57.96,189.08,58.78,187.97,59.33,186.87,59.87,185.32,60.14,183.77,60.4,181.6,60.4,109.6,60.4,116.65,73.98,126.31,86.72,135.97,99.47,147.15,110.48,158.32,121.48,170.46,130.29,182.6,139.1,194.6,144.8,194.2,146.8,192.32,146.95,190.56,147.62,188.79,148.29,187.27,149.45,185.75,150.61,184.55,152.26,183.35,153.9,182.6,156,171.05,148.95,159.93,139.11,148.82,129.26,138.82,117.15,128.83,105.04,120.3,90.92,111.77,76.8,105.4,61.2,105.4,143.6,126.4,143.6,135.2,132.2,152,144.2,151.32,145.4,150.53,146.24,149.74,147.08,148.65,147.6,147.56,148.13,146.09,148.36,144.62,148.6,142.6,148.6,105.4,148.6,105.4,188,105.4,188.22,105.03,188.94,104.66,189.66,103.5,190.42,102.34,191.19,100.17,191.8,98,192.4,94.4,192.4,94.4,148.6,50,148.6,48.8,143.6,94.4,143.6,94.4,67.6,87.65,81.25,78.77,93.95,69.9,106.65,59.1,118.05,48.3,129.45,35.67,139.38,23.05,149.3,8.8,157.4,6.4,154.4,19.3,145.63,30.9,134.82,42.51,124.01,52.42,111.9,62.34,99.79,70.38,86.73,78.42,73.68,84.2,60.4,10.6,60.4,9.2,55.4,94.4,55.4,94.4,7.6,114.2,9.4,114.05,10.45,113.56,11.25,113.06,12.05,112.05,12.63,111.04,13.21,109.42,13.59,107.8,13.98,105.4,14.2,105.4,55.4,164,55.4,173.4,43.4,191.2,56,191.197,56.003] ) );
          shape.graphics.endFill();

          return shape;
        },
        "当" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [164.2,78.8,180.2,90.6,179.67,91.2,178.79,91.82,177.92,92.44,176.77,93,175.63,93.56,174.26,94.03,172.9,94.5,171.4,94.8,171.4,186.8,171.4,187.1,170.75,187.86,170.1,188.61,168.75,189.4,167.4,190.19,165.32,190.79,163.25,191.4,160.4,191.4,160.4,177.6,23.6,177.6,22,172.6,160.4,172.6,160.4,134,30.8,134,29.2,129,160.4,129,160.4,91.4,28.4,91.4,26.8,86.4,94.4,86.4,94.4,7.8,115,9.6,114.92,10.88,114.4,11.77,113.87,12.67,112.75,13.3,111.62,13.94,109.82,14.39,108.02,14.83,105.4,15.2,105.4,86.4,158.4,86.4,164.2,78.8,164.197,78.802,25,20.8,35.57,26.88,42.68,33.08,49.78,39.28,54.07,45.08,58.37,50.87,60.18,55.99,62,61.1,62,65,62,67.18,61.54,68.89,61.08,70.6,60.27,71.78,59.47,72.96,58.37,73.58,57.27,74.2,56,74.2,55.4,74.2,54.77,74.08,54.14,73.96,53.5,73.7,52.86,73.44,52.23,73.02,51.6,72.6,51,72,50.17,66.08,47.35,59.31,44.53,52.53,40.57,45.88,36.62,39.22,31.96,33.16,27.3,27.1,22.8,22.6,25,20.8,25,20.803,128.4,76.6,132.07,71.58,136.19,65,140.3,58.42,144.5,50.98,148.7,43.53,152.81,35.57,156.92,27.6,160.6,19.8,178.8,28.6,178.5,29.2,178.11,29.69,177.72,30.17,177.2,30.5,176.67,30.84,175.98,31.02,175.3,31.2,174.4,31.2,174.02,31.2,173.64,31.17,173.27,31.14,172.87,31.08,172.48,31.02,172.06,30.95,171.65,30.88,171.2,30.8,166.77,37.48,161.83,44.15,156.88,50.83,151.75,57.05,146.61,63.28,141.44,68.83,136.27,74.38,131.4,78.8,128.4,76.6,128.398,76.603] ) );
          shape.graphics.endFill();

          return shape;
        },
        "も" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [49.8,19.6,50.55,17.73,51.44,16.46,52.33,15.2,53.6,14.43,54.88,13.66,56.66,13.33,58.45,13,61,13,64.83,13,68.46,14.02,72.09,15.03,74.93,16.6,77.76,18.18,79.48,20.09,81.2,22,81.2,23.8,81.2,25,80.69,26.1,80.18,27.2,79.5,28.4,78.82,29.6,78.16,31,77.5,32.4,77.2,34.2,76.83,36.15,76.41,38.24,76,40.32,75.55,42.48,75.1,44.64,74.61,46.83,74.13,49.03,73.6,51.2,77.2,50.9,80.35,50.37,83.49,49.84,86.02,49.05,88.56,48.27,90.39,47.21,92.22,46.15,93.2,44.8,97.47,44.65,100.51,45.14,103.54,45.62,105.47,46.55,107.41,47.49,108.3,48.8,109.2,50.1,109.2,51.6,109.2,52.05,108.91,52.63,108.62,53.21,107.95,53.83,107.27,54.45,106.16,55.06,105.05,55.68,103.4,56.2,102.05,56.58,98.74,57.11,95.43,57.64,91.02,58.18,86.62,58.72,81.55,59.21,76.47,59.7,71.6,60,70.03,65.85,68.34,72.03,66.66,78.2,65.05,84.48,63.44,90.76,61.98,97.04,60.53,103.33,59.4,109.4,64.2,109.4,69.6,109.27,74.99,109.15,79.77,108.83,84.56,108.51,88.11,107.97,91.67,107.43,92.8,106.6,96.25,107.28,99.31,108.23,102.36,109.19,104.65,110.35,106.94,111.52,108.27,112.85,109.6,114.18,109.6,115.6,109.6,116.5,109.1,117.24,108.61,117.98,107.72,118.5,106.84,119.03,105.63,119.32,104.42,119.6,103,119.6,102.55,119.6,102.1,119.57,101.65,119.53,101.2,119.48,100.75,119.42,100.3,119.35,99.85,119.28,99.4,119.2,95.2,118.45,90.99,118.08,86.79,117.71,81.95,117.58,77.11,117.45,71.33,117.49,65.55,117.53,58.2,117.6,57.75,119.78,57.35,122.46,56.95,125.13,56.65,127.93,56.35,130.72,56.17,133.44,56,136.15,56,138.4,56,147.4,57.69,154,59.38,160.59,63.67,164.9,67.97,169.21,75.32,171.31,82.67,173.4,94,173.4,107.05,173.4,116.27,171.51,125.5,169.61,131.35,166.33,137.2,163.05,139.9,158.64,142.6,154.23,142.6,149.2,142.6,143.8,141.37,138.72,140.15,133.63,137.75,128.63,135.35,123.62,131.8,118.57,128.25,113.53,123.6,108.2,128.2,105,134.35,112.28,139.18,118.43,144.01,124.59,147.35,130.1,150.69,135.62,152.44,140.72,154.2,145.83,154.2,151,154.2,157.08,151.47,162.96,148.75,168.85,142,173.48,135.25,178.11,123.82,180.96,112.4,183.8,95,183.8,81.35,183.73,72.11,180.89,62.88,178.05,57.25,172.48,51.63,166.91,49.21,158.63,46.8,150.35,46.8,139.4,46.8,137,47.03,134.14,47.26,131.28,47.6,128.38,47.94,125.47,48.32,122.72,48.7,119.98,49,117.8,41.73,117.65,35.97,116.26,30.22,114.86,26.23,112.33,22.23,109.8,20.12,106.19,18,102.58,18,98,18,92.75,21.25,87.23,24.49,81.71,29.73,76.63,34.96,71.55,41.54,67.26,48.13,62.98,54.8,60.2,49,60.2,44.05,60.13,39.18,58.98,34.31,57.83,30.43,55.35,26.54,52.88,24.11,48.95,21.68,45.03,21.6,39.4,25.4,38.4,25.78,42.3,28.04,44.98,30.3,47.65,34.03,49.3,37.76,50.95,42.75,51.68,47.75,52.4,53.6,52.4,54.05,52.4,55.32,52.43,56.58,52.46,58.03,52.48,59.47,52.5,60.77,52.49,62.08,52.48,62.6,52.4,63.13,49.4,63.66,46.36,64.19,43.32,64.63,40.38,65.06,37.44,65.33,34.66,65.6,31.88,65.6,29.4,65.6,26.18,64.24,24.22,62.87,22.27,60.68,21.25,58.48,20.24,55.73,20.01,52.98,19.78,50.2,20,49.8,19.6,49.801,19.604,61.6,61.2,54.55,64.35,48.11,68.38,41.67,72.4,36.78,76.9,31.88,81.4,29,86.18,26.13,90.95,26.2,95.6,26.2,99.8,28.02,102.45,29.83,105.1,33.08,106.6,36.32,108.1,40.8,108.65,45.28,109.2,50.6,109.2,51.8,103.8,53.19,97.54,54.58,91.28,56.03,84.9,57.47,78.53,58.9,72.42,60.33,66.3,61.6,61.2,61.601,61.203] ) );
          shape.graphics.endFill();

          return shape;
        },
        "偽" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,2,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,2,3,3,3,3,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,2,3,3,3,3,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [71.4,14.4,71.1,15.3,70.6,16.01,70.11,16.71,69.25,17.18,68.39,17.65,67.07,17.86,65.75,18.08,63.8,18,61.85,23.48,59.72,28.83,57.59,34.19,55.3,39.4,53.01,44.62,50.58,49.67,48.15,54.73,45.6,59.6,52.8,62.2,52.57,62.88,52.11,63.47,51.65,64.06,50.92,64.55,50.19,65.04,49.17,65.41,48.15,65.78,46.8,66,46.8,188,46.72,188.45,45.55,189.29,44.39,190.13,42.55,190.95,40.71,191.78,38.42,192.39,36.12,193,33.8,193,31,193,31,84.2,28.3,88.25,25.49,92.07,22.68,95.88,19.77,99.43,16.87,102.97,13.87,106.22,10.88,109.48,7.8,112.4,5,110.6,10.93,101.9,16.91,90.14,22.9,78.38,28.45,64.8,34,51.23,38.86,36.47,43.72,21.7,47.4,7,71.4,14.4,71.398,14.403,176.8,109.4,194.6,123,194.07,123.6,193.35,124.12,192.63,124.64,191.7,125.05,190.76,125.46,189.59,125.76,188.42,126.05,187,126.2,186.17,139.55,184.94,150,183.71,160.46,181.95,168.13,180.18,175.8,177.83,180.74,175.47,185.68,172.4,188,170.37,189.43,168.22,190.45,166.07,191.47,163.57,192.13,161.08,192.78,158.14,193.09,155.2,193.4,151.6,193.4,151.75,189.58,151.07,187.21,150.38,184.84,148.4,183.33,146.41,181.81,142.88,180.83,139.35,179.85,133.8,178.8,133.8,175.6,135.97,175.75,139.03,175.89,142.08,176.04,145.2,176.15,148.31,176.26,151.07,176.33,153.82,176.4,155.4,176.4,156.6,176.4,157.52,176.35,158.45,176.29,159.2,176.12,159.95,175.96,160.57,175.64,161.2,175.32,161.8,174.8,163.45,173.37,164.84,169.35,166.23,165.32,167.4,158.77,168.56,152.23,169.5,143.22,170.45,134.2,171.2,122.8,85.2,122.8,81.3,126.63,77.16,130.26,73.02,133.89,68.6,137.3,64.17,140.71,59.44,143.89,54.7,147.08,49.6,150,47.6,147.4,59.3,138.48,69.03,127.82,78.75,117.16,86.72,105.33,94.69,93.49,101.01,80.77,107.32,68.05,112.2,55,65.8,55,64.4,50.6,113.8,50.6,115.75,45.05,117.44,39.48,119.13,33.9,120.57,28.35,122.02,22.8,123.22,17.3,124.42,11.8,125.4,6.4,131.4,7.83,135.44,8.77,139.48,9.72,142.27,10.38,145.07,11.03,146.97,11.49,148.87,11.95,150.6,12.4,150.3,13.38,149.77,14.12,149.24,14.87,148.3,15.38,147.36,15.88,145.93,16.14,144.5,16.4,142.4,16.4,141.27,20.6,140.03,24.84,138.79,29.08,137.4,33.35,136.01,37.63,134.47,41.94,132.92,46.25,131.2,50.6,147.4,50.6,154.4,43.2,169.2,55.4,168.67,56,168.05,56.42,167.44,56.85,166.65,57.13,165.86,57.41,164.87,57.57,163.87,57.73,162.6,57.8,158.8,84.8,162.4,84.8,169.2,77.6,184,89.6,183.4,90.2,182.77,90.6,182.15,90.99,181.4,91.25,180.65,91.51,179.72,91.68,178.8,91.85,177.6,92,174.8,111.8,176.8,109.4,176.797,109.402,80,140,80.52,142.03,80.9,143.98,81.28,145.93,81.52,147.8,81.77,149.68,81.88,151.48,82,153.28,82,155,82,161.98,80.24,167.63,78.49,173.28,75.6,177.28,72.71,181.27,69.01,183.43,65.3,185.6,61.4,185.6,59.52,185.6,58.16,185.08,56.81,184.56,55.92,183.7,55.04,182.84,54.62,181.72,54.2,180.6,54.2,179.4,54.2,178.2,54.62,177.02,55.05,175.83,55.8,174.73,56.55,173.62,57.57,172.62,58.6,171.63,59.8,170.8,62.72,169,65.66,165.85,68.59,162.69,70.97,158.63,73.36,154.56,74.9,149.79,76.45,145.03,76.6,140,80,140,79.999,140.001,76.2,8.4,83.55,11.4,88.5,14.81,93.45,18.22,96.45,21.7,99.45,25.19,100.72,28.6,102,32,102,35,102,37.55,101.23,39.68,100.47,41.82,99.17,43.35,97.88,44.89,96.18,45.75,94.47,46.6,92.6,46.6,91.7,46.6,90.77,46.4,89.84,46.2,88.92,45.75,88.01,45.3,87.11,44.58,86.22,43.85,85.4,42.8,85.7,38.75,84.94,34.24,84.19,29.73,82.65,25.33,81.11,20.92,78.93,16.9,76.75,12.88,74.2,9.8,76.2,8.4,76.199,8.403,163.6,89.4,111.6,89.4,109.2,93.15,106.64,96.86,104.09,100.56,101.35,104.18,98.61,107.8,95.68,111.31,92.75,114.83,89.6,118.2,159.4,118.2,163.6,89.4,163.598,89.402,94.6,138.8,98.95,142.33,101.93,145.85,104.91,149.38,106.75,152.75,108.59,156.13,109.39,159.28,110.2,162.43,110.2,165.2,110.2,168.28,109.37,170.85,108.54,173.42,107.17,175.28,105.81,177.13,104.04,178.17,102.27,179.2,100.4,179.2,99.57,179.2,98.72,178.94,97.87,178.68,97.05,178.15,96.22,177.63,95.45,176.84,94.67,176.05,94,175,94.38,173.43,94.67,171.71,94.97,170,95.17,168.2,95.38,166.4,95.49,164.54,95.6,162.68,95.6,160.8,95.6,157.95,95.38,155.07,95.15,152.19,94.7,149.45,94.25,146.71,93.57,144.21,92.9,141.7,92,139.6,94.6,138.8,94.599,138.802,112.6,136,119.42,138.4,124.03,141.31,128.63,144.23,131.42,147.3,134.22,150.38,135.41,153.44,136.6,156.5,136.6,159.2,136.6,161.3,135.97,163.09,135.34,164.89,134.27,166.2,133.2,167.51,131.79,168.26,130.37,169,128.8,169,128.12,169,127.42,168.84,126.71,168.69,126,168.35,125.29,168.01,124.58,167.48,123.87,166.95,123.2,166.2,123.12,162.6,122.08,158.64,121.03,154.67,119.32,150.83,117.62,146.98,115.41,143.5,113.2,140.03,110.8,137.4,112.6,136,112.599,136.001,148.4,55,129.4,55,127.82,58.75,126.1,62.5,124.37,66.25,122.5,69.98,120.62,73.71,118.6,77.42,116.57,81.13,114.4,84.8,143.6,84.8,148.4,55,148.397,55.003,134.4,131.6,141.52,132.5,146.38,134.4,151.24,136.3,154.22,138.7,157.2,141.1,158.5,143.75,159.8,146.4,159.8,148.8,159.8,150.45,159.27,151.88,158.74,153.3,157.82,154.35,156.9,155.4,155.66,156,154.42,156.6,153,156.6,152.4,156.6,151.77,156.49,151.13,156.38,150.5,156.15,149.86,155.93,149.23,155.59,148.6,155.25,148,154.8,147.25,152.03,145.68,149.04,144.11,146.05,142.05,143.2,139.98,140.35,137.59,137.81,135.2,135.28,132.8,133.4,134.4,131.6,134.398,131.602] ) );
          shape.graphics.endFill();

          return shape;
        },
        "り" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [25.6,18.8,26.05,17.9,27,17.17,27.94,16.43,29.13,15.9,30.31,15.38,31.59,15.09,32.88,14.8,34,14.8,37.23,14.8,40.53,16.5,43.84,18.19,46.53,21,49.21,23.82,50.9,27.46,52.6,31.1,52.6,35,52.6,36.8,52.06,38.53,51.51,40.26,50.65,41.93,49.79,43.6,48.72,45.21,47.65,46.83,46.6,48.4,44.05,52.68,41.95,58.09,39.85,63.5,38.35,69.18,36.85,74.86,36.03,80.38,35.2,85.9,35.2,90.4,35.2,91.75,35.28,92.98,35.35,94.22,35.5,95.3,35.65,96.39,35.88,97.32,36.1,98.25,36.4,99,36.8,99,39.88,90.68,44.87,79.92,49.87,69.17,56.67,59.6,63.48,50.04,72.04,43.48,80.6,36.93,90.8,37,93.35,37,96.21,37.48,99.06,37.95,101.95,39,104.84,40.05,107.62,41.73,110.4,43.4,112.8,45.8,116.55,49.4,119.49,54.42,122.43,59.45,124.47,66.18,126.52,72.91,127.62,81.49,128.72,90.08,128.8,100.8,128.8,116.7,124.46,130.72,120.12,144.75,110,156.13,99.87,167.51,83.24,175.87,66.6,184.23,42,188.8,39.8,185,58.55,180.05,71.99,171.53,85.42,163.01,94.05,152.08,102.67,141.15,106.74,128.39,110.8,115.63,110.8,102.2,110.8,92.6,110.31,84.68,109.81,76.77,108.65,70.5,107.49,64.24,105.57,59.62,103.65,55,100.8,52,99.45,50.43,97.91,49.2,96.37,47.97,94.62,47.13,92.88,46.29,90.93,45.84,88.97,45.4,86.8,45.4,78.62,45.33,71.58,51.16,64.54,56.98,58.97,66.38,53.41,75.77,49.48,87.56,45.55,99.35,43.6,111.2,43.83,112.48,44.04,113.81,44.26,115.15,44.43,116.48,44.59,117.81,44.7,119.1,44.8,120.4,44.8,121.6,44.8,123.63,44.52,125.41,44.24,127.19,43.63,128.53,43.01,129.86,42.02,130.63,41.03,131.4,39.6,131.4,35.33,131.4,32.07,128.19,28.82,124.98,26.63,120.25,24.43,115.53,23.32,110.14,22.2,104.75,22.2,100.4,22.2,87.58,24.08,77.24,25.95,66.91,28.2,58.68,30.45,50.44,32.33,44.12,34.2,37.8,34.2,33,34.2,29.55,33.48,26.99,32.76,24.43,31.58,22.73,30.39,21.02,28.89,20.15,27.38,19.28,25.8,19.2,25.6,18.8,25.601,18.803] ) );
          shape.graphics.endFill();

          return shape;
        },
        "ん" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [43.6,122.2,47.95,117.18,53.15,112.42,58.34,107.66,64.15,103.95,69.96,100.24,76.28,97.96,82.6,95.68,89.2,95.6,94.53,95.6,99.29,97.33,104.04,99.06,107.63,102.7,111.21,106.34,113.3,111.97,115.4,117.6,115.4,125.4,115.4,128.4,115.28,131.53,115.15,134.65,115,137.65,114.85,140.65,114.73,143.4,114.6,146.15,114.6,148.4,114.6,153.13,116.15,156.47,117.71,159.81,120.43,161.93,123.14,164.05,126.83,165.02,130.53,166,134.8,166,143.43,166,150.67,162.87,157.92,159.73,163.97,153.68,170.03,147.62,174.99,138.75,179.95,129.88,184,118.4,187.6,119.4,184.52,134.4,179.57,146,174.61,157.59,167.72,165.5,160.84,173.41,152.02,177.51,143.2,181.6,132.4,181.6,124.38,181.6,118.15,179.55,111.93,177.49,107.68,173.58,103.42,169.66,101.21,163.97,99,158.28,99,151,99,148.53,99.13,145.39,99.25,142.24,99.4,139.08,99.55,135.91,99.68,133.03,99.8,130.15,99.8,128.2,99.8,120.93,99.13,116.08,98.46,111.23,96.7,108.33,94.94,105.42,91.87,104.21,88.8,103,84,103,78.9,103,73.13,105.87,67.37,108.73,61.73,113.63,56.08,118.52,50.95,125.02,45.83,131.53,42,138.8,39.75,142.93,38,147.45,36.25,151.97,34.88,156.38,33.51,160.78,32.47,164.82,31.43,168.85,30.6,172,29.93,174.7,28.92,176.51,27.92,178.31,26.63,179.4,25.33,180.49,23.77,180.94,22.2,181.4,20.4,181.4,18.98,181.4,17.36,180.79,15.75,180.18,14.38,178.93,13.01,177.67,12.11,175.75,11.2,173.83,11.2,171.2,11.2,168.95,11.61,166.89,12.01,164.83,12.63,162.95,13.25,161.08,13.99,159.39,14.73,157.7,15.4,156.2,17.05,153.35,19.22,148.6,21.39,143.84,24.05,137.68,26.71,131.51,29.86,124.17,33,116.83,36.6,108.8,41.1,98.98,46.36,87.95,51.63,76.91,56.35,66.9,61.08,56.89,64.61,49.01,68.15,41.13,69.2,37.6,69.43,36.93,69.58,36.29,69.73,35.65,69.83,35.05,69.92,34.45,69.96,33.89,70,33.33,70,32.8,70,30.1,68.69,28.52,67.38,26.94,65.38,26.15,63.37,25.36,60.97,25.21,58.58,25.05,56.4,25.2,56,24.6,56.68,23.03,57.97,21.64,59.27,20.26,60.98,19.23,62.68,18.2,64.69,17.6,66.7,17,68.8,17,73,17,77.28,18.03,81.55,19.06,85,21.03,88.45,23,90.63,25.86,92.8,28.73,92.8,32.4,92.8,34.2,91.79,35.69,90.78,37.18,89.23,38.78,87.67,40.37,85.8,42.27,83.93,44.18,82.2,46.8,77.25,54.38,71.75,64,66.24,73.63,60.95,83.78,55.66,93.92,50.98,103.81,46.3,113.7,43,121.8,43.6,122.2,43.602,122.202] ) );
          shape.graphics.endFill();

          return shape;
        },
        "な" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [107.8,33.2,113.35,33.2,117.17,33.7,120.99,34.2,123.35,35.1,125.71,36,126.76,37.25,127.8,38.5,127.8,40,127.8,41.8,126.94,43.18,126.07,44.57,124.2,45.8,122.32,47.04,119.36,48.27,116.4,49.5,112.2,51,108.52,52.28,103.18,53.88,97.84,55.48,91.95,57.08,86.06,58.67,80.19,60.09,74.32,61.5,69.6,62.4,66.67,71.7,61.99,83.34,57.31,94.97,51.95,106.58,46.59,118.18,41.08,128.58,35.58,138.98,31,145.8,30.32,146.85,29.43,147.76,28.53,148.68,27.55,149.35,26.58,150.03,25.6,150.41,24.63,150.8,23.8,150.8,22.9,150.8,21.6,150.34,20.3,149.89,19.1,148.8,17.9,147.71,17.05,145.91,16.2,144.1,16.2,141.4,16.2,140.2,16.34,138.73,16.49,137.25,16.9,135.75,17.31,134.25,18.06,132.85,18.8,131.45,20,130.4,24.8,126.35,30.19,118.88,35.57,111.41,40.58,102.28,45.58,93.14,49.73,83.24,53.88,73.33,56.2,64.4,53.05,64.78,50.75,65.01,48.44,65.25,46.63,65.38,44.81,65.51,43.29,65.56,41.78,65.6,40.2,65.6,36.6,65.6,33.63,65.19,30.65,64.77,28.25,63.93,25.85,63.08,24,61.81,22.15,60.53,20.8,58.8,20.13,58.05,19.44,56.94,18.76,55.82,18.18,54.53,17.59,53.23,17.17,51.86,16.75,50.48,16.6,49.2,19.2,47.2,20.7,49.53,22.52,51.1,24.33,52.67,26.53,53.63,28.72,54.58,31.32,54.99,33.93,55.4,37,55.4,39.1,55.4,41.82,55.26,44.53,55.11,47.48,54.83,50.42,54.55,53.4,54.14,56.38,53.73,59,53.2,59.6,50.43,60.21,47.41,60.81,44.4,61.3,41.38,61.79,38.36,62.09,35.46,62.4,32.55,62.4,30,62.4,28.2,62.15,26.73,61.9,25.25,61,24.2,60.1,23.15,58.35,22.58,56.6,22,53.6,22,53.08,22,52.48,22.04,51.88,22.08,51.23,22.18,50.57,22.27,49.86,22.42,49.15,22.58,48.4,22.8,47.6,21.4,48.28,19.53,49.67,17.98,51.07,16.43,52.93,15.33,54.78,14.22,56.97,13.61,59.15,13,61.4,13,65.23,13,69.02,13.89,72.81,14.78,75.83,16.23,78.84,17.67,80.72,19.5,82.6,21.33,82.6,23.2,82.6,25,82.01,26.17,81.41,27.35,80.55,28.68,79.69,30.01,78.72,31.89,77.75,33.78,77,37,76.7,38.35,76.2,39.99,75.71,41.63,75.13,43.35,74.54,45.08,73.93,46.79,73.33,48.5,72.8,50,75.35,49.48,78.8,48.56,82.26,47.63,85.72,46.53,89.19,45.42,92.23,44.24,95.27,43.05,97,42,98.87,40.95,100.21,39.9,101.56,38.84,102.47,37.75,103.39,36.67,103.95,35.53,104.5,34.4,104.8,33.2,107.8,33.2,107.799,33.203,105.6,76.2,111.6,72.6,117.29,70.15,122.99,67.7,128.35,66.2,133.71,64.7,138.73,64.05,143.75,63.4,148.4,63.4,154.1,63.4,159.78,64.35,165.46,65.3,170,67.23,174.54,69.16,177.37,72.09,180.2,75.03,180.2,79,180.2,79.68,180.1,80.45,180.01,81.22,179.42,81.88,178.84,82.53,177.58,82.97,176.32,83.4,174,83.4,173.32,83.4,172.68,83.37,172.04,83.33,171.42,83.25,170.81,83.18,170.2,83.07,169.6,82.95,169,82.8,167.87,82.43,166.25,82.04,164.62,81.65,162.75,81.33,160.87,81.01,158.87,80.81,156.87,80.6,155,80.6,154.48,80.6,153.92,80.64,153.37,80.67,152.83,80.73,152.28,80.78,151.77,80.86,151.25,80.93,150.8,81,143.38,82.5,139.07,85.08,134.77,87.67,132.58,91.15,130.38,94.64,129.79,98.95,129.2,103.25,129.2,108.2,129.2,109.93,129.25,111.8,129.29,113.68,129.58,116.3,129.86,118.93,130.47,122.6,131.08,126.28,132.2,131.6,132.27,132.2,132.41,132.96,132.55,133.71,132.7,134.48,132.85,135.25,132.99,135.96,133.13,136.68,133.2,137.2,137.63,138.7,142.19,140.53,146.76,142.35,151.12,144.45,155.49,146.55,159.5,148.9,163.5,151.25,166.8,153.8,169.5,155.83,171.24,157.87,172.99,159.91,174,161.88,175.01,163.85,175.41,165.7,175.8,167.55,175.8,169.2,175.8,170.7,175.05,171.89,174.3,173.08,173.1,173.9,171.9,174.73,170.4,175.16,168.9,175.6,167.4,175.6,165.98,175.6,163.54,173.23,161.1,170.86,157.2,167.28,153.3,163.7,147.71,159.49,142.13,155.28,134.4,151.6,134.48,152.05,134.52,152.57,134.56,153.1,134.58,153.68,134.59,154.26,134.6,154.89,134.6,155.53,134.6,156.2,134.6,160.4,134.04,165.4,133.48,170.39,130.13,174.7,126.77,179.01,119.5,181.91,112.23,184.8,98.8,184.8,90.4,184.8,83.41,182.83,76.43,180.86,71.4,177.3,66.38,173.74,63.59,168.77,60.8,163.8,60.8,157.8,60.8,151.73,63.99,146.97,67.18,142.21,72.53,138.93,77.87,135.65,84.85,133.92,91.83,132.2,99.4,132.2,101.58,132.2,104.15,132.38,106.73,132.56,109.35,132.88,111.98,133.2,114.48,133.64,116.98,134.08,119,134.6,118.78,132.2,118.44,129.31,118.09,126.41,117.78,123.43,117.46,120.45,117.23,117.59,117,114.73,117,112.4,117,111.8,117,105.2,118.6,99.71,120.21,94.21,123.98,89.75,127.74,85.29,133.96,81.82,140.18,78.35,149.4,75.8,149.4,74.8,148.28,74.58,147,74.36,145.73,74.15,144.33,73.98,142.92,73.81,141.38,73.71,139.85,73.6,138.2,73.6,135.05,73.6,131.5,73.96,127.94,74.32,124.03,75.1,120.11,75.89,115.84,77.15,111.58,78.4,107,80.2,105.6,76.2,105.6,76.203,119.8,145.4,117.32,144.35,114.4,143.5,111.48,142.65,108.42,142.05,105.37,141.45,102.33,141.13,99.3,140.8,96.6,140.8,91.2,140.8,86.43,141.94,81.66,143.09,78.1,145.15,74.54,147.21,72.47,150.08,70.4,152.95,70.4,156.4,70.4,160.3,72.18,163.26,73.96,166.21,77.43,168.2,80.89,170.19,86.01,171.19,91.13,172.2,97.8,172.2,104.03,172.2,108.33,171.17,112.64,170.13,115.33,168.28,118.01,166.42,119.2,163.85,120.4,161.28,120.4,158.2,120.4,157.83,120.39,156.96,120.38,156.09,120.32,154.58,120.27,153.06,120.15,150.8,120.02,148.55,119.8,145.4,119.799,145.401] ) );
          shape.graphics.endFill();

          return shape;
        },
        "は" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [23.4,26.6,24,25.85,25.03,25.23,26.05,24.6,27.25,24.15,28.45,23.7,29.7,23.45,30.95,23.2,32,23.2,35.15,23.2,38.76,24.93,42.38,26.67,45.45,29.55,48.53,32.44,50.56,36.2,52.6,39.95,52.6,44,52.6,45.8,52.19,47.15,51.78,48.5,51.13,49.68,50.47,50.86,49.65,52.02,48.83,53.18,48,54.6,44.02,61.88,40.72,70.04,37.41,78.2,35.03,87.03,32.64,95.86,31.32,105.26,30,114.65,30,124.4,30,129.28,30.54,133.32,31.09,137.37,31.95,140.28,32.81,143.18,33.88,144.79,34.95,146.4,36,146.4,36.98,146.4,39.84,141.73,42.7,137.06,46.15,130.65,49.6,124.24,52.99,117.55,56.38,110.85,58.4,106.8,62.2,108.2,59.05,116.45,55.97,124.57,52.89,132.68,50.45,139.53,48.01,146.37,46.51,151.37,45,156.38,45,158.4,45,160.05,45.31,161.53,45.63,163,46,164.5,46.38,166,46.69,167.63,47,169.25,47,171.2,47,172.85,46.57,174.4,46.13,175.95,45.33,177.15,44.52,178.35,43.37,179.08,42.23,179.8,40.8,179.8,37.05,179.8,33.14,176.23,29.24,172.66,26.05,165.93,22.86,159.2,20.83,149.51,18.8,139.83,18.8,127.6,18.8,119.2,19.78,110.49,20.75,101.79,22.25,93.48,23.75,85.17,25.55,77.63,27.35,70.08,29,64,29.83,61,30.58,58.03,31.34,55.05,31.93,52.18,32.51,49.31,32.85,46.59,33.2,43.88,33.2,41.4,33.2,38.85,32.77,36.52,32.34,34.18,31.25,32.3,30.16,30.43,28.31,29.14,26.45,27.85,23.6,27.4,23.4,26.6,23.4,26.603,125.8,50.8,125.72,44.65,125.47,40.07,125.22,35.49,124.1,32.45,122.97,29.42,120.62,27.91,118.27,26.4,114,26.4,113.55,26.4,113.06,26.44,112.57,26.47,112.05,26.53,111.52,26.59,110.96,26.66,110.4,26.73,109.8,26.8,109.2,25.8,109.8,23.93,111.07,22.41,112.34,20.9,114.1,19.83,115.86,18.76,118.03,18.18,120.2,17.6,122.6,17.6,126.65,17.6,130.41,18.69,134.17,19.78,137.07,21.5,139.98,23.23,141.75,25.37,143.52,27.5,143.6,29.6,143.6,30.58,143.36,31.49,143.13,32.39,142.77,33.25,142.42,34.12,142,34.95,141.57,35.78,141.2,36.6,140.82,37.43,140.49,40.64,140.15,43.86,139.87,48.08,139.59,52.3,139.37,56.83,139.15,61.35,139,64.8,142.97,64.05,146.29,63.33,149.61,62.6,152.17,61.53,154.74,60.46,156.52,58.87,158.3,57.28,159.2,54.8,163.25,55.1,166.69,55.67,170.14,56.24,172.67,57.23,175.2,58.22,176.66,59.73,178.12,61.23,178.2,63.4,178.2,65.35,177.27,66.74,176.35,68.12,174.4,69.2,172.45,70.29,169.42,71.22,166.4,72.15,162.2,73.2,160.25,73.65,157.59,74.19,154.93,74.74,151.87,75.28,148.82,75.82,145.52,76.33,142.22,76.83,139,77.2,139,86.65,139.11,94.7,139.22,102.75,139.6,109.8,139.97,116.85,140.69,123.1,141.4,129.35,142.6,135.2,146.12,136.63,149.96,138.48,153.81,140.33,157.57,142.5,161.34,144.68,164.85,147.13,168.35,149.58,171.2,152.2,173.3,154.08,174.69,155.8,176.07,157.52,176.9,159.23,177.72,160.93,178.06,162.69,178.4,164.45,178.4,166.4,178.4,167.98,177.81,169.33,177.23,170.68,176.27,171.68,175.32,172.67,174.1,173.24,172.87,173.8,171.6,173.8,170.47,173.8,169.4,173.45,168.32,173.1,167.2,172.33,166.07,171.56,164.85,170.34,163.62,169.13,162.2,167.4,160.47,165.23,158.28,163,156.09,160.76,153.67,158.7,151.26,156.64,148.73,154.86,146.2,153.08,143.8,151.8,144.1,155.85,143.9,160.98,143.69,166.11,140.82,170.65,137.96,175.19,131.34,178.3,124.72,181.4,112.2,181.4,103.5,181.4,96.44,179.43,89.39,177.45,84.4,173.85,79.41,170.25,76.71,165.2,74,160.15,74,154,74,148.23,76.84,143.69,79.69,139.16,84.6,136.03,89.51,132.9,96.11,131.25,102.7,129.6,110.2,129.6,112.45,129.6,114.78,129.71,117.12,129.83,119.42,130.05,121.73,130.28,123.95,130.61,126.17,130.95,128.2,131.4,127.82,127.8,127.47,120.91,127.11,114.01,126.82,106.25,126.54,98.49,126.37,91.07,126.2,83.65,126.2,79,122.82,79.45,119.49,79.79,116.15,80.13,113,80.35,109.85,80.58,106.96,80.69,104.07,80.8,101.6,80.8,97.85,80.8,94.02,79.92,90.19,79.05,86.7,77.23,83.21,75.41,80.28,72.62,77.35,69.83,75.4,66,77.4,63.4,80.25,65.73,83.03,67.08,85.81,68.43,88.53,69.13,91.24,69.82,93.91,70.01,96.57,70.2,99.2,70.2,102.12,70.2,105.49,70.02,108.86,69.84,112.35,69.5,115.84,69.17,119.28,68.68,122.72,68.2,125.8,67.6,125.8,50.8,125.799,50.803,129,143.4,126.6,142.2,124.02,141.27,121.44,140.34,118.85,139.7,116.26,139.06,113.76,138.73,111.25,138.4,109,138.4,103.37,138.4,98.58,139.37,93.78,140.34,90.27,142.25,86.77,144.16,84.78,147.01,82.8,149.85,82.8,153.6,82.8,157.35,84.79,160.13,86.79,162.91,90.35,164.75,93.91,166.59,98.83,167.49,103.75,168.4,109.6,168.4,115.22,168.4,118.99,167.45,122.76,166.51,125.02,164.43,127.29,162.34,128.25,159.03,129.2,155.73,129.2,151,129.2,149.5,129.2,148.32,129.19,147.14,129.17,146.23,129.16,145.31,129.11,144.62,129.07,143.93,129,143.4,128.999,143.401] ) );
          shape.graphics.endFill();

          return shape;
        },
        "違" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,2,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,2,1,2,3,3,3,3,2,2,2,3,3,3,3,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,1,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,3,3,3,3,2,2,2] ), $.toNumberVector( [58.4,97.8,57.87,98.4,57.04,98.99,56.2,99.58,55,100.1,53.8,100.63,52.21,101.06,50.62,101.5,48.6,101.8,48.6,155,53.92,160.93,59.74,164.48,65.55,168.03,73.07,169.93,80.59,171.82,90.42,172.41,100.25,173,113.6,173,122.52,173,132.75,172.99,142.97,172.98,153.55,172.9,164.12,172.83,174.57,172.66,185.02,172.5,194.4,172.2,194.4,175,191.77,175.53,189.74,176.62,187.72,177.71,186.27,179.38,184.83,181.04,183.96,183.3,183.1,185.55,182.8,188.4,113.8,188.4,99.77,188.4,89.39,187.21,79.02,186.01,71.12,182.75,63.23,179.49,57.24,173.72,51.25,167.95,46,158.8,43.15,162.33,39.65,166.34,36.14,170.36,32.52,174.3,28.9,178.24,25.44,181.81,21.97,185.38,19.2,188,19.35,188.98,19.24,189.71,19.14,190.44,18.82,191,18.5,191.56,17.99,191.99,17.47,192.43,16.8,192.8,6.2,173.8,8.75,172.75,11.88,171.25,15.01,169.76,18.5,167.98,21.99,166.19,25.72,164.21,29.45,162.23,33.2,160.2,33.2,98.4,7.8,98.4,6.8,93.6,30.4,93.6,39.2,81.8,58.4,97.8,58.399,97.802,12.4,13,22.82,15.85,29.85,19.61,36.87,23.36,41.12,27.43,45.38,31.5,47.19,35.59,49,39.68,49,43.2,49,45.6,48.3,47.62,47.59,49.64,46.37,51.1,45.16,52.57,43.51,53.38,41.87,54.2,40,54.2,39.1,54.2,38.2,54.01,37.3,53.82,36.4,53.43,35.5,53.03,34.6,52.43,33.7,51.83,32.8,51,32.13,46.35,30.01,41.29,27.89,36.23,24.88,31.38,21.86,26.52,18.2,22.18,14.55,17.83,10.8,14.6,12.4,13,12.399,13.003,142,163.6,142,164.2,140.81,164.99,139.63,165.79,137.77,166.5,135.92,167.21,133.64,167.71,131.37,168.2,129.2,168.2,126.4,168.2,126.4,147.4,56.4,147.4,55.2,142.8,80.4,142.8,80.4,121.4,62.2,121.4,61.2,117,126.4,117,126.4,102.8,148.4,104.6,148.25,105.5,147.88,106.19,147.5,106.87,146.77,107.38,146.04,107.88,144.88,108.23,143.72,108.58,142,108.8,142,117,160.8,117,169.4,105.8,186.2,117.6,185.67,118.65,184.9,119.38,184.13,120.1,183.02,120.55,181.92,121,180.43,121.2,178.95,121.4,177,121.4,142,121.4,142,142.8,165.6,142.8,175.4,130.6,193.6,143.4,193,144.45,192.21,145.21,191.43,145.96,190.32,146.45,189.22,146.94,187.72,147.17,186.22,147.4,184.2,147.4,142,147.4,142,163.6,141.998,163.601,56,50.4,93.8,50.4,94.32,48.38,94.95,46.07,95.57,43.77,96.25,41.25,96.92,38.74,97.62,36.06,98.32,33.38,99,30.6,69.6,30.6,68.2,26.2,100.2,26.2,100.87,23.58,101.54,20.97,102.21,18.35,102.85,15.8,103.49,13.25,104.08,10.79,104.67,8.33,105.2,6,127,9.6,126.77,10.65,126.26,11.44,125.75,12.23,124.85,12.78,123.95,13.32,122.61,13.62,121.27,13.93,119.4,14,116,26.2,146.8,26.2,153.4,17.8,172.2,30.6,171.67,31.13,170.86,31.67,170.05,32.22,169,32.73,167.95,33.23,166.69,33.67,165.42,34.1,164,34.4,164,50.4,168.8,50.4,177.2,39.6,193.2,51,192.67,52.05,191.96,52.81,191.25,53.57,190.2,54.05,189.15,54.54,187.69,54.77,186.22,55,184.2,55,57.2,55,56,50.4,55.999,50.403,166.6,100.6,166.6,101.05,165.27,101.8,163.94,102.54,161.95,103.25,159.96,103.96,157.65,104.48,155.35,105,153.4,105,151,105,151,99.2,87.2,99.2,87.2,101.4,87.2,101.48,86.56,102.27,85.92,103.06,84.2,103.98,82.47,104.9,79.44,105.65,76.4,106.4,71.6,106.4,71.6,63,88.2,69.8,149.2,69.8,155.8,61.6,174.2,74.4,173.82,74.93,173.09,75.47,172.37,76.02,171.37,76.5,170.38,76.99,169.16,77.38,167.95,77.78,166.6,78,166.6,100.6,166.598,100.602,87.2,94.6,151,94.6,151,74.4,87.2,74.4,87.2,94.6,87.198,94.602,95.6,142.8,126.4,142.8,126.4,121.4,95.6,121.4,95.6,142.8,95.599,142.801,148.8,30.6,114.8,30.6,114.05,33.23,113.27,35.86,112.49,38.5,111.72,41.03,110.95,43.56,110.21,45.93,109.47,48.3,108.8,50.4,148.8,50.4,148.8,30.6,148.798,30.603] ) );
          shape.graphics.endFill();

          return shape;
        },
        "う" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [25.8,73.4,25.43,74.15,25.13,74.9,24.83,75.64,24.63,76.35,24.42,77.06,24.31,77.73,24.2,78.4,24.2,79,24.2,80.65,24.81,81.95,25.42,83.25,26.52,84.15,27.63,85.05,29.18,85.53,30.73,86,32.6,86,36.5,86,42.59,83.25,48.68,80.5,56.28,77.2,63.87,73.9,72.62,71.15,81.38,68.4,90.6,68.4,101.77,68.4,108.8,72,115.82,75.6,119.77,81.73,123.73,87.86,125.16,95.99,126.6,104.13,126.6,113.2,126.6,125.73,121.56,137.57,116.52,149.42,106.4,159.53,96.27,169.63,81.04,177.47,65.8,185.3,45.4,189.8,43.2,185.8,60.53,179.58,72.88,170.98,85.23,162.38,93.13,152.55,101.02,142.73,104.71,132.25,108.4,121.78,108.4,111.8,108.4,104.45,107.75,98.03,107.09,91.61,104.97,86.85,102.86,82.09,98.87,79.35,94.87,76.6,88.2,76.6,83.1,76.6,77.81,78.18,72.52,79.76,67.33,82.48,62.13,85.2,57.18,88.84,52.23,92.48,47.8,96.6,46.08,98.25,44.6,99.8,43.13,101.35,41.58,102.55,40.02,103.75,38.21,104.48,36.4,105.2,34,105.2,30.85,105.2,27.58,103.56,24.31,101.91,21.65,99.23,18.99,96.55,17.3,93.14,15.6,89.73,15.6,86.2,15.6,83.95,16.23,81.82,16.85,79.68,17.9,77.8,18.95,75.93,20.33,74.39,21.7,72.85,23.2,71.8,25.8,73.4,25.8,73.402,55.2,47.2,58.05,45.63,61.97,43.51,65.89,41.39,69.6,39.4,73.31,37.42,76.18,35.9,79.05,34.38,79.8,34,79.95,33.85,80.09,33.74,80.24,33.62,80.35,33.53,80.46,33.43,80.53,33.36,80.6,33.28,80.6,33.2,80.6,33.05,80.49,32.94,80.39,32.82,80.2,32.73,80.01,32.63,79.76,32.56,79.5,32.48,79.2,32.4,71.55,32.18,64.88,31.7,58.21,31.23,52.83,29.35,47.44,27.48,43.51,23.63,39.58,19.78,37.4,12.8,40,10.4,42.25,13.63,45.51,15.44,48.77,17.25,52.43,18.13,56.08,19.01,59.83,19.21,63.58,19.4,66.8,19.4,69.28,19.4,71.76,19.34,74.24,19.28,76.6,19.2,78.96,19.13,81.14,19.07,83.33,19,85.2,19,89.7,19,93.83,19.97,97.95,20.95,101.1,22.73,104.25,24.51,106.13,27.02,108,29.53,108,32.6,108,34.7,106.67,36,105.35,37.3,103.25,38.05,101.15,38.8,98.55,39.13,95.95,39.45,93.4,39.6,90.92,39.6,87.24,40.39,83.55,41.18,78.9,42.63,74.25,44.07,68.76,46.1,63.28,48.13,57.2,50.6,55.2,47.2,55.2,47.203] ) );
          shape.graphics.endFill();

          return shape;
        },
        "ず" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [82,19.8,82.82,18.08,84.07,16.58,85.31,15.08,87,13.98,88.69,12.87,90.83,12.24,92.97,11.6,95.6,11.6,99.5,11.6,103.52,12.61,107.54,13.62,110.8,15.3,114.06,16.99,116.13,19.2,118.2,21.4,118.2,23.8,118.2,24.93,117.94,25.86,117.67,26.79,117.3,27.65,116.92,28.52,116.51,29.37,116.1,30.23,115.8,31.2,115.5,32.03,115.31,33.49,115.11,34.95,115,37.05,114.89,39.15,114.84,41.89,114.8,44.63,114.8,48,119,47.7,123.33,47.44,127.66,47.18,131.6,46.95,135.54,46.73,138.82,46.54,142.1,46.35,144.2,46.2,147.35,46.05,149.85,45.76,152.35,45.47,154.3,44.93,156.25,44.38,157.7,43.53,159.15,42.68,160.2,41.4,166.2,42.98,170.7,44.38,175.2,45.78,178.2,47.35,181.2,48.93,182.7,50.85,184.2,52.78,184.2,55.4,184.2,56.38,183.62,57.09,183.05,57.81,182.15,58.28,181.25,58.75,180.15,58.97,179.05,59.2,178,59.2,176.05,59.2,173.52,58.82,170.99,58.43,167.65,57.93,164.31,57.42,160.06,56.92,155.8,56.43,150.4,56.2,148.37,56.05,146.17,55.94,143.97,55.83,141.65,55.75,139.32,55.68,136.9,55.64,134.47,55.6,132,55.6,129.82,55.6,127.66,55.64,125.49,55.68,123.35,55.75,121.21,55.83,119.12,55.94,117.03,56.05,115,56.2,115,61.45,115.04,66.79,115.08,72.12,115.15,76.98,115.23,81.83,115.34,85.93,115.45,90.03,115.6,92.8,116.88,94.98,117.97,97.61,119.07,100.25,119.88,103.68,120.68,107.11,121.14,111.51,121.6,115.9,121.6,121.6,121.6,134.05,118.08,144.63,114.56,155.2,107.08,163.75,99.59,172.3,87.94,178.75,76.28,185.2,60,189.4,58,185.8,69.1,181.45,77.51,175.59,85.93,169.74,91.7,162.95,97.48,156.16,100.64,148.73,103.8,141.3,104.4,133.8,102.83,136.05,100.63,137.8,98.43,139.55,95.68,140.75,92.92,141.95,89.63,142.58,86.35,143.2,82.6,143.2,75.85,143.2,70.1,140.88,64.35,138.56,60.15,134.38,55.95,130.2,53.58,124.39,51.2,118.58,51.2,111.6,51.2,104.63,53.78,98.54,56.36,92.45,60.88,87.93,65.39,83.41,71.54,80.81,77.68,78.2,84.8,78.2,87.2,78.2,89.54,78.51,91.88,78.81,94.08,79.43,96.27,80.05,98.27,80.99,100.28,81.93,102,83.2,102,79.6,101.87,76.05,101.74,72.49,101.55,69.15,101.36,65.82,101.16,62.78,100.95,59.75,100.8,57.2,96.3,57.5,89.93,58.16,83.55,58.82,76.95,59.63,70.35,60.43,64.35,61.28,58.35,62.13,54.6,62.8,52.5,63.25,50.55,63.73,48.6,64.22,46.8,64.7,45,65.19,43.35,65.67,41.7,66.15,40.2,66.6,38.55,67.2,37.37,67.87,36.19,68.54,35.1,69.1,34.01,69.67,32.83,70.03,31.65,70.4,30,70.4,26.93,70.4,23.45,68.62,19.97,66.83,17.03,64.05,14.08,61.28,12.14,57.92,10.2,54.55,10.2,51.4,10.2,50.13,10.46,48.91,10.71,47.68,11.18,46.58,11.65,45.47,12.31,44.51,12.98,43.55,13.8,42.8,15.2,42.8,15.35,44.53,15.92,45.93,16.48,47.33,17.33,48.48,18.17,49.62,19.22,50.54,20.28,51.45,21.4,52.2,22.38,53.03,23.66,53.57,24.95,54.11,26.58,54.43,28.21,54.75,30.21,54.87,32.2,55,34.6,55,37.2,55,40.65,54.85,48.54,54.18,56.43,53.51,65.8,52.65,75.18,51.79,84.56,50.9,93.95,50,100.4,49.4,100.1,40.85,99.7,35.25,99.3,29.65,98.1,26.35,96.9,23.05,94.55,21.73,92.2,20.4,88,20.4,87.33,20.4,86.68,20.44,86.04,20.47,85.4,20.53,84.76,20.58,84.12,20.66,83.48,20.73,82.8,20.8,82,19.8,82,19.803,104.2,106.6,104.2,103.23,103.03,99.68,101.86,96.13,99.47,93.23,97.09,90.32,93.48,88.46,89.87,86.6,85,86.6,81.02,86.6,77.4,88.16,73.78,89.73,71.02,92.8,68.27,95.88,66.63,100.44,65,105,65,111,65,116.1,66.7,119.99,68.4,123.88,71.1,126.5,73.8,129.13,77.15,130.46,80.5,131.8,83.8,131.8,89.12,131.8,92.98,130.25,96.83,128.71,99.32,125.58,101.82,122.45,103.01,117.71,104.2,112.98,104.2,106.6,104.199,106.602,135.4,5.6,143.2,7.85,148.61,10.74,154.02,13.62,157.4,16.65,160.77,19.69,162.29,22.65,163.8,25.6,163.8,28,163.8,29.28,163.34,30.47,162.89,31.66,162.12,32.58,161.35,33.5,160.34,34.05,159.32,34.6,158.2,34.6,156.85,34.6,155.82,34.24,154.78,33.87,154,33.18,153.21,32.49,152.63,31.48,152.05,30.48,151.6,29.2,150.7,26.8,149.14,24.07,147.59,21.34,145.32,18.58,143.05,15.82,140.04,13.2,137.02,10.58,133.2,8.4,135.4,5.6,135.398,5.604,161.8,1.8,170.12,4.43,175.73,7.42,181.33,10.4,184.72,13.4,188.12,16.4,189.56,19.24,191,22.08,191,24.4,191,25.75,190.55,26.95,190.1,28.15,189.35,29.05,188.6,29.95,187.62,30.48,186.65,31,185.6,31,184.17,31,183.13,30.67,182.09,30.33,181.3,29.65,180.51,28.98,179.92,27.97,179.32,26.95,178.8,25.6,177.9,23.13,176.22,20.36,174.54,17.59,172.12,14.83,169.71,12.07,166.56,9.49,163.42,6.9,159.6,4.8,161.8,1.8,161.799,1.804] ) );
          shape.graphics.endFill();

          return shape;
        },
        "隠" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,2,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [75.4,23.6,87.92,22.4,101.33,20.63,114.74,18.85,127.47,16.75,140.2,14.65,151.48,12.35,162.75,10.05,171,7.8,183.2,20.2,182.9,20.5,182.53,20.7,182.16,20.89,181.75,21,181.34,21.12,180.89,21.16,180.45,21.2,180,21.2,179.32,21.2,178.58,21.12,177.83,21.04,177.02,20.85,176.22,20.67,175.36,20.36,174.5,20.05,173.6,19.6,163.85,20.95,152.03,22.32,140.22,23.69,127.37,24.85,114.53,26.02,101.18,26.86,87.82,27.7,75,28,74.4,28.08,73.76,28.15,73.11,28.22,72.4,28.28,71.69,28.33,70.89,28.37,70.1,28.4,69.2,28.4,66.95,33.05,63.74,39.39,60.53,45.72,57.03,52.38,53.52,59.03,50.05,65.33,46.58,71.63,43.8,76.2,51.53,82.35,57.12,88.28,62.71,94.2,66.35,100.05,69.99,105.9,71.76,111.75,73.53,117.6,73.6,123.6,73.6,130.88,72.23,136.37,70.86,141.86,67.73,145.65,64.59,149.44,59.51,151.56,54.43,153.68,47,154.2,47,151.73,46.51,149.96,46.01,148.2,44.55,147,43.09,145.8,40.42,145.09,37.75,144.38,33.4,144,33.4,140.6,50.6,140.6,53.98,140.6,56.05,139.06,58.13,137.53,59.28,135.05,60.42,132.58,60.81,129.46,61.2,126.35,61.2,123.2,61.2,117.35,59.98,111.59,58.76,105.83,56.1,100.08,53.44,94.32,49.22,88.52,45,82.73,39,76.8,40.8,72.15,43.1,65.7,45.4,59.24,47.8,52.15,50.2,45.07,52.5,37.93,54.8,30.8,56.6,24.8,25.8,24.8,25.8,188.6,25.8,188.97,25.16,189.65,24.51,190.32,23.35,190.97,22.19,191.63,20.57,192.12,18.95,192.6,17,192.6,15.2,192.6,15.2,13.8,28.4,19.6,56,19.6,64,11.4,75.4,23.6,75.399,23.604,84,144.6,84.22,146.03,84.41,147.41,84.59,148.8,84.72,150.13,84.86,151.46,84.93,152.73,85,154,85,155.2,85,161.8,83.47,167.44,81.95,173.08,79.4,177.2,76.85,181.33,73.52,183.66,70.2,186,66.6,186,65.25,186,64.33,185.6,63.41,185.19,62.85,184.55,62.29,183.91,62.04,183.13,61.8,182.35,61.8,181.6,61.8,180.7,62.09,179.78,62.37,178.86,62.9,177.98,63.42,177.1,64.16,176.29,64.9,175.48,65.8,174.8,68.35,173,70.87,169.83,73.38,166.65,75.42,162.6,77.47,158.55,78.82,153.88,80.17,149.2,80.4,144.4,84,144.6,83.999,144.602,178.4,125.8,178.25,126.1,177.42,126.67,176.59,127.24,175.37,127.8,174.15,128.36,172.69,128.78,171.22,129.2,169.8,129.2,167.6,129.2,167.6,120.4,78,120.4,76.4,115.4,167.6,115.4,167.6,95.8,80.6,95.8,79.2,90.8,167.6,90.8,167.6,73,77.6,73,76,68,145.4,68,147.87,63.95,150.4,59.26,152.94,54.58,155.3,49.7,157.66,44.83,159.74,39.99,161.82,35.15,163.4,30.8,181.2,38,180.9,38.53,180.48,38.97,180.06,39.41,179.5,39.73,178.94,40.05,178.22,40.22,177.5,40.4,176.6,40.4,176.3,40.4,175.96,40.37,175.63,40.33,175.27,40.28,174.92,40.22,174.54,40.15,174.17,40.08,173.8,40,171.7,43.3,169.08,46.91,166.46,50.52,163.5,54.15,160.54,57.79,157.32,61.32,154.1,64.85,150.8,68,168,68,172.4,61.4,185.6,72.2,185.07,72.73,184.33,73.27,183.59,73.82,182.67,74.3,181.75,74.79,180.68,75.18,179.6,75.58,178.4,75.8,178.4,125.8,178.397,125.802,83,34.4,88.32,37.03,91.93,39.85,95.53,42.68,97.72,45.45,99.92,48.23,100.86,50.83,101.8,53.43,101.8,55.6,101.8,57.33,101.34,58.73,100.89,60.13,100.1,61.13,99.31,62.12,98.26,62.66,97.2,63.2,96,63.2,95.4,63.2,94.8,63.05,94.2,62.9,93.6,62.6,93,62.3,92.4,61.85,91.8,61.4,91.2,60.8,90.97,57.88,90,54.51,89.02,51.13,87.57,47.78,86.13,44.42,84.36,41.31,82.6,38.2,80.8,35.8,83,34.4,82.999,34.403,154.8,162,154.8,179.6,156.67,180.2,157.81,180.59,158.95,180.97,159.57,181.33,160.19,181.68,160.39,182.1,160.6,182.53,160.6,183.2,160.6,184.85,159.61,186.09,158.62,187.33,156.42,188.15,154.23,188.98,150.73,189.39,147.22,189.8,142.2,189.8,114.2,189.8,109.32,189.8,106.34,189.22,103.35,188.64,101.72,187.13,100.09,185.61,99.54,182.97,99,180.33,99,176.2,99,141.8,115.6,143.6,115.45,144.43,115.11,145.04,114.77,145.64,114.07,146.08,113.38,146.51,112.25,146.78,111.12,147.05,109.4,147.2,109.4,176.4,109.4,177.97,109.49,178.86,109.57,179.74,110.1,180.18,110.62,180.61,111.76,180.7,112.9,180.8,115,180.8,142,180.8,143.05,180.8,143.83,180.74,144.6,180.68,145.22,180.45,145.84,180.23,146.36,179.79,146.87,179.35,147.4,178.6,147.77,177.93,148.32,176.34,148.87,174.76,149.55,172.55,150.22,170.34,151,167.63,151.77,164.93,152.6,162,154.8,162,154.798,162.001,106.8,125.6,117.9,125.15,125.47,126.77,133.05,128.38,137.7,131.03,142.35,133.67,144.37,136.82,146.4,139.98,146.4,142.6,146.4,143.73,146.07,144.68,145.74,145.63,145.1,146.33,144.46,147.02,143.53,147.41,142.6,147.8,141.4,147.8,141.1,147.8,140.76,147.76,140.43,147.73,140.07,147.65,139.72,147.58,139.34,147.46,138.97,147.35,138.6,147.2,136.2,144.35,132.44,141.51,128.69,138.67,124.32,136.18,119.95,133.68,115.34,131.71,110.72,129.73,106.6,128.6,106.8,125.6,106.798,125.602,117.2,30,122.45,33.23,126.01,36.52,129.57,39.8,131.75,42.95,133.92,46.1,134.86,49.01,135.8,51.93,135.8,54.4,135.8,56.28,135.31,57.82,134.82,59.37,133.97,60.48,133.13,61.58,132,62.19,130.87,62.8,129.6,62.8,129,62.8,128.4,62.65,127.8,62.5,127.2,62.18,126.6,61.86,126,61.37,125.4,60.88,124.8,60.2,124.65,56.83,123.77,52.92,122.9,49.01,121.55,45.13,120.2,41.25,118.5,37.67,116.8,34.1,115,31.4,117.2,30,117.198,30.003,160.2,141.4,169.27,145.75,175.38,150.47,181.48,155.19,185.17,159.8,188.87,164.41,190.43,168.68,192,172.95,192,176.4,192,178.43,191.54,180.05,191.08,181.68,190.27,182.83,189.47,183.97,188.37,184.59,187.27,185.2,186,185.2,185.4,185.2,184.8,185.08,184.2,184.96,183.6,184.7,183,184.44,182.4,184.02,181.8,183.6,181.2,183,180.67,178.05,178.5,172.56,176.33,167.08,173.15,161.75,169.96,156.43,166.07,151.61,162.17,146.8,158.2,143.2,160.2,141.4,160.198,141.401] ) );
          shape.graphics.endFill();

          return shape;
        },
        "し" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [22.8,25.4,23.48,23.68,24.76,22.34,26.05,21,27.7,20.08,29.35,19.16,31.24,18.68,33.13,18.2,35,18.2,38.75,18.2,42.59,19.19,46.44,20.17,49.55,21.88,52.66,23.58,54.63,25.88,56.6,28.18,56.6,30.8,56.6,32.53,55.91,33.76,55.22,34.99,54.22,36.75,53.23,38.52,52.13,41.32,51.02,44.13,50.2,49,49.23,55,48.19,65.02,47.16,75.05,46.28,86.58,45.39,98.11,44.77,109.89,44.15,121.68,44,131.2,44,142.98,46.72,150.39,49.44,157.8,54.52,161.98,59.61,166.16,66.87,167.68,74.12,169.2,83.2,169.2,94.45,169.2,104.82,166.24,115.2,163.28,124.5,157.2,133.8,151.13,141.92,141.86,150.05,132.6,156.8,120,161.4,122.2,155.1,137.43,146.75,148.42,138.41,159.42,128.4,166.53,118.39,173.63,106.89,177.02,95.4,180.4,82.8,180.4,73.05,180.4,64.17,178.19,55.3,175.98,48.55,170.5,41.8,165.03,37.8,155.76,33.8,146.5,33.8,132.4,33.8,122.13,34.3,109.48,34.8,96.83,35.55,83.7,36.3,70.58,37.17,57.93,38.05,45.28,38.8,35,38.8,33.8,38.8,30.8,37.57,29.15,36.34,27.49,34.65,26.7,32.96,25.92,31.21,25.76,29.45,25.6,28.4,25.6,27.72,25.6,27.06,25.64,26.39,25.67,25.75,25.73,25.11,25.79,24.52,25.86,23.92,25.93,23.4,26,22.8,25.4,22.8,25.403] ) );
          shape.graphics.endFill();

          return shape;
        },
        "に" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [62.2,105.8,58.38,114.13,54.74,122.53,51.1,130.93,48.25,138.2,45.4,145.48,43.64,151.03,41.88,156.58,41.8,159.2,41.8,160.25,42.14,161.59,42.49,162.93,42.9,164.53,43.31,166.12,43.66,167.95,44,169.78,44,171.8,44,173.75,43.59,175.15,43.18,176.55,42.5,177.45,41.83,178.35,40.96,178.78,40.1,179.2,39.2,179.2,35.83,179.2,32.43,176.02,29.04,172.84,26.33,166.38,23.61,159.91,21.9,150.09,20.2,140.28,20.2,127,20.2,115.83,21.47,105.52,22.74,95.21,24.5,85.95,26.26,76.69,28.13,68.56,30,60.43,31.2,53.6,31.43,52.4,31.61,51.24,31.79,50.07,31.93,48.93,32.06,47.78,32.13,46.66,32.2,45.53,32.2,44.4,32.2,43.95,32.17,43.47,32.14,42.99,32.1,42.5,32.06,42.02,32.03,41.53,32,41.05,32,40.6,32,38.05,30.99,35.66,29.99,33.27,28.45,31.38,26.91,29.48,25.08,28.26,23.25,27.03,21.6,26.8,21.4,25.4,22.08,24.65,22.95,24.18,23.83,23.72,24.8,23.45,25.78,23.19,26.8,23.1,27.83,23,28.8,23,33.38,23,37.17,25.05,40.96,27.1,43.68,30.1,46.39,33.1,47.9,36.5,49.4,39.9,49.4,42.6,49.4,44.7,48.94,46.35,48.49,48,47.85,49.35,47.21,50.7,46.53,51.83,45.85,52.95,45.4,54,42.7,60.68,40.05,68.54,37.4,76.41,35.3,85.13,33.2,93.85,31.9,103.25,30.6,112.65,30.6,122.4,30.6,126.98,30.81,130.66,31.02,134.35,31.38,137.2,31.73,140.05,32.2,142.09,32.68,144.13,33.2,145.4,35,144.8,36.28,142.85,39.07,138.03,41.87,133.21,45.23,127.23,48.58,121.25,52.02,114.96,55.45,108.68,58,103.8,62.2,105.8,62.2,105.802,101.6,101,98.22,104.68,95.33,108.52,92.44,112.36,90.32,116.3,88.21,120.24,87,124.23,85.8,128.23,85.8,132.2,85.8,138.43,88.14,142.7,90.47,146.98,95.35,149.63,100.22,152.27,107.74,153.44,115.25,154.6,125.6,154.6,132.05,154.6,137.58,154.24,143.11,153.87,147.5,153.33,151.89,152.78,155.02,152.15,158.15,151.53,159.8,151,163.85,151.6,166.7,152.61,169.55,153.63,171.35,154.9,173.15,156.18,173.97,157.64,174.8,159.1,174.8,160.6,174.8,162.55,173.07,163.83,171.34,165.1,166.5,165.85,161.66,166.6,153.03,166.9,144.4,167.2,130.6,167.2,117.02,167.2,106.89,165.39,96.76,163.58,90.02,159.63,83.29,155.67,79.95,149.4,76.6,143.13,76.6,134.2,76.6,129.1,78.33,124.24,80.07,119.38,82.97,114.8,85.88,110.23,89.68,105.96,93.47,101.7,97.6,97.8,101.6,101,101.6,101.002,80.8,50.4,82.67,50.93,85.1,51.27,87.53,51.62,90.17,51.83,92.82,52.03,95.51,52.12,98.2,52.2,100.6,52.2,104.42,52.2,109.81,51.61,115.19,51.01,120.87,49.98,126.56,48.95,131.9,47.56,137.25,46.18,141,44.6,142.27,44.08,143.64,43.32,145.01,42.57,146.25,41.88,147.49,41.18,148.48,40.69,149.47,40.2,150,40.2,152.85,40.2,155.8,40.75,158.75,41.3,161.15,42.35,163.55,43.4,165.07,44.93,166.6,46.45,166.6,48.4,166.6,49.98,165.38,51.08,164.17,52.18,162.12,53,160.08,53.83,157.4,54.48,154.72,55.13,151.8,55.8,146.25,56.93,139.97,57.91,133.69,58.9,127.65,59.63,121.61,60.36,116.31,60.78,111,61.2,107.4,61.2,104.1,61.2,100.5,60.97,96.9,60.75,93.3,59.98,89.7,59.21,86.25,57.74,82.8,56.28,79.8,53.8,80.8,50.4,80.8,50.403] ) );
          shape.graphics.endFill();

          return shape;
        },
        "自" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [148.6,32.6,166,45.8,165.55,46.4,164.71,46.99,163.87,47.58,162.72,48.1,161.58,48.63,160.18,49.07,158.77,49.5,157.2,49.8,157.2,186,157.2,186.15,156.51,186.92,155.83,187.69,154.27,188.55,152.72,189.41,150.19,190.11,147.67,190.8,144,190.8,144,179.2,43.2,179.2,43.2,187.2,43.2,187.28,42.88,188.1,42.57,188.92,41.27,189.88,39.98,190.83,37.38,191.62,34.77,192.4,30.2,192.4,30.2,34.4,44.4,41.2,76.2,41.2,77.47,37.3,78.69,32.84,79.9,28.38,80.97,23.8,82.04,19.23,82.92,14.77,83.8,10.3,84.4,6.4,107.4,12,107.17,12.75,106.67,13.34,106.16,13.93,105.3,14.33,104.43,14.72,103.18,14.9,101.92,15.08,100.2,15,98.55,18,96.45,21.32,94.35,24.63,91.95,28.03,89.55,31.42,86.92,34.77,84.3,38.13,81.6,41.2,142,41.2,148.6,32.6,148.598,32.603,144,46,43.2,46,43.2,84.8,144,84.8,144,46,143.998,46.003,144,89.6,43.2,89.6,43.2,129.2,144,129.2,144,89.6,143.998,89.603,43.2,174.4,144,174.4,144,134,43.2,134,43.2,174.4,43.199,174.401] ) );
          shape.graphics.endFill();

          return shape;
        },
        "分" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,2,2,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [5.2,93.4,15.85,85.23,25.11,74.88,34.37,64.53,41.92,53.23,49.48,41.92,55.18,30.26,60.87,18.6,64.4,7.8,84.8,15.6,84.42,16.5,83.86,17.14,83.3,17.78,82.4,18.15,81.5,18.53,80.19,18.64,78.87,18.75,77,18.6,72.35,28.58,65.55,39.31,58.76,50.03,49.95,60.33,41.14,70.62,30.37,79.89,19.6,89.15,7,96.2,5.2,93.4,5.2,93.402,140,89.4,146.8,81,163,93.8,162.47,94.4,161.75,94.89,161.02,95.38,160.05,95.78,159.07,96.17,157.82,96.47,156.57,96.78,155,97,153.95,114.4,152.42,129.39,150.89,144.37,148.75,155.98,146.61,167.58,143.8,175.33,141,183.08,137.4,186,135.15,187.8,132.81,189.06,130.48,190.32,127.72,191.13,124.97,191.93,121.62,192.33,118.27,192.73,114,192.8,114,189.8,113.26,187.76,112.53,185.72,109.92,184.28,107.32,182.83,102.27,181.8,97.22,180.78,88.6,179.8,88.8,176.2,92.4,176.43,96.91,176.64,101.42,176.86,105.82,177.05,110.23,177.24,114.03,177.38,117.82,177.53,120,177.6,121.5,177.6,122.63,177.53,123.76,177.47,124.7,177.23,125.64,176.98,126.47,176.5,127.3,176.03,128.2,175.2,130.67,173.03,132.74,166.12,134.82,159.21,136.52,148.58,138.23,137.94,139.59,124.1,140.95,110.25,142,94.2,89.4,94.2,88.12,105.53,84.81,118.18,81.5,130.84,73.7,143.7,65.9,156.56,52.39,169.07,38.87,181.58,17.2,192.6,14.4,189.4,33.37,177.7,44.96,165.13,56.56,152.56,63.02,140.15,69.49,127.74,71.97,116,74.45,104.25,75.2,94.2,33.8,94.2,32.4,89.4,140,89.4,139.998,89.402,195.2,83.8,193.17,83.95,191.35,84.69,189.53,85.43,187.97,86.7,186.42,87.98,185.16,89.76,183.9,91.55,183,93.8,172.72,86.68,162.95,77.31,153.17,67.94,144.7,56.8,136.22,45.67,129.45,33,122.67,20.33,118.4,6.6,122,4.6,126.72,16.83,134.74,28.31,142.76,39.79,152.7,49.8,162.64,59.81,173.8,68,184.97,76.18,196,81.8,195.2,83.8,195.197,83.802] ) );
          shape.graphics.endFill();

          return shape;
        },
        "で" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [15,37.8,15.38,40.2,16.57,42.16,17.76,44.12,19.58,45.5,21.39,46.89,23.75,47.65,26.1,48.4,28.8,48.4,30.08,48.4,32,48.26,33.93,48.12,36.1,47.85,38.28,47.59,40.5,47.22,42.73,46.85,44.6,46.4,50.53,45.2,61.69,43.16,72.86,41.12,85.93,38.93,98.99,36.73,112.3,34.73,125.6,32.73,135.8,31.6,138.05,31.3,140.15,30.8,142.24,30.29,144.03,29.65,145.81,29.02,147.19,28.28,148.58,27.55,149.4,26.8,155.63,28,160,29.31,164.37,30.62,167.13,32.18,169.88,33.73,171.14,35.61,172.4,37.48,172.4,39.8,172.4,41,171.76,41.78,171.11,42.55,169.95,43,168.79,43.45,167.17,43.63,165.55,43.8,163.6,43.8,161.95,43.8,160.13,43.71,158.32,43.62,156.42,43.5,154.53,43.39,152.6,43.3,150.67,43.2,148.8,43.2,140.78,43.2,132.04,46.72,123.31,50.25,115.25,55.78,107.19,61.31,100.48,68.09,93.78,74.88,89.8,81.4,87.33,85.15,85.17,90.14,83.02,95.12,81.43,100.88,79.83,106.63,78.92,112.93,78,119.23,78,125.6,78,136.25,81.07,143.29,84.14,150.33,89.53,154.75,94.91,159.18,102.22,161.49,109.53,163.8,118,165,120.1,165.3,122.37,165.36,124.64,165.41,126.73,165.45,128.81,165.49,130.52,165.62,132.23,165.75,133.2,166.2,135.75,167.25,137.54,168.48,139.33,169.71,140.45,171.07,141.58,172.44,142.09,173.93,142.6,175.42,142.6,177,142.6,178.28,142.01,179.18,141.42,180.09,140.28,180.68,139.13,181.26,137.45,181.53,135.78,181.8,133.6,181.8,132.93,181.8,132.21,181.77,131.5,181.73,130.75,181.68,130,181.62,129.21,181.55,128.43,181.48,127.6,181.4,109.3,179.3,97.42,175.08,85.54,170.86,78.6,164.13,71.66,157.39,68.93,147.96,66.2,138.53,66.2,126,66.2,111.6,71.12,98.83,76.04,86.05,84.1,75.25,92.16,64.45,102.48,55.8,112.8,47.15,123.6,41,123.4,40.4,114.63,41.3,101.72,43.57,88.81,45.83,76.1,48.78,63.39,51.72,53.03,55,42.68,58.28,39,61.2,37.95,61.88,36.95,62.52,35.94,63.17,34.85,63.68,33.77,64.18,32.53,64.49,31.3,64.8,29.8,64.8,26.58,64.8,23.14,62.99,19.71,61.18,16.88,58.43,14.05,55.67,12.23,52.4,10.4,49.13,10.4,46.2,10.4,44.78,10.63,43.45,10.85,42.13,11.28,41,11.71,39.88,12.34,39,12.98,38.13,13.8,37.6,15,37.8,15.001,37.803,128.4,76.8,137.25,79.88,143.01,83.23,148.77,86.58,152.15,89.8,155.52,93.03,156.86,95.93,158.2,98.83,158.2,101,158.2,102.28,157.79,103.37,157.37,104.47,156.7,105.28,156.02,106.08,155.16,106.54,154.3,107,153.4,107,152.12,107,151.16,106.64,150.2,106.27,149.45,105.58,148.7,104.88,148.11,103.88,147.52,102.88,147,101.6,145.95,99.2,144.06,96.34,142.17,93.48,139.52,90.55,136.88,87.63,133.53,84.84,130.17,82.05,126.2,79.8,128.4,76.8,128.399,76.802,149,59.6,157.85,62.68,163.58,66.06,169.31,69.44,172.65,72.7,175.99,75.97,177.29,78.9,178.6,81.83,178.6,84,178.6,85.28,178.22,86.34,177.84,87.41,177.2,88.18,176.56,88.95,175.73,89.37,174.9,89.8,174,89.8,172.65,89.8,171.67,89.44,170.7,89.07,169.95,88.38,169.2,87.68,168.6,86.68,168,85.68,167.4,84.4,166.42,82,164.54,79.17,162.66,76.34,160,73.45,157.34,70.57,153.96,67.81,150.57,65.05,146.6,62.8,149,59.6,148.999,59.603] ) );
          shape.graphics.endFill();

          return shape;
        },
        "き" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [160,64,161.42,64,162.7,64.24,163.97,64.47,164.92,64.98,165.88,65.48,166.44,66.28,167,67.08,167,68.2,167,69.55,165.9,70.83,164.79,72.11,162.82,73.33,160.86,74.55,158.14,75.71,155.42,76.88,152.2,78,148.52,79.35,143.58,80.79,138.64,82.22,132.92,83.63,127.21,85.03,120.95,86.36,114.7,87.68,108.4,88.8,110.57,93.68,113.72,98.15,116.87,102.62,120.37,106.28,123.88,109.93,127.44,112.57,131,115.2,134,116.4,136.32,117.3,138.05,118.46,139.78,119.61,140.92,120.98,142.07,122.35,142.63,123.91,143.2,125.48,143.2,127.2,143.2,128.93,142.62,130.14,142.04,131.36,141.1,132.13,140.16,132.9,138.98,133.25,137.8,133.6,136.6,133.6,135.02,133.6,133.55,133.01,132.07,132.42,130.62,131.58,129.18,130.73,127.74,129.81,126.3,128.88,124.8,128.2,122.7,127.3,119.7,126.38,116.69,125.45,112.92,124.7,109.16,123.95,104.69,123.48,100.22,123,95.2,123,82.53,123,73.91,125.19,65.29,127.38,60.03,130.9,54.76,134.43,52.48,138.86,50.2,143.3,50.2,147.8,50.2,153.73,53.45,158,56.7,162.27,63.15,165.03,69.6,167.78,79.23,169.09,88.85,170.4,101.6,170.4,103,170.4,109.9,170.33,114.82,169.79,119.73,169.24,123.12,168.63,126.52,168.01,128.62,167.5,130.72,167,132,167,134.92,167,137.57,167.58,140.22,168.15,142.22,169.2,144.23,170.25,145.42,171.73,146.6,173.2,146.6,175,146.6,177.18,143.59,178.7,140.59,180.22,135,181.18,129.41,182.13,121.46,182.57,113.5,183,103.6,183,87.03,183,74.76,180.87,62.5,178.74,54.4,174.53,46.3,170.31,42.29,164.02,38.28,157.73,38.2,149.4,38.28,142.73,42.32,136.85,46.36,130.98,53.75,126.58,61.14,122.17,71.56,119.56,81.98,116.95,94.8,116.8,98.47,116.8,102.01,117.07,105.54,117.33,108.67,117.73,111.81,118.12,114.4,118.57,117,119.03,118.8,119.4,119.6,118.6,116.52,116.35,113.48,113.16,110.43,109.97,107.67,106.28,104.92,102.58,102.58,98.6,100.25,94.63,98.6,90.8,91.77,92.08,84.94,93.27,78.11,94.46,71.68,95.38,65.24,96.29,59.42,96.85,53.6,97.4,48.8,97.4,42.8,97.4,37.88,96.58,32.95,95.75,28.9,93.95,24.85,92.15,21.58,89.3,18.3,86.45,15.6,82.4,18.2,79.8,21.35,82.8,24.94,84.61,28.53,86.43,32.38,87.4,36.22,88.38,40.22,88.69,44.23,89,48.2,89,52.93,89,58.84,88.54,64.75,88.09,71.05,87.3,77.35,86.51,83.64,85.46,89.93,84.4,95.4,83.2,94.2,79.98,93,76.48,91.79,72.98,90.72,69.6,89.66,66.23,88.79,63.18,87.92,60.13,87.4,57.8,82.82,58.55,78.22,59.27,73.62,59.99,69.18,60.55,64.73,61.11,60.54,61.46,56.35,61.8,52.6,61.8,48.63,61.8,45.27,61.11,41.92,60.41,38.98,58.95,36.03,57.49,33.39,55.22,30.75,52.95,28.2,49.8,30.4,47,33.03,48.88,35.5,50.17,37.98,51.47,40.48,52.28,42.97,53.08,45.56,53.44,48.15,53.8,51,53.8,53.85,53.8,58.03,53.49,62.21,53.17,66.88,52.63,71.54,52.08,76.29,51.35,81.03,50.63,85,49.8,84.48,47.85,83.89,45.64,83.31,43.42,82.75,41.23,82.19,39.03,81.68,37,81.18,34.98,80.8,33.4,79.9,29.88,78.36,27.97,76.82,26.06,75.08,25.18,73.33,24.3,71.6,24.15,69.88,24,68.6,24,67.55,24,66.49,24.09,65.43,24.18,64.45,24.43,63.48,24.67,62.64,25.1,61.8,25.53,61.2,26.2,60,25.6,60,23.2,61.09,21.18,62.19,19.16,64.4,17.68,66.61,16.2,69.96,15.34,73.3,14.48,77.8,14.4,81.4,14.4,84.13,15.06,86.86,15.71,88.7,16.78,90.54,17.85,91.47,19.21,92.4,20.58,92.4,22,92.4,22.75,92.37,23.38,92.34,24,92.3,24.6,92.26,25.2,92.23,25.83,92.2,26.45,92.2,27.2,92.2,28.85,92.42,30.79,92.64,32.72,93.08,35.18,93.51,37.63,94.14,40.73,94.78,43.83,95.6,47.8,105.28,45.85,111.46,44.09,117.64,42.32,121.2,40.58,124.76,38.83,126.14,37.03,127.53,35.23,127.6,33.2,128.28,33.13,128.92,33.09,129.56,33.05,130.18,33.03,130.79,33.01,131.4,33.01,132,33,132.6,33,135.9,33,138.38,33.39,140.85,33.78,142.5,34.48,144.15,35.17,144.98,36.12,145.8,37.08,145.8,38.2,145.8,39.48,145.09,40.52,144.38,41.57,142.95,42.53,141.53,43.48,139.39,44.42,137.25,45.35,134.4,46.4,130.2,47.83,125.55,49.2,120.9,50.56,116.1,51.8,111.3,53.04,106.5,54.11,101.7,55.18,97.2,56,97.73,58.4,98.54,61.51,99.34,64.62,100.38,67.98,101.41,71.33,102.63,74.71,103.85,78.08,105.2,81,110.3,80.18,114.74,79.09,119.18,78.01,123.03,76.83,126.87,75.65,130.15,74.45,133.43,73.25,136.2,72.2,137.63,71.68,138.74,71.15,139.86,70.61,140.63,70.05,141.39,69.49,141.8,68.88,142.2,68.28,142.2,67.6,142.2,67.23,142.05,66.85,141.9,66.47,141.6,66.08,141.3,65.68,140.85,65.27,140.4,64.85,139.8,64.4,142.4,61.8,143.75,62.48,145.29,62.97,146.83,63.46,148.4,63.78,149.98,64.1,151.51,64.25,153.05,64.4,154.4,64.4,160,64,159.999,64.002] ) );
          shape.graphics.endFill();

          return shape;
        },
        "る" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [55,103,60.85,99.7,67.19,96.95,73.52,94.19,79.9,92.2,86.27,90.21,92.46,89.11,98.65,88,104.2,88,118.97,88,128.95,91.78,138.92,95.56,144.97,101.88,151.03,108.2,153.61,116.44,156.2,124.68,156.2,133.6,156.2,143.88,151.83,152.82,147.46,161.76,139.1,168.38,130.74,174.99,118.57,178.8,106.4,182.6,90.8,182.6,81.72,182.6,74.28,180.57,66.83,178.54,61.52,175.08,56.22,171.61,53.31,166.99,50.4,162.38,50.4,157.2,50.4,152.48,52.43,148.23,54.47,143.98,58.28,140.78,62.08,137.57,67.53,135.69,72.98,133.8,79.8,133.8,86.85,133.8,93.57,136.39,100.3,138.97,105.55,143.23,110.8,147.48,114,152.95,117.2,158.43,117.2,164.2,117.2,164.8,117.13,165.36,117.06,165.91,116.92,166.4,116.79,166.89,116.61,167.29,116.42,167.7,116.2,168,121.82,166.13,126.56,162.54,131.29,158.94,134.72,154.28,138.15,149.61,140.08,144.18,142,138.75,142,133.2,142,124.73,139.87,117.61,137.74,110.48,133.05,105.33,128.36,100.17,120.9,97.29,113.45,94.4,102.8,94.4,97.7,94.4,88.71,96.24,79.71,98.08,69.4,102.68,59.09,107.27,48.74,115.07,38.4,122.88,30.6,134.8,29.63,136.3,28.59,137.9,27.56,139.49,26.38,140.8,25.19,142.11,23.82,142.96,22.45,143.8,20.8,143.8,19.38,143.8,18.13,142.97,16.89,142.13,15.98,140.88,15.06,139.62,14.53,138.15,14,136.68,14,135.4,14,133,15.12,130.77,16.23,128.55,17.83,126.58,19.42,124.61,21.17,122.94,22.93,121.28,24.2,120,30.43,113.85,40.67,103.62,50.91,93.39,62.47,81.8,74.04,70.22,85.6,58.64,97.15,47.05,106,38.2,106.6,37.68,107.02,37.23,107.44,36.78,107.7,36.4,107.96,36.03,108.08,35.73,108.2,35.43,108.2,35.2,108.2,34.9,108.06,34.71,107.91,34.52,107.65,34.4,107.39,34.29,107.02,34.25,106.65,34.2,106.2,34.2,104.85,34.2,98.8,35.28,92.74,36.35,85.22,37.98,77.71,39.61,70.34,41.54,62.97,43.48,59,45.2,57.2,46.03,56.1,46.82,55,47.61,54.1,48.23,53.2,48.85,52.25,49.23,51.3,49.6,49.8,49.6,46.43,49.6,43.25,47.94,40.08,46.28,37.63,43.65,35.17,41.03,33.68,37.79,32.2,34.55,32.2,31.4,32.2,30.35,32.42,29.15,32.64,27.95,33.23,26.73,33.81,25.51,34.82,24.34,35.83,23.18,37.4,22.2,38.4,22.8,38.18,25.2,38.85,27.25,39.52,29.3,40.93,30.8,42.33,32.3,44.39,33.15,46.45,34,49,34,53.65,34,61.64,33.15,69.62,32.3,77.95,31.08,86.27,29.86,93.44,28.52,100.6,27.18,103.6,26.2,104.87,25.75,106.01,24.82,107.14,23.89,108.15,22.95,109.16,22.02,110.07,21.31,110.97,20.6,111.8,20.6,114.8,20.6,118.02,22.14,121.24,23.68,123.9,25.85,126.56,28.03,128.28,30.39,130,32.75,130,34.4,130,36.28,128.95,37.26,127.9,38.24,126.1,39.08,124.3,39.92,121.9,41.01,119.5,42.1,116.8,44.2,108.4,50.73,99.62,58.41,90.84,66.1,82.55,73.88,74.26,81.66,66.91,89.01,59.55,96.35,54,102.2,55,103,55,103.002,91.4,172.2,93.2,172.2,95.09,172.12,96.99,172.04,98.9,171.88,100.81,171.71,102.71,171.44,104.6,171.18,106.4,170.8,106.1,170.43,105.81,170.04,105.52,169.65,105.27,169.2,105.03,168.75,104.85,168.21,104.67,167.68,104.6,167,104.15,161.83,101.75,157.09,99.35,152.34,95.6,148.73,91.85,145.11,87.05,142.95,82.25,140.8,77,140.8,73.25,140.8,69.97,141.85,66.69,142.89,64.25,144.83,61.81,146.76,60.41,149.49,59,152.23,59,155.6,59,160.63,61.98,163.85,64.96,167.07,69.65,168.93,74.34,170.78,80.09,171.49,85.85,172.2,91.4,172.2,91.399,172.201] ) );
          shape.graphics.endFill();

          return shape;
        },
        "よ" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2] ), $.toNumberVector( [58.4,25.4,59,23.23,60.25,21.58,61.51,19.93,63.18,18.83,64.84,17.72,66.81,17.16,68.78,16.6,70.8,16.6,75.52,16.6,79.55,17.95,83.58,19.3,86.52,21.38,89.47,23.46,91.13,25.97,92.8,28.48,92.8,30.8,92.8,32.53,92.26,33.82,91.71,35.12,91,36.5,90.29,37.89,89.59,39.63,88.9,41.38,88.6,44,88.45,45.65,88.27,47.89,88.1,50.13,87.95,52.75,87.8,55.38,87.7,58.29,87.6,61.2,87.6,64.2,93.22,64.58,100.85,63.77,108.48,62.95,115.47,61.3,122.47,59.65,127.51,57.34,132.55,55.03,133,52.4,137.72,52.55,141.35,53.11,144.97,53.67,147.42,54.63,149.88,55.58,151.14,56.93,152.4,58.28,152.4,60,152.4,61.58,151.3,62.79,150.2,64,147.8,65.05,145.4,66.1,141.6,67.09,137.8,68.08,132.4,69.2,128.2,70.1,123.62,70.84,119.04,71.58,114.65,72.1,110.26,72.63,106.36,72.92,102.45,73.2,99.6,73.2,98.32,73.2,96.82,72.99,95.32,72.78,93.75,72.43,92.17,72.07,90.6,71.6,89.02,71.13,87.6,70.6,87.6,74.43,87.73,78.39,87.87,82.35,88.07,86.38,88.28,90.41,88.53,94.48,88.77,98.55,89,102.6,89.15,105.15,89.53,108.47,89.91,111.8,90.37,115.53,90.84,119.26,91.33,123.22,91.82,127.18,92.2,131,99.32,132.58,110.46,136.2,121.6,139.82,132.12,144.83,142.64,149.83,150.22,155.89,157.8,161.95,157.8,168.4,157.8,169.9,157.26,171.12,156.72,172.34,155.75,173.2,154.77,174.06,153.41,174.53,152.05,175,150.4,175,149.35,175,148.29,174.79,147.23,174.58,146.12,174.08,145.02,173.57,143.84,172.72,142.67,171.88,141.4,170.6,138.17,167.23,133.25,163.35,128.32,159.48,122.07,155.68,115.83,151.87,108.46,148.41,101.1,144.95,93,142.4,93.22,143.98,93.35,145.57,93.47,147.17,93.52,148.73,93.58,150.28,93.59,151.77,93.6,153.25,93.6,154.6,93.6,161.05,91.59,166.23,89.58,171.41,85.02,175.05,80.47,178.69,73.1,180.64,65.72,182.6,55,182.6,45.47,182.6,37.6,180.47,29.72,178.34,24.08,174.58,18.43,170.81,15.32,165.64,12.2,160.48,12.2,154.4,12.2,148.18,15.79,143.15,19.38,138.12,25.6,134.58,31.83,131.03,40.21,129.12,48.6,127.2,58.2,127.2,60.82,127.2,63.63,127.34,66.44,127.48,69.25,127.73,72.06,127.97,74.79,128.3,77.52,128.63,80,129,79.1,117.9,78.27,107.4,77.44,96.9,76.8,86.4,76.16,75.9,75.78,65.1,75.4,54.3,75.4,42.6,75.4,38.1,75.14,34.85,74.89,31.6,73.65,29.5,72.41,27.4,69.83,26.4,67.25,25.4,62.6,25.4,62,25.4,61.47,25.44,60.94,25.48,60.48,25.55,60.01,25.63,59.59,25.74,59.18,25.85,58.8,26,58.4,25.4,58.4,25.403,80.8,138.6,78.17,137.85,75.1,137.16,72.02,136.48,68.78,135.95,65.53,135.43,62.27,135.11,59,134.8,56,134.8,48.5,134.8,42.19,136.02,35.88,137.23,31.3,139.58,26.73,141.92,24.16,145.35,21.6,148.78,21.6,153.2,21.6,157.48,23.73,160.85,25.86,164.23,29.93,166.58,34,168.92,39.91,170.16,45.83,171.4,53.4,171.4,60.68,171.4,65.93,170.44,71.18,169.48,74.58,167.15,77.97,164.83,79.59,160.94,81.2,157.05,81.2,151.2,81.2,149.78,81.17,148.36,81.13,146.94,81.08,145.43,81.02,143.91,80.95,142.23,80.88,140.55,80.8,138.6,80.8,138.602] ) );
          shape.graphics.endFill();

          return shape;
        },
        "見" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,2,2,2,2,3,3,3,3,2,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [186,148.4,185.8,175,188.05,175.75,189.39,176.28,190.73,176.81,191.45,177.3,192.16,177.79,192.38,178.32,192.6,178.85,192.6,179.6,192.6,181.55,191.49,183.04,190.38,184.54,187.77,185.55,185.17,186.56,180.87,187.08,176.57,187.6,170.2,187.6,132.4,187.6,126.17,187.6,122.3,186.98,118.43,186.36,116.27,184.58,114.12,182.79,113.36,179.59,112.6,176.38,112.6,171.2,112.6,123.8,86.8,123.8,86.35,124.18,85.74,124.48,85.13,124.78,84.32,125,83.52,125.23,82.5,125.38,81.47,125.53,80.2,125.6,78.85,136.93,74.86,147.27,70.88,157.62,62.72,166.35,54.57,175.09,41.47,181.91,28.37,188.73,8.8,193,7,189.6,22.97,185.18,33.95,178.51,44.93,171.83,51.92,163.38,58.92,154.92,62.43,144.91,65.95,134.9,67,123.8,52,123.8,52,131.8,52,131.8,51.6,132.55,51.2,133.3,49.85,134.2,48.5,135.1,45.92,135.85,43.35,136.6,39,136.6,39,12.6,53.2,19.2,145.6,19.2,151.8,11,169.2,23.6,168.67,24.2,167.82,24.79,166.98,25.38,165.87,25.9,164.76,26.43,163.43,26.87,162.1,27.3,160.6,27.6,160.6,129.8,160.6,130.03,159.83,130.81,159.06,131.58,157.47,132.43,155.88,133.27,153.42,133.94,150.97,134.6,147.6,134.6,147.6,123.8,130.4,123.8,130.02,124.03,129.53,124.22,129.04,124.4,128.42,124.55,127.8,124.7,127.05,124.82,126.3,124.93,125.4,125,125.4,171.4,125.4,173.28,125.54,174.32,125.69,175.37,126.42,175.88,127.15,176.38,128.69,176.49,130.22,176.6,133,176.6,170.4,176.6,171.9,176.6,172.98,176.52,174.06,176.45,174.87,176.13,175.68,175.81,176.27,175.17,176.87,174.53,177.4,173.4,177.92,172.43,178.62,170.11,179.33,167.8,180.17,164.5,181.01,161.2,181.98,157.09,182.95,152.98,184,148.4,186,148.4,185.997,148.401,147.6,24,52,24,52,51.8,147.6,51.8,147.6,24,147.598,24.003,147.6,85.2,147.6,56.6,52,56.6,52,85.2,147.6,85.2,147.598,85.202,52,119,147.6,119,147.6,90,52,90,52,119,51.999,119.002] ) );
          shape.graphics.endFill();

          return shape;
        },
        "え" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,1,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2] ), $.toNumberVector( [113.6,149,113.6,153.8,114.32,157.06,115.05,160.31,117,162.3,118.95,164.29,122.37,165.14,125.8,166,131.2,166,135.85,166,138.92,165.96,142,165.92,144.1,165.83,146.2,165.73,147.62,165.58,149.05,165.43,150.4,165.2,151.3,165.05,152.23,164.81,153.16,164.58,154.1,164.35,155.04,164.13,155.97,163.96,156.9,163.8,157.8,163.8,158.47,163.8,160.34,164.45,162.2,165.1,164.17,166.3,166.14,167.5,167.67,169.2,169.2,170.9,169.2,173,169.2,174.95,167.12,176.1,165.04,177.25,161.12,177.85,157.2,178.45,151.56,178.63,145.92,178.8,138.8,178.8,128.67,178.8,121.69,176.89,114.71,174.98,110.37,171.18,106.04,167.37,104.12,161.67,102.2,155.98,102.2,148.4,102.2,147.88,102.26,146.38,102.32,144.88,102.4,143.18,102.47,141.47,102.54,139.94,102.6,138.4,102.6,137.8,102.6,132.48,101.86,129.16,101.12,125.83,99.67,123.98,98.23,122.12,96.1,121.46,93.97,120.8,91.2,120.8,87.68,120.8,81.8,123.06,75.93,125.32,68.5,130.78,61.08,136.23,52.5,145.35,43.93,154.48,35,168.2,33.43,170.6,32.19,172.4,30.96,174.2,29.78,175.4,28.59,176.6,27.32,177.2,26.05,177.8,24.4,177.8,22.75,177.8,21.45,177.29,20.15,176.78,19.25,175.83,18.35,174.87,17.88,173.5,17.4,172.13,17.4,170.4,17.4,167.18,18.53,164.62,19.66,162.06,21.63,159.7,23.59,157.34,26.26,154.93,28.93,152.53,32,149.6,37.03,144.8,45.73,136.28,54.44,127.76,65.05,117.15,75.66,106.54,87.29,94.65,98.93,82.75,109.8,71.2,110.18,70.75,110.47,70.38,110.77,70,110.98,69.7,111.18,69.4,111.29,69.18,111.4,68.95,111.4,68.8,111.4,68.73,111.36,68.66,111.32,68.58,111.23,68.53,111.13,68.47,110.98,68.44,110.83,68.4,110.6,68.4,109.85,68.4,102.44,69.92,95.04,71.45,85.7,73.68,76.36,75.91,67.46,78.44,58.55,80.98,54.8,83,53.53,83.75,52.51,84.53,51.5,85.32,50.6,85.95,49.7,86.59,48.84,87,47.98,87.4,47,87.4,44.75,87.4,42.25,86.16,39.75,84.91,37.65,82.83,35.55,80.75,34.18,78.04,32.8,75.33,32.8,72.4,32.8,70.38,33.67,68.26,34.54,66.15,36.03,64.18,37.51,62.21,39.47,60.51,41.43,58.8,43.6,57.6,45.6,59.6,44.78,60.58,44.11,61.55,43.44,62.52,42.98,63.48,42.51,64.43,42.25,65.37,42,66.3,42,67.2,42,68.25,42.47,69.17,42.93,70.08,43.93,70.75,44.92,71.43,46.47,71.82,48.03,72.2,50.2,72.2,53.73,72.2,61.62,71.03,69.51,69.85,78.55,68.2,87.59,66.55,96.16,64.78,104.73,63,109.6,61.8,110.95,61.5,112.13,60.62,113.31,59.74,114.38,58.8,115.44,57.87,116.43,57.13,117.43,56.4,118.4,56.4,120.35,56.4,123.09,57.66,125.84,58.92,128.35,60.75,130.86,62.59,132.63,64.67,134.4,66.75,134.4,68.4,134.4,69.45,133.55,70.23,132.69,71.02,131.33,71.65,129.96,72.29,128.24,72.85,126.53,73.4,124.8,74,121.2,75.28,112.79,82.68,104.38,90.08,95.6,98.58,86.83,107.07,79.91,114.14,73,121.2,72.4,121.8,73.2,122,76.8,119.75,80.04,118.25,83.27,116.75,86.18,115.85,89.08,114.95,91.68,114.58,94.28,114.2,96.6,114.2,100.88,114.2,104.1,115.65,107.32,117.1,109.48,120.1,111.63,123.1,112.72,127.7,113.8,132.3,113.8,138.6,113.6,149,113.598,149.001,97,34,95.95,34.08,94.9,34.15,93.86,34.22,92.82,34.28,91.79,34.33,90.78,34.37,89.77,34.4,88.8,34.4,81.97,34.4,76.24,33.37,70.51,32.33,66.02,30.3,61.54,28.28,58.4,25.29,55.25,22.3,53.6,18.4,57.2,16,58.85,18.1,61.32,19.68,63.79,21.25,67.07,22.3,70.36,23.35,74.44,23.88,78.52,24.4,83.4,24.4,87.15,24.4,90.76,24.12,94.37,23.84,97.6,23.5,100.82,23.17,103.54,22.88,106.25,22.6,108.2,22.6,112.4,22.6,115.52,23.64,118.64,24.67,120.7,26.23,122.76,27.78,123.78,29.61,124.8,31.43,124.8,33,124.8,34.8,123.28,35.69,121.77,36.58,119.42,36.98,117.08,37.37,114.25,37.47,111.42,37.58,108.8,37.8,104.9,38.25,100.27,39.44,95.65,40.63,90.85,42.2,86.05,43.78,81.35,45.56,76.65,47.35,72.6,49,71.2,45.6,73.75,44.63,77.23,43.18,80.71,41.73,84.32,40.15,87.94,38.58,91.31,37.05,94.67,35.53,97,34.4,97,34,96.999,34.003] ) );
          shape.graphics.endFill();

          return shape;
        },
        "く" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [75.6,17.8,76.5,16.38,77.58,15.32,78.66,14.27,79.9,13.58,81.14,12.88,82.52,12.54,83.9,12.2,85.4,12.2,89.45,12.2,94.05,13.61,98.65,15.02,102.55,17.33,106.45,19.63,109.03,22.58,111.6,25.53,111.6,28.6,111.6,30.03,110.6,31.01,109.6,32,107.93,32.9,106.26,33.8,104.09,34.79,101.93,35.78,99.6,37.2,93.3,41.1,84.38,47.57,75.45,54.05,66.45,61.08,57.45,68.11,49.65,74.69,41.85,81.28,37.8,85.4,36.53,86.68,35.49,88.21,34.46,89.75,33.73,91.4,33,93.05,32.6,94.74,32.2,96.43,32.2,98,32.2,99.8,33.19,101.53,34.17,103.26,36.18,105.1,38.18,106.94,41.23,108.97,44.28,111,48.4,113.4,64.9,122.85,77.93,132.71,90.97,142.56,100,151.45,109.04,160.34,113.82,167.57,118.6,174.8,118.6,179,118.6,180.95,118.06,182.69,117.52,184.44,116.53,185.75,115.53,187.06,114.13,187.83,112.73,188.6,111,188.6,109.8,188.6,108.41,187.82,107.02,187.04,105.58,185.68,104.13,184.31,102.71,182.44,101.28,180.58,100,178.4,95.95,171.5,89.66,163.49,83.36,155.49,75.28,147.35,67.2,139.21,57.56,131.43,47.93,123.65,37.2,117.2,33.98,115.18,31.42,113.05,28.86,110.92,27.08,108.58,25.3,106.23,24.35,103.62,23.4,101,23.4,98,23.4,95.68,23.95,93.37,24.5,91.06,25.55,88.85,26.6,86.64,28.13,84.56,29.65,82.48,31.6,80.6,35.88,76.18,42.35,70.1,48.82,64.02,55.9,57.63,62.99,51.23,69.91,45.19,76.83,39.15,82,34.8,83.5,33.53,84.72,32.14,85.94,30.75,86.8,29.4,87.66,28.05,88.13,26.82,88.6,25.58,88.6,24.6,88.6,22.88,87.26,21.67,85.91,20.46,84,19.73,82.09,19,80,18.73,77.9,18.45,76.4,18.6,75.6,17.8,75.602,17.803] ) );
          shape.graphics.endFill();

          return shape;
        },
        "て" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [15,37.8,15.38,40.2,16.57,42.16,17.76,44.12,19.58,45.5,21.39,46.89,23.75,47.65,26.1,48.4,28.8,48.4,30.08,48.4,32,48.26,33.93,48.12,36.1,47.85,38.28,47.59,40.5,47.22,42.73,46.85,44.6,46.4,50.53,45.2,61.69,43.16,72.86,41.12,85.93,38.93,98.99,36.73,112.3,34.73,125.6,32.73,135.8,31.6,138.05,31.3,140.15,30.8,142.24,30.29,144.03,29.65,145.81,29.02,147.19,28.28,148.58,27.55,149.4,26.8,155.63,28,160,29.31,164.37,30.62,167.13,32.18,169.88,33.73,171.14,35.61,172.4,37.48,172.4,39.8,172.4,41.08,171.79,41.89,171.19,42.71,170.1,43.18,169.01,43.65,167.51,43.82,166,44,164.2,44,162.55,44,160.67,43.88,158.79,43.75,156.8,43.6,154.81,43.45,152.78,43.33,150.75,43.2,148.8,43.2,140.78,43.2,132.04,46.72,123.31,50.25,115.25,55.78,107.19,61.31,100.48,68.09,93.78,74.88,89.8,81.4,87.33,85.15,85.17,90.14,83.02,95.12,81.43,100.88,79.83,106.63,78.92,112.93,78,119.23,78,125.6,78,136.25,81.07,143.29,84.14,150.33,89.53,154.75,94.91,159.18,102.22,161.49,109.53,163.8,118,165,120.1,165.3,122.37,165.36,124.64,165.41,126.73,165.45,128.81,165.49,130.52,165.62,132.23,165.75,133.2,166.2,135.75,167.25,137.54,168.48,139.33,169.71,140.45,171.07,141.58,172.44,142.09,173.93,142.6,175.42,142.6,177,142.6,178.28,142.01,179.18,141.42,180.09,140.28,180.68,139.13,181.26,137.45,181.53,135.78,181.8,133.6,181.8,132.93,181.8,132.21,181.77,131.5,181.73,130.75,181.68,130,181.62,129.21,181.55,128.43,181.48,127.6,181.4,109.3,179.3,97.42,175.08,85.54,170.86,78.6,164.13,71.66,157.39,68.93,147.96,66.2,138.53,66.2,126,66.2,111.6,71.12,98.83,76.04,86.05,84.1,75.25,92.16,64.45,102.48,55.8,112.8,47.15,123.6,41,123.4,40.4,114.63,41.3,101.72,43.57,88.81,45.83,76.1,48.78,63.39,51.72,53.03,55,42.68,58.28,39,61.2,37.95,61.88,36.95,62.52,35.94,63.17,34.85,63.68,33.77,64.18,32.53,64.49,31.3,64.8,29.8,64.8,26.58,64.8,23.14,62.99,19.71,61.18,16.88,58.43,14.05,55.67,12.23,52.4,10.4,49.13,10.4,46.2,10.4,44.78,10.63,43.45,10.85,42.13,11.28,41,11.71,39.88,12.34,39,12.98,38.13,13.8,37.6,15,37.8,15.001,37.803] ) );
          shape.graphics.endFill();

          return shape;
        },
        "時" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,2,1,2,2,2,2,2,1,2,2,2,2,2,1,2,3,3,3,3,2,2,2,2,2,2,2,2,2,3,3,3,3,2,2,2,2,3,3,3,3,2,2,2,2,2,1,2,2,3,3,3,3,2,2,3,3,3,3,3,3,3,3,2,2,3,3,3,3,2,2,2,2,2,2,3,3,3,3,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [61.8,18.8,78.8,31.4,78.35,32,77.51,32.59,76.67,33.18,75.55,33.7,74.42,34.23,73.06,34.67,71.7,35.1,70.2,35.4,70.2,151.8,70.2,152.03,69.5,152.77,68.79,153.52,67.27,154.33,65.76,155.13,63.36,155.77,60.97,156.4,57.6,156.4,57.6,141.8,26.8,141.8,26.8,161.4,26.8,161.78,26.04,162.51,25.29,163.24,23.9,163.98,22.51,164.71,20.56,165.25,18.6,165.8,16.2,165.8,14.2,165.8,14.2,20.6,29.2,27,55.6,27,61.8,18.8,61.799,18.803,57.6,31.8,26.8,31.8,26.8,81.4,57.6,81.4,57.6,31.8,57.599,31.803,26.8,137,57.6,137,57.6,86.2,26.8,86.2,26.8,137,26.8,137.001,177.8,63.8,195.2,76.4,194.6,77.53,193.84,78.32,193.08,79.12,192,79.63,190.91,80.13,189.4,80.37,187.9,80.6,185.8,80.6,73.8,80.6,72.6,75.8,122.4,75.8,122.4,42.6,82.2,42.6,81,37.8,122.4,37.8,122.4,7.6,144.6,9.4,144.45,10.68,143.92,11.57,143.39,12.47,142.3,13.1,141.21,13.74,139.48,14.18,137.75,14.63,135.2,15,135.2,37.8,157.2,37.8,166.2,26,183.4,38.4,182.8,39.53,182.01,40.32,181.22,41.12,180.1,41.63,178.97,42.13,177.44,42.37,175.9,42.6,173.8,42.6,135.2,42.6,135.2,75.8,168.6,75.8,177.8,63.8,177.797,63.803,167.4,112,176.2,100.4,192.6,112.6,192,113.73,191.24,114.52,190.49,115.32,189.42,115.83,188.35,116.33,186.89,116.57,185.42,116.8,183.4,116.8,159.2,116.8,159.2,172.6,159.2,176.58,158.53,179.98,157.86,183.38,155.65,186,153.44,188.63,149.24,190.38,145.05,192.13,138,192.8,138,188.83,136.55,186.44,135.1,184.05,132.27,182.7,129.44,181.35,125.26,180.76,121.07,180.18,115.6,179.8,115.6,176.4,141.8,176.4,143.15,176.4,144.04,176.23,144.92,176.06,145.45,175.63,145.97,175.19,146.19,174.46,146.4,173.73,146.4,172.6,146.4,116.8,74.2,116.8,72.8,112,146.4,112,146.4,87.4,167.4,89,167.32,89.98,166.96,90.74,166.6,91.5,165.7,92.08,164.8,92.66,163.24,93.08,161.67,93.5,159.2,93.8,159.2,112,167.4,112,167.397,112.002,92.8,125.8,100.45,129.55,105.62,133.56,110.8,137.56,113.95,141.48,117.1,145.4,118.45,149.06,119.8,152.73,119.8,155.8,119.8,158.05,119.17,159.9,118.54,161.74,117.47,163.05,116.4,164.36,114.99,165.08,113.57,165.8,112,165.8,111.25,165.8,110.47,165.64,109.69,165.48,108.9,165.13,108.11,164.77,107.33,164.2,106.55,163.63,105.8,162.8,105.5,158.6,104.1,153.78,102.7,148.96,100.6,144.18,98.5,139.4,95.9,134.99,93.3,130.58,90.6,127.2,92.8,125.8,92.798,125.802] ) );
          shape.graphics.endFill(  );

          return shape;
        },
        "を" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2] ), $.toNumberVector( [145.8,68.8,146.4,67.75,147.62,66.93,148.84,66.12,150.32,65.55,151.8,64.99,153.36,64.7,154.92,64.4,156.2,64.4,160.4,64.4,164.3,66.14,168.2,67.88,171.2,70.38,174.2,72.87,176,75.62,177.8,78.38,177.8,80.4,177.8,82.28,177.03,83.64,176.27,85,174.67,86.05,173.08,87.1,170.63,87.94,168.17,88.78,164.8,89.6,161.2,90.43,155.31,92.48,149.42,94.53,142.45,97.3,135.47,100.08,128.01,103.33,120.55,106.58,113.8,109.8,113.87,110.63,113.91,111.48,113.96,112.34,113.97,113.2,113.99,114.07,114,114.92,114,115.78,114,116.6,114,125.6,113.4,131.88,112.8,138.17,111.6,142.1,110.4,146.04,108.6,147.82,106.8,149.6,104.4,149.6,103.05,149.6,101.94,149.02,100.84,148.43,100.05,147.3,99.26,146.18,98.83,144.54,98.4,142.9,98.4,140.8,98.4,140.35,98.4,139.9,98.41,139.45,98.42,139,98.44,138.55,98.48,138.1,98.52,137.65,98.6,137.2,99.12,133.83,99.56,130.9,100,127.97,100.3,125.3,100.6,122.64,100.74,120.16,100.87,117.68,100.8,115.2,94.05,118.73,87.77,122.78,81.49,126.83,76.65,131.55,71.81,136.28,68.91,141.75,66,147.23,66,153.6,66,158.4,68.36,161.75,70.72,165.1,75.27,167.2,79.83,169.3,86.5,170.25,93.17,171.2,101.8,171.2,109.3,171.2,115.98,170.96,122.65,170.71,127.92,170.15,133.19,169.59,136.76,168.67,140.32,167.75,141.6,166.4,146.4,166.85,150.15,167.56,153.91,168.28,156.5,169.25,159.09,170.23,160.44,171.46,161.8,172.7,161.8,174.2,161.8,175.55,161.41,176.59,161.02,177.62,160.05,178.43,159.07,179.23,157.41,179.86,155.75,180.48,153.2,181,149.75,181.75,144.33,182.22,138.92,182.69,132.97,182.95,127.03,183.21,121.28,183.31,115.52,183.4,111.4,183.4,94.82,183.4,84.13,181.33,73.43,179.26,67.22,175.55,61.02,171.84,58.61,166.7,56.2,161.55,56.2,155.4,56.2,148.05,60.15,141.15,64.11,134.24,70.42,128.05,76.74,121.86,84.63,116.53,92.52,111.2,100.4,107,100.4,106.48,100.37,105.95,100.34,105.42,100.3,104.88,100.26,104.33,100.23,103.77,100.2,103.2,100.2,102.6,99.82,96.9,98.44,93.1,97.06,89.29,94.97,87,92.89,84.72,90.27,83.76,87.65,82.8,84.8,82.8,77.9,82.8,70.43,86.88,62.96,90.95,55.48,97.7,47.99,104.45,40.78,113.18,33.58,121.9,27.2,131.2,25.4,133.83,23.97,135.75,22.54,137.67,21.3,138.93,20.06,140.18,18.93,140.79,17.8,141.4,16.6,141.4,15.55,141.4,14.45,140.79,13.35,140.18,12.45,139.08,11.55,137.97,10.98,136.42,10.4,134.88,10.4,133,10.4,131.05,11.12,129.44,11.84,127.83,13.18,126.28,14.51,124.72,16.39,123.07,18.28,121.43,20.6,119.4,26.9,113.78,33.2,105.98,39.49,98.19,45.03,89.6,50.56,81.02,54.94,72.32,59.33,63.63,61.8,56.2,59.63,56.35,57.35,56.47,55.08,56.58,52.93,56.65,50.77,56.73,48.83,56.77,46.9,56.8,45.4,56.8,39.4,56.8,34.84,55.53,30.28,54.27,26.93,51.9,23.57,49.54,21.3,46.17,19.03,42.8,17.6,38.6,20,36.8,22.03,39.8,24.49,41.99,26.95,44.18,30.1,45.6,33.25,47.03,37.21,47.72,41.18,48.4,46.2,48.4,47.93,48.4,50.32,48.32,52.72,48.25,55.33,48.08,57.93,47.91,60.52,47.64,63.1,47.38,65.2,47,66.33,43.78,67.12,40.98,67.92,38.19,68.43,35.75,68.93,33.32,69.17,31.2,69.4,29.08,69.4,27.2,69.4,25.33,68.48,24,67.56,22.67,66.08,21.83,64.59,20.98,62.74,20.59,60.88,20.2,59,20.2,58.4,20.2,57.81,20.24,57.21,20.28,56.65,20.35,56.09,20.43,55.57,20.54,55.05,20.65,54.6,20.8,54.2,20.6,54.58,19.03,55.54,17.55,56.51,16.07,58.03,14.93,59.54,13.78,61.6,13.09,63.65,12.4,66.2,12.4,70.33,12.4,74.03,13.32,77.73,14.25,80.53,15.73,83.32,17.21,84.96,19.07,86.6,20.93,86.6,22.8,86.6,24.38,86.14,25.39,85.67,26.41,84.98,27.33,84.28,28.25,83.48,29.3,82.68,30.35,82,32,81.4,33.65,80.8,35.33,80.19,37.01,79.58,38.68,78.96,40.35,78.32,41.99,77.68,43.63,77,45.2,81.13,44.68,85.79,43.85,90.46,43.02,95,42,99.54,40.99,103.61,39.86,107.68,38.73,110.6,37.6,112.4,37,114.05,36.27,115.71,35.53,117.08,34.58,118.44,33.62,119.46,32.4,120.48,31.18,121,29.6,125.5,29.68,129.22,30,132.94,30.32,135.6,31.13,138.26,31.93,139.73,33.34,141.2,34.75,141.2,37,141.2,38.28,140.24,39.24,139.28,40.21,137.73,40.98,136.17,41.75,134.2,42.37,132.23,43,130.2,43.6,125.25,45.18,118.06,46.9,110.86,48.63,102.95,50.2,95.04,51.78,87.17,53.05,79.3,54.33,73,55,70.83,60.63,68.33,65.94,65.83,71.26,63.2,76.08,60.58,80.9,57.93,85.12,55.28,89.35,52.8,92.8,53.8,93,58.98,88.05,63.72,84.78,68.46,81.5,72.68,79.55,76.89,77.6,80.55,76.8,84.2,76,87.2,76,91.4,76,95.38,77.18,99.36,78.35,102.7,81.2,106.04,84.05,108.52,88.83,111,93.6,112.2,100.8,120.08,96.83,128.15,93.07,136.23,89.32,142.78,86.08,149.32,82.83,153.46,80.24,157.6,77.65,157.6,76,157.6,74.73,156.97,73.72,156.33,72.72,155.23,72.03,154.12,71.33,152.62,70.97,151.13,70.6,149.4,70.6,149.03,70.6,148.68,70.61,148.34,70.61,148,70.63,147.66,70.65,147.32,70.69,146.98,70.73,146.6,70.8,145.8,68.8,145.798,68.803] ) );
          shape.graphics.endFill(  );

          return shape;
        },
        "知" : function()
        {
          var shape = Shape();
          
          shape.graphics.beginFill( 0xFFFFFF,1 );
          shape.graphics.drawPath( $.toIntVector( [1,2,2,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,3,3,3,3,2,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,2,3,3,3,3,2,2,3,3,3,3,2,2,1,2,3,3,3,3,2,3,3,3,3,2,2,2,3,3,3,3,2,2,2,2,2,1,2,2,2,2,2] ), $.toNumberVector( [78,97,86.8,85.4,104.2,97.6,103.52,98.73,102.73,99.52,101.93,100.32,100.82,100.83,99.72,101.33,98.21,101.57,96.7,101.8,94.6,101.8,61,101.8,60.77,105.18,60.46,108.62,60.14,112.06,59.67,115.53,59.2,119,58.55,122.47,57.9,125.95,57,129.4,68.17,133.23,75.66,137.79,83.15,142.35,87.67,146.98,92.19,151.61,94.09,155.98,96,160.35,96,163.8,96,165.6,95.54,167.11,95.07,168.61,94.25,169.7,93.42,170.79,92.29,171.39,91.15,172,89.8,172,89.2,172,88.53,171.85,87.87,171.71,87.17,171.43,86.48,171.14,85.78,170.74,85.07,170.33,84.4,169.8,83.12,165.3,80.27,160.37,77.42,155.44,73.57,150.63,69.73,145.81,65.19,141.37,60.65,136.93,56,133.4,53.67,141.65,49.96,149.72,46.24,157.78,40.67,165.38,35.1,172.97,27.45,179.95,19.8,186.93,9.6,193,7,190.4,18.77,180.58,26.46,169.86,34.14,159.15,38.77,147.9,43.4,136.65,45.5,125.04,47.6,113.43,48.2,101.8,8.8,101.8,7.6,97,48.4,97,48.47,95.88,48.51,94.75,48.56,93.63,48.57,92.5,48.59,91.38,48.6,90.25,48.6,89.13,48.6,88,48.6,47,32.6,47,30.27,52.25,27.73,57.14,25.18,62.03,22.42,66.48,19.67,70.92,16.71,74.87,13.75,78.83,10.6,82.2,7.6,80.4,11.12,74.18,14.42,65.87,17.71,57.57,20.6,48.03,23.49,38.48,25.88,28.12,28.27,17.75,30,7.4,50.8,12.4,50.57,13.38,50.16,14.09,49.74,14.81,48.95,15.28,48.16,15.75,46.92,15.97,45.67,16.2,43.8,16.2,42.82,19.58,41.77,22.91,40.72,26.24,39.6,29.5,38.47,32.77,37.27,35.95,36.07,39.13,34.8,42.2,73.2,42.2,82.2,30.8,99.4,42.8,98.8,44,98.02,44.81,97.24,45.62,96.15,46.1,95.06,46.59,93.61,46.8,92.15,47,90.2,47,61.4,47,61.4,87.8,61.4,88.93,61.4,90.06,61.39,91.18,61.37,92.33,61.36,93.47,61.31,94.64,61.27,95.8,61.2,97,78,97,77.999,97.002,175,31.2,192.2,44.2,191.75,44.8,190.91,45.39,190.07,45.98,188.95,46.5,187.82,47.03,186.46,47.47,185.1,47.9,183.6,48.2,183.6,181,183.6,181.23,182.89,182,182.18,182.78,180.62,183.63,179.07,184.47,176.59,185.14,174.12,185.8,170.6,185.8,170.6,168,121.4,168,121.4,185.4,121.4,185.55,121.06,186.38,120.71,187.21,119.4,188.15,118.09,189.09,115.49,189.84,112.9,190.6,108.4,190.6,108.4,33,122.4,39.8,168.6,39.8,175,31.2,174.998,31.203,121.4,163.2,170.6,163.2,170.6,44.6,121.4,44.6,121.4,163.2,121.398,163.201] ) );
          shape.graphics.endFill(  );

          return shape;
        }
      },
    
      /* Namespace: Rnr.Typography.Mincho.Static
       * Contains pre-arranged huge texts, Composed from global variables for script size constraint.
       */
      Static : function()
      {
        var stNamespace = {};
        
        var static1 = Global._get( "___static1_Rnr" );
        var static2 = Global._get( "___static2_Rnr" );
        
        foreach( static1, function( k1, o1 )
        {
          stNamespace[ k1 ] = o1;
        });
        
        foreach( static2, function( k2, o2 )
        {
          stNamespace[ k2 ] = o2;
        });
        
        return stNamespace;
      }()
    }
  },
  
  /* Class: Spinner
   * A layer source containing several donut segments, originating from the center.
   *
   * numParts
   *   Number of arcs.
   * breakPercentage
   *   Comparative length of the broken part.
   * innerOffsetPercentage
   *   Comparative length of the broken part.
   * outerRadius
   *   Obvious.
   * innerRadius
   *   Obvious.
   */
  Spinner : function( params )
  {
    // Create a Shape
    var shape = Shape();
    
    // Private function for making arcs, modified from sample
    drawArc = function( radius, angle, startAngle, isInner )
    {
      var srcRadian = startAngle / 180 * Math.PI / 0.01;
      var dstRadian = ( startAngle + angle ) / 180 * Math.PI / 0.01;
      // Move to the arc start point
      if ( isInner )
      {
        shape.graphics.lineTo( Math.cos( srcRadian * 0.01 ) * radius, Math.sin( srcRadian * 0.01 ) * radius );
        for ( var i = srcRadian; i &gt;= dstRadian; i -- )
        {
          shape.graphics.curveTo( Math.cos( ( i + 0.5 ) * 0.01 ) * radius, Math.sin( ( i + 0.5 ) * 0.01 ) * radius,
            Math.cos( i * 0.01 ) * radius, Math.sin( i * 0.01 ) * radius );
        }
      }
      else
      {
        shape.graphics.moveTo( Math.cos( srcRadian * 0.01 ) * radius, Math.sin( srcRadian * 0.01 ) * radius );
        for ( var i = srcRadian; i &lt;= dstRadian; i ++ )
        {
          shape.graphics.curveTo( Math.cos( ( i - 0.5 ) * 0.01 ) * radius, Math.sin( ( i - 0.5 ) * 0.01 ) * radius,
            Math.cos( i * 0.01 ) * radius, Math.sin( i * 0.01 ) * radius );
        }
      }
    };
    
    // Private function for making segments
    drawSegment = function( index )
    {
      // Determine angles
      var startAngle = 360.0 * index / params.numParts;
      var angle = 360.0 * ( 100 - params.breakPercentage ) / params.numParts / 100.0;
      var innerOffset = 360.0 * params.innerOffsetPercentage / params.numParts / 100.0;
      
      // Begin fill
      shape.graphics.beginFill( 0xFFFFFF );
      
      // Draw the outer arc
      drawArc( params.outerRadius, angle, startAngle );
      
      // Draw the inner arc
      drawArc( params.innerRadius, -angle, startAngle + innerOffset + angle, true );
      
      // End fill, the gap will be automatically connected
      shape.graphics.endFill();
    };
    
    // Loop drawing segments
    for ( var i = 0; i &lt; params.numParts; i ++ )
    {
      drawSegment( i );
    }
    
    // return the shape
    return shape;
  },
  
  /* Class: Gear
   * A layer source containing a gear (donut), modified from Spinner
   *
   * numTeeth
   *   Number of teeth.
   * toothPercent
   *   Length (angle) of the tooth.
   * toothLength
   *   Length (radius) of the tooth.
   * outerRadius
   *   Obvious.
   * innerRadius
   *   Obvious.
   */
  Gear : function( params )
  {
    // Create a Shape
    var shape = Shape();
    
    // Private function for making arcs, modified from sample, gears always connect
    drawArc = function( radius, angle, startAngle )
    {
      var srcRadian = startAngle / 180 * Math.PI / 0.01;
      var dstRadian = ( startAngle + angle ) / 180 * Math.PI / 0.01;
      // Move to the arc start point
      shape.graphics.lineTo( Math.cos( srcRadian * 0.01 ) * radius, Math.sin( srcRadian * 0.01 ) * radius );
      for ( var i = srcRadian; i &lt;= dstRadian; i ++ )
      {
        shape.graphics.curveTo( Math.cos( ( i - 0.5 ) * 0.01 ) * radius, Math.sin( ( i - 0.5 ) * 0.01 ) * radius,
        Math.cos( i * 0.01 ) * radius, Math.sin( i * 0.01 ) * radius );
      }
    };
    
    // Begin fill
    shape.graphics.beginFill( 0xFFFFFF );
    
    // Loop drawing segments
    for ( var i = 0; i &lt; params.numTeeth; i ++ )
    {
      // Determine angles
      var startAngle = 360.0 * i / params.numTeeth;
      var angle = 360.0 / params.numTeeth;
      var toothAngle = angle * params.toothPercent / 100.0;
      
      // Draw tooth segment
      drawArc( params.outerRadius + params.toothLength, toothAngle, startAngle );
      
      // Draw smooth segment
      drawArc( params.outerRadius, angle - toothAngle, startAngle + toothAngle );
    }
    
    // Line up to connect
    shape.graphics.lineTo( params.outerRadius, 0 );
    
    // Draw inner circle
    shape.graphics.drawCircle( 0, 0, params.innerRadius );
    
    // End fill
    shape.graphics.endFill();
    
    // return the shape
    return shape;
  },
  
  /* Composition: ElemText
   * Composition containing title.
   */
  ElemText : function() { return Comp(
  {
    width : 640,
    height : 360,
    startTime : 0,
    duration : 10,
    layers :
    [
      Layer(
      {
        source : Rnr.Typography.BookAntiqua[ "Round and Round" ](),
        inPoint : 0,
        outPoint : 10
      })
    ]
  });},
  
  /* Composition: ElemText2
   * Composition containing artist.
   */
  ElemText2 : function() { return Comp(
  {
    width : 640,
    height : 360,
    startTime : 0,
    duration : 10,
    layers :
    [
      Layer(
      {
        source : Rnr.Typography.BookAntiqua[ "Masayoshi Minoshima" ](),
        inPoint : 0,
        outPoint : 10
      })
    ]
  });},
  
  /* Composition: ElemText3
   * Composition containing genre.
   */
  ElemText3 : function() { return Comp(
  {
    width : 640,
    height : 360,
    startTime : 0,
    duration : 10,
    layers :
    [
      Layer(
      {
        source : Rnr.Typography.BookAntiqua[ "HYPER ELECTRO" ](),
        inPoint : 0,
        outPoint : 10
      })
    ]
  });},
  
  /* Composition: ElemText4
   * Composition containing game.
   */
  ElemText4 : function() { return Comp(
  {
    width : 640,
    height : 360,
    startTime : 0,
    duration : 10,
    layers :
    [
      Layer(
      {
        source : Rnr.Typography.BookAntiqua[ "Beatmania IIDX" ](),
        inPoint : 0,
        outPoint : 10
      })
    ]
  });},
  
  /* Composition: ElemTextLoop
   * Simple 4-step loop of the text
   */
  ElemTextLoop : function() { return Comp(
  {
    width : 640,
    height : 360,
    startTime : 0,
    duration : 40,
    layers :
    [
      CompLayer({ composition : Rnr.ElemText(), inPoint : 0, outPoint : 10 }),
      CompLayer({ composition : Rnr.ElemText2(), inPoint : 10, outPoint : 20 }),
      CompLayer({ composition : Rnr.ElemText3(), inPoint : 20, outPoint : 30 }),
      CompLayer({ composition : Rnr.ElemText4(), inPoint : 30, outPoint : 40 })
    ]
  });},
  
  /* Composition: CompIntro
   * Composition containing intro.
   */  
  CompIntro : function() { return Comp(
  {
    width : 1280,
    height : 720,
    startTime : 0,
    duration : 11926,
    layers : Factory.collapse(
    [
      // Replicate some particle shit
      _( DVTLayer, 8, function()
      {
        var possibleText = [ "真\n実", "本\n当\nの", "偽\nり", "こ\nん\nな\nの\nは", "違\nう\nは\nず" ];
        var startX = Math.random() * 1280.0;
        var startY = Math.random() * 920.0;
        var fontSize = 48 + Math.round( Math.random() * 48 );
  
        return [{
          inPoint : 0,
          outPoint : 11926,
          dictionary : Rnr.Typography.Mincho.Dynamic,
          textProperties :
          {
            horizontalAlign : "center",
            verticalAlign : "center",
            letterSpacing : 20,
            fontSize : fontSize,
            lineHeight : fontSize * 1.2,
            text : possibleText[ Math.floor( Math.random() * 5.0 ) ]
          },
          properties :
          {
            x : startX,
            y : KeysBind(
            {
              keyframes :
              [
                Key({ time : 0, value : startY }),
                Key({ time : 11926, value : startY - 200 - Math.random() * 200 })
              ]
            }),
            baseAlpha : KeysBind(
            {
              keyframes :
              [
                // First keyframe at inPoint to make sure spinner invisible at start.
                Key({ time : 0, value : 0.51, interpolation : NI.cubic.easeIn }),
                Key({ time : 5963, value : -0.5, interpolation : NI.cubic.easeOut }),
                Key({ time : 11926, value : 0.51 })
              ]
            }),
            alpha : Binder.Link(
            {
              name : "baseAlpha",
              linkFunc : function( value )
              {
                // Create a flashy effect using random and rounding keyframe data
                return Math.round( Math.random() - value );
              }
            })
          }
        }];
      }),
      
      // Replicate set of circles coming in at intro
      _( Layer, 8, function( index ) {
        
        // set layer inpoint for later use
        var inPoint = 339 + 827.5862 * index;
        var finPoint = inPoint + 827.5862 * 6;
        
        return [{
          source : Rnr.Spinner({ numParts : index % 4 + 2, breakPercentage : 50, innerOffsetPercentage : 4 * ( index % 2 * 2 - 1 ), outerRadius : index * 75 + 100, innerRadius : index * 75 + 50 }),
          inPoint : inPoint,
          outPoint : 11926,
          properties : 
          {
            x : 640,
            y : 360,
            rotation : function( time ) { return time * 90 * ( index % 2 * 2 - 1 ) / 413.793; },
            scaleX : KeysBind(
            {
              keyframes :
              [
                // First keyframe at inPoint to make sure spinner invisible at start.
                Key({ time : inPoint, value : 734.30239 / ( index * 75 + 50 ), interpolation : NI.exponential.easeOut }),
                Key({ time : finPoint, value : 1, interpolation : NI.back.easeIn }),
                Key({ time : 11926, value : 734.30239 / ( index * 75 + 50 ) })
              ]
            }),
            scaleY : Binder.Link({ name : "scaleX" })
          }
        }];
      }),
      
      [
        // White solid to make inversion effect
        Layer(
        {
          source : Solid({ width : 1280, height : 720, color : 0xFFFFFF }),
          inPoint : 0,
          outPoint : 11926,
          properties :
          {
            x : 0,
            y : 0,
            blendMode : "invert",
            visible : function( time )
            {
              // Checks current beat
              var speed = 413.7931;
              if ( time &gt;= 6960 ) { speed = 206.89655; }
              if ( time &gt;= 10271 ) { speed = 103.44828; }
              var beat = Math.floor( ( time - 339 ) / speed );
              
              return beat % 2 === 1;
            }
          }
        })
      ]
    ])
  });},
  
  /* Composition: CompBreakdown
   * Composition containing breakdown.
   */  
  CompBreakdown : function() { return Comp(
  {
    width : 1280,
    height : 720,
    startTime : 11926,
    duration : 1655,
    layers :
    [
      // Swipe Spinner
      ForceMB(
      {
        layers : _( Layer, 8, function() { return [{
          source : Rnr.Spinner({ numParts : 3, breakPercentage : 50, innerOffsetPercentage : 4, outerRadius : 500, innerRadius : 183.5755975 }),
          inPoint : 11926,
          outPoint : 13581,
          properties : 
          {
            x : 640,
            y : 360,
            rotation : function( time ) { return time * 90 / 413.793; },
            scaleX : KeysBind(
            {
              keyframes :
              [
                // First keyframe at inPoint to make sure spinner invisible at start.
                Key({ time : 11926, value : 0, interpolation : NI.exponential.easeOut }),
                Key({ time : 13581, value : 4 })
              ]
            }),
            scaleY : Binder.Link({ name : "scaleX" })
          }
        }];})
      }),
      
      // Text Element
      CompLayer({ composition : Rnr.ElemText(), inPoint : 11926, outPoint : 13581, properties : { x : 320, y : 180 } }),
      
      // Invert Solids
      ForceMB(
      {
        layers : _( Layer, 4, function() { return [{
          source : Solid({ width : 1280, height : 720, color : 0xFFFFFF }),
          inPoint : 11926,
          outPoint : 13581,
          properties :
          {
            x : 0,
            y : KeysBind({
              keyframes : [
                Key({ time : 11926, value : -720, interpolation : NI.exponential.easeOut }),
                Key({ time : 12339, value : -270, interpolation : NI.exponential.easeIn }),
                Key({ time : 13581, value : 0 })
              ]
            }),
            blendMode : "invert"
          }
        }];})
      }),
      ForceMB(
      {
        layers : _( Layer, 4, function() { return [{
          source : Solid({ width : 1280, height : 720, color : 0xFFFFFF }),
          inPoint : 11926,
          outPoint : 13581,
          properties :
          {
            x : 0,
            y : KeysBind({
              keyframes : [
                Key({ time : 11926, value : 720, interpolation : NI.exponential.easeOut }),
                Key({ time : 12339, value : 270, interpolation : NI.exponential.easeIn }),
                Key({ time : 13581, value : 0 })
              ]
            }),
            blendMode : "invert"
          }
        }];})
      })
    ]
  });},
  
  /* Composition: CompInstrumental1
   * Composition containing first insrtumental part.
   */
  CompInstrumental1 : function() { return Comp(
  {
    width : 1280,
    height : 720,
    startTime : 13581,
    duration : 13241,
    layers : 
    [
      // The beat spinners
      ForceMB({
        layers : _( Layer, 6, function() { return [{
          source : Rnr.Spinner({ numParts : 4, breakPercentage : 25, innerOffsetPercentage : -4, outerRadius : 100, innerRadius : 50 }),
          inPoint : 13581,
          outPoint : 26822,
          properties :
          {
            x : 640,
            y : 360,
            rotation : KeysBind(
            {
              keyframes :
              [
                Key({ time : 13581, value : 0, interpolation : NI.cubic.easeOut }),
                Key({ time : 13995, value : -180, interpolation : NI.cubic.easeOut }),
                Key({ time : 14407, value : -360, interpolation : NI.hold }),
                Key({ time : 14408, value : 0, interpolation : NI.cubic.easeOut })
              ],
              mode : KeysBindMode.repeat
            }),
            
            scaleX : KeysBind(
            {
              keyframes :
              [
                // First keyframe at inPoint to make sure spinner invisible at start.
                Key({ time : 13581, value : 734.30239 / 150, interpolation : NI.exponential.easeOut }),
                Key({ time : 14408, value : 1, interpolation : NI.hold }),
                Key({ time : 19788, value : 1, interpolation : NI.cubic.easeInOut }),
                Key({ time : 20615, value : 0.75 })
              ]
            }),
            scaleY : Binder.Link({ name : "scaleX" })
          }
        }];})
      }),
      ForceMB({
        layers : _( Layer, 8, function() { return [{
          source : Rnr.Spinner({ numParts : 4, breakPercentage : 25, innerOffsetPercentage : 4, outerRadius : 200, innerRadius : 150 }),
          inPoint : 13581,
          outPoint : 26822,
          properties :
          {
            x : 640,
            y : 360,
            rotation : KeysBind(
            {
              keyframes :
              [
                Key({ time : 13581, value : 0, interpolation : NI.cubic.easeOut }),
                Key({ time : 13995, value : 180, interpolation : NI.cubic.easeOut }),
                Key({ time : 14407, value : 360, interpolation : NI.hold }),
                Key({ time : 14408, value : 0, interpolation : NI.cubic.easeOut })
              ],
              mode : KeysBindMode.repeat
            }),
            
            scaleX : KeysBind(
            {
              keyframes :
              [
                // First keyframe at inPoint to make sure spinner invisible at start.
                Key({ time : 13581, value : 734.30239 / 150, interpolation : NI.exponential.easeOut }),
                Key({ time : 14822, value : 1, interpolation : NI.hold }),
                Key({ time : 19788, value : 1, interpolation : NI.cubic.easeInOut }),
                Key({ time : 20615, value : 0.75 })
              ]
            }),
            scaleY : Binder.Link({ name : "scaleX" })
          }
        }];})
      }),
      
      // The turntable
      ForceMB({
        layers : _( Layer, 10, function() {
          
        return [{
          source : Rnr.Gear({ numTeeth : 3, toothPercent : 50, toothLength : 50, outerRadius : 300, innerRadius : 250 }),
          inPoint : 13581,
          outPoint : 26822,
          properties :
          {
            x : 640,
            y : 360,
            scratch : KeysBind(
            {
              keyframes : 
              [
                Key({ time : 13581, value : 0, interpolation : NI.back.easeIn }),
                Key({ time : 13788, value : 90, interpolation : NI.back.easeIn }),
                Key({ time : 13891, value : 45, interpolation : NI.back.easeIn }),
                Key({ time : 13995, value : 90, interpolation : NI.back.easeIn }),
                Key({ time : 14202, value : 0, interpolation : NI.back.easeIn }),
                Key({ time : 14408, value : 90, interpolation : NI.back.easeIn }),
                Key({ time : 14512, value : 45, interpolation : NI.back.easeIn }),
                Key({ time : 14719, value : 135, interpolation : NI.back.easeIn }),
                Key({ time : 14926, value : 45, interpolation : NI.back.easeIn }),
                Key({ time : 15029, value : 90, interpolation : NI.back.easeIn }),
                Key({ time : 15326, value : 0, interpolation : NI.back.easeIn }),
                Key({ time : 15443, value : 90, interpolation : NI.back.easeIn }),
                Key({ time : 15650, value : 0, interpolation : NI.back.easeIn }),
                Key({ time : 15857, value : 90, interpolation : NI.back.easeIn }),
                Key({ time : 16064, value : 0, interpolation : NI.back.easeIn }),
                Key({ time : 16271, value : 90, interpolation : NI.back.easeIn }),
                Key({ time : 16374, value : 45, interpolation : NI.back.easeIn }),
                Key({ time : 16581, value : 135, interpolation : NI.back.easeIn }),
                Key({ time : 16788, value : 45, interpolation : NI.back.easeIn }),
                Key({ time : 16891, value : 90, interpolation : NI.back.easeIn }),
                Key({ time : 17098, value : 0, interpolation : NI.back.easeIn }),
                Key({ time : 17305, value : 90, interpolation : NI.back.easeIn }),
                Key({ time : 17408, value : 45, interpolation : NI.back.easeIn }),
                Key({ time : 17512, value : 90, interpolation : NI.back.easeIn }),
                Key({ time : 17615, value : 45, interpolation : NI.back.easeIn }),
                Key({ time : 17719, value : 90, interpolation : NI.back.easeIn }),
                Key({ time : 17926, value : 0, interpolation : NI.back.easeIn }),
                Key({ time : 18029, value : 45, interpolation : NI.back.easeIn }),
                Key({ time : 18133, value : 0, interpolation : NI.back.easeIn }),
                Key({ time : 18236, value : 45, interpolation : NI.back.easeIn }),
                Key({ time : 18339, value : 0, interpolation : NI.back.easeIn }),
                Key({ time : 18546, value : 90, interpolation : NI.back.easeIn }),
                Key({ time : 18650, value : 45, interpolation : NI.back.easeIn }),
                Key({ time : 18753, value : 90, interpolation : NI.back.easeIn }),
                Key({ time : 18857, value : 45, interpolation : NI.back.easeIn }),
                Key({ time : 18960, value : 90, interpolation : NI.back.easeIn }),
                Key({ time : 19064, value : 45, interpolation : NI.back.easeIn }),
                Key({ time : 19167, value : 90, interpolation : NI.back.easeIn }),
                Key({ time : 19271, value : 45, interpolation : NI.back.easeIn }),
                Key({ time : 19374, value : 90, interpolation : NI.back.easeIn }),
                Key({ time : 19477, value : 45, interpolation : NI.back.easeIn }),
                Key({ time : 19581, value : 90, interpolation : NI.back.easeIn }),
                Key({ time : 19684, value : 45, interpolation : NI.back.easeIn }),
                Key({ time : 19788, value : 90, interpolation : NI.back.easeIn }),
                Key({ time : 20202, value : -90, interpolation : NI.back.easeIn })
              ],
              mode : KeysBindMode.repeat
            }),
            rotation : Binder.Link(
            {
              name : "scratch",
              linkFunc : function( value, time )
              {
                // Add some variation by rotating over time
                return value + time * 22.5 / 413.793;
              }
            }),
            
            scaleX : KeysBind(
            {
              keyframes :
              [
                // First keyframe at inPoint to make sure spinner invisible at start.
                Key({ time : 13581, value : 734.30239 / 250, interpolation : NI.exponential.easeOut }),
                Key({ time : 15236, value : 1, interpolation : NI.hold }),
                Key({ time : 19788, value : 1, interpolation : NI.cubic.easeInOut }),
                Key({ time : 20615, value : 0.75 })
              ]
            }),
            scaleY : Binder.Link({ name : "scaleX" })
          }
        }];})
      }),
      
      // Some random gears
      Layer(
      {
        source : Rnr.Gear({ numTeeth : 6, toothPercent : 50, toothLength : 50, outerRadius : 200, innerRadius : 150 }),
        inPoint : 19788,
        outPoint : 26822,
        properties :
        {
          x : KeysBind(
          {
            keyframes :
            [
              Key({ time : 19788, value : -250, interpolation : NI.cubic.easeInOut }),
              Key({ time : 20615, value : 0 })
            ]
          }),
          y : KeysBind(
          {
            keyframes :
            [
              Key({ time : 19788, value : -250, interpolation : NI.cubic.easeInOut }),
              Key({ time : 20615, value : 0 })
            ]
          }),
          rotation : function( time ) { return time * 45 / 413.793; }
        }
      }),
      Layer(
      {
        source : Rnr.Gear({ numTeeth : 6, toothPercent : 50, toothLength : 50, outerRadius : 200, innerRadius : 150 }),
        inPoint : 19788,
        outPoint : 26822,
        properties :
        {
          x : KeysBind(
          {
            keyframes :
            [
              Key({ time : 19788, value : 1530, interpolation : NI.cubic.easeInOut }),
              Key({ time : 20615, value : 1280 })
            ]
          }),
          y : KeysBind(
          {
            keyframes :
            [
              Key({ time : 19788, value : 970, interpolation : NI.cubic.easeInOut }),
              Key({ time : 20615, value : 720 })
            ]
          }),
          rotation : function( time ) { return time * -45 / 413.793; }
        }
      }),
      Layer(
      {
        source : Rnr.Gear({ numTeeth : 6, toothPercent : 50, toothLength : 50, outerRadius : 200, innerRadius : 150 }),
        inPoint : 19788,
        outPoint : 26822,
        properties :
        {
          x : KeysBind(
          {
            keyframes :
            [
              Key({ time : 19788, value : -250, interpolation : NI.cubic.easeInOut }),
              Key({ time : 20615, value : 0 })
            ]
          }),
          y : KeysBind(
          {
            keyframes :
            [
              Key({ time : 19788, value : 970, interpolation : NI.cubic.easeInOut }),
              Key({ time : 20615, value : 720 })
            ]
          }),
          rotation : function( time ) { return time * 45 / 413.793; }
        }
      }),
      Layer(
      {
        source : Rnr.Gear({ numTeeth : 6, toothPercent : 50, toothLength : 50, outerRadius : 200, innerRadius : 150 }),
        inPoint : 19788,
        outPoint : 26822,
        properties :
        {
          x : KeysBind(
          {
            keyframes :
            [
              Key({ time : 19788, value : 1530, interpolation : NI.cubic.easeInOut }),
              Key({ time : 20615, value : 1280 })
            ]
          }),
          y : KeysBind(
          {
            keyframes :
            [
              Key({ time : 19788, value : -250, interpolation : NI.cubic.easeInOut }),
              Key({ time : 20615, value : 0 })
            ]
          }),
          rotation : function( time ) { return time * -45 / 413.793; }
        }
      }),
      
      // Text Element Loop
      CompLayer(
      {
        composition : Rnr.ElemTextLoop(),
        inPoint : 13581,
        outPoint : 20202,
        properties :
        {
          x : 320,
          y : 180,
          blendMode : "invert"
        }
      }),
      CompLayer(
      {
        composition : Rnr.ElemTextLoop(),
        inPoint : 20202,
        outPoint : 26822,
        properties :
        {
          x : 320,
          y : 180,
          blendMode : "invert"
        }
      })
    ]
  });},
  
  /* Composition: CompVocal1
   * Composition containing first part of Vocal. Also includes some one-time use lyrics comp.
   */
  CompVocal1 : function()
  {
    // 5 gears formated like last comp
    var CompGears = function()
    {
      return Comp(
      {
        width : 1280,
        height : 720,
        startTime : 26822,
        duration : 13242,
        layers :
        [
          Layer(
          {
            source : Rnr.Gear({ numTeeth : 6, toothPercent : 50, toothLength : 50, outerRadius : 200, innerRadius : 150 }),
            inPoint : 26822,
            outPoint : 40064,
            properties :
            {
              x : 0,
              y : 0,
              rotation : function( time ) { return time * 45 / 413.793; }
            }
          }),
          Layer(
          {
            source : Rnr.Gear({ numTeeth : 6, toothPercent : 50, toothLength : 50, outerRadius : 200, innerRadius : 150 }),
            inPoint : 26822,
            outPoint : 40064,
            properties :
            {
              x : 1280,
              y : 720,
              rotation : function( time ) { return time * -45 / 413.793; }
            }
          }),
          Layer(
          {
            source : Rnr.Gear({ numTeeth : 6, toothPercent : 50, toothLength : 50, outerRadius : 200, innerRadius : 150 }),
            inPoint : 26822,
            outPoint : 40064,
            properties :
            {
              x : 0,
              y : 720,
              rotation : function( time ) { return time * 45 / 413.793; }
            }
          }),
          Layer(
          {
            source : Rnr.Gear({ numTeeth : 6, toothPercent : 50, toothLength : 50, outerRadius : 200, innerRadius : 150 }),
            inPoint : 26822,
            outPoint : 40064,
            properties :
            {
              x : 1280,
              y : 0,
              rotation : function( time ) { return time * -45 / 413.793; }
            }
          }),
          Layer({
            source : Rnr.Gear({ numTeeth : 3, toothPercent : 50, toothLength : 37.5, outerRadius : 225, innerRadius : 187.5 }),
            inPoint : 26822,
            outPoint : 40064,
            properties :
            {
              x : 640,
              y : 360,
              rotation : function( time ) { return time * 22.5 / 413.793; }
            }
          })
        ]
      });
    };
    
    // return the final comp
    return Comp(
    {
      width : 1280,
      height : 720,
      startTime : 26822,
      duration : 26483,
      layers :
      [
        // A base gears comp
        CompLayer({ composition : CompGears(), inPoint : 26822, outPoint : 40064 }),
        
        // だらだらと
        DVTLayer(
        {
          inPoint : 26822,
          outPoint : 28684,
          dictionary : Rnr.Typography.Mincho.Dynamic,
          textProperties :
          {
            horizontalAlign : "center",
            verticalAlign : "center",
            letterSpacing : 20,
            fontSize : 200,
            lineHeight : 240,
            text : KeysBind(
            {
              keyframes :
              [
                Key({ time : 26822, value : "だ", interpolation : NI.hold }),
                Key({ time : 27236, value : "だら", interpolation : NI.hold }),
                Key({ time : 27650, value : "だらだ", interpolation : NI.hold }),
                Key({ time : 28064, value : "だらだら", interpolation : NI.hold }),
                Key({ time : 28271, value : "だらだらと", interpolation : NI.hold })
              ]
            })
          },
          properties :
          {
            x : 640,
            y : 360,
            blendMode : "invert"
          }
        }),
        
        // 今も
        Layer(
        {
          source : Solid({ width : 525, height : 720, color : 0x0 }),
          inPoint : 28684,
          outPoint : 29305,
          properties : { x : 377.5 }
        }),
        Layer(
        {
          source : Rnr.Typography.Mincho.Static[ "今も" ](),
          inPoint : 28684,
          outPoint : 29305,
          properties : { blendMode : "invert" }
        }),
        
        // 流れ
        Layer(
        {
          source : Solid({ width : 525, height : 720, color : 0x0 }),
          inPoint : 29512,
          outPoint : 30133,
          properties : { x : 377.5 }
        }),
        Layer(
        {
          source : Rnr.Typography.Mincho.Static[ "流れ" ](),
          inPoint : 29512,
          outPoint : 30133,
          properties : { blendMode : "invert" }
        }),
        
        // 続く
        Layer(
        {
          source : Solid({ width : 525, height : 720, color : 0x0 }),
          inPoint : 30339,
          outPoint : 30960,
          properties : { x : 377.5 }
        }),
        Layer(
        {
          source : Rnr.Typography.Mincho.Static[ "続く" ](),
          inPoint : 30339,
          outPoint : 30960,
          properties : { blendMode : "invert" }
        }),
        
        // ニュース
        Layer(
        {
          source : Solid({ width : 525, height : 720, color : 0x0 }),
          inPoint : 31167,
          outPoint : 31788,
          properties : { x : 377.5 }
        }),
        Layer(
        {
          source : Rnr.Typography.Mincho.Static[ "ニュース" ](),
          inPoint : 31167,
          outPoint : 31788,
          properties : { blendMode : "invert" }
        }),
        
        // 真実どこ？
        DVTLayer(
        {
          inPoint : 31995,
          outPoint : 33236,
          dictionary : Rnr.Typography.Mincho.Dynamic,
          textProperties :
          {
            horizontalAlign : "center",
            verticalAlign : "center",
            letterSpacing : 20,
            fontSize : 200,
            lineHeight : 240,
            text : KeysBind(
            {
              keyframes :
              [
                Key({ time : 31995, value : "真", interpolation : NI.hold }),
                Key({ time : 32408, value : "真実", interpolation : NI.hold }),
                Key({ time : 32822, value : "真実ど", interpolation : NI.hold }),
                Key({ time : 33029, value : "真実どこ？", interpolation : NI.hold })
              ]
            })
          },
          properties :
          {
            x : 640,
            y : 360,
            blendMode : "invert"
          }
        }),
        
        // 夢の中
        DVTLayer(
        {
          inPoint : 33443,
          outPoint : 35098,
          dictionary : Rnr.Typography.Mincho.Dynamic,
          textProperties :
          {
            horizontalAlign : "center",
            verticalAlign : "center",
            letterSpacing : 20,
            fontSize : 200,
            lineHeight : 240,
            text : KeysBind(
            {
              keyframes :
              [
                Key({ time : 33443, value : "夢", interpolation : NI.hold }),
                Key({ time : 34271, value : "夢の", interpolation : NI.hold }),
                Key({ time : 34684, value : "夢の中", interpolation : NI.hold })
              ]
            })
          },
          properties :
          {
            x : 640,
            y : 360,
            blendMode : "invert"
          }
        }),
        
        // 回り
        Layer(
        {
          source : Solid({ width : 525, height : 720, color : 0x0 }),
          inPoint : 35305,
          outPoint : 35926,
          properties : { x : 377.5 }
        }),
        Layer(
        {
          source : Rnr.Typography.Mincho.Static[ "回り" ](),
          inPoint : 35305,
          outPoint : 35926,
          properties : { blendMode : "invert" }
        }),
        
        // 続け
        Layer(
        {
          source : Solid({ width : 525, height : 720, color : 0x0 }),
          inPoint : 36133,
          outPoint : 36753,
          properties : { x : 377.5 }
        }),
        Layer(
        {
          source : Rnr.Typography.Mincho.Static[ "続け" ](),
          inPoint : 36133,
          outPoint : 36753,
          properties : { blendMode : "invert" }
        }),
        
        // 今も
        Layer(
        {
          source : Solid({ width : 525, height : 720, color : 0x0 }),
          inPoint : 36960,
          outPoint : 37581,
          properties : { x : 377.5 }
        }),
        Layer(
        {
          source : Rnr.Typography.Mincho.Static[ "今も" ](),
          inPoint : 36960,
          outPoint : 37581,
          properties : { blendMode : "invert" }
        }),
        
        // 回る
        Layer(
        {
          source : Solid({ width : 525, height : 720, color : 0x0 }),
          inPoint : 37788,
          outPoint : 38408,
          properties : { x : 377.5 }
        }),
        Layer(
        {
          source : Rnr.Typography.Mincho.Static[ "回る" ](),
          inPoint : 37788,
          outPoint : 38408,
          properties : { blendMode : "invert" }
        }),
        
        // Reverse gears comp
        CompLayer({ composition : CompGears(), inPoint : 40064, inPointTime : 40064, outPoint : 53305, outPointTime : 26822 }),
        
        // 本当のこと？真実も
        DVTLayer(
        {
          inPoint : 38615,
          outPoint : 41719,
          dictionary : Rnr.Typography.Mincho.Dynamic,
          textProperties :
          {
            horizontalAlign : "center",
            verticalAlign : "center",
            letterSpacing : 20,
            fontSize : 200,
            lineHeight : 240,
            text : KeysBind(
            {
              keyframes :
              [
                Key({ time : 38615, value : "本", interpolation : NI.hold }),
                Key({ time : 39029, value : "本当", interpolation : NI.hold }),
                Key({ time : 39443, value : "本当の", interpolation : NI.hold }),
                Key({ time : 39650, value : "本当のこ", interpolation : NI.hold }),
                Key({ time : 39857, value : "本当のこと？", interpolation : NI.hold }),
                Key({ time : 40064, value : "真", interpolation : NI.hold }),
                Key({ time : 40891, value : "真実", interpolation : NI.hold }),
                Key({ time : 41512, value : "真実も", interpolation : NI.hold })
              ]
            })
          },
          properties :
          {
            x : 640,
            y : 360,
            blendMode : "invert"
          }
        }),
        
        // 見せず
        Layer(
        {
          source : Solid({ width : 525, height : 720, color : 0x0 }),
          inPoint : 41926,
          outPoint : 42546,
          properties : { x : 377.5 }
        }),
        Layer(
        {
          source : Rnr.Typography.Mincho.Static[ "見せず" ](),
          inPoint : 41926,
          outPoint : 42546,
          properties : { blendMode : "invert" }
        }),
        
        // 見えず
        Layer(
        {
          source : Solid({ width : 525, height : 720, color : 0x0 }),
          inPoint : 42753,
          outPoint : 43374,
          properties : { x : 377.5 }
        }),
        Layer(
        {
          source : Rnr.Typography.Mincho.Static[ "見えず" ](),
          inPoint : 42753,
          outPoint : 43374,
          properties : { blendMode : "invert" }
        }),
        
        // 大人
        Layer(
        {
          source : Solid({ width : 525, height : 720, color : 0x0 }),
          inPoint : 43581,
          outPoint : 44202,
          properties : { x : 377.5 }
        }),
        Layer(
        {
          source : Rnr.Typography.Mincho.Static[ "大人" ](),
          inPoint : 43581,
          outPoint : 44202,
          properties : { blendMode : "invert" }
        }),
        
        // なんて
        Layer(
        {
          source : Solid({ width : 525, height : 720, color : 0x0 }),
          inPoint : 44408,
          outPoint : 45029,
          properties : { x : 377.5 }
        }),
        Layer(
        {
          source : Rnr.Typography.Mincho.Static[ "なんて" ](),
          inPoint : 44408,
          outPoint : 45029,
          properties : { blendMode : "invert" }
        }),
        
        // 隠し
        DVTLayer(
        {
          inPoint : 45236,
          outPoint : 45857,
          dictionary : Rnr.Typography.Mincho.Dynamic,
          textProperties :
          {
            horizontalAlign : "center",
            verticalAlign : "center",
            letterSpacing : 20,
            fontSize : 200,
            lineHeight : 240,
            text : KeysBind(
            {
              keyframes :
              [
                Key({ time : 45236, value : "隠", interpolation : NI.hold }),
                Key({ time : 45650, value : "隠し", interpolation : NI.hold })
              ]
            })
          },
          properties :
          {
            x : 640,
            y : 360,
            blendMode : "invert"
          }
        }),
        
        // たまま
        Layer(
        {
          source : Solid({ width : 1280, height : 720, color : 0xFFFFFF }),
          inPoint : 45857,
          outPoint : 46684
        }),
        Layer(
        {
          source : Rnr.Typography.Mincho.Static[ "たまま" ](),
          inPoint : 45857,
          outPoint : 46684
        }),
        
        // 偽りに
        DVTLayer(
        {
          inPoint : 46684,
          outPoint : 48339,
          dictionary : Rnr.Typography.Mincho.Dynamic,
          textProperties :
          {
            horizontalAlign : "center",
            verticalAlign : "center",
            letterSpacing : 20,
            fontSize : 200,
            lineHeight : 240,
            text : KeysBind(
            {
              keyframes :
              [
                Key({ time : 46684, value : "偽", interpolation : NI.hold }),
                Key({ time : 47926, value : "偽り", interpolation : NI.hold }),
                Key({ time : 48133, value : "偽りに", interpolation : NI.hold })
              ]
            })
          },
          properties :
          {
            x : 640,
            y : 360,
            blendMode : "invert"
          }
        }),
        
        // 耐えて
        Layer(
        {
          source : Solid({ width : 525, height : 720, color : 0x0 }),
          inPoint : 48546,
          outPoint : 49167,
          properties : { x : 377.5 }
        }),
        Layer(
        {
          source : Rnr.Typography.Mincho.Static[ "耐えて_1" ](),
          inPoint : 48546,
          outPoint : 49167,
          properties : { blendMode : "invert", scaleX : 0.5, scaleY : 0.5, x : 320, y : 180 }
        }),
        
        // 耐えて
        Layer(
        {
          source : Solid({ width : 525, height : 720, color : 0x0 }),
          inPoint : 49374,
          outPoint : 49995,
          properties : { x : 377.5 }
        }),
        Layer(
        {
          source : Rnr.Typography.Mincho.Static[ "耐えて_2" ](),
          inPoint : 49374,
          outPoint : 49995,
          properties : { blendMode : "invert", scaleX : 0.75, scaleY : 0.75, x : 160, y : 90 }
        }),
        
        // 耐えて
        Layer(
        {
          source : Solid({ width : 525, height : 720, color : 0x0 }),
          inPoint : 50202,
          outPoint : 50822,
          properties : { x : 377.5 }
        }),
        Layer(
        {
          source : Rnr.Typography.Mincho.Static[ "耐えて_1" ](),
          inPoint : 50202,
          outPoint : 50822,
          properties : { blendMode : "invert" }
        }),
        
        // 絶えた
        Layer(
        {
          source : Solid({ width : 525, height : 720, color : 0x0 }),
          inPoint : 51029,
          outPoint : 51650,
          properties : { x : 377.5 }
        }),
        Layer(
        {
          source : Rnr.Typography.Mincho.Static[ "絶えた" ](),
          inPoint : 51029,
          outPoint : 51650,
          properties : { blendMode : "invert" }
        }),
        
        // 自分
        DVTLayer(
        {
          inPoint : 51857,
          outPoint : 52477,
          dictionary : Rnr.Typography.Mincho.Dynamic,
          textProperties :
          {
            horizontalAlign : "center",
            verticalAlign : "center",
            letterSpacing : 20,
            fontSize : 200,
            lineHeight : 240,
            text : KeysBind(
            {
              keyframes :
              [
                Key({ time : 51857, value : "自", interpolation : NI.hold }),
                Key({ time : 52064, value : "自分", interpolation : NI.hold })
              ]
            })
          },
          properties :
          {
            x : 640,
            y : 360,
            blendMode : "invert"
          }
        }),
        
        // の気持ち
        Layer(
        {
          source : Solid({ width : 1280, height : 720, color : 0xFFFFFF }),
          inPoint : 52477,
          outPoint : 53305
        }),
        Layer(
        {
          source : Rnr.Typography.Mincho.Static[ "の気持ち" ](),
          inPoint : 52477,
          outPoint : 53305
        })
        
        // Lyrics second half with altering visibility
      ]
    });
  },
  
  /* Composition: CompVocal2
   * Composition containing second part of Vocal. Also includes some one-time use lyrics comp.
   */
  CompVocal2 : function()
  {
    // Function for creating circles comp
    var InvertCircles = function()
    {
      return Comp(
      {
        width : 1280,
        height : 720,
        startTime : 0,
        duration : 10,
        layers : _( Layer, 4, function() {
          var circleSize = Math.random() * 720.0 + 48;
          var speed = Math.random() * 500 + 200;
          var direction = Math.random() * Math.PI * 2.0;
          var initX = Math.random() * 1280.0;
          var initY = Math.random() * 720.0;
          
          return [{
            source : function()
            {
              var shape = Shape();
              
              shape.graphics.beginFill( 0xFFFFFF, 1 );
              shape.graphics.drawCircle( 0, 0, circleSize );
              shape.graphics.endFill();
              
              return shape;
            }(),
            inPoint : 0,
            outPoint : 10,
            properties :
            {
              x : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 0, value : initX }),
                  Key({ time : 10, value : initX + Math.cos( direction ) * speed })
                ]
              }),
              y : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 0, value : initY }),
                  Key({ time : 10, value : initY + Math.sin( direction ) * speed })
                ]
              }),
              blendMode : "invert"
            }
          }];
        })
      });
    };
    
    // return the comp
    return Comp(
  {
      width : 1280,
      height : 720,
      startTime : 53305,
      duration : 28138,
      layers : Factory.collapse(
      [
        [
          // Circles BG for first 4 stanzas
          CompLayer({ composition : InvertCircles(), inPoint : 53305, outPoint : 59926 })
        ],
        
        // 思いまで
        _( Layer, 3, function() {
          
          var wiggle = KeysBind(
          {
            keyframes : WiggleKeys({ origin : [ 0, 0 ], numSteps : 32, startTime : 53305, stepTime : 206.89655, amount : 5, interpolation : NI.dimension( NI.cubic.easeInOut ) })
          });
          
          return [{
            source : Rnr.Typography.Mincho.Static[ "思いまで" ](),
            inPoint : 53305,
            outPoint : 55788,
            properties :
            {
              blendMode : "invert",
              rotation : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 53305, value : 0, interpolation : NI.cubic.easeOut }),
                  Key({ time : 55788, value : 5 })
                ]
              }),
              basePosition : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 53305, value : [ 0, 850 ], interpolation : NI.dimension( NI.cubic.easeOut ) }),
                  Key({ time : 54546, value : [ 830, 150 ], interpolation : NI.dimension( NI.cubic.easeIn ) }),
                  Key({ time : 55788, value : [ 1800, 150 ] })
                ]
              }),
              x : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 0 ] + ( wiggle( time ) )[ 0 ];
                }
              }),
              y : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 1 ] + ( wiggle( time ) )[ 1 ];
                }
              })
            }
          }];
        }),
        
        // 偽られ
        _( Layer, 3, function() {
          
          var wiggle = KeysBind(
          {
            keyframes : WiggleKeys({ origin : [ 0, 0 ], numSteps : 32, startTime : 54546, stepTime : 206.89655, amount : 5, interpolation : NI.dimension( NI.cubic.easeInOut ) })
          });
          
          return [{
            source : Rnr.Typography.Mincho.Static[ "偽られ" ](),
            inPoint : 54546,
            outPoint : 57029,
            properties :
            {
              blendMode : "invert",
              rotation : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 54546, value : 0, interpolation : NI.cubic.easeOut }),
                  Key({ time : 57029, value : -5 })
                ]
              }),
              basePosition : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 54546, value : [ 1280, 850 ], interpolation : NI.dimension( NI.cubic.easeOut ) }),
                  Key({ time : 55788, value : [ 400, 344 ], interpolation : NI.dimension( NI.cubic.easeIn ) }),
                  Key({ time : 57029, value : [ -600, 344 ] })
                ]
              }),
              x : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 0 ] + ( wiggle( time ) )[ 0 ];
                }
              }),
              y : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 1 ] + ( wiggle( time ) )[ 1 ];
                }
              })
            }
          }];
        }),
        
        // 出会えずに
        _( Layer, 3, function() {
          
          var wiggle = KeysBind(
          {
            keyframes : WiggleKeys({ origin : [ 0, 0 ], numSteps : 32, startTime : 55788, stepTime : 206.89655, amount : 5, interpolation : NI.dimension( NI.cubic.easeInOut ) })
          });
          
          return [{
            source : Rnr.Typography.Mincho.Static[ "出会えずに" ](),
            inPoint : 55788,
            outPoint : 58271,
            properties :
            {
              blendMode : "invert",
              rotation : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 55788, value : 0, interpolation : NI.cubic.easeOut }),
                  Key({ time : 58271, value : 5 })
                ]
              }),
              basePosition : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 55788, value : [ 0, -130 ], interpolation : NI.dimension( NI.cubic.easeOut ) }),
                  Key({ time : 57029, value : [ 750, 600 ], interpolation : NI.dimension( NI.cubic.easeIn ) }),
                  Key({ time : 58271, value : [ 1800, 600 ] })
                ]
              }),
              x : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 0 ] + ( wiggle( time ) )[ 0 ];
                }
              }),
              y : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 1 ] + ( wiggle( time ) )[ 1 ];
                }
              })
            }
          }];
        }),
        
        // 見つからぬ
        _( Layer, 3, function() {
          
          var wiggle = KeysBind(
          {
            keyframes : WiggleKeys({ origin : [ 0, 0 ], numSteps : 32, startTime : 57029, stepTime : 206.89655, amount : 5, interpolation : NI.dimension( NI.cubic.easeInOut ) })
          });
          
          return [{
            source : Rnr.Typography.Mincho.Static[ "見つからぬ" ](),
            inPoint : 57029,
            outPoint : 59512,
            properties :
            {
              blendMode : "invert",
              rotation : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 57029, value : 0, interpolation : NI.cubic.easeOut }),
                  Key({ time : 59512, value : -5 })
                ]
              }),
              basePosition : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 57029, value : [ 1280, -130 ], interpolation : NI.dimension( NI.cubic.easeOut ) }),
                  Key({ time : 58271, value : [ 490, 150 ], interpolation : NI.dimension( NI.cubic.easeIn ) }),
                  Key({ time : 59512, value : [ -600, 150 ] })
                ]
              }),
              x : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 0 ] + ( wiggle( time ) )[ 0 ];
                }
              }),
              y : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 1 ] + ( wiggle( time ) )[ 1 ];
                }
              })
            }
          }];
        }),
        
        // 本当の思い
        ForceMB(
        {
          layers : _( Layer, 8, function() {
            return [{
              source : Rnr.Typography.Mincho.Static[ "本当の思い" ](),
              inPoint : 58271,
              outPoint : 59926,
              properties :
              {
                blendMode : "invert",
                scaleX : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 58271, value : 0, interpolation : NI.cubic.easeOut }),
                    Key({ time : 59521, value : 1, interpolation : NI.cubic.easeIn }),
                    Key({ time : 59926, value : 10 }),
                  ]
                }),
                scaleY : Binder.Link({ name : "scaleX" }),
                x : 640,
                y : 360
              }
            }];
          })
        }),
        
        [
          // Circles BG for second 4 stanzas
          CompLayer({ composition : InvertCircles(), inPoint : 59926, outPoint : 66546 })
        ],
        
        // いつまでも
        _( Layer, 3, function() {
          
          var wiggle = KeysBind(
          {
            keyframes : WiggleKeys({ origin : [ 0, 0 ], numSteps : 32, startTime : 59926, stepTime : 206.89655, amount : 5, interpolation : NI.dimension( NI.cubic.easeInOut ) })
          });
          
          return [{
            source : Rnr.Typography.Mincho.Static[ "いつまでも" ](),
            inPoint : 59926,
            outPoint : 62408,
            properties :
            {
              blendMode : "invert",
              rotation : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 59926, value : 0, interpolation : NI.cubic.easeOut }),
                  Key({ time : 62408, value : 5 })
                ]
              }),
              basePosition : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 59926, value : [ 1280, -130 ], interpolation : NI.dimension( NI.cubic.easeOut ) }),
                  Key({ time : 61167, value : [ 500, 550 ], interpolation : NI.dimension( NI.cubic.easeIn ) }),
                  Key({ time : 62408, value : [ -520, 550 ] })
                ]
              }),
              x : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 0 ] + ( wiggle( time ) )[ 0 ];
                }
              }),
              y : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 1 ] + ( wiggle( time ) )[ 1 ];
                }
              })
            }
          }];
        }),
        
        // 変わらずに
        _( Layer, 3, function() {
          
          var wiggle = KeysBind(
          {
            keyframes : WiggleKeys({ origin : [ 0, 0 ], numSteps : 32, startTime : 61167, stepTime : 206.89655, amount : 5, interpolation : NI.dimension( NI.cubic.easeInOut ) })
          });
          
          return [{
            source : Rnr.Typography.Mincho.Static[ "変わらずに" ](),
            inPoint : 61167,
            outPoint : 63560,
            properties :
            {
              blendMode : "invert",
              rotation : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 61167, value : 0, interpolation : NI.cubic.easeOut }),
                  Key({ time : 63560, value : -5 })
                ]
              }),
              basePosition : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 61167, value : [ 0, -130 ], interpolation : NI.dimension( NI.cubic.easeOut ) }),
                  Key({ time : 62408, value : [ 800, 376 ], interpolation : NI.dimension( NI.cubic.easeIn ) }),
                  Key({ time : 63560, value : [ 1800, 376 ] })
                ]
              }),
              x : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 0 ] + ( wiggle( time ) )[ 0 ];
                }
              }),
              y : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 1 ] + ( wiggle( time ) )[ 1 ];
                }
              })
            }
          }];
        }),
        
        // 流れてく
        _( Layer, 3, function() {
          
          var wiggle = KeysBind(
          {
            keyframes : WiggleKeys({ origin : [ 0, 0 ], numSteps : 32, startTime : 62408, stepTime : 206.89655, amount : 5, interpolation : NI.dimension( NI.cubic.easeInOut ) })
          });
          
          return [{
            source : Rnr.Typography.Mincho.Static[ "流れてく" ](),
            inPoint : 62408,
            outPoint : 64891,
            properties :
            {
              blendMode : "invert",
              rotation : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 62408, value : 0, interpolation : NI.cubic.easeOut }),
                  Key({ time : 64891, value : 5 })
                ]
              }),
              basePosition : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 62408, value : [ 1280, 850 ], interpolation : NI.dimension( NI.cubic.easeOut ) }),
                  Key({ time : 63560, value : [ 500, 150 ], interpolation : NI.dimension( NI.cubic.easeIn ) }),
                  Key({ time : 64891, value : [ -520, 150 ] })
                ]
              }),
              x : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 0 ] + ( wiggle( time ) )[ 0 ];
                }
              }),
              y : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 1 ] + ( wiggle( time ) )[ 1 ];
                }
              })
            }
          }];
        }),
        
        // この同じ
        _( Layer, 3, function() {
          
          var wiggle = KeysBind(
          {
            keyframes : WiggleKeys({ origin : [ 0, 0 ], numSteps : 32, startTime : 63560, stepTime : 206.89655, amount : 5, interpolation : NI.dimension( NI.cubic.easeInOut ) })
          });
          
          return [{
            source : Rnr.Typography.Mincho.Static[ "この同じ" ](),
            inPoint : 63560,
            outPoint : 66133,
            properties :
            {
              blendMode : "invert",
              rotation : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 63560, value : 0, interpolation : NI.cubic.easeOut }),
                  Key({ time : 66133, value : -5 })
                ]
              }),
              basePosition : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 63560, value : [ 0, 850 ], interpolation : NI.dimension( NI.cubic.easeOut ) }),
                  Key({ time : 64891, value : [ 820, 550 ], interpolation : NI.dimension( NI.cubic.easeIn ) }),
                  Key({ time : 66133, value : [ 1800, 550 ] })
                ]
              }),
              x : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 0 ] + ( wiggle( time ) )[ 0 ];
                }
              }),
              y : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 1 ] + ( wiggle( time ) )[ 1 ];
                }
              })
            }
          }];
        }),
        
        // 時間
        ForceMB(
        {
          layers : _( Layer, 8, function() {
            return [{
              source : Rnr.Typography.Mincho.Static[ "時間" ](),
              inPoint : 64891,
              outPoint : 66546,
              properties :
              {
                rotation : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 64891, value : 0 }),
                    Key({ time : 66546, value : 15 })
                  ]
                }),
                blendMode : "invert",
                scaleX : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 64891, value : 0, interpolation : NI.cubic.easeOut }),
                    Key({ time : 66133, value : 1, interpolation : NI.cubic.easeIn }),
                    Key({ time : 66546, value : 10 }),
                  ]
                }),
                scaleY : Binder.Link({ name : "scaleX" }),
                x : 640,
                y : 360
              }
            }];
          })
        }),
        
        // のなかにも
        ForceMB(
        {
          layers : _( Layer, 8, function() {
            return [{
              source : Rnr.Typography.Mincho.Static[ "のなかにも" ](),
              inPoint : 65719,
              outPoint : 66546,
              properties :
              {
                rotation : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 64891, value : 0 }),
                    Key({ time : 66546, value : -15 })
                  ]
                }),
                blendMode : "invert",
                scaleX : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 65719, value : 10, interpolation : NI.cubic.easeOut }),
                    Key({ time : 66133, value : 1, interpolation : NI.cubic.easeIn }),
                    Key({ time : 66546, value : 0 }),
                  ]
                }),
                scaleY : Binder.Link({ name : "scaleX" }),
                x : 640,
                y : 360
              }
            }];
          })
        }),
        
        [
          // Circles BG for third 4 stanzas
          CompLayer({ composition : InvertCircles(), inPoint : 66546, outPoint : 73167 })
        ],
        
        // 重なって
        _( Layer, 3, function() {
          
          var wiggle = KeysBind(
          {
            keyframes : WiggleKeys({ origin : [ 0, 0 ], numSteps : 32, startTime : 66546, stepTime : 206.89655, amount : 5, interpolation : NI.dimension( NI.cubic.easeInOut ) })
          });
          
          return [{
            source : Rnr.Typography.Mincho.Static[ "重なって" ](),
            inPoint : 66546,
            outPoint : 69029,
            properties :
            {
              blendMode : "invert",
              rotation : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 66546, value : 0, interpolation : NI.cubic.easeOut }),
                  Key({ time : 69029, value : 5 })
                ]
              }),
              basePosition : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 66546, value : [ 425, 850 ], interpolation : NI.dimension( NI.cubic.easeOut ) }),
                  Key({ time : 67788, value : [ 425, 500 ], interpolation : NI.dimension( NI.cubic.easeIn ) }),
                  Key({ time : 69029, value : [ 425, -130 ] })
                ]
              }),
              x : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 0 ] + ( wiggle( time ) )[ 0 ];
                }
              }),
              y : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 1 ] + ( wiggle( time ) )[ 1 ];
                }
              })
            }
          }];
        }),
        
        // 夢を見る
        _( Layer, 3, function() {
          
          var wiggle = KeysBind(
          {
            keyframes : WiggleKeys({ origin : [ 0, 0 ], numSteps : 32, startTime : 67788, stepTime : 206.89655, amount : 5, interpolation : NI.dimension( NI.cubic.easeInOut ) })
          });
          
          return [{
            source : Rnr.Typography.Mincho.Static[ "夢を見る" ](),
            inPoint : 67788,
            outPoint : 70271,
            properties :
            {
              blendMode : "invert",
              rotation : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 67788, value : 0, interpolation : NI.cubic.easeOut }),
                  Key({ time : 70271, value : -5 })
                ]
              }),
              basePosition : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 67788, value : [ 853, -130 ], interpolation : NI.dimension( NI.cubic.easeOut ) }),
                  Key({ time : 69029, value : [ 853, 220 ], interpolation : NI.dimension( NI.cubic.easeIn ) }),
                  Key({ time : 70271, value : [ 853, 850 ] })
                ]
              }),
              x : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 0 ] + ( wiggle( time ) )[ 0 ];
                }
              }),
              y : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 1 ] + ( wiggle( time ) )[ 1 ];
                }
              })
            }
          }];
        }),
        
        // そんな人
        _( Layer, 3, function() {
          
          var wiggle = KeysBind(
          {
            keyframes : WiggleKeys({ origin : [ 0, 0 ], numSteps : 32, startTime : 69029, stepTime : 206.89655, amount : 5, interpolation : NI.dimension( NI.cubic.easeInOut ) })
          });
          
          return [{
            source : Rnr.Typography.Mincho.Static[ "そんな人" ](),
            inPoint : 69029,
            outPoint : 71512,
            properties :
            {
              blendMode : "invert",
              rotation : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 69029, value : 0, interpolation : NI.cubic.easeOut }),
                  Key({ time : 71512, value : 5 })
                ]
              }),
              basePosition : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 69029, value : [ 425, 850 ], interpolation : NI.dimension( NI.cubic.easeOut ) }),
                  Key({ time : 70271, value : [ 425, 500 ], interpolation : NI.dimension( NI.cubic.easeIn ) }),
                  Key({ time : 71512, value : [ 425, -130 ] })
                ]
              }),
              x : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 0 ] + ( wiggle( time ) )[ 0 ];
                }
              }),
              y : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 1 ] + ( wiggle( time ) )[ 1 ];
                }
              })
            }
          }];
        }),
        
        // いるはずと
        _( Layer, 3, function() {
          
          var wiggle = KeysBind(
          {
            keyframes : WiggleKeys({ origin : [ 0, 0 ], numSteps : 32, startTime : 70271, stepTime : 206.89655, amount : 5, interpolation : NI.dimension( NI.cubic.easeInOut ) })
          });
          
          return [{
            source : Rnr.Typography.Mincho.Static[ "いるはずと" ](),
            inPoint : 70271,
            outPoint : 72753,
            properties :
            {
              blendMode : "invert",
              rotation : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 70271, value : 0, interpolation : NI.cubic.easeOut }),
                  Key({ time : 72753, value : -5 })
                ]
              }),
              basePosition : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 70271, value : [ 813, -130 ], interpolation : NI.dimension( NI.cubic.easeOut ) }),
                  Key({ time : 71512, value : [ 813, 220 ], interpolation : NI.dimension( NI.cubic.easeIn ) }),
                  Key({ time : 72753, value : [ 813, 850 ] })
                ]
              }),
              x : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 0 ] + ( wiggle( time ) )[ 0 ];
                }
              }),
              y : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 1 ] + ( wiggle( time ) )[ 1 ];
                }
              })
            }
          }];
        }),
        
        // 信じる
        ForceMB(
        {
          layers : _( Layer, 8, function() {
            return [{
              source : Rnr.Typography.Mincho.Static[ "信じる" ](),
              inPoint : 71512,
              outPoint : 73167,
              properties :
              {
                rotation : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 71512, value : 0 }),
                    Key({ time : 73167, value : -15 })
                  ]
                }),
                blendMode : "invert",
                scaleX : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 71512, value : 0, interpolation : NI.cubic.easeOut }),
                    Key({ time : 72753, value : 1, interpolation : NI.cubic.easeIn }),
                    Key({ time : 73167, value : 10 }),
                  ]
                }),
                scaleY : Binder.Link({ name : "scaleX" }),
                x : 640,
                y : 360
              }
            }];
          })
        }),
        
        // のならば
        ForceMB(
        {
          layers : _( Layer, 8, function() {
            return [{
              source : Rnr.Typography.Mincho.Static[ "のならば" ](),
              inPoint : 72339,
              outPoint : 73167,
              properties :
              {
                rotation : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 72339, value : 0 }),
                    Key({ time : 73167, value : 15 })
                  ]
                }),
                blendMode : "invert",
                scaleX : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 72339, value : 10, interpolation : NI.cubic.easeOut }),
                    Key({ time : 72753, value : 1, interpolation : NI.cubic.easeIn }),
                    Key({ time : 73167, value : 0 }),
                  ]
                }),
                scaleY : Binder.Link({ name : "scaleX" }),
                x : 640,
                y : 360
              }
            }];
          })
        }),
        
        [
          // Circles BG for forth 4 stanzas
          CompLayer({ composition : InvertCircles(), inPoint : 73167, outPoint : 80202 }),
          
          // huge text for lyrics late part
          DVTLayer(
          {
            inPoint : 80202,
            outPoint : 81443,
            dictionary : Rnr.Typography.Mincho.Dynamic,
            textProperties :
            {
              horizontalAlign : "center",
              verticalAlign : "center",
              letterSpacing : 20,
              fontSize : 800,
              lineHeight : 240,
              text : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 80202, value : "で", interpolation : NI.hold }),
                  Key({ time : 80408, value : "き", interpolation : NI.hold }),
                  Key({ time : 80615, value : "る", interpolation : NI.hold }),
                  Key({ time : 80822, value : "は", interpolation : NI.hold }),
                  Key({ time : 81029, value : "ず", interpolation : NI.hold }),
                  Key({ time : 81236, value : "よ", interpolation : NI.hold })
                ]
              })
            },
            properties :
            {
              x : 620,
              y : 320
            }
          })
        ],
        
        // このままで
        _( Layer, 3, function() {
          
          var wiggle = KeysBind(
          {
            keyframes : WiggleKeys({ origin : [ 0, 0 ], numSteps : 32, startTime : 73167, stepTime : 206.89655, amount : 5, interpolation : NI.dimension( NI.cubic.easeInOut ) })
          });
          
          return [{
            source : Rnr.Typography.Mincho.Static[ "このままで" ](),
            inPoint : 73167,
            outPoint : 75650,
            properties :
            {
              blendMode : "invert",
              rotation : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 73167, value : 0, interpolation : NI.cubic.easeOut }),
                  Key({ time : 75650, value : -5 })
                ]
              }),
              basePosition : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 73167, value : [ 465, -130 ], interpolation : NI.dimension( NI.cubic.easeOut ) }),
                  Key({ time : 74408, value : [ 465, 500 ], interpolation : NI.dimension( NI.cubic.easeIn ) }),
                  Key({ time : 75650, value : [ 465, 850 ] })
                ]
              }),
              x : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 0 ] + ( wiggle( time ) )[ 0 ];
                }
              }),
              y : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 1 ] + ( wiggle( time ) )[ 1 ];
                }
              })
            }
          }];
        }),
        
        // いたくない
        _( Layer, 3, function() {
          
          var wiggle = KeysBind(
          {
            keyframes : WiggleKeys({ origin : [ 0, 0 ], numSteps : 32, startTime : 74408, stepTime : 206.89655, amount : 5, interpolation : NI.dimension( NI.cubic.easeInOut ) })
          });
          
          return [{
            source : Rnr.Typography.Mincho.Static[ "いたくない" ](),
            inPoint : 74408,
            outPoint : 76891,
            properties :
            {
              blendMode : "invert",
              rotation : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 74408, value : 0, interpolation : NI.cubic.easeOut }),
                  Key({ time : 76891, value : 5 })
                ]
              }),
              basePosition : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 74408, value : [ 813, 850 ], interpolation : NI.dimension( NI.cubic.easeOut ) }),
                  Key({ time : 75650, value : [ 813, 220 ], interpolation : NI.dimension( NI.cubic.easeIn ) }),
                  Key({ time : 76891, value : [ 813, -130 ] })
                ]
              }),
              x : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 0 ] + ( wiggle( time ) )[ 0 ];
                }
              }),
              y : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 1 ] + ( wiggle( time ) )[ 1 ];
                }
              })
            }
          }];
        }),
        
        // こんなのは
        _( Layer, 3, function() {
          
          var wiggle = KeysBind(
          {
            keyframes : WiggleKeys({ origin : [ 0, 0 ], numSteps : 32, startTime : 75650, stepTime : 206.89655, amount : 5, interpolation : NI.dimension( NI.cubic.easeInOut ) })
          });
          
          return [{
            source : Rnr.Typography.Mincho.Static[ "こんなのは" ](),
            inPoint : 75650,
            outPoint : 78133,
            properties :
            {
              blendMode : "invert",
              rotation : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 75650, value : 0, interpolation : NI.cubic.easeOut }),
                  Key({ time : 78133, value : -5 })
                ]
              }),
              basePosition : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 75650, value : [ 465, -130 ], interpolation : NI.dimension( NI.cubic.easeOut ) }),
                  Key({ time : 76891, value : [ 465, 500 ], interpolation : NI.dimension( NI.cubic.easeIn ) }),
                  Key({ time : 78133, value : [ 465, 850 ] })
                ]
              }),
              x : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 0 ] + ( wiggle( time ) )[ 0 ];
                }
              }),
              y : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 1 ] + ( wiggle( time ) )[ 1 ];
                }
              })
            }
          }];
        }),
        
        // 違うはず
        _( Layer, 3, function() {
          
          var wiggle = KeysBind(
          {
            keyframes : WiggleKeys({ origin : [ 0, 0 ], numSteps : 32, startTime : 76891, stepTime : 206.89655, amount : 5, interpolation : NI.dimension( NI.cubic.easeInOut ) })
          });
          
          return [{
            source : Rnr.Typography.Mincho.Static[ "違うはず" ](),
            inPoint : 76891,
            outPoint : 79374,
            properties :
            {
              blendMode : "invert",
              rotation : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 76891, value : 0, interpolation : NI.cubic.easeOut }),
                  Key({ time : 79374, value : 5 })
                ]
              }),
              basePosition : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 76891, value : [ 853, 850 ], interpolation : NI.dimension( NI.cubic.easeOut ) }),
                  Key({ time : 78133, value : [ 853, 220 ], interpolation : NI.dimension( NI.cubic.easeIn ) }),
                  Key({ time : 79374, value : [ 853, -130 ] })
                ]
              }),
              x : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 0 ] + ( wiggle( time ) )[ 0 ];
                }
              }),
              y : Binder.Link(
              {
                name : "basePosition",
                linkFunc : function( value, time )
                {
                  return value[ 1 ] + ( wiggle( time ) )[ 1 ];
                }
              })
            }
          }];
        }),
        
        // 私は
        ForceMB(
        {
          layers : _( Layer, 8, function() {
            return [{
              source : Rnr.Typography.Mincho.Static[ "私は" ](),
              inPoint : 78133,
              outPoint : 81443,
              properties :
              {
                rotation : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 78133, value : 0 }),
                    Key({ time : 81443, value : 15 })
                  ]
                }),
                blendMode : "invert",
                scaleX : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 78133, value : 10, interpolation : NI.cubic.easeOut }),
                    Key({ time : 78690, value : 1, interpolation : NI.cubic.easeIn }),
                    Key({ time : 81443, value : 0 }),
                  ]
                }),
                scaleY : Binder.Link({ name : "scaleX" }),
                x : 640,
                y : 360
              }
            }];
          })
        }),
        
        // 変わることが
        ForceMB(
        {
          layers : _( Layer, 8, function() {
            return [{
              source : Rnr.Typography.Mincho.Static[ "変わることが" ](),
              inPoint : 78690,
              outPoint : 81443,
              properties :
              {
                rotation : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 78690, value : 0 }),
                    Key({ time : 81443, value : -15 })
                  ]
                }),
                blendMode : "invert",
                scaleX : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 78690, value : 10, interpolation : NI.cubic.easeOut }),
                    Key({ time : 79788, value : 1, interpolation : NI.cubic.easeIn }),
                    Key({ time : 81443, value : 0 }),
                  ]
                }),
                scaleY : Binder.Link({ name : "scaleX" }),
                x : 640,
                y : 360
              }
            }];
          })
        }),
        
        // White solid to make inversion effect
        Layer(
        {
          source : Solid({ width : 1280, height : 720, color : 0xFFFFFF }),
          inPoint : 80615,
          outPoint : 81443,
          properties :
          {
            x : 0,
            y : 0,
            blendMode : "invert",
            visible : function( time )
            {
              // Checks current beat
              var speed = 137.931;
              var beat = Math.floor( ( time - 339 ) / speed );
              
              return beat % 2 === 0;
            }
          }
        })
      ])
    });
  },
  
  /* Composition: CompVocal3
   * Composition containing third part of Vocal.
   */
  CompVocal3 : function()
  {
    // Checkerboard cube scene
    var CheckerboardCube = function()
    {
      return Comp(
      {
        width : 1280,
        height : 720,
        startTime : 0,
        duration : 10,
        layers :
        [
          Layer(
          {
            source : Anchor3D(
            {
              source : Checkerboard({ width : 300, height : 300, frequencyX : 9, frequencyY : 9, color1 : 0x0, color2 : 0xFF0000 }),
              z : -900
            }),
            inPoint : 0,
            outPoint : 10,
            properties : { scaleX : 6, scaleY : 6 }
          }),
          Layer(
          {
            source : Anchor3D(
            {
              source : Checkerboard({ width : 300, height : 300, frequencyX : 9, frequencyY : 9, color1 : 0x0, color2 : 0xFF0000 }),
              z : -900
            }),
            inPoint : 0,
            outPoint : 10,
            properties : { rotationX : 90, scaleX : 6, scaleY : 6 }
          }),
          Layer(
          {
            source : Anchor3D(
            {
              source : Checkerboard({ width : 300, height : 300, frequencyX : 9, frequencyY : 9, color1 : 0x0, color2 : 0xFF0000 }),
              z : -900
            }),
            inPoint : 0,
            outPoint : 10,
            properties : { rotationX : -90, scaleX : 6, scaleY : 6 }
          }),
          Layer(
          {
            source : Anchor3D(
            {
              source : Checkerboard({ width : 300, height : 300, frequencyX : 9, frequencyY : 9, color1 : 0x0, color2 : 0xFF0000 }),
              z : -900
            }),
            inPoint : 0,
            outPoint : 10,
            properties : { rotationX : 180, scaleX : 6, scaleY : 6 }
          }),
          Layer(
          {
            source : Anchor3D(
            {
              source : Checkerboard({ width : 300, height : 300, frequencyX : 9, frequencyY : 9, color1 : 0x0, color2 : 0xFF0000 }),
              z : -900
            }),
            inPoint : 0,
            outPoint : 10,
            properties : { rotationY : 90, scaleX : 6, scaleY : 6 }
          }),
          Layer(
          {
            source : Anchor3D(
            {
              source : Checkerboard({ width : 300, height : 300, frequencyX : 9, frequencyY : 9, color1 : 0x0, color2 : 0xFF0000 }),
              z : -900
            }),
            inPoint : 0,
            outPoint : 10,
            properties : { rotationY : -90, scaleX : 6, scaleY : 6 }
          })
        ]
      });
    };
      
    return Comp(
    {
      width : 1280,
      height : 720,
      startTime : 81443,
      duration : 28138,
      layers : Factory.collapse(
      [
        // Cube background
        ForceMB(
        {
          layers : _( CompLayer, 6, function()
          {
            return [{
                composition : CheckerboardCube(),
                inPoint : 81443,
                outPoint : 109581,
                properties :
                {
                  x : 640,
                  y : 360,
                  z : 0,
                  
                  rotationX : function( time ){ return time / 8; },
                  rotationY : function( time ){ return time / 16; },
                  rotationZ : function( time ){ return time / 12; },
                  
                  scaleX : KeysBind(
                  {
                    keyframes :
                    [
                      Key({ time : 81443, value : 0, interpolation : NI.quintic.easeOut }),
                      Key({ time : 82271, value : 1 })
                    ]
                  }),
                  scaleY : Binder.Link({ name : "scaleX" }),
                  scaleZ : Binder.Link({ name : "scaleX" })
                }
            }];
          })
        }),
        
        // 巡りゆく
        Layer(
        {
          source : Solid({ width : 700, height : 200, color : 0x0 }),
          inPoint : 81443,
          outPoint : 82684,
          properties :
          {
            x : KeysBind(
            {
              keyframes :
              [
                Key({ time : 81443, value : 1280, interpolation : NI.quintic.easeOut }),
                Key({ time : 81650, value : 0, interpolation : NI.hold }),
                Key({ time : 81857, value : 0, interpolation : NI.quintic.easeIn }),
                Key({ time : 82684, value : -700 })
              ]
            }),
            y : 150
          }
        }),
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "巡りゆく" ](),
              inPoint : 81443,
              outPoint : 82684,
              properties :
              {
                x : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 81443, value : -600, interpolation : NI.quartic.easeOut }),
                    Key({ time : 81650, value : 79, interpolation : NI.hold }),
                    Key({ time : 81857, value : 79, interpolation : NI.quartic.easeIn }),
                    Key({ time : 82684, value : 1280 })
                  ]
                }),
                y : 115
              }
            }];
          })
        }),
        
        // 空間は
        Layer(
        {
          source : Solid({ width : 700, height : 200, color : 0x0 }),
          inPoint : 82271,
          outPoint : 83512,
          properties :
          {
            x : KeysBind(
            {
              keyframes :
              [
                Key({ time : 82271, value : -700, interpolation : NI.quintic.easeOut }),
                Key({ time : 82477, value : 580, interpolation : NI.hold }),
                Key({ time : 82684, value : 580, interpolation : NI.quintic.easeIn }),
                Key({ time : 83512, value : 1280 })
              ]
            }),
            y : 370
          }
        }),
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "空間は" ](),
              inPoint : 82271,
              outPoint : 83512,
              properties :
              {
                x : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 82271, value : 1280, interpolation : NI.quartic.easeOut }),
                    Key({ time : 82477, value : 630, interpolation : NI.hold }),
                    Key({ time : 82684, value : 630, interpolation : NI.quartic.easeIn }),
                    Key({ time : 83512, value : -600 })
                  ]
                }),
                y : 345
              }
            }];
          })
        }),
        
        // Putting the two blocks in advance for covering issue
        Layer(
        {
          source : Solid({ width : 400, height : 450, color : 0x0 }),
          inPoint : 83098,
          outPoint : 84339,
          properties :
          {
            x : 200,
            y : KeysBind(
            {
              keyframes :
              [
                Key({ time : 83098, value : -450, interpolation : NI.quintic.easeOut }),
                Key({ time : 83305, value : 0, interpolation : NI.hold }),
                Key({ time : 83512, value : 0, interpolation : NI.quintic.easeIn }),
                Key({ time : 84339, value : 720 })
              ]
            })
          }
        }),
        Layer(
        {
          source : Solid({ width : 400, height : 450, color : 0x0 }),
          inPoint : 83926,
          outPoint : 85167,
          properties :
          {
            x : 680,
            y : KeysBind(
            {
              keyframes :
              [
                Key({ time : 83926, value : 720, interpolation : NI.quintic.easeOut }),
                Key({ time : 84133, value : 270, interpolation : NI.hold }),
                Key({ time : 84339, value : 270, interpolation : NI.quintic.easeIn }),
                Key({ time : 85167, value : -450 })
              ]
            })
          }
        }),
        
        // 人ごみに
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "人ごみに" ](),
              inPoint : 83098,
              outPoint : 84339,
              properties :
              {
                x : 41,
                y : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 83098, value : 720, interpolation : NI.quartic.easeOut }),
                    Key({ time : 83305, value : 158, interpolation : NI.hold }),
                    Key({ time : 83512, value : 158, interpolation : NI.quartic.easeIn }),
                    Key({ time : 84339, value : -300 })
                  ]
                })
              }
            }];
          })
        }),
        
        // 飲まれて
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "飲まれて" ](),
              inPoint : 83926,
              outPoint : 85167,
              properties :
              {
                x : 554,
                y : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 83926, value : -310, interpolation : NI.quartic.easeOut }),
                    Key({ time : 84133, value : 276, interpolation : NI.hold }),
                    Key({ time : 84339, value : 276, interpolation : NI.quartic.easeIn }),
                    Key({ time : 85167, value : 720 })
                  ]
                })
              }
            }];
          })
        }),
        
        // 出会えてた
        Layer(
        {
          source : Solid({ width : 700, height : 200, color : 0x0 }),
          inPoint : 84753,
          outPoint : 85995,
          properties :
          {
            x : KeysBind(
            {
              keyframes :
              [
                Key({ time : 84753, value : 1280, interpolation : NI.quintic.easeOut }),
                Key({ time : 84960, value : 580, interpolation : NI.hold }),
                Key({ time : 85167, value : 580, interpolation : NI.quintic.easeIn }),
                Key({ time : 85995, value : -700 })
              ]
            }),
            y : 150
          }
        }),
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "出会えてた" ](),
              inPoint : 84753,
              outPoint : 85995,
              properties :
              {
                x : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 84753, value : -600, interpolation : NI.quartic.easeOut }),
                    Key({ time : 84960, value : 385, interpolation : NI.hold }),
                    Key({ time : 85167, value : 385, interpolation : NI.quartic.easeIn }),
                    Key({ time : 85995, value : 1280 })
                  ]
                }),
                y : 110
              }
            }];
          })
        }),
        
        // はずなのに
        Layer(
        {
          source : Solid({ width : 700, height : 200, color : 0x0 }),
          inPoint : 85581,
          outPoint : 86822,
          properties :
          {
            x : KeysBind(
            {
              keyframes :
              [
                Key({ time : 85581, value : -700, interpolation : NI.quintic.easeOut }),
                Key({ time : 85788, value : 0, interpolation : NI.hold }),
                Key({ time : 85995, value : 0, interpolation : NI.quintic.easeIn }),
                Key({ time : 86822, value : 1280 })
              ]
            }),
            y : 370
          }
        }),
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "はずなのに" ](),
              inPoint : 85581,
              outPoint : 86822,
              properties :
              {
                x : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 85581, value : 1280, interpolation : NI.quartic.easeOut }),
                    Key({ time : 85788, value : 92, interpolation : NI.hold }),
                    Key({ time : 85995, value : 92, interpolation : NI.quartic.easeIn }),
                    Key({ time : 86822, value : -600 })
                  ]
                }),
                y : 353
              }
            }];
          })
        }),
        
        // Putting the two blocks in advance for covering issue
        Layer(
        {
          source : Solid({ width : 400, height : 450, color : 0x0 }),
          inPoint : 86408,
          outPoint : 87650,
          properties :
          {
            x : 200,
            y : KeysBind(
            {
              keyframes :
              [
                Key({ time : 86408, value : -450, interpolation : NI.quintic.easeOut }),
                Key({ time : 86615, value : 270, interpolation : NI.hold }),
                Key({ time : 86822, value : 270, interpolation : NI.quintic.easeIn }),
                Key({ time : 87650, value : 720 })
              ]
            })
          }
        }),
        Layer(
        {
          source : Solid({ width : 400, height : 450, color : 0x0 }),
          inPoint : 87236,
          outPoint : 88477,
          properties :
          {
            x : 680,
            y : KeysBind(
            {
              keyframes :
              [
                Key({ time : 87236, value : 720, interpolation : NI.quintic.easeOut }),
                Key({ time : 87443, value : 0, interpolation : NI.hold }),
                Key({ time : 87650, value : 0, interpolation : NI.quintic.easeIn }),
                Key({ time : 88477, value : -450 })
              ]
            })
          }
        }),
        
        // 今でも
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "今でも" ](),
              inPoint : 86408,
              outPoint : 87650,
              properties :
              {
                x : 156,
                y : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 86408, value : 720, interpolation : NI.quartic.easeOut }),
                    Key({ time : 86615, value : 275, interpolation : NI.hold }),
                    Key({ time : 86822, value : 275, interpolation : NI.quartic.easeIn }),
                    Key({ time : 87650, value : -300 })
                  ]
                })
              }
            }];
          })
        }),
        
        // わからず
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "わからず" ](),
              inPoint : 87236,
              outPoint : 88477,
              properties :
              {
                x : 601,
                y : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 87236, value : -310, interpolation : NI.quartic.easeOut }),
                    Key({ time : 87443, value : 156, interpolation : NI.hold }),
                    Key({ time : 87650, value : 156, interpolation : NI.quartic.easeIn }),
                    Key({ time : 88477, value : 720 })
                  ]
                })
              }
            }];
          })
        }),
        
        // 同じ時刻
        Layer(
        {
          source : Anchor({ source : Solid({ width : 600, height : 600, color : 0x0 }) }),
          inPoint : 88064,
          outPoint : 88891,
          properties :
          {
            x : 640,
            y : 360,
            scaleX : KeysBind(
            {
              keyframes :
              [
                Key({ time : 88064, value : 0, interpolation : NI.quintic.easeOut }),
                Key({ time : 88477, value : 1, interpolation : NI.quintic.easeIn }),
                Key({ time : 88891, value : 0 })
              ]
            }),
            scaleY : Binder.Link({ name : "scaleX" }),
            rotation : KeysBind(
            {
              keyframes :
              [
                Key({ time : 88064, value : 0 }),
                Key({ time : 88891, value : 360 })
              ]
            })
          }
        }),
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "同じ時刻" ](),
              inPoint : 88064,
              outPoint : 89305,
              properties :
              {
                x : 640,
                y : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 88064, value : -200, interpolation : NI.quartic.easeOut }),
                    Key({ time : 88477, value : 360, interpolation : NI.quartic.easeIn }),
                    Key({ time : 88891, value : 920 })
                  ]
                })
              }
            }];
          })
        }),
        
        // 同じ場所
        Layer(
        {
          source : Anchor({ source : Solid({ width : 600, height : 600, color : 0x0 }) }),
          inPoint : 88891,
          outPoint : 89719,
          properties :
          {
            x : 640,
            y : 360,
            scaleX : KeysBind(
            {
              keyframes :
              [
                Key({ time : 88891, value : 0, interpolation : NI.quintic.easeOut }),
                Key({ time : 89305, value : 1, interpolation : NI.quintic.easeIn }),
                Key({ time : 89719, value : 0 })
              ]
            }),
            scaleY : Binder.Link({ name : "scaleX" }),
            rotation : KeysBind(
            {
              keyframes :
              [
                Key({ time : 88891, value : 0 }),
                Key({ time : 89719, value : -360 })
              ]
            })
          }
        }),
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "同じ場所" ](),
              inPoint : 88891,
              outPoint : 89719,
              properties :
              {
                x : 640,
                y : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 88891, value : 920, interpolation : NI.quartic.easeOut }),
                    Key({ time : 89305, value : 360, interpolation : NI.quartic.easeIn }),
                    Key({ time : 89719, value : -200 })
                  ]
                })
              }
            }];
          })
        }),
        
        // 重ね合う
        CompLayer(
        {
          composition : Comp(
          {
            width : 1280,
            height : 360,
            startTime : 0,
            duration : 30,
            layers :
            [
              Layer(
              {
                source : Anchor(
                {
                  source : Solid({ width : 960, height : 200, color : 0x0 }),
                  x : 0
                }),
                inPoint : 0,
                outPoint : 30,
                properties : 
                {
                  x : KeysBind(
                  {
                    keyframes :
                    [
                      Key({ time : 0, value : 960, interpolation : NI.quintic.easeOut }),
                      Key({ time : 10, value : 0, interpolation : NI.quintic.easeIn }),
                      Key({ time : 30, value : -960 })
                    ]
                  })
                }
              }),
              ForceMB(
              {
                layers : _( Layer, 6, function()
                {
                  return [{
                    source : Rnr.Typography.Mincho.Static[ "重ね合う" ](),
                    inPoint : 0,
                    outPoint : 30,
                    properties :
                    {
                      x : KeysBind(
                      {
                        keyframes :
                        [
                          Key({ time : 0, value : -960, interpolation : NI.quartic.easeOut }),
                          Key({ time : 10, value : 0, interpolation : NI.quartic.easeIn }),
                          Key({ time : 30, value : 960 })
                        ]
                      })
                    }
                  }];
                }),
                // Exposure time to fix stretching issue
                exposureTime : 0.503626108
              })
            ]
          }),
          inPoint : 89719,
          outPoint : 90960,
          properties : 
          {
            x : 260,
            y : 460,
            rotation : 45
          }
        }),
        
        // そのことも
        CompLayer(
        {
          composition : Comp(
          {
            width : 1280,
            height : 360,
            startTime : 0,
            duration : 30,
            layers :
            [
              Layer(
              {
                source : Anchor(
                {
                  source : Solid({ width : 960, height : 200, color : 0x0 }),
                  x : 0
                }),
                inPoint : 0,
                outPoint : 30,
                properties : 
                {
                  x : KeysBind(
                  {
                    keyframes :
                    [
                      Key({ time : 0, value : -960, interpolation : NI.quintic.easeOut }),
                      Key({ time : 10, value : 0, interpolation : NI.quintic.easeIn }),
                      Key({ time : 30, value : 960 })
                    ]
                  })
                }
              }),
              ForceMB(
              {
                layers : _( Layer, 6, function()
                {
                  return [{
                    source : Rnr.Typography.Mincho.Static[ "そのことも" ](),
                    inPoint : 0,
                    outPoint : 30,
                    properties :
                    {
                      x : KeysBind(
                      {
                        keyframes :
                        [
                          Key({ time : 0, value : 960, interpolation : NI.quartic.easeOut }),
                          Key({ time : 10, value : 0, interpolation : NI.quartic.easeIn }),
                          Key({ time : 30, value : -960 })
                        ]
                      }),
                      scaleX : 0.8,
                      scaleY : 0.8
                    }
                  }];
                }),
                // Exposure time to fix stretching issue
                exposureTime : 0.503626108
              })
            ]
          }),
          inPoint : 90546,
          outPoint : 91788,
          properties : 
          {
            x : 1020,
            y : 260,
            rotation : 45
          }
        }),
        
        // 見えなくて
        Layer(
        {
          source : Anchor({ source : Solid({ width : 600, height : 600, color : 0x0 }) }),
          inPoint : 92615,
          outPoint : 95098,
          properties :
          {
            x : 640,
            y : 360,
            scaleX : KeysBind(
            {
              keyframes :
              [
                Key({ time : 92615, value : 0, interpolation : NI.quintic.easeOut }),
                Key({ time : 93650, value : 1, interpolation : NI.quintic.easeIn }),
                Key({ time : 95098, value : 0 })
              ]
            }),
            scaleY : Binder.Link({ name : "scaleX" }),
            rotation : KeysBind(
            {
              keyframes :
              [
                Key({ time : 92615, value : 0 }),
                Key({ time : 95098, value : 720 })
              ]
            })
          }
        }),
        ForceMB(
        {
          layers : _( DVTLayer, 6, function()
          {
            return [{
              inPoint : 92615,
              outPoint : 95098,
              dictionary : Rnr.Typography.Mincho.Dynamic,
              textProperties :
              {
                horizontalAlign : "center",
                verticalAlign : "center",
                letterSpacing : 20,
                fontSize : 600,
                lineHeight : 240,
                text : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 92615, value : "見", interpolation : NI.hold }),
                    Key({ time : 93029, value : "え", interpolation : NI.hold }),
                    Key({ time : 93443, value : "な", interpolation : NI.hold }),
                    Key({ time : 93857, value : "く", interpolation : NI.hold }),
                    Key({ time : 94271, value : "て", interpolation : NI.hold })
                  ]
                })
              },
              properties :
              {
                x : 640,
                y : 360,
                rotation : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 92615, value : 0, interpolation : NI.cubic.easeOut }),
                    Key({ time : 93028, value : -5, interpolation : NI.hold }),
                    Key({ time : 93029, value : 0, interpolation : NI.cubic.easeOut }),
                    Key({ time : 93442, value : 5, interpolation : NI.hold }),
                    Key({ time : 93443, value : 0, interpolation : NI.cubic.easeOut }),
                    Key({ time : 93856, value : -5, interpolation : NI.hold }),
                    Key({ time : 93857, value : 0, interpolation : NI.cubic.easeOut }),
                    Key({ time : 94270, value : 5, interpolation : NI.hold }),
                    Key({ time : 94271, value : 0, interpolation : NI.cubic.easeOut }),
                    Key({ time : 95098, value : -5, interpolation : NI.hold })
                  ]
                }),
                scaleX : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 92615, value : 5, interpolation : NI.quintic.easeOut }),
                    Key({ time : 93028, value : 1, interpolation : NI.hold }),
                    Key({ time : 93029, value : 5, interpolation : NI.quintic.easeOut }),
                    Key({ time : 93442, value : 1, interpolation : NI.hold }),
                    Key({ time : 93443, value : 5, interpolation : NI.quintic.easeOut }),
                    Key({ time : 93856, value : 1, interpolation : NI.hold }),
                    Key({ time : 93857, value : 5, interpolation : NI.quintic.easeOut }),
                    Key({ time : 94270, value : 1, interpolation : NI.hold }),
                    Key({ time : 94271, value : 5, interpolation : NI.quintic.easeOut }),
                    Key({ time : 94684, value : 1, interpolation : NI.quintic.easeIn }),
                    Key({ time : 95098, value : 0, interpolation : NI.hold })
                  ]
                }),
                scaleY : Binder.Link({ name : "scaleX" })
              }
            }];
          })
        }),
        
        // Replicate some particle shit
        _( DVTLayer, 32, function( index )
        {
          var possibleText = [ "真\n実", "本\n当\nの", "偽\nり", "こ\nん\nな\nの\nは", "違\nう\nは\nず" ];
          var startX = Math.random() * 1280.0;
          var startY = Math.random() * 1280.0;
          var fontSize = 48 + Math.round( Math.random() * 48 );
    
          return [{
            inPoint : 94684 + index * 206.8965517,
            outPoint : 109581,
            dictionary : Rnr.Typography.Mincho.Dynamic,
            textProperties :
            {
              horizontalAlign : "center",
              verticalAlign : "center",
              letterSpacing : 20,
              fontSize : fontSize,
              lineHeight : fontSize * 1.2,
              text : possibleText[ Math.floor( Math.random() * 5.0 ) ]
            },
            properties :
            {
              x : startX,
              y : KeysBind(
              {
                keyframes :
                [
                  Key({ time : 94684 + index * 206.8965517, value : startY }),
                  Key({ time : 109581, value : startY - 400 - Math.random() * 400 })
                ]
              }),
              baseAlpha : KeysBind(
              {
                keyframes :
                [
                  // First keyframe at inPoint to make sure spinner invisible at start.
                  Key({ time : 94684 + index * 206.8965517, value : 0.51 }),
                  Key({ time : 109581, value : -0.5 })
                ]
              }),
              alpha : Binder.Link(
              {
                name : "baseAlpha",
                linkFunc : function( value )
                {
                  // Create a flashy effect using random and rounding keyframe data
                  return Math.round( Math.random() - value );
                }
              })
            }
          }];
        }),
        
        // 巡りゆく
        Layer(
        {
          source : Solid({ width : 700, height : 200, color : 0x0 }),
          inPoint : 94684,
          outPoint : 95926,
          properties :
          {
            x : KeysBind(
            {
              keyframes :
              [
                Key({ time : 94684, value : 1280, interpolation : NI.quintic.easeOut }),
                Key({ time : 94891, value : 0, interpolation : NI.hold }),
                Key({ time : 95098, value : 0, interpolation : NI.quintic.easeIn }),
                Key({ time : 95926, value : -700 })
              ]
            }),
            y : 150
          }
        }),
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "巡りゆく" ](),
              inPoint : 94684,
              outPoint : 95926,
              properties :
              {
                x : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 94684, value : -600, interpolation : NI.quartic.easeOut }),
                    Key({ time : 94891, value : 79, interpolation : NI.hold }),
                    Key({ time : 95098, value : 79, interpolation : NI.quartic.easeIn }),
                    Key({ time : 95926, value : 1280 })
                  ]
                }),
                y : 115
              }
            }];
          })
        }),
        
        // 空間が
        Layer(
        {
          source : Solid({ width : 700, height : 200, color : 0x0 }),
          inPoint : 95512,
          outPoint : 96753,
          properties :
          {
            x : KeysBind(
            {
              keyframes :
              [
                Key({ time : 95512, value : -700, interpolation : NI.quintic.easeOut }),
                Key({ time : 95719, value : 580, interpolation : NI.hold }),
                Key({ time : 95926, value : 580, interpolation : NI.quintic.easeIn }),
                Key({ time : 96753, value : 1280 })
              ]
            }),
            y : 370
          }
        }),
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "空間が" ](),
              inPoint : 95512,
              outPoint : 96753,
              properties :
              {
                x : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 95512, value : 1280, interpolation : NI.quartic.easeOut }),
                    Key({ time : 95719, value : 630, interpolation : NI.hold }),
                    Key({ time : 95926, value : 630, interpolation : NI.quartic.easeIn }),
                    Key({ time : 96753, value : -600 })
                  ]
                }),
                y : 345
              }
            }];
          })
        }),
        
        // Putting the two blocks in advance for covering issue
        Layer(
        {
          source : Solid({ width : 400, height : 450, color : 0x0 }),
          inPoint : 96339,
          outPoint : 97581,
          properties :
          {
            x : 200,
            y : KeysBind(
            {
              keyframes :
              [
                Key({ time : 96339, value : -450, interpolation : NI.quintic.easeOut }),
                Key({ time : 96546, value : 0, interpolation : NI.hold }),
                Key({ time : 96753, value : 0, interpolation : NI.quintic.easeIn }),
                Key({ time : 97581, value : 720 })
              ]
            })
          }
        }),
        Layer(
        {
          source : Solid({ width : 400, height : 450, color : 0x0 }),
          inPoint : 97167,
          outPoint : 98408,
          properties :
          {
            x : 680,
            y : KeysBind(
            {
              keyframes :
              [
                Key({ time : 97167, value : 720, interpolation : NI.quintic.easeOut }),
                Key({ time : 97374, value : 270, interpolation : NI.hold }),
                Key({ time : 97581, value : 270, interpolation : NI.quintic.easeIn }),
                Key({ time : 98408, value : -450 })
              ]
            })
          }
        }),
        
        // 貴方さえ
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "貴方さえ" ](),
              inPoint : 96339,
              outPoint : 97581,
              properties :
              {
                x : 41,
                y : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 96339, value : 720, interpolation : NI.quartic.easeOut }),
                    Key({ time : 96546, value : 158, interpolation : NI.hold }),
                    Key({ time : 96753, value : 158, interpolation : NI.quartic.easeIn }),
                    Key({ time : 97581, value : -300 })
                  ]
                })
              }
            }];
          })
        }),
        
        // 引き裂く
        ForceMB(
        {
          layers : _( CompLayer, 6, function()
          {
            return [{
              composition : Comp(
              {
                width : 1280,
                height : 360,
                startTime : 0,
                duration : 30,
                layers :
                [
                  Layer(
                  {
                    source : Rnr.Typography.Mincho.Static[ "引き" ](),
                    inPoint : 0,
                    outPoint : 30,
                    properties :
                    {
                      x : 0,
                      y : KeysBind(
                      {
                        keyframes :
                        [
                          Key({ time : 0, value : 0, interpolation : NI.hold }),
                          Key({ time : 10, value : 0, interpolation : NI.quartic.easeOut }),
                          Key({ time : 30, value : -110 })
                        ]
                      })
                    }
                  }),
                  Layer(
                  {
                    source : Rnr.Typography.Mincho.Static[ "引き" ](),
                    inPoint : 0,
                    outPoint : 30,
                    properties :
                    {
                      x : 0,
                      y : KeysBind(
                      {
                        keyframes :
                        [
                          Key({ time : 0, value : 0, interpolation : NI.hold }),
                          Key({ time : 10, value : 0, interpolation : NI.cubic.easeOut }),
                          Key({ time : 30, value : -100 })
                        ]
                      }),
                      colorTransitionBase : KeysBind(
                      {
                        keyframes :
                        [
                          Key({ time : 0, value : 0, interpolation : NI.hold }),
                          Key({ time : 10, value : 0, interpolation : NI.cubic.easeOut }),
                          Key({ time : 30, value : 255 })
                        ]
                      }),
                      "transform.colorTransform" : Binder.Link(
                      {
                        name : "colorTransitionBase",
                        linkFunc : function( value, time )
                        {
                          var ct = $.createColorTransform();
                          ct.color = Utils.rgb( 255, 255 - value, 255 - value );
                          
                          return ct;
                        }
                      })
                    }
                  }),
                  Layer(
                  {
                    source : Rnr.Typography.Mincho.Static[ "裂く" ](),
                    inPoint : 0,
                    outPoint : 30,
                    properties :
                    {
                      x : 0,
                      y : KeysBind(
                      {
                        keyframes :
                        [
                          Key({ time : 0, value : 0, interpolation : NI.hold }),
                          Key({ time : 10, value : 0, interpolation : NI.quartic.easeOut }),
                          Key({ time : 30, value : 110 })
                        ]
                      })
                    }
                  }),
                  Layer(
                  {
                    source : Rnr.Typography.Mincho.Static[ "裂く" ](),
                    inPoint : 0,
                    outPoint : 30,
                    properties :
                    {
                      x : 0,
                      y : KeysBind(
                      {
                        keyframes :
                        [
                          Key({ time : 0, value : 0, interpolation : NI.hold }),
                          Key({ time : 10, value : 0, interpolation : NI.cubic.easeOut }),
                          Key({ time : 30, value : 100 })
                        ]
                      }),
                      colorTransitionBase : KeysBind(
                      {
                        keyframes :
                        [
                          Key({ time : 0, value : 0, interpolation : NI.hold }),
                          Key({ time : 10, value : 0, interpolation : NI.cubic.easeOut }),
                          Key({ time : 30, value : 255 })
                        ]
                      }),
                      "transform.colorTransform" : Binder.Link(
                      {
                        name : "colorTransitionBase",
                        linkFunc : function( value, time )
                        {
                          var ct = $.createColorTransform();
                          ct.color = Utils.rgb( 255, 255 - value, 255 - value );
                          
                          return ct;
                        }
                      })
                    }
                  })
                ]
              }),
              inPoint : 97167,
              outPoint : 98408,
              properties :
              {
                x : 515,
                y : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 97167, value : -310, interpolation : NI.quartic.easeOut }),
                    Key({ time : 97374, value : 327, interpolation : NI.hold }),
                    Key({ time : 97581, value : 327, interpolation : NI.quartic.easeIn }),
                    Key({ time : 98408, value : 720 })
                  ]
                }),
                rotation : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 97581, value : 0, interpolation : NI.cubic.easeIn }),
                    Key({ time : 98408, value : 2 })
                  ]
                })
              }
            }];
          })
        }),
        
        // 偽りの
        Layer(
        {
          source : Solid({ width : 700, height : 200, color : 0x0 }),
          inPoint : 97995,
          outPoint : 99236,
          properties :
          {
            x : KeysBind(
            {
              keyframes :
              [
                Key({ time : 97995, value : 1280, interpolation : NI.quintic.easeOut }),
                Key({ time : 98202, value : 542, interpolation : NI.hold }),
                Key({ time : 98408, value : 542, interpolation : NI.quintic.easeIn }),
                Key({ time : 99236, value : -700 })
              ]
            }),
            y : 122
          }
        }),
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "偽りの" ](),
              inPoint : 97995,
              outPoint : 99236,
              properties :
              {
                x : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 97995, value : -600, interpolation : NI.quartic.easeOut }),
                    Key({ time : 98202, value : 385, interpolation : NI.hold }),
                    Key({ time : 98408, value : 385, interpolation : NI.quartic.easeIn }),
                    Key({ time : 99236, value : 1280 })
                  ]
                }),
                y : 110
              }
            }];
          })
        }),
        
        // 時の中
        Layer(
        {
          source : Solid({ width : 700, height : 200, color : 0x0 }),
          inPoint : 98822,
          outPoint : 100064,
          properties :
          {
            x : KeysBind(
            {
              keyframes :
              [
                Key({ time : 98822, value : -700, interpolation : NI.quintic.easeOut }),
                Key({ time : 99029, value : 0, interpolation : NI.hold }),
                Key({ time : 99236, value : 0, interpolation : NI.quintic.easeIn }),
                Key({ time : 100064, value : 1280 })
              ]
            }),
            y : 370
          }
        }),
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "時の中" ](),
              inPoint : 98822,
              outPoint : 100064,
              properties :
              {
                x : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 98822, value : 1280, interpolation : NI.quartic.easeOut }),
                    Key({ time : 99029, value : 180, interpolation : NI.hold }),
                    Key({ time : 99236, value : 180, interpolation : NI.quartic.easeIn }),
                    Key({ time : 100064, value : -600 })
                  ]
                }),
                y : 355
              }
            }];
          })
        }),
        
        // Putting the two blocks in advance for covering issue
        Layer(
        {
          source : Solid({ width : 400, height : 450, color : 0x0 }),
          inPoint : 99650,
          outPoint : 100891,
          properties :
          {
            x : 200,
            y : KeysBind(
            {
              keyframes :
              [
                Key({ time : 99650, value : -450, interpolation : NI.quintic.easeOut }),
                Key({ time : 99857, value : 270, interpolation : NI.hold }),
                Key({ time : 100064, value : 270, interpolation : NI.quintic.easeIn }),
                Key({ time : 100891, value : 720 })
              ]
            })
          }
        }),
        Layer(
        {
          source : Solid({ width : 400, height : 450, color : 0x0 }),
          inPoint : 100477,
          outPoint : 101719,
          properties :
          {
            x : 680,
            y : KeysBind(
            {
              keyframes :
              [
                Key({ time : 100477, value : 720, interpolation : NI.quintic.easeOut }),
                Key({ time : 100684, value : 0, interpolation : NI.hold }),
                Key({ time : 100891, value : 0, interpolation : NI.quintic.easeIn }),
                Key({ time : 101719, value : -450 })
              ]
            })
          }
        }),
        
        // 出会える
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "出会える" ](),
              inPoint : 99650,
              outPoint : 100891,
              properties :
              {
                x : 47,
                y : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 99650, value : 720, interpolation : NI.quartic.easeOut }),
                    Key({ time : 99857, value : 300, interpolation : NI.hold }),
                    Key({ time : 100064, value : 300, interpolation : NI.quartic.easeIn }),
                    Key({ time : 100891, value : -300 })
                  ]
                })
              }
            }];
          })
        }),
        
        // 信じて
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "信じて" ](),
              inPoint : 100477,
              outPoint : 101719,
              properties :
              {
                x : 606,
                y : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 100477, value : -310, interpolation : NI.quartic.easeOut }),
                    Key({ time : 100684, value : 225, interpolation : NI.hold }),
                    Key({ time : 100891, value : 225, interpolation : NI.quartic.easeIn }),
                    Key({ time : 101719, value : 720 })
                  ]
                })
              }
            }];
          })
        }),
        
        // 1度だけ
        Layer(
        {
          source : Anchor({ source : Solid({ width : 600, height : 600, color : 0x0 }) }),
          inPoint : 101305,
          outPoint : 102133,
          properties :
          {
            x : 640,
            y : 360,
            scaleX : KeysBind(
            {
              keyframes :
              [
                Key({ time : 101305, value : 0, interpolation : NI.quintic.easeOut }),
                Key({ time : 101719, value : 1, interpolation : NI.quintic.easeIn }),
                Key({ time : 102133, value : 0 })
              ]
            }),
            scaleY : Binder.Link({ name : "scaleX" }),
            rotation : KeysBind(
            {
              keyframes :
              [
                Key({ time : 101305, value : 0 }),
                Key({ time : 102133, value : -360 })
              ]
            })
          }
        }),
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "1度だけ" ](),
              inPoint : 101305,
              outPoint : 102133,
              properties :
              {
                x : 640,
                y : 360,
                scaleX : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 101305, value : 10, interpolation : NI.quintic.easeOut }),
                    Key({ time : 101719, value : 1, interpolation : NI.quintic.easeIn }),
                    Key({ time : 102133, value : 0 })
                  ]
                }),
                scaleY : Binder.Link({ name : "scaleX" })
              }
            }];
          })
        }),
        
        // すれ違う
        Layer(
        {
          source : Anchor({ source : Solid({ width : 600, height : 600, color : 0x0 }) }),
          inPoint : 102133,
          outPoint : 102960,
          properties :
          {
            x : 640,
            y : 360,
            scaleX : KeysBind(
            {
              keyframes :
              [
                Key({ time : 102133, value : 0, interpolation : NI.quintic.easeOut }),
                Key({ time : 102546, value : 1, interpolation : NI.quintic.easeIn }),
                Key({ time : 102960, value : 0 })
              ]
            }),
            scaleY : Binder.Link({ name : "scaleX" }),
            rotation : KeysBind(
            {
              keyframes :
              [
                Key({ time : 102133, value : 0 }),
                Key({ time : 102960, value : 360 })
              ]
            })
          }
        }),
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "すれ違う" ](),
              inPoint : 102133,
              outPoint : 102960,
              properties :
              {
                x : 640,
                y : 360,
                scaleX : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 102133, value : 0, interpolation : NI.quintic.easeOut }),
                    Key({ time : 102546, value : 1, interpolation : NI.quintic.easeIn }),
                    Key({ time : 102960, value : 10 })
                  ]
                }),
                scaleY : Binder.Link({ name : "scaleX" })
              }
            }];
          })
        }),
        
        // Blocks first for display list issue
        Layer(
        {
          source : Anchor({ source : Solid({ width : 600, height : 600, color : 0x0 }) }),
          inPoint : 102960,
          outPoint : 103788,
          properties :
          {
            x : 640,
            y : 360,
            scaleX : KeysBind(
            {
              keyframes :
              [
                Key({ time : 102960, value : 0, interpolation : NI.quintic.easeOut }),
                Key({ time : 103374, value : 1, interpolation : NI.quintic.easeIn }),
                Key({ time : 103788, value : 0 })
              ]
            }),
            scaleY : Binder.Link({ name : "scaleX" }),
            rotation : KeysBind(
            {
              keyframes :
              [
                Key({ time : 102960, value : 0 }),
                Key({ time : 103788, value : -360 })
              ]
            })
          }
        }),
        Layer(
        {
          source : Anchor({ source : Solid({ width : 600, height : 600, color : 0x0 }) }),
          inPoint : 103788,
          outPoint : 106271,
          properties :
          {
            x : 640,
            y : 360,
            scaleX : KeysBind(
            {
              keyframes :
              [
                Key({ time : 103788, value : 0, interpolation : NI.quintic.easeOut }),
                Key({ time : 105029, value : 1, interpolation : NI.quintic.easeIn }),
                Key({ time : 106271, value : 0 })
              ]
            }),
            scaleY : Binder.Link({ name : "scaleX" }),
            rotation : KeysBind(
            {
              keyframes :
              [
                Key({ time : 103788, value : 0 }),
                Key({ time : 106271, value : 1080 })
              ]
            })
          }
        }),
        
        // その場所で
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "その場所で" ](),
              inPoint : 102960,
              outPoint : 104615,
              properties :
              {
                x : 640,
                y : 360,
                scaleX : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 102960, value : 10, interpolation : NI.quintic.easeOut }),
                    Key({ time : 103374, value : 1, interpolation : NI.quintic.easeIn }),
                    Key({ time : 104615, value : 0 })
                  ]
                }),
                scaleY : Binder.Link({ name : "scaleX" })
              }
            }];
          })
        }),
        
        // 始まりの
        ForceMB(
        {
          layers : _( Layer, 6, function()
          {
            return [{
              source : Rnr.Typography.Mincho.Static[ "始まりの" ](),
              inPoint : 103788,
              outPoint : 105857,
              properties :
              {
                x : 640,
                y : 360,
                scaleX : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 103788, value : 0, interpolation : NI.quintic.easeOut }),
                    Key({ time : 104202, value : 1, interpolation : NI.quintic.easeIn }),
                    Key({ time : 105857, value : 10 })
                  ]
                }),
                scaleY : Binder.Link({ name : "scaleX" })
              }
            }];
          })
        }),
        
        // 時を知るの
        Layer(
        {
          source : Anchor({ source : Solid({ width : 600, height : 600, color : 0x0 }) }),
          inPoint : 105857,
          outPoint : 107926,
          properties :
          {
            x : 640,
            y : 360,
            scaleX : KeysBind(
            {
              keyframes :
              [
                Key({ time : 105857, value : 0, interpolation : NI.quintic.easeOut }),
                Key({ time : 106891, value : 1, interpolation : NI.quintic.easeIn }),
                Key({ time : 107926, value : 0 })
              ]
            }),
            scaleY : Binder.Link({ name : "scaleX" }),
            rotation : KeysBind(
            {
              keyframes :
              [
                Key({ time : 105857, value : 0 }),
                Key({ time : 107926, value : -720 })
              ]
            })
          }
        }),
        ForceMB(
        {
          layers : _( DVTLayer, 6, function()
          {
            return [{
              inPoint : 105857,
              outPoint : 108339,
              dictionary : Rnr.Typography.Mincho.Dynamic,
              textProperties :
              {
                horizontalAlign : "center",
                verticalAlign : "center",
                letterSpacing : 20,
                fontSize : 600,
                lineHeight : 240,
                text : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 105857, value : "時", interpolation : NI.hold }),
                    Key({ time : 106684, value : "を", interpolation : NI.hold }),
                    Key({ time : 107098, value : "知", interpolation : NI.hold }),
                    Key({ time : 107512, value : "る", interpolation : NI.hold })
                  ]
                })
              },
              properties :
              {
                x : 640,
                y : 360,
                rotation : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 105857, value : 0, interpolation : NI.cubic.easeOut }),
                    Key({ time : 106683, value : 5, interpolation : NI.hold }),
                    Key({ time : 106684, value : 0, interpolation : NI.cubic.easeOut }),
                    Key({ time : 107097, value : -5, interpolation : NI.hold }),
                    Key({ time : 107098, value : 0, interpolation : NI.cubic.easeOut }),
                    Key({ time : 107511, value : 5, interpolation : NI.hold }),
                    Key({ time : 107512, value : 0, interpolation : NI.cubic.easeOut }),
                    Key({ time : 108339, value : -5, interpolation : NI.hold })
                  ]
                }),
                scaleX : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 105857, value : 5, interpolation : NI.quintic.easeOut }),
                    Key({ time : 106271, value : 1, interpolation : NI.quintic.easeIn }),
                    Key({ time : 106683, value : 0, interpolation : NI.hold }),
                    Key({ time : 106684, value : 5, interpolation : NI.quintic.easeOut }),
                    Key({ time : 107097, value : 1, interpolation : NI.hold }),
                    Key({ time : 107098, value : 5, interpolation : NI.quintic.easeOut }),
                    Key({ time : 107511, value : 1, interpolation : NI.hold }),
                    Key({ time : 107512, value : 5, interpolation : NI.quintic.easeOut }),
                    Key({ time : 107926, value : 1, interpolation : NI.quintic.easeIn }),
                    Key({ time : 108339, value : 0, interpolation : NI.hold })
                  ]
                }),
                scaleY : Binder.Link({ name : "scaleX" })
              }
            }];
          })
        })
      ])
    });
  },
  
  /* Composition: CompOutro
   * Composition containing outro.
   */  
  CompOutro : function() { return Comp(
  {
    width : 1280,
    height : 720,
    startTime : 107926,
    duration : 18074,
    layers : Factory.collapse(
    [
      // Replicate set of circles
      _( Layer, 32, function( index ) {
        
        // set layer inpoint for later use
        var inPoint = 107926 + 413.7931 * index;
        var outPoint = inPoint + 1655.17241;
        
        return [{
          source : Rnr.Spinner({ numParts : index % 4 + 2, breakPercentage : 50, innerOffsetPercentage : 4 * ( index % 2 * 2 - 1 ), outerRadius : 100, innerRadius : 50 }),
          inPoint : inPoint,
          outPoint : outPoint,
          properties : 
          {
            x : 640,
            y : 360,
            rotation : function( time ) { return time * 90 * ( index % 2 * 2 - 1 ) / 413.793; },
            scaleX : KeysBind(
            {
              keyframes :
              [
                // First keyframe at inPoint to make sure spinner invisible at start.
                Key({ time : inPoint, value : 734.30239 / ( 50 ), interpolation : NI.exponential.easeOut }),
                Key({ time : outPoint, value : 0 })
              ]
            }),
            scaleY : Binder.Link({ name : "scaleX" })
          }
        }];
      }),
      
      // Replicate set of circles
      _( Layer, 32, function( index2 ) {
        
        // set layer inpoint for later use
        var inPoint = 114546 + 206.89655 * index2;
        var outPoint = inPoint + 1655.17241;
        
        return [{
          source : Rnr.Spinner({ numParts : index2 % 4 + 2, breakPercentage : 50, innerOffsetPercentage : 4 * ( index2 % 2 * 2 - 1 ), outerRadius : 200, innerRadius : 150 }),
          inPoint : inPoint,
          outPoint : outPoint,
          properties : 
          {
            x : 640,
            y : 360,
            rotation : function( time ) { return - time * 90 * ( index2 % 2 * 2 - 1 ) / 413.793; },
            scaleX : KeysBind(
            {
              keyframes :
              [
                // First keyframe at inPoint to make sure spinner invisible at start.
                Key({ time : inPoint, value : 734.30239 / ( 150 ), interpolation : NI.cubic.easeOut }),
                Key({ time : outPoint, value : 0 })
              ]
            }),
            scaleY : Binder.Link({ name : "scaleX" }),
            blendMode : "invert"
          }
        }];
      }),
      
      Layer(
      {
        source : Rnr.Gear({ numTeeth : 3, toothPercent : 50, toothLength : 50, outerRadius : 300, innerRadius : 250 }),
        inPoint : 121167,
        outPoint : 126000,
        properties :
        {
          x : 640,
          y : 360,
          rotation : function( time ) { return time * 90 / 413.793; },
          scaleX : KeysBind(
          {
            keyframes :
            [
              Key({ time : 121167, value : 734.30239 / ( 250 ), interpolation : NI.exponential.easeOut }),
              Key({ time : 122822, value : 1 })
            ]
          }),
          scaleY : Binder.Link({ name : "scaleX" })
        }
      }),
      
      // Text Element
      CompLayer({
        composition : Rnr.ElemText(),
        inPoint : 121167,
        outPoint : 126000,
        properties :
        {
          blendMode : "invert",
          scaleX : KeysBind(
          {
            keyframes :
            [
              Key({ time : 121167, value : 15, interpolation : NI.exponential.easeOut }),
              Key({ time : 122822, value : 1 })
            ]
          }),
          scaleY : Binder.Link({ name : "scaleX" }),
          x : Binder.Link(
          {
            name : "scaleX",
            linkFunc : function( value )
            {
              return 640 - value * 320;
            }
          }),
          y : Binder.Link(
          {
            name : "scaleX",
            linkFunc : function( value )
            {
              return 360 - value * 180;
            }
          })
        }
      })
    ])
  });},

  /* Function: present
   * Just you know.
   */
  present : function()
  {
    Helper.execute(
      MainComp(
      {
        width : 1280,
        height : 720,
        startTime : 0,
        duration : 126000,
        layers : 
        [
          CompLayer(
          {
            composition : Rnr.CompIntro(),
            inPoint : 0,
            outPoint : 11926
          }),
          
          CompLayer(
          {
            composition : Rnr.CompBreakdown(),
            inPoint : 11926,
            outPoint : 13581
          }),
          
          CompLayer(
          {
            composition : Rnr.CompInstrumental1(),
            inPoint : 13581,
            outPoint : 26822,
            properties :
            {
              wigglePosition : KeysBind(
              {
                keyframes : WiggleKeys({ origin : [ 0, 0 ], numSteps : 8, startTime : 25995, stepTime : 103.44828, amount : 600, interpolation : NI.dimension( NI.cubic.easeOut ), returnCenter : true })
              }),
              x : Binder.Link({ name : "wigglePosition", linkFunc : function( value ) { return value[ 0 ]; } }),
              y : Binder.Link({ name : "wigglePosition", linkFunc : function( value ) { return value[ 1 ]; } })
            }
          }),
          
          CompLayer(
          {
            composition : Rnr.CompVocal1(),
            inPoint : 26822,
            outPoint : 53305
          }),
          
          CompLayer(
          {
            composition : Rnr.CompVocal2(),
            inPoint : 53305,
            outPoint : 81443
          }),
          
          CompLayer(
          {
            composition : Rnr.CompVocal3(),
            inPoint : 81443,
            outPoint : 107926,
            outPointTime : 107926
          }),
          
          CompLayer(
          {
            composition : Rnr.CompOutro(),
            inPoint : 107926,
            outPoint : 126000
          }),
          
          TrkMat(
          {
            layer : CompLayer(
            {
              composition : Rnr.CompVocal3(),
              inPoint : 107926,
              inPointTime : 107926,
              outPoint : 109581
            }),
            mask : DVTLayer(
            {
              inPoint : 107926,
              outPoint : 109581,
              dictionary : Rnr.Typography.Mincho.Dynamic,
              textProperties :
              {
                horizontalAlign : "center",
                verticalAlign : "center",
                letterSpacing : 20,
                fontSize : 600,
                lineHeight : 240,
                text : "の"
              },
              properties :
              {
                x : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 107926, value : -250, interpolation : NI.cubic.easeOut }),
                    Key({ time : 109581, value : 640, interpolation : NI.hold }),
                  ]
                }),
                y : 360,
                scaleX : KeysBind(
                {
                  keyframes :
                  [
                    Key({ time : 107926, value : 51, interpolation : NI.exponential.easeOut }),
                    Key({ time : 109581, value : 0, interpolation : NI.hold }),
                  ]
                }),
                scaleY : Binder.Link({ name : "scaleX" })
              }
            })
          })
        ]
      })
    );
  }
 };
 

Rnr.present();</d>
</i>
